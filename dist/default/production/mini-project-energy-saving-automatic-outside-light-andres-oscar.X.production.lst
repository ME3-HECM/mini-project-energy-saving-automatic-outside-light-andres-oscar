

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 11:39:41 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _CM2CON1bits	set	3789
    89   000000                     _CM2PCHbits	set	3791
    90   000000                     _CM1CON1bits	set	3793
    91   000000                     _TRISBbits	set	3970
    92   000000                     _LATBbits	set	3962
    93   000000                     _LATAbits	set	3961
    94   000000                     _LATGbits	set	3967
    95   000000                     _IPR0bits	set	3615
    96   000000                     _PIE0bits	set	3625
    97   000000                     _T0CON0bits	set	4053
    98   000000                     _T0CON1bits	set	4054
    99   000000                     _INTCONbits	set	4082
   100   000000                     _PIE2bits	set	3627
   101   000000                     _PIR0bits	set	3635
   102   000000                     _PIR2bits	set	3637
   103   000000                     _ANSELFbits	set	3764
   104   000000                     _LATA	set	3961
   105   000000                     _TMR0L	set	4051
   106   000000                     _TMR0H	set	4052
   107   000000                     _IPR2bits	set	3617
   108   000000                     _LATEbits	set	3965
   109   000000                     _LATCbits	set	3963
   110   000000                     _LATFbits	set	3966
   111   000000                     _LATB	set	3962
   112   000000                     _TRISEbits	set	3973
   113   000000                     _TRISCbits	set	3971
   114   000000                     _TRISFbits	set	3974
   115   000000                     _TRISB	set	3970
   116   000000                     _TRISA	set	3969
   117   000000                     _LATHbits	set	3968
   118   000000                     _LATG	set	3967
   119   000000                     _TRISHbits	set	3976
   120   000000                     _TRISG	set	3975
   121   000000                     _DAC1CON0bits	set	3782
   122   000000                     _CM2CON0bits	set	3788
   123   000000                     _CM2NCHbits	set	3790
   124   000000                     _CM1CON0bits	set	3792
   125   000000                     _CM1NCHbits	set	3794
   126   000000                     _DAC1CON1bits	set	3783
   127   000000                     _CM1PCHbits	set	3795
   128                           
   129                           	psect	smallconst
   130   000E00                     __psmallconst:
   131                           	callstack 0
   132   000E00  00                 	db	0
   133   000E01                     STR_1:
   134                           
   135                           ; BSR set to: 14
   136   000E01  48                 	db	72	;'H'
   137   000E02  3A                 	db	58	;':'
   138   000E03  25                 	db	37
   139   000E04  30                 	db	48	;'0'
   140   000E05  32                 	db	50	;'2'
   141   000E06  64                 	db	100	;'d'
   142   000E07  20                 	db	32
   143   000E08  44                 	db	68	;'D'
   144   000E09  3A                 	db	58	;':'
   145   000E0A  25                 	db	37
   146   000E0B  30                 	db	48	;'0'
   147   000E0C  33                 	db	51	;'3'
   148   000E0D  64                 	db	100	;'d'
   149   000E0E  00                 	db	0
   150   000E0F                     STR_3:
   151                           
   152                           ; BSR set to: 14
   153   000E0F  59                 	db	89	;'Y'
   154   000E10  3A                 	db	58	;':'
   155   000E11  25                 	db	37
   156   000E12  64                 	db	100	;'d'
   157   000E13  20                 	db	32
   158   000E14  4E                 	db	78	;'N'
   159   000E15  6F                 	db	111	;'o'
   160   000E16  72                 	db	114	;'r'
   161   000E17  6D                 	db	109	;'m'
   162   000E18  61                 	db	97	;'a'
   163   000E19  6C                 	db	108	;'l'
   164   000E1A  00                 	db	0
   165   000E1B                     STR_2:
   166                           
   167                           ; BSR set to: 14
   168   000E1B  59                 	db	89	;'Y'
   169   000E1C  3A                 	db	58	;':'
   170   000E1D  25                 	db	37
   171   000E1E  64                 	db	100	;'d'
   172   000E1F  20                 	db	32
   173   000E20  4C                 	db	76	;'L'
   174   000E21  65                 	db	101	;'e'
   175   000E22  61                 	db	97	;'a'
   176   000E23  70                 	db	112	;'p'
   177   000E24  00                 	db	0
   178   000E25  00                 	db	0	; dummy byte at the end
   179   000000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   001FBA                     __pcinit:
   184                           	callstack 0
   185   001FBA                     start_initialization:
   186                           	callstack 0
   187   001FBA                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Clear objects allocated to BANK0 (34 bytes)
   191   001FBA  EE00  F08E         	lfsr	0,__pbssBANK0
   192   001FBE  0E22               	movlw	34
   193   001FC0                     clear_0:
   194   001FC0  6AEE               	clrf	postinc0,c
   195   001FC2  06E8               	decf	wreg,f,c
   196   001FC4  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to COMRAM (5 bytes)
   199   001FC6  6A54               	clrf	(__pbssCOMRAM+4)& (0+255),c
   200   001FC8  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   201   001FCA  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   202   001FCC  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203   001FCE  6A50               	clrf	__pbssCOMRAM& (0+255),c
   204   001FD0                     end_of_initialization:
   205                           	callstack 0
   206   001FD0                     __end_of__initialization:
   207                           	callstack 0
   208   001FD0  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   001FD2  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   001FD4  0100               	movlb	0
   211   001FD6  EF94  F009         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214   000050                     __pbssCOMRAM:
   215                           	callstack 0
   216   000050                     _width:
   217                           	callstack 0
   218   000050                     	ds	2
   219   000052                     _prec:
   220                           	callstack 0
   221   000052                     	ds	2
   222   000054                     _flags:
   223                           	callstack 0
   224   000054                     	ds	1
   225                           
   226                           	psect	bssBANK0
   227   00008E                     __pbssBANK0:
   228                           	callstack 0
   229   00008E                     _dbuf:
   230                           	callstack 0
   231   00008E                     	ds	32
   232   0000AE                     _hour:
   233                           	callstack 0
   234   0000AE                     	ds	2
   235                           
   236                           	psect	cstackBANK0
   237   000060                     __pcstackBANK0:
   238                           	callstack 0
   239   000060                     main@buf:
   240                           	callstack 0
   241                           
   242                           ; 32 bytes @ 0x0
   243   000060                     	ds	32
   244   000080                     main@leap:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x20
   248   000080                     	ds	2
   249   000082                     main@fwd_daylight_savings_day:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x22
   253   000082                     	ds	2
   254   000084                     main@bkwd_daylight_savings_day:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x24
   258   000084                     	ds	2
   259   000086                     main@backward_zone:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x26
   263   000086                     	ds	2
   264   000088                     main@synced:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x28
   268   000088                     	ds	2
   269   00008A                     main@year:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x2A
   273   00008A                     	ds	2
   274   00008C                     main@day:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2C
   278   00008C                     	ds	2
   279                           
   280                           	psect	cstackCOMRAM
   281   000001                     __pcstackCOMRAM:
   282                           	callstack 0
   283   000001                     ??_LowISR:
   284   000001                     
   285                           ; 1 bytes @ 0x0
   286   000001                     	ds	3
   287   000004                     ?___wmul:
   288                           	callstack 0
   289   000004                     ?___awdiv:
   290                           	callstack 0
   291   000004                     ?___awmod:
   292                           	callstack 0
   293   000004                     changeHourDayYear@hour:
   294                           	callstack 0
   295   000004                     sunSync@hour:
   296                           	callstack 0
   297   000004                     LCD_sendnibble@number:
   298                           	callstack 0
   299   000004                     LEDarray_disp_bin@number:
   300                           	callstack 0
   301   000004                     hourChangeDST@day:
   302                           	callstack 0
   303   000004                     ___wmul@multiplier:
   304                           	callstack 0
   305   000004                     ___awdiv@dividend:
   306                           	callstack 0
   307   000004                     ___awmod@dividend:
   308                           	callstack 0
   309   000004                     fputc@c:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x3
   313   000004                     	ds	1
   314   000005                     changeHourDayYear@day:
   315                           	callstack 0
   316   000005                     LCD_sendbyte@type:
   317                           	callstack 0
   318   000005                     sunSync@day:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x4
   322   000005                     	ds	1
   323   000006                     changeHourDayYear@year:
   324                           	callstack 0
   325   000006                     LCD_sendbyte@highNibble:
   326                           	callstack 0
   327   000006                     fputc@fp:
   328                           	callstack 0
   329   000006                     hourChangeDST@fwd_daylight_savings_day:
   330                           	callstack 0
   331   000006                     ___wmul@multiplicand:
   332                           	callstack 0
   333   000006                     ___awdiv@divisor:
   334                           	callstack 0
   335   000006                     ___awmod@divisor:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x5
   339   000006                     	ds	1
   340   000007                     ??_fputc:
   341   000007                     sunSync@synced:
   342                           	callstack 0
   343   000007                     LCD_sendbyte@lowNibble:
   344                           	callstack 0
   345   000007                     changeHourDayYear@leap:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349   000007                     	ds	1
   350   000008                     LCD_sendbyte@Byte:
   351                           	callstack 0
   352   000008                     ___awdiv@counter:
   353                           	callstack 0
   354   000008                     ___awmod@counter:
   355                           	callstack 0
   356   000008                     hourChangeDST@bkwd_daylight_savings_day:
   357                           	callstack 0
   358   000008                     ___wmul@product:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x7
   362   000008                     	ds	1
   363   000009                     ??_LCD_init:
   364   000009                     changeHourDayYear@synced:
   365                           	callstack 0
   366   000009                     LCD_setline@line:
   367                           	callstack 0
   368   000009                     LCD_sendstring@string:
   369                           	callstack 0
   370   000009                     ___awdiv@sign:
   371                           	callstack 0
   372   000009                     ___awmod@sign:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x8
   376   000009                     	ds	1
   377   00000A                     ?_abs:
   378                           	callstack 0
   379   00000A                     ?___lwdiv:
   380                           	callstack 0
   381   00000A                     ?_read_prec_or_width:
   382                           	callstack 0
   383   00000A                     hourChangeDST@hour:
   384                           	callstack 0
   385   00000A                     read_prec_or_width@fmt:
   386                           	callstack 0
   387   00000A                     ___awdiv@quotient:
   388                           	callstack 0
   389   00000A                     ___lwdiv@dividend:
   390                           	callstack 0
   391   00000A                     abs@a:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x9
   395   00000A                     	ds	1
   396   00000B                     hourChangeDST@backward_zone:
   397                           	callstack 0
   398   00000B                     read_prec_or_width@ap:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xA
   402   00000B                     	ds	1
   403   00000C                     ??_abs:
   404   00000C                     read_prec_or_width@c:
   405                           	callstack 0
   406   00000C                     fputs@s:
   407                           	callstack 0
   408   00000C                     ___lwdiv@divisor:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0xB
   412   00000C                     	ds	1
   413   00000D                     fputs@fp:
   414                           	callstack 0
   415   00000D                     read_prec_or_width@n:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xC
   419   00000D                     	ds	1
   420   00000E                     fputs@c:
   421                           	callstack 0
   422   00000E                     ___lwdiv@quotient:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xD
   426   00000E                     	ds	1
   427   00000F                     fputs@i:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xE
   431   00000F                     	ds	1
   432   000010                     ___lwdiv@counter:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xF
   436   000010                     	ds	1
   437   000011                     ?___lwmod:
   438                           	callstack 0
   439   000011                     pad@fp:
   440                           	callstack 0
   441   000011                     ___lwmod@dividend:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445   000011                     	ds	1
   446   000012                     pad@buf:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x11
   450   000012                     	ds	1
   451   000013                     ___lwmod@divisor:
   452                           	callstack 0
   453   000013                     pad@p:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x12
   457   000013                     	ds	2
   458   000015                     ??_pad:
   459   000015                     ___lwmod@counter:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x14
   463   000015                     	ds	1
   464   000016                     ?_isLeapYear:
   465                           	callstack 0
   466   000016                     isLeapYear@year:
   467                           	callstack 0
   468   000016                     pad@i:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472   000016                     	ds	2
   473   000018                     ??_isLeapYear:
   474   000018                     dtoa@fp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x17
   478   000018                     	ds	1
   479   000019                     dtoa@d:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x18
   483   000019                     	ds	1
   484   00001A                     _isLeapYear$1177:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x19
   488   00001A                     	ds	1
   489   00001B                     ?_lastSunday:
   490                           	callstack 0
   491   00001B                     lastSunday@year:
   492                           	callstack 0
   493   00001B                     _dtoa$1980:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x1A
   497   00001B                     	ds	2
   498   00001D                     dtoa@p:
   499                           	callstack 0
   500   00001D                     lastSunday@month:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1C
   504   00001D                     	ds	1
   505   00001E                     dtoa@w:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x1D
   509   00001E                     	ds	1
   510   00001F                     ??_lastSunday:
   511                           
   512                           ; 1 bytes @ 0x1E
   513   00001F                     	ds	1
   514   000020                     dtoa@s:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x1F
   518   000020                     	ds	1
   519   000021                     dtoa@i:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523   000021                     	ds	2
   524   000023                     vfpfcnvrt@fp:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x22
   528   000023                     	ds	1
   529   000024                     vfpfcnvrt@fmt:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x23
   533   000024                     	ds	1
   534   000025                     vfpfcnvrt@ap:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x24
   538   000025                     	ds	1
   539   000026                     ??_vfpfcnvrt:
   540                           
   541                           ; 1 bytes @ 0x25
   542   000026                     	ds	2
   543   000028                     vfpfcnvrt@convarg:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x27
   547   000028                     	ds	1
   548   000029                     lastSunday@h:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x28
   552   000029                     	ds	2
   553   00002B                     lastSunday@dayOfWeekMonth1st:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x2A
   557   00002B                     	ds	1
   558   00002C                     vfpfcnvrt@done:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x2B
   562   00002C                     	ds	1
   563   00002D                     vfpfcnvrt@cp:
   564                           	callstack 0
   565   00002D                     lastSunday@dayOfWeekMonth31st:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x2C
   569   00002D                     	ds	1
   570   00002E                     ?_vfprintf:
   571                           	callstack 0
   572   00002E                     vfprintf@fp:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x2D
   576   00002E                     	ds	1
   577   00002F                     vfprintf@fmt:
   578                           	callstack 0
   579   00002F                     lastSunday@daysBeforeMarch:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2E
   583   00002F                     	ds	1
   584   000030                     vfprintf@ap:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x2F
   588   000030                     	ds	1
   589   000031                     vfprintf@cfmt:
   590                           	callstack 0
   591   000031                     lastSunday@dayOfYearForDSTStart:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x30
   595   000031                     	ds	1
   596   000032                     ?_sprintf:
   597                           	callstack 0
   598   000032                     sprintf@s:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x31
   602   000032                     	ds	1
   603   000033                     sprintf@fmt:
   604                           	callstack 0
   605   000033                     lastSunday@daysBeforeOctober:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x32
   609   000033                     	ds	2
   610   000035                     lastSunday@dayOfYearForDSTEnd:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x34
   614   000035                     	ds	2
   615   000037                     _lastSunday$2254:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x36
   619   000037                     	ds	1
   620   000038                     sprintf@ap:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x37
   624   000038                     	ds	1
   625   000039                     _lastSunday$1187:
   626                           	callstack 0
   627   000039                     sprintf@f:
   628                           	callstack 0
   629                           
   630                           ; 12 bytes @ 0x38
   631   000039                     	ds	2
   632   00003B                     _lastSunday$1190:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x3A
   636   00003B                     	ds	2
   637   00003D                     lastSunday@leapYear:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x3C
   641   00003D                     	ds	2
   642   00003F                     lastSunday@lastSundayDateMonth:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x3E
   646   00003F                     	ds	2
   647   000041                     findDSTdates@hour:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x40
   651   000041                     	ds	2
   652   000043                     findDSTdates@day:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x42
   656   000043                     	ds	2
   657   000045                     time2String@buf:
   658                           	callstack 0
   659   000045                     findDSTdates@year:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x44
   663   000045                     	ds	1
   664   000046                     time2String@h:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x45
   668   000046                     	ds	1
   669   000047                     findDSTdates@fwd_daylight_savings_day:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x46
   673   000047                     	ds	1
   674   000048                     findDSTdates@bkwd_daylight_savings_day:
   675                           	callstack 0
   676   000048                     time2String@day:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x47
   680   000048                     	ds	1
   681   000049                     
   682                           ; 1 bytes @ 0x48
   683   000049                     	ds	1
   684   00004A                     time2String@year:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x49
   688   00004A                     	ds	2
   689   00004C                     time2String@leap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4B
   693   00004C                     	ds	2
   694   00004E                     ??_time2String:
   695                           
   696                           ; 1 bytes @ 0x4D
   697   00004E                     	ds	2
   698   000050                     
   699                           ; 1 bytes @ 0x4F
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 20 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  buf            32    0[BANK0 ] unsigned char [32]
   710 ;;  day             2   44[BANK0 ] unsigned int 
   711 ;;  year            2   42[BANK0 ] unsigned int 
   712 ;;  synced          2   40[BANK0 ] unsigned int 
   713 ;;  backward_zon    2   38[BANK0 ] unsigned int 
   714 ;;  bkwd_dayligh    2   36[BANK0 ] unsigned int 
   715 ;;  fwd_daylight    2   34[BANK0 ] unsigned int 
   716 ;;  leap            2   32[BANK0 ] unsigned int 
   717 ;;  daylight_sav    2    0        unsigned int 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   728 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   730 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   731 ;;Total ram usage:       46 bytes
   732 ;; Hardware stack levels required when called: 10
   733 ;; This function calls:
   734 ;;		_LCD_setline
   735 ;;		_LEDarray_disp_bin
   736 ;;		_changeHourDayYear
   737 ;;		_findDSTdates
   738 ;;		_hourChangeDST
   739 ;;		_initialise
   740 ;;		_isLeapYear
   741 ;;		_sunSync
   742 ;;		_time2String
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text0
   749   001328                     __ptext0:
   750                           	callstack 0
   751   001328                     _main:
   752                           	callstack 21
   753   001328                     
   754                           ;main.c: 22:     unsigned int synced = 0;
   755   001328  0E00               	movlw	0
   756   00132A  0100               	movlb	0	; () banked
   757   00132C  6F89               	movwf	(main@synced+1)& (0+255),b
   758   00132E  0E00               	movlw	0
   759   001330  6F88               	movwf	main@synced& (0+255),b
   760                           
   761                           ;main.c: 24:     unsigned int day = 1;
   762   001332  0E00               	movlw	0
   763   001334  6F8D               	movwf	(main@day+1)& (0+255),b
   764   001336  0E01               	movlw	1
   765   001338  6F8C               	movwf	main@day& (0+255),b
   766                           
   767                           ;main.c: 25:     unsigned int year = 2024;
   768   00133A  0E07               	movlw	7
   769   00133C  6F8B               	movwf	(main@year+1)& (0+255),b
   770   00133E  0EE8               	movlw	232
   771   001340  6F8A               	movwf	main@year& (0+255),b
   772                           
   773                           ;main.c: 26:     unsigned int leap;;main.c: 27:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 28:     unsigned int bkwd_daylight_savings_day;;main.c: 29:     unsigned int 
      +                          backward_zone = 0;
   774   001342  0E00               	movlw	0
   775   001344  6F87               	movwf	(main@backward_zone+1)& (0+255),b
   776   001346  0E00               	movlw	0
   777   001348  6F86               	movwf	main@backward_zone& (0+255),b
   778   00134A                     
   779                           ; BSR set to: 0
   780                           ;main.c: 30:     char buf[32];;main.c: 32:     initialise();
   781   00134A  ECED  F00F         	call	_initialise	;wreg free
   782   00134E                     l2406:
   783                           
   784                           ;main.c: 35:         leap = isLeapYear(year);
   785   00134E  C08A  F016         	movff	main@year,isLeapYear@year
   786   001352  C08B  F017         	movff	main@year+1,isLeapYear@year+1
   787   001356  EC67  F00D         	call	_isLeapYear	;wreg free
   788   00135A  C016  F080         	movff	?_isLeapYear,main@leap
   789   00135E  C017  F081         	movff	?_isLeapYear+1,main@leap+1
   790   001362                     
   791                           ;main.c: 37:         LEDarray_disp_bin(hour);
   792   001362  C0AE  F004         	movff	_hour,LEDarray_disp_bin@number
   793   001366  C0AF  F005         	movff	_hour+1,LEDarray_disp_bin@number+1
   794   00136A  EC74  F00A         	call	_LEDarray_disp_bin	;wreg free
   795   00136E                     
   796                           ;main.c: 39:         LCD_setline(1);
   797   00136E  0E01               	movlw	1
   798   001370  EC11  F00F         	call	_LCD_setline
   799   001374                     
   800                           ;main.c: 41:         time2String(buf,hour,day,year,leap);
   801   001374  0E60               	movlw	low main@buf
   802   001376  6E45               	movwf	time2String@buf^0,c
   803   001378  C0AE  F046         	movff	_hour,time2String@h
   804   00137C  C0AF  F047         	movff	_hour+1,time2String@h+1
   805   001380  C08C  F048         	movff	main@day,time2String@day
   806   001384  C08D  F049         	movff	main@day+1,time2String@day+1
   807   001388  C08A  F04A         	movff	main@year,time2String@year
   808   00138C  C08B  F04B         	movff	main@year+1,time2String@year+1
   809   001390  C080  F04C         	movff	main@leap,time2String@leap
   810   001394  C081  F04D         	movff	main@leap+1,time2String@leap+1
   811   001398  EC95  F00C         	call	_time2String	;wreg free
   812   00139C                     
   813                           ;main.c: 43:         findDSTdates(hour, day, year,&fwd_daylight_savings_day, &bkwd_dayli
      +                          ght_savings_day);
   814   00139C  C0AE  F041         	movff	_hour,findDSTdates@hour
   815   0013A0  C0AF  F042         	movff	_hour+1,findDSTdates@hour+1
   816   0013A4  C08C  F043         	movff	main@day,findDSTdates@day
   817   0013A8  C08D  F044         	movff	main@day+1,findDSTdates@day+1
   818   0013AC  C08A  F045         	movff	main@year,findDSTdates@year
   819   0013B0  C08B  F046         	movff	main@year+1,findDSTdates@year+1
   820   0013B4  0E82               	movlw	low main@fwd_daylight_savings_day
   821   0013B6  6E47               	movwf	findDSTdates@fwd_daylight_savings_day^0,c
   822   0013B8  0E84               	movlw	low main@bkwd_daylight_savings_day
   823   0013BA  6E48               	movwf	findDSTdates@bkwd_daylight_savings_day^0,c
   824   0013BC  EC19  F00E         	call	_findDSTdates	;wreg free
   825   0013C0                     
   826                           ;main.c: 48:         hourChangeDST(day, fwd_daylight_savings_day, bkwd_daylight_savings_
      +                          day, &hour, &backward_zone);
   827   0013C0  C08C  F004         	movff	main@day,hourChangeDST@day
   828   0013C4  C08D  F005         	movff	main@day+1,hourChangeDST@day+1
   829   0013C8  C082  F006         	movff	main@fwd_daylight_savings_day,hourChangeDST@fwd_daylight_savings_day
   830   0013CC  C083  F007         	movff	main@fwd_daylight_savings_day+1,hourChangeDST@fwd_daylight_savings_day+1
   831   0013D0  C084  F008         	movff	main@bkwd_daylight_savings_day,hourChangeDST@bkwd_daylight_savings_day
   832   0013D4  C085  F009         	movff	main@bkwd_daylight_savings_day+1,hourChangeDST@bkwd_daylight_savings_day+1
   833   0013D8  0EAE               	movlw	low _hour
   834   0013DA  6E0A               	movwf	hourChangeDST@hour^0,c
   835   0013DC  0E86               	movlw	low main@backward_zone
   836   0013DE  6E0B               	movwf	hourChangeDST@backward_zone^0,c
   837   0013E0  ECE9  F00B         	call	_hourChangeDST	;wreg free
   838   0013E4                     
   839                           ;main.c: 50:         changeHourDayYear(&hour, &day, &year, leap, &synced);
   840   0013E4  0EAE               	movlw	low _hour
   841   0013E6  6E04               	movwf	changeHourDayYear@hour^0,c
   842   0013E8  0E8C               	movlw	low main@day
   843   0013EA  6E05               	movwf	changeHourDayYear@day^0,c
   844   0013EC  0E8A               	movlw	low main@year
   845   0013EE  6E06               	movwf	changeHourDayYear@year^0,c
   846   0013F0  C080  F007         	movff	main@leap,changeHourDayYear@leap
   847   0013F4  C081  F008         	movff	main@leap+1,changeHourDayYear@leap+1
   848   0013F8  0E88               	movlw	low main@synced
   849   0013FA  6E09               	movwf	changeHourDayYear@synced^0,c
   850   0013FC  EC0E  F00A         	call	_changeHourDayYear	;wreg free
   851   001400                     
   852                           ;main.c: 52:         sunSync(&hour, day, &synced);
   853   001400  0EAE               	movlw	low _hour
   854   001402  6E04               	movwf	sunSync@hour^0,c
   855   001404  C08C  F005         	movff	main@day,sunSync@day
   856   001408  C08D  F006         	movff	main@day+1,sunSync@day+1
   857   00140C  0E88               	movlw	low main@synced
   858   00140E  6E07               	movwf	sunSync@synced^0,c
   859   001410  ECA4  F00D         	call	_sunSync	;wreg free
   860   001414  EFA7  F009         	goto	l2406
   861   001418  EF5E  F000         	goto	start
   862   00141C                     __end_of_main:
   863                           	callstack 0
   864                           
   865 ;; *************** function _time2String *****************
   866 ;; Defined at:
   867 ;;		line 129 in file "LCD.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  buf             1   68[COMRAM] PTR unsigned char 
   870 ;;		 -> main@buf(32), 
   871 ;;  h               2   69[COMRAM] unsigned int 
   872 ;;  day             2   71[COMRAM] unsigned int 
   873 ;;  year            2   73[COMRAM] unsigned int 
   874 ;;  leap            2   75[COMRAM] unsigned int 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   886 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;Total ram usage:       11 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 9
   893 ;; This function calls:
   894 ;;		_LCD_sendstring
   895 ;;		_LCD_setline
   896 ;;		_sprintf
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text1
   903   00192A                     __ptext1:
   904                           	callstack 0
   905   00192A                     _time2String:
   906                           	callstack 21
   907   00192A                     
   908                           ;LCD.c: 132:     LCD_setline(1);
   909   00192A  0E01               	movlw	1
   910   00192C  EC11  F00F         	call	_LCD_setline
   911   001930                     
   912                           ;LCD.c: 133:     sprintf(buf,"H:%02d D:%03d",h,day);
   913   001930  C045  F032         	movff	time2String@buf,sprintf@s
   914   001934  0E01               	movlw	low STR_1
   915   001936  6E33               	movwf	sprintf@fmt^0,c
   916   001938  C046  F034         	movff	time2String@h,?_sprintf+2
   917   00193C  C047  F035         	movff	time2String@h+1,?_sprintf+3
   918   001940  C048  F036         	movff	time2String@day,?_sprintf+4
   919   001944  C049  F037         	movff	time2String@day+1,?_sprintf+5
   920   001948  EC2E  F00F         	call	_sprintf	;wreg free
   921   00194C                     
   922                           ;LCD.c: 134:     LCD_sendstring(buf);
   923   00194C  C045  F009         	movff	time2String@buf,LCD_sendstring@string
   924   001950  EC62  F00F         	call	_LCD_sendstring	;wreg free
   925   001954                     
   926                           ;LCD.c: 137:     LCD_setline(2);
   927   001954  0E02               	movlw	2
   928   001956  EC11  F00F         	call	_LCD_setline
   929   00195A                     
   930                           ;LCD.c: 139:     if (leap == 1){
   931   00195A  044C               	decf	time2String@leap^0,w,c
   932   00195C  104D               	iorwf	(time2String@leap+1)^0,w,c
   933   00195E  A4D8               	btfss	status,2,c
   934   001960  EFB4  F00C         	goto	u1641
   935   001964  EFB6  F00C         	goto	u1640
   936   001968                     u1641:
   937   001968  EFC6  F00C         	goto	l2338
   938   00196C                     u1640:
   939   00196C                     
   940                           ;LCD.c: 140:         sprintf(buf,"Y:%d Leap",year);
   941   00196C  C045  F032         	movff	time2String@buf,sprintf@s
   942   001970  0E1B               	movlw	low STR_2
   943   001972  6E33               	movwf	sprintf@fmt^0,c
   944   001974  C04A  F034         	movff	time2String@year,?_sprintf+2
   945   001978  C04B  F035         	movff	time2String@year+1,?_sprintf+3
   946   00197C  EC2E  F00F         	call	_sprintf	;wreg free
   947   001980                     l2336:
   948                           
   949                           ;LCD.c: 141:         LCD_sendstring(buf);
   950   001980  C045  F009         	movff	time2String@buf,LCD_sendstring@string
   951   001984  EC62  F00F         	call	_LCD_sendstring	;wreg free
   952                           
   953                           ;LCD.c: 142:     }
   954   001988  EFD2  F00C         	goto	l2342
   955   00198C                     l2338:
   956                           
   957                           ;LCD.c: 145:         sprintf(buf,"Y:%d Normal",year);
   958   00198C  C045  F032         	movff	time2String@buf,sprintf@s
   959   001990  0E0F               	movlw	low STR_3
   960   001992  6E33               	movwf	sprintf@fmt^0,c
   961   001994  C04A  F034         	movff	time2String@year,?_sprintf+2
   962   001998  C04B  F035         	movff	time2String@year+1,?_sprintf+3
   963   00199C  EC2E  F00F         	call	_sprintf	;wreg free
   964   0019A0  EFC0  F00C         	goto	l2336
   965   0019A4                     l2342:
   966                           
   967                           ;LCD.c: 150:     _delay((unsigned long)((200)*(64000000/4000.0)));
   968   0019A4  0E11               	movlw	17
   969   0019A6  6E4F               	movwf	(??_time2String+1)^0,c
   970   0019A8  0E3C               	movlw	60
   971   0019AA  6E4E               	movwf	??_time2String^0,c
   972   0019AC  0ECB               	movlw	203
   973   0019AE                     u1877:
   974   0019AE  2EE8               	decfsz	wreg,f,c
   975   0019B0  D7FE               	bra	u1877
   976   0019B2  2E4E               	decfsz	??_time2String^0,f,c
   977   0019B4  D7FC               	bra	u1877
   978   0019B6  2E4F               	decfsz	(??_time2String+1)^0,f,c
   979   0019B8  D7FA               	bra	u1877
   980   0019BA  0000               	nop	
   981   0019BC  0012               	return		;funcret
   982   0019BE                     __end_of_time2String:
   983                           	callstack 0
   984                           
   985 ;; *************** function _sprintf *****************
   986 ;; Defined at:
   987 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  s               1   49[COMRAM] PTR unsigned char 
   990 ;;		 -> main@buf(32), 
   991 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
   992 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  f              12   56[COMRAM] struct _IO_FILE
   995 ;;  ret             2    0        int 
   996 ;;  ap              1   55[COMRAM] PTR void [1]
   997 ;;		 -> ?_sprintf(2), 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2   49[COMRAM] int 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1007 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;Total ram usage:       19 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 8
  1014 ;; This function calls:
  1015 ;;		_vfprintf
  1016 ;; This function is called by:
  1017 ;;		_time2String
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text2
  1022   001E5C                     __ptext2:
  1023                           	callstack 0
  1024   001E5C                     _sprintf:
  1025                           	callstack 21
  1026   001E5C  0E34               	movlw	low (?_sprintf+2)
  1027   001E5E  6E38               	movwf	sprintf@ap^0,c
  1028   001E60  C032  F039         	movff	sprintf@s,sprintf@f
  1029   001E64  0E00               	movlw	0
  1030   001E66  6E3D               	movwf	(sprintf@f+4)^0,c
  1031   001E68  0E00               	movlw	0
  1032   001E6A  6E3C               	movwf	(sprintf@f+3)^0,c
  1033   001E6C  0E00               	movlw	0
  1034   001E6E  6E44               	movwf	(sprintf@f+11)^0,c
  1035   001E70  0E00               	movlw	0
  1036   001E72  6E43               	movwf	(sprintf@f+10)^0,c
  1037   001E74  0E39               	movlw	low sprintf@f
  1038   001E76  6E2E               	movwf	vfprintf@fp^0,c
  1039   001E78  C033  F02F         	movff	sprintf@fmt,vfprintf@fmt
  1040   001E7C  0E38               	movlw	low sprintf@ap
  1041   001E7E  6E30               	movwf	vfprintf@ap^0,c
  1042   001E80  ECB4  F00E         	call	_vfprintf	;wreg free
  1043   001E84  5032               	movf	sprintf@s^0,w,c
  1044   001E86  243C               	addwf	(sprintf@f+3)^0,w,c
  1045   001E88  6ED9               	movwf	fsr2l,c
  1046   001E8A  6ADA               	clrf	fsr2h,c
  1047   001E8C  6ADF               	clrf	indf2,c
  1048   001E8E  0012               	return		;funcret
  1049   001E90                     __end_of_sprintf:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _vfprintf *****************
  1053 ;; Defined at:
  1054 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  1057 ;;		 -> sprintf@f(12), 
  1058 ;;  fmt             1   46[COMRAM] PTR const unsigned char 
  1059 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
  1060 ;;  ap              1   47[COMRAM] PTR PTR void 
  1061 ;;		 -> sprintf@ap(1), 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  cfmt            1   48[COMRAM] PTR unsigned char 
  1064 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2   45[COMRAM] int 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1074 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;Total ram usage:        4 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 7
  1081 ;; This function calls:
  1082 ;;		_vfpfcnvrt
  1083 ;; This function is called by:
  1084 ;;		_sprintf
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text3
  1089   001D68                     __ptext3:
  1090                           	callstack 0
  1091   001D68                     _vfprintf:
  1092                           	callstack 21
  1093   001D68                     
  1094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1095   001D68  C02F  F031         	movff	vfprintf@fmt,vfprintf@cfmt
  1096                           
  1097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1098   001D6C  EFC0  F00E         	goto	l2120
  1099   001D70                     l2118:
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1102   001D70  C02E  F023         	movff	vfprintf@fp,vfpfcnvrt@fp
  1103   001D74  0E31               	movlw	low vfprintf@cfmt
  1104   001D76  6E24               	movwf	vfpfcnvrt@fmt^0,c
  1105   001D78  C030  F025         	movff	vfprintf@ap,vfpfcnvrt@ap
  1106   001D7C  EC1F  F008         	call	_vfpfcnvrt	;wreg free
  1107   001D80                     l2120:
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1110   001D80  C031  FFF6         	movff	vfprintf@cfmt,tblptrl
  1111   001D84                     	if	1	;There is more than 1 active tblptr byte
  1112   001D84  0E0E               	movlw	high __smallconst
  1113   001D86  6EF7               	movwf	tblptrh,c
  1114   001D88                     	endif
  1115   001D88                     	if	0	;tblptru may be non-zero
  1116   001D88                     	endif
  1117   001D88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1118   001D88  0E00               	movlw	low (__smallconst shr (0+16))
  1119   001D8A  6EF8               	movwf	tblptru,c
  1120   001D8C                     	endif
  1121   001D8C  0008               	tblrd		*
  1122   001D8E  50F5               	movf	tablat,w,c
  1123   001D90  0900               	iorlw	0
  1124   001D92  A4D8               	btfss	status,2,c
  1125   001D94  EFCE  F00E         	goto	u1471
  1126   001D98  EFD0  F00E         	goto	u1470
  1127   001D9C                     u1471:
  1128   001D9C  EFB8  F00E         	goto	l2118
  1129   001DA0                     u1470:
  1130   001DA0                     
  1131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1132   001DA0  0E00               	movlw	0
  1133   001DA2  6E2F               	movwf	(?_vfprintf+1)^0,c
  1134   001DA4  0E00               	movlw	0
  1135   001DA6  6E2E               	movwf	?_vfprintf^0,c
  1136   001DA8  0012               	return		;funcret
  1137   001DAA                     __end_of_vfprintf:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _vfpfcnvrt *****************
  1141 ;; Defined at:
  1142 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  fp              1   34[COMRAM] PTR struct _IO_FILE
  1145 ;;		 -> sprintf@f(12), 
  1146 ;;  fmt             1   35[COMRAM] PTR PTR unsigned char 
  1147 ;;		 -> vfprintf@cfmt(1), 
  1148 ;;  ap              1   36[COMRAM] PTR PTR void 
  1149 ;;		 -> sprintf@ap(1), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  convarg         4   39[COMRAM] struct .
  1152 ;;  cp              1   44[COMRAM] PTR unsigned char 
  1153 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
  1154 ;;  done            1   43[COMRAM] _Bool 
  1155 ;;  c               1    0        unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;Total ram usage:       11 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 6
  1172 ;; This function calls:
  1173 ;;		_dtoa
  1174 ;;		_fputc
  1175 ;;		_read_prec_or_width
  1176 ;; This function is called by:
  1177 ;;		_vfprintf
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text4
  1182   00103E                     __ptext4:
  1183                           	callstack 0
  1184   00103E                     _vfpfcnvrt:
  1185                           	callstack 21
  1186   00103E                     
  1187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1188   00103E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1189   001040  6ED9               	movwf	fsr2l,c
  1190   001042  6ADA               	clrf	fsr2h,c
  1191   001044  CFDF FFF6          	movff	indf2,tblptrl
  1192   001048                     	if	1	;There is more than 1 active tblptr byte
  1193   001048  0E0E               	movlw	high __smallconst
  1194   00104A  6EF7               	movwf	tblptrh,c
  1195   00104C                     	endif
  1196   00104C                     	if	0	;tblptru may be non-zero
  1197   00104C                     	endif
  1198   00104C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1199   00104C  0E00               	movlw	low (__smallconst shr (0+16))
  1200   00104E  6EF8               	movwf	tblptru,c
  1201   001050                     	endif
  1202   001050  0008               	tblrd		*
  1203   001052  50F5               	movf	tablat,w,c
  1204   001054  0A25               	xorlw	37
  1205   001056  A4D8               	btfss	status,2,c
  1206   001058  EF30  F008         	goto	u1351
  1207   00105C  EF32  F008         	goto	u1350
  1208   001060                     u1351:
  1209   001060  EFCC  F008         	goto	l2052
  1210   001064                     u1350:
  1211   001064                     
  1212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1213   001064  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1214   001066  6ED9               	movwf	fsr2l,c
  1215   001068  6ADA               	clrf	fsr2h,c
  1216   00106A  2ADF               	incf	indf2,f,c
  1217   00106C                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1219   00106C  0E00               	movlw	0
  1220   00106E  6E51               	movwf	(_width+1)^0,c
  1221   001070  0E00               	movlw	0
  1222   001072  6E50               	movwf	_width^0,c
  1223   001074  C050  F054         	movff	_width,_flags
  1224   001078                     
  1225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1226   001078  6852               	setf	_prec^0,c
  1227   00107A  6853               	setf	(_prec+1)^0,c
  1228   00107C                     
  1229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1230   00107C  0E00               	movlw	0
  1231   00107E  6E2C               	movwf	vfpfcnvrt@done^0,c
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1234   001080  EF68  F008         	goto	l2026
  1235   001084                     l2016:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1238   001084  8254               	bsf	_flags^0,1,c
  1239   001086                     
  1240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1241   001086  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1242   001088  6ED9               	movwf	fsr2l,c
  1243   00108A  6ADA               	clrf	fsr2h,c
  1244   00108C  2ADF               	incf	indf2,f,c
  1245                           
  1246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1247   00108E  EF68  F008         	goto	l2026
  1248   001092                     l2020:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1251   001092  0E01               	movlw	1
  1252   001094  6E2C               	movwf	vfpfcnvrt@done^0,c
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1255   001096  EF68  F008         	goto	l2026
  1256   00109A                     l2024:
  1257   00109A  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1258   00109C  6ED9               	movwf	fsr2l,c
  1259   00109E  6ADA               	clrf	fsr2h,c
  1260   0010A0  CFDF FFF6          	movff	indf2,tblptrl
  1261   0010A4                     	if	1	;There is more than 1 active tblptr byte
  1262   0010A4  0E0E               	movlw	high __smallconst
  1263   0010A6  6EF7               	movwf	tblptrh,c
  1264   0010A8                     	endif
  1265   0010A8                     	if	0	;tblptru may be non-zero
  1266   0010A8                     	endif
  1267   0010A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1268   0010A8  0E00               	movlw	low (__smallconst shr (0+16))
  1269   0010AA  6EF8               	movwf	tblptru,c
  1270   0010AC                     	endif
  1271   0010AC  0008               	tblrd		*
  1272   0010AE  50F5               	movf	tablat,w,c
  1273   0010B0  6E26               	movwf	??_vfpfcnvrt^0,c
  1274   0010B2  6A27               	clrf	(??_vfpfcnvrt+1)^0,c
  1275                           
  1276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 1, Range of values is 0 to 0
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte            4     3 (average)
  1282                           ;	Chosen strategy is simple_byte
  1283   0010B4  5027               	movf	(??_vfpfcnvrt+1)^0,w,c
  1284   0010B6  0A00               	xorlw	0	; case 0
  1285   0010B8  B4D8               	btfsc	status,2,c
  1286   0010BA  EF61  F008         	goto	l2464
  1287   0010BE  EF49  F008         	goto	l2020
  1288   0010C2                     l2464:
  1289                           
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 1, Range of values is 48 to 48
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte            4     3 (average)
  1295                           ;	Chosen strategy is simple_byte
  1296   0010C2  5026               	movf	??_vfpfcnvrt^0,w,c
  1297   0010C4  0A30               	xorlw	48	; case 48
  1298   0010C6  B4D8               	btfsc	status,2,c
  1299   0010C8  EF42  F008         	goto	l2016
  1300   0010CC  EF49  F008         	goto	l2020
  1301   0010D0                     l2026:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1304   0010D0  502C               	movf	vfpfcnvrt@done^0,w,c
  1305   0010D2  B4D8               	btfsc	status,2,c
  1306   0010D4  EF6E  F008         	goto	u1361
  1307   0010D8  EF70  F008         	goto	u1360
  1308   0010DC                     u1361:
  1309   0010DC  EF4D  F008         	goto	l2024
  1310   0010E0                     u1360:
  1311   0010E0                     
  1312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1313   0010E0  C024  F00A         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1314   0010E4  C025  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1315   0010E8  EC92  F00B         	call	_read_prec_or_width	;wreg free
  1316   0010EC  C00A  F050         	movff	?_read_prec_or_width,_width
  1317   0010F0  C00B  F051         	movff	?_read_prec_or_width+1,_width+1
  1318   0010F4                     
  1319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1320   0010F4  BE51               	btfsc	(_width+1)^0,7,c
  1321   0010F6  EF81  F008         	goto	u1370
  1322   0010FA  EF7F  F008         	goto	u1371
  1323   0010FE                     u1371:
  1324   0010FE  EF86  F008         	goto	l2034
  1325   001102                     u1370:
  1326   001102                     
  1327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1328   001102  8054               	bsf	_flags^0,0,c
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1331   001104  6C50               	negf	_width^0,c
  1332   001106  1E51               	comf	(_width+1)^0,f,c
  1333   001108  B0D8               	btfsc	status,0,c
  1334   00110A  2A51               	incf	(_width+1)^0,f,c
  1335   00110C                     l2034:
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1338   00110C  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1339   00110E  6ED9               	movwf	fsr2l,c
  1340   001110  6ADA               	clrf	fsr2h,c
  1341   001112  50DF               	movf	indf2,w,c
  1342   001114  6E2D               	movwf	vfpfcnvrt@cp^0,c
  1343   001116                     
  1344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1345   001116  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1346   00111A                     	if	1	;There is more than 1 active tblptr byte
  1347   00111A  0E0E               	movlw	high __smallconst
  1348   00111C  6EF7               	movwf	tblptrh,c
  1349   00111E                     	endif
  1350   00111E                     	if	0	;tblptru may be non-zero
  1351   00111E                     	endif
  1352   00111E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1353   00111E  0E00               	movlw	low (__smallconst shr (0+16))
  1354   001120  6EF8               	movwf	tblptru,c
  1355   001122                     	endif
  1356   001122  0008               	tblrd		*
  1357   001124  50F5               	movf	tablat,w,c
  1358   001126  0A64               	xorlw	100
  1359   001128  B4D8               	btfsc	status,2,c
  1360   00112A  EF99  F008         	goto	u1381
  1361   00112E  EF9B  F008         	goto	u1380
  1362   001132                     u1381:
  1363   001132  EFAB  F008         	goto	l2040
  1364   001136                     u1380:
  1365   001136  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1366   00113A                     	if	1	;There is more than 1 active tblptr byte
  1367   00113A  0E0E               	movlw	high __smallconst
  1368   00113C  6EF7               	movwf	tblptrh,c
  1369   00113E                     	endif
  1370   00113E                     	if	0	;tblptru may be non-zero
  1371   00113E                     	endif
  1372   00113E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1373   00113E  0E00               	movlw	low (__smallconst shr (0+16))
  1374   001140  6EF8               	movwf	tblptru,c
  1375   001142                     	endif
  1376   001142  0008               	tblrd		*
  1377   001144  50F5               	movf	tablat,w,c
  1378   001146  0A69               	xorlw	105
  1379   001148  A4D8               	btfss	status,2,c
  1380   00114A  EFA9  F008         	goto	u1391
  1381   00114E  EFAB  F008         	goto	u1390
  1382   001152                     u1391:
  1383   001152  EFC6  F008         	goto	l2048
  1384   001156                     u1390:
  1385   001156                     l2040:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1388   001156  5025               	movf	vfpfcnvrt@ap^0,w,c
  1389   001158  6ED9               	movwf	fsr2l,c
  1390   00115A  6ADA               	clrf	fsr2h,c
  1391   00115C  0E02               	movlw	2
  1392   00115E  26DF               	addwf	indf2,f,c
  1393   001160  5CDF               	subwf	indf2,w,c
  1394   001162  6ED9               	movwf	fsr2l,c
  1395   001164  6ADA               	clrf	fsr2h,c
  1396   001166  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg
  1397   00116A  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg+1
  1398   00116E                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1400   00116E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1401   001170  6ED9               	movwf	fsr2l,c
  1402   001172  6ADA               	clrf	fsr2h,c
  1403   001174  282D               	incf	vfpfcnvrt@cp^0,w,c
  1404   001176  6EDF               	movwf	indf2,c
  1405   001178                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1407   001178  C023  F018         	movff	vfpfcnvrt@fp,dtoa@fp
  1408   00117C  C028  F019         	movff	vfpfcnvrt@convarg,dtoa@d
  1409   001180  C029  F01A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1410   001184  ECE0  F008         	call	_dtoa	;wreg free
  1411   001188  EFDF  F008         	goto	l1020
  1412   00118C                     l2048:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1415   00118C  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1416   00118E  6ED9               	movwf	fsr2l,c
  1417   001190  6ADA               	clrf	fsr2h,c
  1418   001192  2ADF               	incf	indf2,f,c
  1419   001194  EFDF  F008         	goto	l1020
  1420   001198                     l2052:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1423   001198  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1424   00119A  6ED9               	movwf	fsr2l,c
  1425   00119C  6ADA               	clrf	fsr2h,c
  1426   00119E  CFDF FFF6          	movff	indf2,tblptrl
  1427   0011A2                     	if	1	;There is more than 1 active tblptr byte
  1428   0011A2  0E0E               	movlw	high __smallconst
  1429   0011A4  6EF7               	movwf	tblptrh,c
  1430   0011A6                     	endif
  1431   0011A6                     	if	0	;tblptru may be non-zero
  1432   0011A6                     	endif
  1433   0011A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1434   0011A6  0E00               	movlw	low (__smallconst shr (0+16))
  1435   0011A8  6EF8               	movwf	tblptru,c
  1436   0011AA                     	endif
  1437   0011AA  0008               	tblrd		*
  1438   0011AC  50F5               	movf	tablat,w,c
  1439   0011AE  6E04               	movwf	fputc@c^0,c
  1440   0011B0  6A05               	clrf	(fputc@c+1)^0,c
  1441   0011B2  C023  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1442   0011B6  EC40  F00C         	call	_fputc	;wreg free
  1443   0011BA  EFC6  F008         	goto	l2048
  1444   0011BE                     l1020:
  1445   0011BE  0012               	return		;funcret
  1446   0011C0                     __end_of_vfpfcnvrt:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _read_prec_or_width *****************
  1450 ;; Defined at:
  1451 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  fmt             1    9[COMRAM] PTR PTR const unsigned c
  1454 ;;		 -> vfprintf@cfmt(1), 
  1455 ;;  ap              1   10[COMRAM] PTR PTR void [1]
  1456 ;;		 -> sprintf@ap(1), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  c               1   11[COMRAM] unsigned char 
  1459 ;;  n               2   12[COMRAM] int 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2    9[COMRAM] int 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1473 ;;Total ram usage:        5 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 2
  1476 ;; This function calls:
  1477 ;;		___wmul
  1478 ;; This function is called by:
  1479 ;;		_vfpfcnvrt
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text5
  1484   001724                     __ptext5:
  1485                           	callstack 0
  1486   001724                     _read_prec_or_width:
  1487                           	callstack 24
  1488   001724                     
  1489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1490   001724  0E00               	movlw	0
  1491   001726  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1492   001728  0E00               	movlw	0
  1493   00172A  6E0D               	movwf	read_prec_or_width@n^0,c
  1494   00172C                     
  1495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1496   00172C  500A               	movf	read_prec_or_width@fmt^0,w,c
  1497   00172E  6ED9               	movwf	fsr2l,c
  1498   001730  6ADA               	clrf	fsr2h,c
  1499   001732  CFDF FFF6          	movff	indf2,tblptrl
  1500   001736                     	if	1	;There is more than 1 active tblptr byte
  1501   001736  0E0E               	movlw	high __smallconst
  1502   001738  6EF7               	movwf	tblptrh,c
  1503   00173A                     	endif
  1504   00173A                     	if	0	;tblptru may be non-zero
  1505   00173A                     	endif
  1506   00173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1507   00173A  0E00               	movlw	low (__smallconst shr (0+16))
  1508   00173C  6EF8               	movwf	tblptru,c
  1509   00173E                     	endif
  1510   00173E  0008               	tblrd		*
  1511   001740  50F5               	movf	tablat,w,c
  1512   001742  0A2A               	xorlw	42
  1513   001744  A4D8               	btfss	status,2,c
  1514   001746  EFA7  F00B         	goto	u1261
  1515   00174A  EFA9  F00B         	goto	u1260
  1516   00174E                     u1261:
  1517   00174E  EFCF  F00B         	goto	l1968
  1518   001752                     u1260:
  1519   001752                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1521   001752  500A               	movf	read_prec_or_width@fmt^0,w,c
  1522   001754  6ED9               	movwf	fsr2l,c
  1523   001756  6ADA               	clrf	fsr2h,c
  1524   001758  2ADF               	incf	indf2,f,c
  1525   00175A                     
  1526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1527   00175A  500B               	movf	read_prec_or_width@ap^0,w,c
  1528   00175C  6ED9               	movwf	fsr2l,c
  1529   00175E  6ADA               	clrf	fsr2h,c
  1530   001760  0E02               	movlw	2
  1531   001762  26DF               	addwf	indf2,f,c
  1532   001764  5CDF               	subwf	indf2,w,c
  1533   001766  6ED9               	movwf	fsr2l,c
  1534   001768  6ADA               	clrf	fsr2h,c
  1535   00176A  CFDE F00D          	movff	postinc2,read_prec_or_width@n
  1536   00176E  CFDE F00E          	movff	postinc2,read_prec_or_width@n+1
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1539   001772  EFE4  F00B         	goto	l1001
  1540   001776                     l1964:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1543   001776  C00D  F004         	movff	read_prec_or_width@n,___wmul@multiplier
  1544   00177A  C00E  F005         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1545   00177E  0E00               	movlw	0
  1546   001780  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  1547   001782  0E0A               	movlw	10
  1548   001784  6E06               	movwf	___wmul@multiplicand^0,c
  1549   001786  ECA6  F00F         	call	___wmul	;wreg free
  1550   00178A  500C               	movf	read_prec_or_width@c^0,w,c
  1551   00178C  2404               	addwf	?___wmul^0,w,c
  1552   00178E  6E0D               	movwf	read_prec_or_width@n^0,c
  1553   001790  0E00               	movlw	0
  1554   001792  2005               	addwfc	(?___wmul+1)^0,w,c
  1555   001794  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1556   001796                     
  1557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1558   001796  500A               	movf	read_prec_or_width@fmt^0,w,c
  1559   001798  6ED9               	movwf	fsr2l,c
  1560   00179A  6ADA               	clrf	fsr2h,c
  1561   00179C  2ADF               	incf	indf2,f,c
  1562   00179E                     l1968:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1565   00179E  500A               	movf	read_prec_or_width@fmt^0,w,c
  1566   0017A0  6ED9               	movwf	fsr2l,c
  1567   0017A2  6ADA               	clrf	fsr2h,c
  1568   0017A4  CFDF FFF6          	movff	indf2,tblptrl
  1569   0017A8                     	if	1	;There is more than 1 active tblptr byte
  1570   0017A8  0E0E               	movlw	high __smallconst
  1571   0017AA  6EF7               	movwf	tblptrh,c
  1572   0017AC                     	endif
  1573   0017AC                     	if	0	;tblptru may be non-zero
  1574   0017AC                     	endif
  1575   0017AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1576   0017AC  0E00               	movlw	low (__smallconst shr (0+16))
  1577   0017AE  6EF8               	movwf	tblptru,c
  1578   0017B0                     	endif
  1579   0017B0  0008               	tblrd		*
  1580   0017B2  50F5               	movf	tablat,w,c
  1581   0017B4  0FD0               	addlw	208
  1582   0017B6  6E0C               	movwf	read_prec_or_width@c^0,c
  1583   0017B8  0E09               	movlw	9
  1584   0017BA  640C               	cpfsgt	read_prec_or_width@c^0,c
  1585   0017BC  EFE2  F00B         	goto	u1271
  1586   0017C0  EFE4  F00B         	goto	u1270
  1587   0017C4                     u1271:
  1588   0017C4  EFBB  F00B         	goto	l1964
  1589   0017C8                     u1270:
  1590   0017C8                     l1001:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1593   0017C8  C00D  F00A         	movff	read_prec_or_width@n,?_read_prec_or_width
  1594   0017CC  C00E  F00B         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1595   0017D0  0012               	return		;funcret
  1596   0017D2                     __end_of_read_prec_or_width:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _dtoa *****************
  1600 ;; Defined at:
  1601 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1604 ;;		 -> sprintf@f(12), 
  1605 ;;  d               2   24[COMRAM] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  i               2   32[COMRAM] int 
  1608 ;;  w               2   29[COMRAM] int 
  1609 ;;  s               1   31[COMRAM] unsigned char 
  1610 ;;  p               1   28[COMRAM] _Bool 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;Total ram usage:       11 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 5
  1627 ;; This function calls:
  1628 ;;		___awdiv
  1629 ;;		___awmod
  1630 ;;		_abs
  1631 ;;		_pad
  1632 ;; This function is called by:
  1633 ;;		_vfpfcnvrt
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text6
  1638   0011C0                     __ptext6:
  1639                           	callstack 0
  1640   0011C0                     _dtoa:
  1641                           	callstack 21
  1642   0011C0                     
  1643                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1644   0011C0  0E01               	movlw	1
  1645   0011C2  6E1D               	movwf	dtoa@p^0,c
  1646   0011C4                     
  1647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1648   0011C4  BE1A               	btfsc	(dtoa@d+1)^0,7,c
  1649   0011C6  EFE7  F008         	goto	u1161
  1650   0011CA  EFEA  F008         	goto	u1160
  1651   0011CE                     u1161:
  1652   0011CE  0E01               	movlw	1
  1653   0011D0  EFEB  F008         	goto	u1170
  1654   0011D4                     u1160:
  1655   0011D4  0E00               	movlw	0
  1656   0011D6                     u1170:
  1657   0011D6  6E20               	movwf	dtoa@s^0,c
  1658   0011D8                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1660   0011D8  C050  F01E         	movff	_width,dtoa@w
  1661   0011DC  C051  F01F         	movff	_width+1,dtoa@w+1
  1662   0011E0                     
  1663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1664   0011E0  5020               	movf	dtoa@s^0,w,c
  1665   0011E2  B4D8               	btfsc	status,2,c
  1666   0011E4  EFF6  F008         	goto	u1181
  1667   0011E8  EFF8  F008         	goto	u1180
  1668   0011EC                     u1181:
  1669   0011EC  EF0F  F009         	goto	l984
  1670   0011F0                     u1180:
  1671   0011F0                     
  1672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1673   0011F0  061E               	decf	dtoa@w^0,f,c
  1674   0011F2  A0D8               	btfss	status,0,c
  1675   0011F4  061F               	decf	(dtoa@w+1)^0,f,c
  1676   0011F6                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1678   0011F6  5020               	movf	dtoa@s^0,w,c
  1679   0011F8  A4D8               	btfss	status,2,c
  1680   0011FA  EF01  F009         	goto	u1191
  1681   0011FE  EF03  F009         	goto	u1190
  1682   001202                     u1191:
  1683   001202  EF09  F009         	goto	l1920
  1684   001206                     u1190:
  1685   001206  0E00               	movlw	0
  1686   001208  6E1C               	movwf	(_dtoa$1980+1)^0,c
  1687   00120A  0E2B               	movlw	43
  1688   00120C  6E1B               	movwf	_dtoa$1980^0,c
  1689   00120E  EF0D  F009         	goto	l1922
  1690   001212                     l1920:
  1691   001212  0E00               	movlw	0
  1692   001214  6E1C               	movwf	(_dtoa$1980+1)^0,c
  1693   001216  0E2D               	movlw	45
  1694   001218  6E1B               	movwf	_dtoa$1980^0,c
  1695   00121A                     l1922:
  1696   00121A  C01B  F020         	movff	_dtoa$1980,dtoa@s
  1697   00121E                     l984:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1700   00121E  0E00               	movlw	0
  1701   001220  6E22               	movwf	(dtoa@i+1)^0,c
  1702   001222  0E1F               	movlw	31
  1703   001224  6E21               	movwf	dtoa@i^0,c
  1704   001226                     
  1705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1706   001226  0E00               	movlw	0
  1707   001228  0100               	movlb	0	; () banked
  1708   00122A  6FAD               	movwf	(_dbuf+31)& (0+255),b
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1711   00122C  EF45  F009         	goto	l1936
  1712   001230                     l1926:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1715   001230  0621               	decf	dtoa@i^0,f,c
  1716   001232  A0D8               	btfss	status,0,c
  1717   001234  0622               	decf	(dtoa@i+1)^0,f,c
  1718   001236                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1720   001236  5021               	movf	dtoa@i^0,w,c
  1721   001238  0F8E               	addlw	low _dbuf
  1722   00123A  6ED9               	movwf	fsr2l,c
  1723   00123C  6ADA               	clrf	fsr2h,c
  1724   00123E  C019  F004         	movff	dtoa@d,___awmod@dividend
  1725   001242  C01A  F005         	movff	dtoa@d+1,___awmod@dividend+1
  1726   001246  0E00               	movlw	0
  1727   001248  6E07               	movwf	(___awmod@divisor+1)^0,c
  1728   00124A  0E0A               	movlw	10
  1729   00124C  6E06               	movwf	___awmod@divisor^0,c
  1730   00124E  EC3A  F00B         	call	___awmod	;wreg free
  1731   001252  C004  F00A         	movff	?___awmod,abs@a
  1732   001256  C005  F00B         	movff	?___awmod+1,abs@a+1
  1733   00125A  EC48  F00F         	call	_abs	;wreg free
  1734   00125E  500A               	movf	?_abs^0,w,c
  1735   001260  0F30               	addlw	48
  1736   001262  6EDF               	movwf	indf2,c
  1737   001264                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1739   001264  0E00               	movlw	0
  1740   001266  6E1D               	movwf	dtoa@p^0,c
  1741   001268                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1743   001268  061E               	decf	dtoa@w^0,f,c
  1744   00126A  A0D8               	btfss	status,0,c
  1745   00126C  061F               	decf	(dtoa@w+1)^0,f,c
  1746   00126E                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1748   00126E  C019  F004         	movff	dtoa@d,___awdiv@dividend
  1749   001272  C01A  F005         	movff	dtoa@d+1,___awdiv@dividend+1
  1750   001276  0E00               	movlw	0
  1751   001278  6E07               	movwf	(___awdiv@divisor+1)^0,c
  1752   00127A  0E0A               	movlw	10
  1753   00127C  6E06               	movwf	___awdiv@divisor^0,c
  1754   00127E  ECD8  F00A         	call	___awdiv	;wreg free
  1755   001282  C004  F019         	movff	?___awdiv,dtoa@d
  1756   001286  C005  F01A         	movff	?___awdiv+1,dtoa@d+1
  1757   00128A                     l1936:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1760   00128A  BE22               	btfsc	(dtoa@i+1)^0,7,c
  1761   00128C  EF50  F009         	goto	u1201
  1762   001290  5022               	movf	(dtoa@i+1)^0,w,c
  1763   001292  E108               	bnz	u1200
  1764   001294  0421               	decf	dtoa@i^0,w,c
  1765   001296  A0D8               	btfss	status,0,c
  1766   001298  EF50  F009         	goto	u1201
  1767   00129C  EF52  F009         	goto	u1200
  1768   0012A0                     u1201:
  1769   0012A0  EF77  F009         	goto	l1946
  1770   0012A4                     u1200:
  1771   0012A4  5019               	movf	dtoa@d^0,w,c
  1772   0012A6  101A               	iorwf	(dtoa@d+1)^0,w,c
  1773   0012A8  A4D8               	btfss	status,2,c
  1774   0012AA  EF59  F009         	goto	u1211
  1775   0012AE  EF5B  F009         	goto	u1210
  1776   0012B2                     u1211:
  1777   0012B2  EF18  F009         	goto	l1926
  1778   0012B6                     u1210:
  1779   0012B6  501D               	movf	dtoa@p^0,w,c
  1780   0012B8  A4D8               	btfss	status,2,c
  1781   0012BA  EF61  F009         	goto	u1221
  1782   0012BE  EF63  F009         	goto	u1220
  1783   0012C2                     u1221:
  1784   0012C2  EF18  F009         	goto	l1926
  1785   0012C6                     u1220:
  1786   0012C6  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  1787   0012C8  EF6E  F009         	goto	u1231
  1788   0012CC  501F               	movf	(dtoa@w+1)^0,w,c
  1789   0012CE  E108               	bnz	u1230
  1790   0012D0  041E               	decf	dtoa@w^0,w,c
  1791   0012D2  A0D8               	btfss	status,0,c
  1792   0012D4  EF6E  F009         	goto	u1231
  1793   0012D8  EF70  F009         	goto	u1230
  1794   0012DC                     u1231:
  1795   0012DC  EF77  F009         	goto	l1946
  1796   0012E0                     u1230:
  1797   0012E0  B254               	btfsc	_flags^0,1,c
  1798   0012E2  EF75  F009         	goto	u1241
  1799   0012E6  EF77  F009         	goto	u1240
  1800   0012EA                     u1241:
  1801   0012EA  EF18  F009         	goto	l1926
  1802   0012EE                     u1240:
  1803   0012EE                     l1946:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1806   0012EE  5020               	movf	dtoa@s^0,w,c
  1807   0012F0  B4D8               	btfsc	status,2,c
  1808   0012F2  EF7D  F009         	goto	u1251
  1809   0012F6  EF7F  F009         	goto	u1250
  1810   0012FA                     u1251:
  1811   0012FA  EF88  F009         	goto	l1952
  1812   0012FE                     u1250:
  1813   0012FE                     
  1814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1815   0012FE  0621               	decf	dtoa@i^0,f,c
  1816   001300  A0D8               	btfss	status,0,c
  1817   001302  0622               	decf	(dtoa@i+1)^0,f,c
  1818   001304                     
  1819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1820   001304  5021               	movf	dtoa@i^0,w,c
  1821   001306  0F8E               	addlw	low _dbuf
  1822   001308  6ED9               	movwf	fsr2l,c
  1823   00130A  6ADA               	clrf	fsr2h,c
  1824   00130C  C020  FFDF         	movff	dtoa@s,indf2
  1825   001310                     l1952:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1828   001310  C018  F011         	movff	dtoa@fp,pad@fp
  1829   001314  5021               	movf	dtoa@i^0,w,c
  1830   001316  0F8E               	addlw	low _dbuf
  1831   001318  6E12               	movwf	pad@buf^0,c
  1832   00131A  C01E  F013         	movff	dtoa@w,pad@p
  1833   00131E  C01F  F014         	movff	dtoa@w+1,pad@p+1
  1834   001322  ECDF  F00C         	call	_pad	;wreg free
  1835   001326  0012               	return		;funcret
  1836   001328                     __end_of_dtoa:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _pad *****************
  1840 ;; Defined at:
  1841 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  1844 ;;		 -> sprintf@f(12), 
  1845 ;;  buf             1   17[COMRAM] PTR unsigned char 
  1846 ;;		 -> dbuf(32), 
  1847 ;;  p               2   18[COMRAM] int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  i               2   21[COMRAM] int 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;Total ram usage:        7 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 4
  1866 ;; This function calls:
  1867 ;;		_fputc
  1868 ;;		_fputs
  1869 ;; This function is called by:
  1870 ;;		_dtoa
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text7
  1875   0019BE                     __ptext7:
  1876                           	callstack 0
  1877   0019BE                     _pad:
  1878                           	callstack 21
  1879   0019BE                     
  1880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1881   0019BE  A054               	btfss	_flags^0,0,c
  1882   0019C0  EFE4  F00C         	goto	u1111
  1883   0019C4  EFE6  F00C         	goto	u1110
  1884   0019C8                     u1111:
  1885   0019C8  EFEC  F00C         	goto	l1884
  1886   0019CC                     u1110:
  1887   0019CC                     
  1888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1889   0019CC  C012  F00C         	movff	pad@buf,fputs@s
  1890   0019D0  C011  F00D         	movff	pad@fp,fputs@fp
  1891   0019D4  ECD5  F00E         	call	_fputs	;wreg free
  1892   0019D8                     l1884:
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1895   0019D8  BE14               	btfsc	(pad@p+1)^0,7,c
  1896   0019DA  EFF3  F00C         	goto	u1120
  1897   0019DE  EFF1  F00C         	goto	u1121
  1898   0019E2                     u1121:
  1899   0019E2  EFF7  F00C         	goto	l976
  1900   0019E6                     u1120:
  1901   0019E6                     
  1902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1903   0019E6  0E00               	movlw	0
  1904   0019E8  6E14               	movwf	(pad@p+1)^0,c
  1905   0019EA  0E00               	movlw	0
  1906   0019EC  6E13               	movwf	pad@p^0,c
  1907   0019EE                     l976:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1910   0019EE  0E00               	movlw	0
  1911   0019F0  6E17               	movwf	(pad@i+1)^0,c
  1912   0019F2  0E00               	movlw	0
  1913   0019F4  6E16               	movwf	pad@i^0,c
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1916   0019F6  EF07  F00D         	goto	l1892
  1917   0019FA                     l1888:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1920   0019FA  0E00               	movlw	0
  1921   0019FC  6E05               	movwf	(fputc@c+1)^0,c
  1922   0019FE  0E20               	movlw	32
  1923   001A00  6E04               	movwf	fputc@c^0,c
  1924   001A02  C011  F006         	movff	pad@fp,fputc@fp
  1925   001A06  EC40  F00C         	call	_fputc	;wreg free
  1926   001A0A                     
  1927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1928   001A0A  4A16               	infsnz	pad@i^0,f,c
  1929   001A0C  2A17               	incf	(pad@i+1)^0,f,c
  1930   001A0E                     l1892:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1933   001A0E  5013               	movf	pad@p^0,w,c
  1934   001A10  5C16               	subwf	pad@i^0,w,c
  1935   001A12  5017               	movf	(pad@i+1)^0,w,c
  1936   001A14  0A80               	xorlw	128
  1937   001A16  6E15               	movwf	??_pad^0,c
  1938   001A18  5014               	movf	(pad@p+1)^0,w,c
  1939   001A1A  0A80               	xorlw	128
  1940   001A1C  5815               	subwfb	??_pad^0,w,c
  1941   001A1E  A0D8               	btfss	status,0,c
  1942   001A20  EF14  F00D         	goto	u1131
  1943   001A24  EF16  F00D         	goto	u1130
  1944   001A28                     u1131:
  1945   001A28  EFFD  F00C         	goto	l1888
  1946   001A2C                     u1130:
  1947   001A2C                     
  1948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1949   001A2C  B054               	btfsc	_flags^0,0,c
  1950   001A2E  EF1B  F00D         	goto	u1141
  1951   001A32  EF1D  F00D         	goto	u1140
  1952   001A36                     u1141:
  1953   001A36  EF23  F00D         	goto	l981
  1954   001A3A                     u1140:
  1955   001A3A                     
  1956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1957   001A3A  C012  F00C         	movff	pad@buf,fputs@s
  1958   001A3E  C011  F00D         	movff	pad@fp,fputs@fp
  1959   001A42  ECD5  F00E         	call	_fputs	;wreg free
  1960   001A46                     l981:
  1961   001A46  0012               	return		;funcret
  1962   001A48                     __end_of_pad:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _fputs *****************
  1966 ;; Defined at:
  1967 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1970 ;;		 -> dbuf(32), 
  1971 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1972 ;;		 -> sprintf@f(12), 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  i               2   14[COMRAM] int 
  1975 ;;  c               1   13[COMRAM] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2   11[COMRAM] int 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;Total ram usage:        5 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 3
  1992 ;; This function calls:
  1993 ;;		_fputc
  1994 ;; This function is called by:
  1995 ;;		_pad
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text8
  2000   001DAA                     __ptext8:
  2001                           	callstack 0
  2002   001DAA                     _fputs:
  2003                           	callstack 21
  2004   001DAA  0E00               	movlw	0
  2005   001DAC  6E10               	movwf	(fputs@i+1)^0,c
  2006   001DAE  0E00               	movlw	0
  2007   001DB0  6E0F               	movwf	fputs@i^0,c
  2008   001DB2  EFE4  F00E         	goto	l1792
  2009   001DB6                     l1788:
  2010   001DB6  C00E  F004         	movff	fputs@c,fputc@c
  2011   001DBA  6A05               	clrf	(fputc@c+1)^0,c
  2012   001DBC  C00D  F006         	movff	fputs@fp,fputc@fp
  2013   001DC0  EC40  F00C         	call	_fputc	;wreg free
  2014   001DC4  4A0F               	infsnz	fputs@i^0,f,c
  2015   001DC6  2A10               	incf	(fputs@i+1)^0,f,c
  2016   001DC8                     l1792:
  2017   001DC8  500C               	movf	fputs@s^0,w,c
  2018   001DCA  240F               	addwf	fputs@i^0,w,c
  2019   001DCC  6ED9               	movwf	fsr2l,c
  2020   001DCE  6ADA               	clrf	fsr2h,c
  2021   001DD0  50DF               	movf	indf2,w,c
  2022   001DD2  6E0E               	movwf	fputs@c^0,c
  2023   001DD4  500E               	movf	fputs@c^0,w,c
  2024   001DD6  A4D8               	btfss	status,2,c
  2025   001DD8  EFF0  F00E         	goto	u981
  2026   001DDC  EFF2  F00E         	goto	u980
  2027   001DE0                     u981:
  2028   001DE0  EFDB  F00E         	goto	l1788
  2029   001DE4                     u980:
  2030   001DE4  0012               	return		;funcret
  2031   001DE6                     __end_of_fputs:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _fputc *****************
  2035 ;; Defined at:
  2036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  c               2    3[COMRAM] int 
  2039 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  2040 ;;		 -> sprintf@f(12), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  2    3[COMRAM] int 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2052 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2054 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;Total ram usage:        8 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 2
  2059 ;; This function calls:
  2060 ;;		_putch
  2061 ;; This function is called by:
  2062 ;;		_pad
  2063 ;;		_vfpfcnvrt
  2064 ;;		_fputs
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text9
  2069   001880                     __ptext9:
  2070                           	callstack 0
  2071   001880                     _fputc:
  2072                           	callstack 24
  2073   001880  5006               	movf	fputc@fp^0,w,c
  2074   001882  B4D8               	btfsc	status,2,c
  2075   001884  EF46  F00C         	goto	u941
  2076   001888  EF48  F00C         	goto	u940
  2077   00188C                     u941:
  2078   00188C  EF50  F00C         	goto	l1776
  2079   001890                     u940:
  2080   001890  5006               	movf	fputc@fp^0,w,c
  2081   001892  A4D8               	btfss	status,2,c
  2082   001894  EF4E  F00C         	goto	u951
  2083   001898  EF50  F00C         	goto	u950
  2084   00189C                     u951:
  2085   00189C  EF55  F00C         	goto	l1778
  2086   0018A0                     u950:
  2087   0018A0                     l1776:
  2088   0018A0  5004               	movf	fputc@c^0,w,c
  2089   0018A2  EC18  F010         	call	_putch
  2090   0018A6  EF94  F00C         	goto	l1045
  2091   0018AA                     l1778:
  2092   0018AA  5006               	movf	fputc@fp^0,w,c
  2093   0018AC  6ED9               	movwf	fsr2l,c
  2094   0018AE  6ADA               	clrf	fsr2h,c
  2095   0018B0  0E0A               	movlw	10
  2096   0018B2  26D9               	addwf	fsr2l,f,c
  2097   0018B4  50DE               	movf	postinc2,w,c
  2098   0018B6  10DE               	iorwf	postinc2,w,c
  2099   0018B8  B4D8               	btfsc	status,2,c
  2100   0018BA  EF61  F00C         	goto	u961
  2101   0018BE  EF63  F00C         	goto	u960
  2102   0018C2                     u961:
  2103   0018C2  EF7C  F00C         	goto	l1782
  2104   0018C6                     u960:
  2105   0018C6  5006               	movf	fputc@fp^0,w,c
  2106   0018C8  6ED9               	movwf	fsr2l,c
  2107   0018CA  6ADA               	clrf	fsr2h,c
  2108   0018CC  0E0A               	movlw	10
  2109   0018CE  26D9               	addwf	fsr2l,f,c
  2110   0018D0  5006               	movf	fputc@fp^0,w,c
  2111   0018D2  6EE1               	movwf	fsr1l,c
  2112   0018D4  6AE2               	clrf	fsr1h,c
  2113   0018D6  0E03               	movlw	3
  2114   0018D8  26E1               	addwf	fsr1l,f,c
  2115   0018DA  50DE               	movf	postinc2,w,c
  2116   0018DC  5CE6               	subwf	postinc1,w,c
  2117   0018DE  50E6               	movf	postinc1,w,c
  2118   0018E0  0A80               	xorlw	128
  2119   0018E2  6E0B               	movwf	(??_fputc+4)^0,c
  2120   0018E4  50DE               	movf	postinc2,w,c
  2121   0018E6  0A80               	xorlw	128
  2122   0018E8  580B               	subwfb	(??_fputc+4)^0,w,c
  2123   0018EA  B0D8               	btfsc	status,0,c
  2124   0018EC  EF7A  F00C         	goto	u971
  2125   0018F0  EF7C  F00C         	goto	u970
  2126   0018F4                     u971:
  2127   0018F4  EF94  F00C         	goto	l1045
  2128   0018F8                     u970:
  2129   0018F8                     l1782:
  2130   0018F8  5006               	movf	fputc@fp^0,w,c
  2131   0018FA  6ED9               	movwf	fsr2l,c
  2132   0018FC  6ADA               	clrf	fsr2h,c
  2133   0018FE  0E03               	movlw	3
  2134   001900  26D9               	addwf	fsr2l,f,c
  2135   001902  50DF               	movf	indf2,w,c
  2136   001904  6E07               	movwf	??_fputc^0,c
  2137   001906  5006               	movf	fputc@fp^0,w,c
  2138   001908  6ED9               	movwf	fsr2l,c
  2139   00190A  6ADA               	clrf	fsr2h,c
  2140   00190C  50DF               	movf	indf2,w,c
  2141   00190E  2407               	addwf	??_fputc^0,w,c
  2142   001910  6ED9               	movwf	fsr2l,c
  2143   001912  6ADA               	clrf	fsr2h,c
  2144   001914  C004  FFDF         	movff	fputc@c,indf2
  2145   001918  5006               	movf	fputc@fp^0,w,c
  2146   00191A  6ED9               	movwf	fsr2l,c
  2147   00191C  6ADA               	clrf	fsr2h,c
  2148   00191E  0E03               	movlw	3
  2149   001920  26D9               	addwf	fsr2l,f,c
  2150   001922  2ADE               	incf	postinc2,f,c
  2151   001924  0E00               	movlw	0
  2152   001926  22DD               	addwfc	postdec2,f,c
  2153   001928                     l1045:
  2154   001928  0012               	return		;funcret
  2155   00192A                     __end_of_fputc:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _putch *****************
  2159 ;; Defined at:
  2160 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  c               1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  c               1    0[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_fputc
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text10
  2189   002030                     __ptext10:
  2190                           	callstack 0
  2191   002030                     _putch:
  2192                           	callstack 24
  2193   002030  0012               	return		;funcret
  2194   002032                     __end_of_putch:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _abs *****************
  2198 ;; Defined at:
  2199 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  a               2    9[COMRAM] int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2    9[COMRAM] int 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;Total ram usage:        4 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_dtoa
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text11
  2228   001E90                     __ptext11:
  2229                           	callstack 0
  2230   001E90                     _abs:
  2231                           	callstack 24
  2232   001E90  BE0B               	btfsc	(abs@a+1)^0,7,c
  2233   001E92  EF4D  F00F         	goto	u1151
  2234   001E96  EF4F  F00F         	goto	u1150
  2235   001E9A                     u1151:
  2236   001E9A  EF55  F00F         	goto	l1030
  2237   001E9E                     u1150:
  2238   001E9E  C00A  F00A         	movff	abs@a,?_abs
  2239   001EA2  C00B  F00B         	movff	abs@a+1,?_abs+1
  2240   001EA6  EF61  F00F         	goto	l1033
  2241   001EAA                     l1030:
  2242   001EAA  C00A  F00C         	movff	abs@a,??_abs
  2243   001EAE  C00B  F00D         	movff	abs@a+1,??_abs+1
  2244   001EB2  1E0C               	comf	??_abs^0,f,c
  2245   001EB4  1E0D               	comf	(??_abs+1)^0,f,c
  2246   001EB6  4A0C               	infsnz	??_abs^0,f,c
  2247   001EB8  2A0D               	incf	(??_abs+1)^0,f,c
  2248   001EBA  C00C  F00A         	movff	??_abs,?_abs
  2249   001EBE  C00D  F00B         	movff	??_abs+1,?_abs+1
  2250   001EC2                     l1033:
  2251   001EC2  0012               	return		;funcret
  2252   001EC4                     __end_of_abs:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function ___awmod *****************
  2256 ;; Defined at:
  2257 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  dividend        2    3[COMRAM] int 
  2260 ;;  divisor         2    5[COMRAM] int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  sign            1    8[COMRAM] unsigned char 
  2263 ;;  counter         1    7[COMRAM] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    3[COMRAM] int 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;Total ram usage:        6 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_dtoa
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text12
  2288   001674                     __ptext12:
  2289                           	callstack 0
  2290   001674                     ___awmod:
  2291                           	callstack 24
  2292   001674  0E00               	movlw	0
  2293   001676  6E09               	movwf	___awmod@sign^0,c
  2294   001678  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  2295   00167A  EF43  F00B         	goto	u1050
  2296   00167E  EF41  F00B         	goto	u1051
  2297   001682                     u1051:
  2298   001682  EF49  F00B         	goto	l1852
  2299   001686                     u1050:
  2300   001686  6C04               	negf	___awmod@dividend^0,c
  2301   001688  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2302   00168A  B0D8               	btfsc	status,0,c
  2303   00168C  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2304   00168E  0E01               	movlw	1
  2305   001690  6E09               	movwf	___awmod@sign^0,c
  2306   001692                     l1852:
  2307   001692  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  2308   001694  EF50  F00B         	goto	u1060
  2309   001698  EF4E  F00B         	goto	u1061
  2310   00169C                     u1061:
  2311   00169C  EF54  F00B         	goto	l1856
  2312   0016A0                     u1060:
  2313   0016A0  6C06               	negf	___awmod@divisor^0,c
  2314   0016A2  1E07               	comf	(___awmod@divisor+1)^0,f,c
  2315   0016A4  B0D8               	btfsc	status,0,c
  2316   0016A6  2A07               	incf	(___awmod@divisor+1)^0,f,c
  2317   0016A8                     l1856:
  2318   0016A8  5006               	movf	___awmod@divisor^0,w,c
  2319   0016AA  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  2320   0016AC  B4D8               	btfsc	status,2,c
  2321   0016AE  EF5B  F00B         	goto	u1071
  2322   0016B2  EF5D  F00B         	goto	u1070
  2323   0016B6                     u1071:
  2324   0016B6  EF81  F00B         	goto	l1872
  2325   0016BA                     u1070:
  2326   0016BA  0E01               	movlw	1
  2327   0016BC  6E08               	movwf	___awmod@counter^0,c
  2328   0016BE  EF65  F00B         	goto	l1862
  2329   0016C2                     l1860:
  2330   0016C2  90D8               	bcf	status,0,c
  2331   0016C4  3606               	rlcf	___awmod@divisor^0,f,c
  2332   0016C6  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  2333   0016C8  2A08               	incf	___awmod@counter^0,f,c
  2334   0016CA                     l1862:
  2335   0016CA  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  2336   0016CC  EF6A  F00B         	goto	u1081
  2337   0016D0  EF6C  F00B         	goto	u1080
  2338   0016D4                     u1081:
  2339   0016D4  EF61  F00B         	goto	l1860
  2340   0016D8                     u1080:
  2341   0016D8                     l1864:
  2342   0016D8  5006               	movf	___awmod@divisor^0,w,c
  2343   0016DA  5C04               	subwf	___awmod@dividend^0,w,c
  2344   0016DC  5007               	movf	(___awmod@divisor+1)^0,w,c
  2345   0016DE  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  2346   0016E0  A0D8               	btfss	status,0,c
  2347   0016E2  EF75  F00B         	goto	u1091
  2348   0016E6  EF77  F00B         	goto	u1090
  2349   0016EA                     u1091:
  2350   0016EA  EF7B  F00B         	goto	l1868
  2351   0016EE                     u1090:
  2352   0016EE  5006               	movf	___awmod@divisor^0,w,c
  2353   0016F0  5E04               	subwf	___awmod@dividend^0,f,c
  2354   0016F2  5007               	movf	(___awmod@divisor+1)^0,w,c
  2355   0016F4  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  2356   0016F6                     l1868:
  2357   0016F6  90D8               	bcf	status,0,c
  2358   0016F8  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  2359   0016FA  3206               	rrcf	___awmod@divisor^0,f,c
  2360   0016FC  2E08               	decfsz	___awmod@counter^0,f,c
  2361   0016FE  EF6C  F00B         	goto	l1864
  2362   001702                     l1872:
  2363   001702  5009               	movf	___awmod@sign^0,w,c
  2364   001704  B4D8               	btfsc	status,2,c
  2365   001706  EF87  F00B         	goto	u1101
  2366   00170A  EF89  F00B         	goto	u1100
  2367   00170E                     u1101:
  2368   00170E  EF8D  F00B         	goto	l1876
  2369   001712                     u1100:
  2370   001712  6C04               	negf	___awmod@dividend^0,c
  2371   001714  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2372   001716  B0D8               	btfsc	status,0,c
  2373   001718  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2374   00171A                     l1876:
  2375   00171A  C004  F004         	movff	___awmod@dividend,?___awmod
  2376   00171E  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  2377   001722  0012               	return		;funcret
  2378   001724                     __end_of___awmod:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function ___awdiv *****************
  2382 ;; Defined at:
  2383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  dividend        2    3[COMRAM] int 
  2386 ;;  divisor         2    5[COMRAM] int 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  quotient        2    9[COMRAM] int 
  2389 ;;  sign            1    8[COMRAM] unsigned char 
  2390 ;;  counter         1    7[COMRAM] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2    3[COMRAM] int 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2403 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;Total ram usage:        8 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_dtoa
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text13
  2415   0015B0                     __ptext13:
  2416                           	callstack 0
  2417   0015B0                     ___awdiv:
  2418                           	callstack 24
  2419   0015B0  0E00               	movlw	0
  2420   0015B2  6E09               	movwf	___awdiv@sign^0,c
  2421   0015B4  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  2422   0015B6  EFE1  F00A         	goto	u990
  2423   0015BA  EFDF  F00A         	goto	u991
  2424   0015BE                     u991:
  2425   0015BE  EFE7  F00A         	goto	l1808
  2426   0015C2                     u990:
  2427   0015C2  6C06               	negf	___awdiv@divisor^0,c
  2428   0015C4  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  2429   0015C6  B0D8               	btfsc	status,0,c
  2430   0015C8  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  2431   0015CA  0E01               	movlw	1
  2432   0015CC  6E09               	movwf	___awdiv@sign^0,c
  2433   0015CE                     l1808:
  2434   0015CE  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  2435   0015D0  EFEE  F00A         	goto	u1000
  2436   0015D4  EFEC  F00A         	goto	u1001
  2437   0015D8                     u1001:
  2438   0015D8  EFF4  F00A         	goto	l1814
  2439   0015DC                     u1000:
  2440   0015DC  6C04               	negf	___awdiv@dividend^0,c
  2441   0015DE  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  2442   0015E0  B0D8               	btfsc	status,0,c
  2443   0015E2  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  2444   0015E4  0E01               	movlw	1
  2445   0015E6  1A09               	xorwf	___awdiv@sign^0,f,c
  2446   0015E8                     l1814:
  2447   0015E8  0E00               	movlw	0
  2448   0015EA  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  2449   0015EC  0E00               	movlw	0
  2450   0015EE  6E0A               	movwf	___awdiv@quotient^0,c
  2451   0015F0  5006               	movf	___awdiv@divisor^0,w,c
  2452   0015F2  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  2453   0015F4  B4D8               	btfsc	status,2,c
  2454   0015F6  EFFF  F00A         	goto	u1011
  2455   0015FA  EF01  F00B         	goto	u1010
  2456   0015FE                     u1011:
  2457   0015FE  EF29  F00B         	goto	l1836
  2458   001602                     u1010:
  2459   001602  0E01               	movlw	1
  2460   001604  6E08               	movwf	___awdiv@counter^0,c
  2461   001606  EF09  F00B         	goto	l1822
  2462   00160A                     l1820:
  2463   00160A  90D8               	bcf	status,0,c
  2464   00160C  3606               	rlcf	___awdiv@divisor^0,f,c
  2465   00160E  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  2466   001610  2A08               	incf	___awdiv@counter^0,f,c
  2467   001612                     l1822:
  2468   001612  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  2469   001614  EF0E  F00B         	goto	u1021
  2470   001618  EF10  F00B         	goto	u1020
  2471   00161C                     u1021:
  2472   00161C  EF05  F00B         	goto	l1820
  2473   001620                     u1020:
  2474   001620                     l1824:
  2475   001620  90D8               	bcf	status,0,c
  2476   001622  360A               	rlcf	___awdiv@quotient^0,f,c
  2477   001624  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2478   001626  5006               	movf	___awdiv@divisor^0,w,c
  2479   001628  5C04               	subwf	___awdiv@dividend^0,w,c
  2480   00162A  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2481   00162C  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  2482   00162E  A0D8               	btfss	status,0,c
  2483   001630  EF1C  F00B         	goto	u1031
  2484   001634  EF1E  F00B         	goto	u1030
  2485   001638                     u1031:
  2486   001638  EF23  F00B         	goto	l1832
  2487   00163C                     u1030:
  2488   00163C  5006               	movf	___awdiv@divisor^0,w,c
  2489   00163E  5E04               	subwf	___awdiv@dividend^0,f,c
  2490   001640  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2491   001642  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  2492   001644  800A               	bsf	___awdiv@quotient^0,0,c
  2493   001646                     l1832:
  2494   001646  90D8               	bcf	status,0,c
  2495   001648  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  2496   00164A  3206               	rrcf	___awdiv@divisor^0,f,c
  2497   00164C  2E08               	decfsz	___awdiv@counter^0,f,c
  2498   00164E  EF10  F00B         	goto	l1824
  2499   001652                     l1836:
  2500   001652  5009               	movf	___awdiv@sign^0,w,c
  2501   001654  B4D8               	btfsc	status,2,c
  2502   001656  EF2F  F00B         	goto	u1041
  2503   00165A  EF31  F00B         	goto	u1040
  2504   00165E                     u1041:
  2505   00165E  EF35  F00B         	goto	l1840
  2506   001662                     u1040:
  2507   001662  6C0A               	negf	___awdiv@quotient^0,c
  2508   001664  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  2509   001666  B0D8               	btfsc	status,0,c
  2510   001668  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  2511   00166A                     l1840:
  2512   00166A  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  2513   00166E  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  2514   001672  0012               	return		;funcret
  2515   001674                     __end_of___awdiv:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _LCD_setline *****************
  2519 ;; Defined at:
  2520 ;;		line 106 in file "LCD.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  line            1    wreg     unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  line            1    8[COMRAM] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 4
  2541 ;; This function calls:
  2542 ;;		_LCD_sendbyte
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;;		_time2String
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text14
  2550   001E22                     __ptext14:
  2551                           	callstack 0
  2552   001E22                     _LCD_setline:
  2553                           	callstack 25
  2554                           
  2555                           ;incstack = 0
  2556                           ;LCD_setline@line stored from wreg
  2557   001E22  6E09               	movwf	LCD_setline@line^0,c
  2558   001E24                     
  2559                           ;LCD.c: 106: void LCD_setline (char line);LCD.c: 107: {;LCD.c: 109:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  2560   001E24  0409               	decf	LCD_setline@line^0,w,c
  2561   001E26  A4D8               	btfss	status,2,c
  2562   001E28  EF18  F00F         	goto	u1481
  2563   001E2C  EF1A  F00F         	goto	u1480
  2564   001E30                     u1481:
  2565   001E30  EF1F  F00F         	goto	l2130
  2566   001E34                     u1480:
  2567   001E34  0E00               	movlw	0
  2568   001E36  6E05               	movwf	LCD_sendbyte@type^0,c
  2569   001E38  0E80               	movlw	128
  2570   001E3A  ECF3  F00E         	call	_LCD_sendbyte
  2571   001E3E                     l2130:
  2572                           
  2573                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  2574   001E3E  0E02               	movlw	2
  2575   001E40  1809               	xorwf	LCD_setline@line^0,w,c
  2576   001E42  A4D8               	btfss	status,2,c
  2577   001E44  EF26  F00F         	goto	u1491
  2578   001E48  EF28  F00F         	goto	u1490
  2579   001E4C                     u1491:
  2580   001E4C  EF2D  F00F         	goto	l264
  2581   001E50                     u1490:
  2582   001E50  0E00               	movlw	0
  2583   001E52  6E05               	movwf	LCD_sendbyte@type^0,c
  2584   001E54  0EC0               	movlw	192
  2585   001E56  ECF3  F00E         	call	_LCD_sendbyte
  2586   001E5A                     l264:
  2587   001E5A  0012               	return		;funcret
  2588   001E5C                     __end_of_LCD_setline:
  2589                           	callstack 0
  2590                           
  2591 ;; *************** function _LCD_sendstring *****************
  2592 ;; Defined at:
  2593 ;;		line 117 in file "LCD.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  string          1    8[COMRAM] PTR unsigned char 
  2596 ;;		 -> main@buf(32), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2608 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;Total ram usage:        1 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 4
  2615 ;; This function calls:
  2616 ;;		_LCD_sendbyte
  2617 ;; This function is called by:
  2618 ;;		_time2String
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text15
  2623   001EC4                     __ptext15:
  2624                           	callstack 0
  2625   001EC4                     _LCD_sendstring:
  2626                           	callstack 25
  2627   001EC4                     
  2628                           ;LCD.c: 117: void LCD_sendstring(char *string);LCD.c: 118: {;LCD.c: 120:     while(*stri
      +                          ng != 0){
  2629   001EC4  EF6D  F00F         	goto	l2278
  2630   001EC8                     l2274:
  2631                           
  2632                           ;LCD.c: 121:   LCD_sendbyte(*string++,1);
  2633   001EC8  0E01               	movlw	1
  2634   001ECA  6E05               	movwf	LCD_sendbyte@type^0,c
  2635   001ECC  5009               	movf	LCD_sendstring@string^0,w,c
  2636   001ECE  6ED9               	movwf	fsr2l,c
  2637   001ED0  6ADA               	clrf	fsr2h,c
  2638   001ED2  50DF               	movf	indf2,w,c
  2639   001ED4  ECF3  F00E         	call	_LCD_sendbyte
  2640   001ED8  2A09               	incf	LCD_sendstring@string^0,f,c
  2641   001EDA                     l2278:
  2642                           
  2643                           ;LCD.c: 120:     while(*string != 0){
  2644   001EDA  5009               	movf	LCD_sendstring@string^0,w,c
  2645   001EDC  6ED9               	movwf	fsr2l,c
  2646   001EDE  6ADA               	clrf	fsr2h,c
  2647   001EE0  50DF               	movf	indf2,w,c
  2648   001EE2  A4D8               	btfss	status,2,c
  2649   001EE4  EF76  F00F         	goto	u1541
  2650   001EE8  EF78  F00F         	goto	u1540
  2651   001EEC                     u1541:
  2652   001EEC  EF64  F00F         	goto	l2274
  2653   001EF0                     u1540:
  2654   001EF0  0012               	return		;funcret
  2655   001EF2                     __end_of_LCD_sendstring:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _sunSync *****************
  2659 ;; Defined at:
  2660 ;;		line 114 in file "functions.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  hour            1    3[COMRAM] PTR unsigned int 
  2663 ;;		 -> hour(2), 
  2664 ;;  day             2    4[COMRAM] unsigned int 
  2665 ;;  synced          1    6[COMRAM] PTR unsigned int 
  2666 ;;		 -> main@synced(2), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;Total ram usage:        6 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text16
  2693   001B48                     __ptext16:
  2694                           	callstack 0
  2695   001B48                     _sunSync:
  2696                           	callstack 29
  2697   001B48                     
  2698                           ;functions.c: 115:     if (LATHbits.LATH3 == 0 && day==11 && *hour>=6 && *synced == 0){
  2699   001B48  B680               	btfsc	128,3,c	;volatile
  2700   001B4A  EFA9  F00D         	goto	u1771
  2701   001B4E  EFAB  F00D         	goto	u1770
  2702   001B52                     u1771:
  2703   001B52  EFDE  F00D         	goto	l218
  2704   001B56                     u1770:
  2705   001B56  0E0B               	movlw	11
  2706   001B58  1805               	xorwf	sunSync@day^0,w,c
  2707   001B5A  1006               	iorwf	(sunSync@day+1)^0,w,c
  2708   001B5C  A4D8               	btfss	status,2,c
  2709   001B5E  EFB3  F00D         	goto	u1781
  2710   001B62  EFB5  F00D         	goto	u1780
  2711   001B66                     u1781:
  2712   001B66  EFDE  F00D         	goto	l218
  2713   001B6A                     u1780:
  2714   001B6A  5004               	movf	sunSync@hour^0,w,c
  2715   001B6C  6ED9               	movwf	fsr2l,c
  2716   001B6E  6ADA               	clrf	fsr2h,c
  2717   001B70  0E01               	movlw	1
  2718   001B72  50DB               	movf	plusw2,w,c
  2719   001B74  E109               	bnz	u1790
  2720   001B76  0E06               	movlw	6
  2721   001B78  5CDE               	subwf	postinc2,w,c
  2722   001B7A  A0D8               	btfss	status,0,c
  2723   001B7C  EFC2  F00D         	goto	u1791
  2724   001B80  EFC4  F00D         	goto	u1790
  2725   001B84                     u1791:
  2726   001B84  EFDE  F00D         	goto	l218
  2727   001B88                     u1790:
  2728   001B88  5007               	movf	sunSync@synced^0,w,c
  2729   001B8A  6ED9               	movwf	fsr2l,c
  2730   001B8C  6ADA               	clrf	fsr2h,c
  2731   001B8E  50DE               	movf	postinc2,w,c
  2732   001B90  10DE               	iorwf	postinc2,w,c
  2733   001B92  A4D8               	btfss	status,2,c
  2734   001B94  EFCE  F00D         	goto	u1801
  2735   001B98  EFD0  F00D         	goto	u1800
  2736   001B9C                     u1801:
  2737   001B9C  EFDE  F00D         	goto	l218
  2738   001BA0                     u1800:
  2739   001BA0                     
  2740                           ;functions.c: 116:         *hour = 8;
  2741   001BA0  5004               	movf	sunSync@hour^0,w,c
  2742   001BA2  6ED9               	movwf	fsr2l,c
  2743   001BA4  6ADA               	clrf	fsr2h,c
  2744   001BA6  0E08               	movlw	8
  2745   001BA8  6EDE               	movwf	postinc2,c
  2746   001BAA  0E00               	movlw	0
  2747   001BAC  6EDD               	movwf	postdec2,c
  2748                           
  2749                           ;functions.c: 117:         *synced = 1;
  2750   001BAE  5007               	movf	sunSync@synced^0,w,c
  2751   001BB0  6ED9               	movwf	fsr2l,c
  2752   001BB2  6ADA               	clrf	fsr2h,c
  2753   001BB4  0E01               	movlw	1
  2754   001BB6  6EDE               	movwf	postinc2,c
  2755   001BB8  0E00               	movlw	0
  2756   001BBA  6EDD               	movwf	postdec2,c
  2757   001BBC                     l218:
  2758   001BBC  0012               	return		;funcret
  2759   001BBE                     __end_of_sunSync:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _initialise *****************
  2763 ;; Defined at:
  2764 ;;		line 124 in file "functions.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 5
  2785 ;; This function calls:
  2786 ;;		_Comp1_init_fe
  2787 ;;		_Comp1_init_re
  2788 ;;		_Interrupts_init
  2789 ;;		_LCD_init
  2790 ;;		_LEDarray_init
  2791 ;;		_Timer0_init
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text17
  2798   001FDA                     __ptext17:
  2799                           	callstack 0
  2800   001FDA                     _initialise:
  2801                           	callstack 25
  2802   001FDA                     
  2803                           ;functions.c: 126:     Interrupts_init();
  2804   001FDA  ECFA  F00F         	call	_Interrupts_init	;wreg free
  2805   001FDE                     
  2806                           ;functions.c: 127:     Comp1_init_re();
  2807   001FDE  ECB9  F00F         	call	_Comp1_init_re	;wreg free
  2808   001FE2                     
  2809                           ;functions.c: 128:     Comp1_init_fe();
  2810   001FE2  ECCB  F00F         	call	_Comp1_init_fe	;wreg free
  2811   001FE6                     
  2812                           ;functions.c: 129:     Timer0_init();
  2813   001FE6  EC79  F00F         	call	_Timer0_init	;wreg free
  2814   001FEA                     
  2815                           ;functions.c: 130:     LEDarray_init();
  2816   001FEA  EC90  F00F         	call	_LEDarray_init	;wreg free
  2817   001FEE                     
  2818                           ;functions.c: 131:     LCD_init();
  2819   001FEE  EC24  F00D         	call	_LCD_init	;wreg free
  2820   001FF2  0012               	return		;funcret
  2821   001FF4                     __end_of_initialise:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _Timer0_init *****************
  2825 ;; Defined at:
  2826 ;;		line 9 in file "timers.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2844 ;;Total ram usage:        0 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_initialise
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text18
  2855   001EF2                     __ptext18:
  2856                           	callstack 0
  2857   001EF2                     _Timer0_init:
  2858                           	callstack 28
  2859   001EF2                     
  2860                           ;timers.c: 11:     T0CON1bits.T0CS = 0b010;
  2861   001EF2  50D6               	movf	214,w,c	;volatile
  2862   001EF4  0B1F               	andlw	-225
  2863   001EF6  0940               	iorlw	64
  2864   001EF8  6ED6               	movwf	214,c	;volatile
  2865   001EFA                     
  2866                           ;timers.c: 12:     T0CON1bits.T0ASYNC = 1;
  2867   001EFA  88D6               	bsf	214,4,c	;volatile
  2868                           
  2869                           ;timers.c: 13:     T0CON1bits.T0CKPS = 0b1000;
  2870   001EFC  50D6               	movf	214,w,c	;volatile
  2871   001EFE  0BF0               	andlw	-16
  2872   001F00  0908               	iorlw	8
  2873   001F02  6ED6               	movwf	214,c	;volatile
  2874   001F04                     
  2875                           ;timers.c: 14:     T0CON0bits.T016BIT = 1;
  2876   001F04  88D5               	bsf	213,4,c	;volatile
  2877   001F06                     
  2878                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  2879   001F06  010E               	movlb	14	; () banked
  2880   001F08  8B29               	bsf	41,5,b	;volatile
  2881   001F0A                     
  2882                           ; BSR set to: 14
  2883                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  2884   001F0A  9B33               	bcf	51,5,b	;volatile
  2885   001F0C                     
  2886                           ; BSR set to: 14
  2887                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  2888   001F0C  9B1F               	bcf	31,5,b	;volatile
  2889   001F0E                     
  2890                           ; BSR set to: 14
  2891                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  2892   001F0E  8AF2               	bsf	242,5,c	;volatile
  2893   001F10                     
  2894                           ; BSR set to: 14
  2895                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  2896   001F10  8CF2               	bsf	242,6,c	;volatile
  2897   001F12                     
  2898                           ; BSR set to: 14
  2899                           ;timers.c: 21:     INTCONbits.GIE = 1;
  2900   001F12  8EF2               	bsf	242,7,c	;volatile
  2901                           
  2902                           ;timers.c: 24:     TMR0H=00001011;
  2903   001F14  0E09               	movlw	9
  2904   001F16  6ED4               	movwf	212,c	;volatile
  2905                           
  2906                           ;timers.c: 25:     TMR0L=110011011;
  2907   001F18  0E83               	movlw	131
  2908   001F1A  6ED3               	movwf	211,c	;volatile
  2909   001F1C                     
  2910                           ; BSR set to: 14
  2911                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  2912   001F1C  8ED5               	bsf	213,7,c	;volatile
  2913   001F1E                     
  2914                           ; BSR set to: 14
  2915   001F1E  0012               	return		;funcret
  2916   001F20                     __end_of_Timer0_init:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _LEDarray_init *****************
  2920 ;; Defined at:
  2921 ;;		line 8 in file "LEDarray.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_initialise
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text19
  2950   001F20                     __ptext19:
  2951                           	callstack 0
  2952   001F20                     _LEDarray_init:
  2953                           	callstack 28
  2954   001F20                     
  2955                           ;LEDarray.c: 10:     LATA = 0;
  2956   001F20  0E00               	movlw	0
  2957   001F22  6E79               	movwf	121,c	;volatile
  2958                           
  2959                           ;LEDarray.c: 11:     LATB = 0;
  2960   001F24  0E00               	movlw	0
  2961   001F26  6E7A               	movwf	122,c	;volatile
  2962   001F28                     
  2963                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  2964   001F28  907E               	bcf	126,0,c	;volatile
  2965   001F2A                     
  2966                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  2967   001F2A  9C7E               	bcf	126,6,c	;volatile
  2968                           
  2969                           ;LEDarray.c: 14:     LATG = 0;
  2970   001F2C  0E00               	movlw	0
  2971   001F2E  6E7F               	movwf	127,c	;volatile
  2972   001F30                     
  2973                           ;LEDarray.c: 15:  LATHbits.LATH3 = 1;
  2974   001F30  8680               	bsf	128,3,c	;volatile
  2975                           
  2976                           ;LEDarray.c: 18:     TRISA = 0;
  2977   001F32  0E00               	movlw	0
  2978   001F34  6E81               	movwf	129,c	;volatile
  2979                           
  2980                           ;LEDarray.c: 19:  TRISB = 0;
  2981   001F36  0E00               	movlw	0
  2982   001F38  6E82               	movwf	130,c	;volatile
  2983   001F3A                     
  2984                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2985   001F3A  9086               	bcf	134,0,c	;volatile
  2986   001F3C                     
  2987                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  2988   001F3C  9C86               	bcf	134,6,c	;volatile
  2989                           
  2990                           ;LEDarray.c: 22:     TRISG = 0;
  2991   001F3E  0E00               	movlw	0
  2992   001F40  6E87               	movwf	135,c	;volatile
  2993   001F42                     
  2994                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  2995   001F42  9688               	bcf	136,3,c	;volatile
  2996   001F44                     
  2997                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  2998   001F44  8486               	bsf	134,2,c	;volatile
  2999   001F46                     
  3000                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  3001   001F46  010E               	movlb	14	; () banked
  3002   001F48  95B4               	bcf	180,2,b	;volatile
  3003   001F4A                     
  3004                           ; BSR set to: 14
  3005   001F4A  0012               	return		;funcret
  3006   001F4C                     __end_of_LEDarray_init:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _LCD_init *****************
  3010 ;; Defined at:
  3011 ;;		line 63 in file "LCD.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 4
  3032 ;; This function calls:
  3033 ;;		_LCD_sendbyte
  3034 ;;		_LCD_sendnibble
  3035 ;; This function is called by:
  3036 ;;		_initialise
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text20
  3041   001A48                     __ptext20:
  3042                           	callstack 0
  3043   001A48                     _LCD_init:
  3044                           	callstack 25
  3045   001A48                     
  3046                           ;LCD.c: 67:     TRISCbits.TRISC6=0;
  3047   001A48  9C83               	bcf	131,6,c	;volatile
  3048                           
  3049                           ;LCD.c: 68:     TRISCbits.TRISC2=0;
  3050   001A4A  9483               	bcf	131,2,c	;volatile
  3051                           
  3052                           ;LCD.c: 69:     TRISBbits.TRISB3=0;
  3053   001A4C  9682               	bcf	130,3,c	;volatile
  3054                           
  3055                           ;LCD.c: 70:     TRISBbits.TRISB2=0;
  3056   001A4E  9482               	bcf	130,2,c	;volatile
  3057                           
  3058                           ;LCD.c: 71:     TRISEbits.TRISE3=0;
  3059   001A50  9685               	bcf	133,3,c	;volatile
  3060                           
  3061                           ;LCD.c: 72:     TRISEbits.TRISE1=0;
  3062   001A52  9285               	bcf	133,1,c	;volatile
  3063                           
  3064                           ;LCD.c: 75:     LATCbits.LATC6=0;
  3065   001A54  9C7B               	bcf	123,6,c	;volatile
  3066                           
  3067                           ;LCD.c: 76:     LATCbits.LATC2=0;
  3068   001A56  947B               	bcf	123,2,c	;volatile
  3069                           
  3070                           ;LCD.c: 77:     LATBbits.LATB4 = 0;
  3071   001A58  987A               	bcf	122,4,c	;volatile
  3072                           
  3073                           ;LCD.c: 78:     LATBbits.LATB5 = 0;
  3074   001A5A  9A7A               	bcf	122,5,c	;volatile
  3075                           
  3076                           ;LCD.c: 79:     LATBbits.LATB6 = 0;
  3077   001A5C  9C7A               	bcf	122,6,c	;volatile
  3078                           
  3079                           ;LCD.c: 80:     LATBbits.LATB7 = 0;
  3080   001A5E  9E7A               	bcf	122,7,c	;volatile
  3081   001A60                     
  3082                           ;LCD.c: 85:     LCD_sendnibble(0b0011);
  3083   001A60  0E03               	movlw	3
  3084   001A62  EC4E  F00E         	call	_LCD_sendnibble
  3085   001A66                     
  3086                           ;LCD.c: 86:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3087   001A66  0ED0               	movlw	208
  3088   001A68                     u1887:
  3089   001A68  2EE8               	decfsz	wreg,f,c
  3090   001A6A  D7FE               	bra	u1887
  3091   001A6C                     
  3092                           ;LCD.c: 88:     LCD_sendbyte(0b00101000,0);
  3093   001A6C  0E00               	movlw	0
  3094   001A6E  6E05               	movwf	LCD_sendbyte@type^0,c
  3095   001A70  0E28               	movlw	40
  3096   001A72  ECF3  F00E         	call	_LCD_sendbyte
  3097   001A76                     
  3098                           ;LCD.c: 89:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3099   001A76  0ED0               	movlw	208
  3100   001A78                     u1897:
  3101   001A78  2EE8               	decfsz	wreg,f,c
  3102   001A7A  D7FE               	bra	u1897
  3103   001A7C                     
  3104                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  3105   001A7C  0E00               	movlw	0
  3106   001A7E  6E05               	movwf	LCD_sendbyte@type^0,c
  3107   001A80  0E28               	movlw	40
  3108   001A82  ECF3  F00E         	call	_LCD_sendbyte
  3109   001A86                     
  3110                           ;LCD.c: 91:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3111   001A86  0EC5               	movlw	197
  3112   001A88                     u1907:
  3113   001A88  2EE8               	decfsz	wreg,f,c
  3114   001A8A  D7FE               	bra	u1907
  3115   001A8C  0000               	nop	
  3116   001A8E                     
  3117                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  3118   001A8E  0E00               	movlw	0
  3119   001A90  6E05               	movwf	LCD_sendbyte@type^0,c
  3120   001A92  0E0C               	movlw	12
  3121   001A94  ECF3  F00E         	call	_LCD_sendbyte
  3122   001A98                     
  3123                           ;LCD.c: 93:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3124   001A98  0EC5               	movlw	197
  3125   001A9A                     u1917:
  3126   001A9A  2EE8               	decfsz	wreg,f,c
  3127   001A9C  D7FE               	bra	u1917
  3128   001A9E  0000               	nop	
  3129   001AA0                     
  3130                           ;LCD.c: 94:     LCD_sendbyte(0b00000001,0);
  3131   001AA0  0E00               	movlw	0
  3132   001AA2  6E05               	movwf	LCD_sendbyte@type^0,c
  3133   001AA4  0E01               	movlw	1
  3134   001AA6  ECF3  F00E         	call	_LCD_sendbyte
  3135   001AAA                     
  3136                           ;LCD.c: 95:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  3137   001AAA  0E20               	movlw	32
  3138   001AAC  6E09               	movwf	??_LCD_init^0,c
  3139   001AAE  0ECA               	movlw	202
  3140   001AB0                     u1927:
  3141   001AB0  2EE8               	decfsz	wreg,f,c
  3142   001AB2  D7FE               	bra	u1927
  3143   001AB4  2E09               	decfsz	??_LCD_init^0,f,c
  3144   001AB6  D7FC               	bra	u1927
  3145   001AB8                     
  3146                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  3147   001AB8  0E00               	movlw	0
  3148   001ABA  6E05               	movwf	LCD_sendbyte@type^0,c
  3149   001ABC  0E06               	movlw	6
  3150   001ABE  ECF3  F00E         	call	_LCD_sendbyte
  3151   001AC2                     
  3152                           ;LCD.c: 100:     LCD_sendbyte(0b1111,0);
  3153   001AC2  0E00               	movlw	0
  3154   001AC4  6E05               	movwf	LCD_sendbyte@type^0,c
  3155   001AC6  0E0F               	movlw	15
  3156   001AC8  ECF3  F00E         	call	_LCD_sendbyte
  3157   001ACC  0012               	return		;funcret
  3158   001ACE                     __end_of_LCD_init:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _LCD_sendbyte *****************
  3162 ;; Defined at:
  3163 ;;		line 43 in file "LCD.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  Byte            1    wreg     unsigned char 
  3166 ;;  type            1    4[COMRAM] unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  Byte            1    7[COMRAM] unsigned char 
  3169 ;;  lowNibble       1    6[COMRAM] unsigned char 
  3170 ;;  highNibble      1    5[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3180 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 3
  3187 ;; This function calls:
  3188 ;;		_LCD_sendnibble
  3189 ;; This function is called by:
  3190 ;;		_LCD_init
  3191 ;;		_LCD_setline
  3192 ;;		_LCD_sendstring
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text21
  3197   001DE6                     __ptext21:
  3198                           	callstack 0
  3199   001DE6                     _LCD_sendbyte:
  3200                           	callstack 25
  3201                           
  3202                           ;incstack = 0
  3203                           ;LCD_sendbyte@Byte stored from wreg
  3204   001DE6  6E08               	movwf	LCD_sendbyte@Byte^0,c
  3205   001DE8                     
  3206                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  3207   001DE8  0405               	decf	LCD_sendbyte@type^0,w,c
  3208   001DEA  A4D8               	btfss	status,2,c
  3209   001DEC  EFFA  F00E         	goto	u1431
  3210   001DF0  EFFC  F00E         	goto	u1430
  3211   001DF4                     u1431:
  3212   001DF4  EFFF  F00E         	goto	l254
  3213   001DF8                     u1430:
  3214   001DF8  8C7B               	bsf	123,6,c	;volatile
  3215   001DFA  EF00  F00F         	goto	l2086
  3216   001DFE                     l254:
  3217   001DFE  9C7B               	bcf	123,6,c	;volatile
  3218   001E00                     l2086:
  3219                           
  3220                           ;LCD.c: 50:     unsigned char highNibble = (Byte >> 4) ;
  3221   001E00  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  3222   001E02  0B0F               	andlw	15
  3223   001E04  6E06               	movwf	LCD_sendbyte@highNibble^0,c
  3224   001E06                     
  3225                           ;LCD.c: 51:     LCD_sendnibble(highNibble);
  3226   001E06  5006               	movf	LCD_sendbyte@highNibble^0,w,c
  3227   001E08  EC4E  F00E         	call	_LCD_sendnibble
  3228   001E0C                     
  3229                           ;LCD.c: 54:     unsigned char lowNibble = Byte & 0b1111;
  3230   001E0C  5008               	movf	LCD_sendbyte@Byte^0,w,c
  3231   001E0E  0B0F               	andlw	15
  3232   001E10  6E07               	movwf	LCD_sendbyte@lowNibble^0,c
  3233                           
  3234                           ;LCD.c: 55:     LCD_sendnibble(lowNibble);
  3235   001E12  5007               	movf	LCD_sendbyte@lowNibble^0,w,c
  3236   001E14  EC4E  F00E         	call	_LCD_sendnibble
  3237   001E18                     
  3238                           ;LCD.c: 57:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3239   001E18  0EA0               	movlw	160
  3240   001E1A                     u1937:
  3241   001E1A  D000               	nop2	
  3242   001E1C  2EE8               	decfsz	wreg,f,c
  3243   001E1E  D7FD               	bra	u1937
  3244   001E20  0012               	return		;funcret
  3245   001E22                     __end_of_LCD_sendbyte:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _LCD_sendnibble *****************
  3249 ;; Defined at:
  3250 ;;		line 21 in file "LCD.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  number          1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  number          1    3[COMRAM] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;Total ram usage:        1 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 2
  3271 ;; This function calls:
  3272 ;;		_LCD_E_TOG
  3273 ;; This function is called by:
  3274 ;;		_LCD_sendbyte
  3275 ;;		_LCD_init
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text22
  3280   001C9C                     __ptext22:
  3281                           	callstack 0
  3282   001C9C                     _LCD_sendnibble:
  3283                           	callstack 25
  3284                           
  3285                           ;incstack = 0
  3286                           ;LCD_sendnibble@number stored from wreg
  3287   001C9C  6E04               	movwf	LCD_sendnibble@number^0,c
  3288   001C9E                     
  3289                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  3290   001C9E  A004               	btfss	LCD_sendnibble@number^0,0,c
  3291   001CA0  EF54  F00E         	goto	u1281
  3292   001CA4  EF56  F00E         	goto	u1280
  3293   001CA8                     u1281:
  3294   001CA8  EF59  F00E         	goto	l243
  3295   001CAC                     u1280:
  3296   001CAC  867A               	bsf	122,3,c	;volatile
  3297   001CAE  EF5A  F00E         	goto	l1974
  3298   001CB2                     l243:
  3299   001CB2  967A               	bcf	122,3,c	;volatile
  3300   001CB4                     l1974:
  3301                           
  3302                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  3303   001CB4  A204               	btfss	LCD_sendnibble@number^0,1,c
  3304   001CB6  EF5F  F00E         	goto	u1291
  3305   001CBA  EF61  F00E         	goto	u1290
  3306   001CBE                     u1291:
  3307   001CBE  EF64  F00E         	goto	l245
  3308   001CC2                     u1290:
  3309   001CC2  847A               	bsf	122,2,c	;volatile
  3310   001CC4  EF65  F00E         	goto	l1978
  3311   001CC8                     l245:
  3312   001CC8  947A               	bcf	122,2,c	;volatile
  3313   001CCA                     l1978:
  3314                           
  3315                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  3316   001CCA  A404               	btfss	LCD_sendnibble@number^0,2,c
  3317   001CCC  EF6A  F00E         	goto	u1301
  3318   001CD0  EF6C  F00E         	goto	u1300
  3319   001CD4                     u1301:
  3320   001CD4  EF6F  F00E         	goto	l247
  3321   001CD8                     u1300:
  3322   001CD8  867D               	bsf	125,3,c	;volatile
  3323   001CDA  EF70  F00E         	goto	l1982
  3324   001CDE                     l247:
  3325   001CDE  967D               	bcf	125,3,c	;volatile
  3326   001CE0                     l1982:
  3327                           
  3328                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  3329   001CE0  A604               	btfss	LCD_sendnibble@number^0,3,c
  3330   001CE2  EF75  F00E         	goto	u1311
  3331   001CE6  EF77  F00E         	goto	u1310
  3332   001CEA                     u1311:
  3333   001CEA  EF7A  F00E         	goto	l249
  3334   001CEE                     u1310:
  3335   001CEE  827D               	bsf	125,1,c	;volatile
  3336   001CF0  EF7B  F00E         	goto	l1986
  3337   001CF4                     l249:
  3338   001CF4  927D               	bcf	125,1,c	;volatile
  3339   001CF6                     l1986:
  3340                           
  3341                           ;LCD.c: 34:     LCD_E_TOG();
  3342   001CF6  EC11  F010         	call	_LCD_E_TOG	;wreg free
  3343   001CFA                     
  3344                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3345   001CFA  0E1A               	movlw	26
  3346   001CFC                     u1947:
  3347   001CFC  2EE8               	decfsz	wreg,f,c
  3348   001CFE  D7FE               	bra	u1947
  3349   001D00  D000               	nop2	
  3350   001D02  0012               	return		;funcret
  3351   001D04                     __end_of_LCD_sendnibble:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _LCD_E_TOG *****************
  3355 ;; Defined at:
  3356 ;;		line 9 in file "LCD.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_LCD_sendnibble
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text23
  3385   002022                     __ptext23:
  3386                           	callstack 0
  3387   002022                     _LCD_E_TOG:
  3388                           	callstack 25
  3389   002022                     
  3390                           ;LCD.c: 12:     LATCbits.LATC2=1;
  3391   002022  847B               	bsf	123,2,c	;volatile
  3392   002024                     
  3393                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3394   002024  0E0A               	movlw	10
  3395   002026                     u1957:
  3396   002026  2EE8               	decfsz	wreg,f,c
  3397   002028  D7FE               	bra	u1957
  3398   00202A  D000               	nop2	
  3399   00202C                     
  3400                           ;LCD.c: 15:     LATCbits.LATC2=0;
  3401   00202C  947B               	bcf	123,2,c	;volatile
  3402   00202E  0012               	return		;funcret
  3403   002030                     __end_of_LCD_E_TOG:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _Interrupts_init *****************
  3407 ;; Defined at:
  3408 ;;		line 11 in file "interrupts.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		None
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_initialise
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text24
  3437   001FF4                     __ptext24:
  3438                           	callstack 0
  3439   001FF4                     _Interrupts_init:
  3440                           	callstack 28
  3441   001FF4                     
  3442                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  3443   001FF4  010E               	movlb	14	; () banked
  3444   001FF6  812B               	bsf	43,0,b	;volatile
  3445                           
  3446                           ;interrupts.c: 14:     IPR2bits.C1IP = 0;
  3447   001FF8  9121               	bcf	33,0,b	;volatile
  3448                           
  3449                           ;interrupts.c: 17:     PIE2bits.C2IE = 1;
  3450   001FFA  832B               	bsf	43,1,b	;volatile
  3451                           
  3452                           ;interrupts.c: 18:     IPR2bits.C2IP = 0;
  3453   001FFC  9321               	bcf	33,1,b	;volatile
  3454                           
  3455                           ;interrupts.c: 21:     PIE2bits.C3IE = 1;
  3456   001FFE  852B               	bsf	43,2,b	;volatile
  3457                           
  3458                           ;interrupts.c: 22:     IPR2bits.C3IP = 1;
  3459   002000  8521               	bsf	33,2,b	;volatile
  3460                           
  3461                           ;interrupts.c: 26:     PIE0bits.TMR0IE = 1;
  3462   002002  8B29               	bsf	41,5,b	;volatile
  3463                           
  3464                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  3465   002004  9B1F               	bcf	31,5,b	;volatile
  3466                           
  3467                           ;interrupts.c: 30:     INTCONbits.IPEN = 1;
  3468   002006  8AF2               	bsf	242,5,c	;volatile
  3469                           
  3470                           ;interrupts.c: 33:     INTCONbits.PEIE = 1;
  3471   002008  8CF2               	bsf	242,6,c	;volatile
  3472                           
  3473                           ;interrupts.c: 36:     INTCONbits.GIE = 1;
  3474   00200A  8EF2               	bsf	242,7,c	;volatile
  3475   00200C                     
  3476                           ; BSR set to: 14
  3477   00200C  0012               	return		;funcret
  3478   00200E                     __end_of_Interrupts_init:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _Comp1_init_re *****************
  3482 ;; Defined at:
  3483 ;;		line 23 in file "comparator.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 2
  3504 ;; This function calls:
  3505 ;;		_DAC_init
  3506 ;; This function is called by:
  3507 ;;		_initialise
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text25
  3512   001F72                     __ptext25:
  3513                           	callstack 0
  3514   001F72                     _Comp1_init_re:
  3515                           	callstack 27
  3516   001F72                     
  3517                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  3518   001F72  8E86               	bsf	134,7,c	;volatile
  3519   001F74                     
  3520                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  3521   001F74  010E               	movlb	14	; () banked
  3522   001F76  51D2               	movf	210,w,b	;volatile
  3523   001F78  0BF8               	andlw	-8
  3524   001F7A  0903               	iorlw	3
  3525   001F7C  6FD2               	movwf	210,b	;volatile
  3526                           
  3527                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  3528   001F7E  51D3               	movf	211,w,b	;volatile
  3529   001F80  0BF8               	andlw	-8
  3530   001F82  0905               	iorlw	5
  3531   001F84  6FD3               	movwf	211,b	;volatile
  3532   001F86                     
  3533                           ; BSR set to: 14
  3534                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  3535   001F86  83D0               	bsf	208,1,b	;volatile
  3536   001F88                     
  3537                           ; BSR set to: 14
  3538                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  3539   001F88  89D0               	bsf	208,4,b	;volatile
  3540   001F8A                     
  3541                           ; BSR set to: 14
  3542                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  3543   001F8A  83D1               	bsf	209,1,b	;volatile
  3544   001F8C                     
  3545                           ; BSR set to: 14
  3546                           ;comparator.c: 31:     DAC_init();
  3547   001F8C  EC07  F010         	call	_DAC_init	;wreg free
  3548   001F90                     
  3549                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  3550   001F90  010E               	movlb	14	; () banked
  3551   001F92  8FD0               	bsf	208,7,b	;volatile
  3552   001F94                     
  3553                           ; BSR set to: 14
  3554   001F94  0012               	return		;funcret
  3555   001F96                     __end_of_Comp1_init_re:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function _Comp1_init_fe *****************
  3559 ;; Defined at:
  3560 ;;		line 39 in file "comparator.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 2
  3581 ;; This function calls:
  3582 ;;		_DAC_init
  3583 ;; This function is called by:
  3584 ;;		_initialise
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text26
  3589   001F96                     __ptext26:
  3590                           	callstack 0
  3591   001F96                     _Comp1_init_fe:
  3592                           	callstack 27
  3593   001F96                     
  3594                           ;comparator.c: 41:     TRISFbits.TRISF7=1;
  3595   001F96  8E86               	bsf	134,7,c	;volatile
  3596   001F98                     
  3597                           ;comparator.c: 42:     CM2NCHbits.NCH=0b011;
  3598   001F98  010E               	movlb	14	; () banked
  3599   001F9A  51CE               	movf	206,w,b	;volatile
  3600   001F9C  0BF8               	andlw	-8
  3601   001F9E  0903               	iorlw	3
  3602   001FA0  6FCE               	movwf	206,b	;volatile
  3603                           
  3604                           ;comparator.c: 43:     CM2PCHbits.PCH=0b101;
  3605   001FA2  51CF               	movf	207,w,b	;volatile
  3606   001FA4  0BF8               	andlw	-8
  3607   001FA6  0905               	iorlw	5
  3608   001FA8  6FCF               	movwf	207,b	;volatile
  3609   001FAA                     
  3610                           ; BSR set to: 14
  3611                           ;comparator.c: 44:     CM2CON0bits.HYS=1;
  3612   001FAA  83CC               	bsf	204,1,b	;volatile
  3613   001FAC                     
  3614                           ; BSR set to: 14
  3615                           ;comparator.c: 45:     CM2CON0bits.POL=1;
  3616   001FAC  89CC               	bsf	204,4,b	;volatile
  3617   001FAE                     
  3618                           ; BSR set to: 14
  3619                           ;comparator.c: 46:     CM2CON1bits.INTN=1;
  3620   001FAE  81CD               	bsf	205,0,b	;volatile
  3621   001FB0                     
  3622                           ; BSR set to: 14
  3623                           ;comparator.c: 47:     DAC_init();
  3624   001FB0  EC07  F010         	call	_DAC_init	;wreg free
  3625   001FB4                     
  3626                           ;comparator.c: 48:     CM2CON0bits.EN=1;
  3627   001FB4  010E               	movlb	14	; () banked
  3628   001FB6  8FCC               	bsf	204,7,b	;volatile
  3629   001FB8                     
  3630                           ; BSR set to: 14
  3631   001FB8  0012               	return		;funcret
  3632   001FBA                     __end_of_Comp1_init_fe:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _DAC_init *****************
  3636 ;; Defined at:
  3637 ;;		line 6 in file "comparator.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_Comp1_init_re
  3662 ;;		_Comp1_init_fe
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text27
  3667   00200E                     __ptext27:
  3668                           	callstack 0
  3669   00200E                     _DAC_init:
  3670                           	callstack 27
  3671   00200E                     
  3672                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  3673   00200E  0EF3               	movlw	-13
  3674   002010  010E               	movlb	14	; () banked
  3675   002012  17C6               	andwf	198,f,b	;volatile
  3676   002014                     
  3677                           ; BSR set to: 14
  3678                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  3679   002014  91C6               	bcf	198,0,b	;volatile
  3680                           
  3681                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  3682   002016  51C7               	movf	199,w,b	;volatile
  3683   002018  0BE0               	andlw	-32
  3684   00201A  0914               	iorlw	20
  3685   00201C  6FC7               	movwf	199,b	;volatile
  3686   00201E                     
  3687                           ; BSR set to: 14
  3688                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  3689   00201E  8FC6               	bsf	198,7,b	;volatile
  3690   002020                     
  3691                           ; BSR set to: 14
  3692   002020  0012               	return		;funcret
  3693   002022                     __end_of_DAC_init:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _hourChangeDST *****************
  3697 ;; Defined at:
  3698 ;;		line 61 in file "functions.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  day             2    3[COMRAM] unsigned int 
  3701 ;;  fwd_daylight    2    5[COMRAM] unsigned int 
  3702 ;;  bkwd_dayligh    2    7[COMRAM] unsigned int 
  3703 ;;  hour            1    9[COMRAM] PTR unsigned int 
  3704 ;;		 -> hour(2), 
  3705 ;;  backward_zon    1   10[COMRAM] PTR unsigned int 
  3706 ;;		 -> main@backward_zone(2), 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3718 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;Total ram usage:       10 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 1
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text28
  3733   0017D2                     __ptext28:
  3734                           	callstack 0
  3735   0017D2                     _hourChangeDST:
  3736                           	callstack 29
  3737   0017D2                     
  3738                           ;functions.c: 63:     if (day == fwd_daylight_savings_day && *hour == 2) {
  3739   0017D2  5006               	movf	hourChangeDST@fwd_daylight_savings_day^0,w,c
  3740   0017D4  1804               	xorwf	hourChangeDST@day^0,w,c
  3741   0017D6  E107               	bnz	u1671
  3742   0017D8  5007               	movf	(hourChangeDST@fwd_daylight_savings_day+1)^0,w,c
  3743   0017DA  1805               	xorwf	(hourChangeDST@day+1)^0,w,c
  3744   0017DC  A4D8               	btfss	status,2,c
  3745   0017DE  EFF3  F00B         	goto	u1671
  3746   0017E2  EFF5  F00B         	goto	u1670
  3747   0017E6                     u1671:
  3748   0017E6  EF0D  F00C         	goto	l2358
  3749   0017EA                     u1670:
  3750   0017EA  500A               	movf	hourChangeDST@hour^0,w,c
  3751   0017EC  6ED9               	movwf	fsr2l,c
  3752   0017EE  6ADA               	clrf	fsr2h,c
  3753   0017F0  0E02               	movlw	2
  3754   0017F2  18DE               	xorwf	postinc2,w,c
  3755   0017F4  10DE               	iorwf	postinc2,w,c
  3756   0017F6  A4D8               	btfss	status,2,c
  3757   0017F8  EF00  F00C         	goto	u1681
  3758   0017FC  EF02  F00C         	goto	u1680
  3759   001800                     u1681:
  3760   001800  EF0D  F00C         	goto	l2358
  3761   001804                     u1680:
  3762   001804                     
  3763                           ;functions.c: 64:         (*hour)++;
  3764   001804  500A               	movf	hourChangeDST@hour^0,w,c
  3765   001806  6ED9               	movwf	fsr2l,c
  3766   001808  6ADA               	clrf	fsr2h,c
  3767   00180A  2ADE               	incf	postinc2,f,c
  3768   00180C  0E00               	movlw	0
  3769   00180E  22DD               	addwfc	postdec2,f,c
  3770   001810                     
  3771                           ;functions.c: 65:         *backward_zone = 0;
  3772   001810  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3773   001812  6ED9               	movwf	fsr2l,c
  3774   001814  6ADA               	clrf	fsr2h,c
  3775   001816  6ADE               	clrf	postinc2,c
  3776   001818  6ADD               	clrf	postdec2,c
  3777   00181A                     l2358:
  3778                           
  3779                           ;functions.c: 68:     if (day == bkwd_daylight_savings_day && *hour == 2 && *backward_zo
      +                          ne == 0) {
  3780   00181A  5008               	movf	hourChangeDST@bkwd_daylight_savings_day^0,w,c
  3781   00181C  1804               	xorwf	hourChangeDST@day^0,w,c
  3782   00181E  E107               	bnz	u1691
  3783   001820  5009               	movf	(hourChangeDST@bkwd_daylight_savings_day+1)^0,w,c
  3784   001822  1805               	xorwf	(hourChangeDST@day+1)^0,w,c
  3785   001824  A4D8               	btfss	status,2,c
  3786   001826  EF17  F00C         	goto	u1691
  3787   00182A  EF19  F00C         	goto	u1690
  3788   00182E                     u1691:
  3789   00182E  EF3F  F00C         	goto	l204
  3790   001832                     u1690:
  3791   001832  500A               	movf	hourChangeDST@hour^0,w,c
  3792   001834  6ED9               	movwf	fsr2l,c
  3793   001836  6ADA               	clrf	fsr2h,c
  3794   001838  0E02               	movlw	2
  3795   00183A  18DE               	xorwf	postinc2,w,c
  3796   00183C  10DE               	iorwf	postinc2,w,c
  3797   00183E  A4D8               	btfss	status,2,c
  3798   001840  EF24  F00C         	goto	u1701
  3799   001844  EF26  F00C         	goto	u1700
  3800   001848                     u1701:
  3801   001848  EF3F  F00C         	goto	l204
  3802   00184C                     u1700:
  3803   00184C  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3804   00184E  6ED9               	movwf	fsr2l,c
  3805   001850  6ADA               	clrf	fsr2h,c
  3806   001852  50DE               	movf	postinc2,w,c
  3807   001854  10DE               	iorwf	postinc2,w,c
  3808   001856  A4D8               	btfss	status,2,c
  3809   001858  EF30  F00C         	goto	u1711
  3810   00185C  EF32  F00C         	goto	u1710
  3811   001860                     u1711:
  3812   001860  EF3F  F00C         	goto	l204
  3813   001864                     u1710:
  3814   001864                     
  3815                           ;functions.c: 69:         (*hour)--;
  3816   001864  500A               	movf	hourChangeDST@hour^0,w,c
  3817   001866  6ED9               	movwf	fsr2l,c
  3818   001868  6ADA               	clrf	fsr2h,c
  3819   00186A  06DE               	decf	postinc2,f,c
  3820   00186C  0E00               	movlw	0
  3821   00186E  5ADD               	subwfb	postdec2,f,c
  3822   001870                     
  3823                           ;functions.c: 70:         *backward_zone = 1;
  3824   001870  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3825   001872  6ED9               	movwf	fsr2l,c
  3826   001874  6ADA               	clrf	fsr2h,c
  3827   001876  0E01               	movlw	1
  3828   001878  6EDE               	movwf	postinc2,c
  3829   00187A  0E00               	movlw	0
  3830   00187C  6EDD               	movwf	postdec2,c
  3831   00187E                     l204:
  3832   00187E  0012               	return		;funcret
  3833   001880                     __end_of_hourChangeDST:
  3834                           	callstack 0
  3835                           
  3836 ;; *************** function _findDSTdates *****************
  3837 ;; Defined at:
  3838 ;;		line 77 in file "functions.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  hour            2   64[COMRAM] unsigned int 
  3841 ;;  day             2   66[COMRAM] unsigned int 
  3842 ;;  year            2   68[COMRAM] unsigned int 
  3843 ;;  fwd_daylight    1   70[COMRAM] PTR unsigned int 
  3844 ;;		 -> main@fwd_daylight_savings_day(2), 
  3845 ;;  bkwd_dayligh    1   71[COMRAM] PTR unsigned int 
  3846 ;;		 -> main@bkwd_daylight_savings_day(2), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;Total ram usage:        8 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 4
  3865 ;; This function calls:
  3866 ;;		_lastSunday
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text29
  3873   001C32                     __ptext29:
  3874                           	callstack 0
  3875   001C32                     _findDSTdates:
  3876                           	callstack 26
  3877   001C32                     
  3878                           ;functions.c: 79:     if (day==1 && hour == 0){
  3879   001C32  0443               	decf	findDSTdates@day^0,w,c
  3880   001C34  1044               	iorwf	(findDSTdates@day+1)^0,w,c
  3881   001C36  A4D8               	btfss	status,2,c
  3882   001C38  EF20  F00E         	goto	u1651
  3883   001C3C  EF22  F00E         	goto	u1650
  3884   001C40                     u1651:
  3885   001C40  EF4D  F00E         	goto	l208
  3886   001C44                     u1650:
  3887   001C44  5041               	movf	findDSTdates@hour^0,w,c
  3888   001C46  1042               	iorwf	(findDSTdates@hour+1)^0,w,c
  3889   001C48  A4D8               	btfss	status,2,c
  3890   001C4A  EF29  F00E         	goto	u1661
  3891   001C4E  EF2B  F00E         	goto	u1660
  3892   001C52                     u1661:
  3893   001C52  EF4D  F00E         	goto	l208
  3894   001C56                     u1660:
  3895   001C56                     
  3896                           ;functions.c: 80:         *fwd_daylight_savings_day = lastSunday(year, 3);
  3897   001C56  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3898   001C5A  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3899   001C5E  0E00               	movlw	0
  3900   001C60  6E1E               	movwf	(lastSunday@month+1)^0,c
  3901   001C62  0E03               	movlw	3
  3902   001C64  6E1D               	movwf	lastSunday@month^0,c
  3903   001C66  EC13  F007         	call	_lastSunday	;wreg free
  3904   001C6A  5047               	movf	findDSTdates@fwd_daylight_savings_day^0,w,c
  3905   001C6C  6ED9               	movwf	fsr2l,c
  3906   001C6E  6ADA               	clrf	fsr2h,c
  3907   001C70  C01B  FFDE         	movff	?_lastSunday,postinc2
  3908   001C74  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3909                           
  3910                           ;functions.c: 81:         *bkwd_daylight_savings_day = lastSunday(year, 10);
  3911   001C78  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3912   001C7C  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3913   001C80  0E00               	movlw	0
  3914   001C82  6E1E               	movwf	(lastSunday@month+1)^0,c
  3915   001C84  0E0A               	movlw	10
  3916   001C86  6E1D               	movwf	lastSunday@month^0,c
  3917   001C88  EC13  F007         	call	_lastSunday	;wreg free
  3918   001C8C  5048               	movf	findDSTdates@bkwd_daylight_savings_day^0,w,c
  3919   001C8E  6ED9               	movwf	fsr2l,c
  3920   001C90  6ADA               	clrf	fsr2h,c
  3921   001C92  C01B  FFDE         	movff	?_lastSunday,postinc2
  3922   001C96  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3923   001C9A                     l208:
  3924   001C9A  0012               	return		;funcret
  3925   001C9C                     __end_of_findDSTdates:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _lastSunday *****************
  3929 ;; Defined at:
  3930 ;;		line 25 in file "functions.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  year            2   26[COMRAM] unsigned int 
  3933 ;;  month           2   28[COMRAM] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  dayOfYearFor    2   52[COMRAM] unsigned int 
  3936 ;;  daysBeforeOc    2   50[COMRAM] unsigned int 
  3937 ;;  dayOfYearFor    2   48[COMRAM] unsigned int 
  3938 ;;  daysBeforeMa    2   46[COMRAM] unsigned int 
  3939 ;;  lastSundayDa    2   62[COMRAM] unsigned int 
  3940 ;;  leapYear        2   60[COMRAM] unsigned int 
  3941 ;;  dayOfWeekMon    2   44[COMRAM] unsigned int 
  3942 ;;  dayOfWeekMon    2   42[COMRAM] unsigned int 
  3943 ;;  h               2   40[COMRAM] unsigned int 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  2   26[COMRAM] unsigned int 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3954 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;Total ram usage:       38 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 3
  3960 ;; This function calls:
  3961 ;;		___lwdiv
  3962 ;;		___lwmod
  3963 ;;		___wmul
  3964 ;;		_isLeapYear
  3965 ;; This function is called by:
  3966 ;;		_findDSTdates
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text30
  3971   000E26                     __ptext30:
  3972                           	callstack 0
  3973   000E26                     _lastSunday:
  3974                           	callstack 26
  3975   000E26                     
  3976                           ;functions.c: 26:     unsigned int leapYear = isLeapYear(year);
  3977   000E26  C01B  F016         	movff	lastSunday@year,isLeapYear@year
  3978   000E2A  C01C  F017         	movff	lastSunday@year+1,isLeapYear@year+1
  3979   000E2E  EC67  F00D         	call	_isLeapYear	;wreg free
  3980   000E32  C016  F03D         	movff	?_isLeapYear,lastSunday@leapYear
  3981   000E36  C017  F03E         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  3982   000E3A                     
  3983                           ;functions.c: 30:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3984   000E3A  0E00               	movlw	0
  3985   000E3C  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3986   000E3E  0E05               	movlw	5
  3987   000E40  6E0C               	movwf	___lwdiv@divisor^0,c
  3988   000E42  0E01               	movlw	1
  3989   000E44  241D               	addwf	lastSunday@month^0,w,c
  3990   000E46  6E04               	movwf	___wmul@multiplier^0,c
  3991   000E48  0E00               	movlw	0
  3992   000E4A  201E               	addwfc	(lastSunday@month+1)^0,w,c
  3993   000E4C  6E05               	movwf	(___wmul@multiplier+1)^0,c
  3994   000E4E  0E00               	movlw	0
  3995   000E50  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  3996   000E52  0E0D               	movlw	13
  3997   000E54  6E06               	movwf	___wmul@multiplicand^0,c
  3998   000E56  ECA6  F00F         	call	___wmul	;wreg free
  3999   000E5A  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  4000   000E5E  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  4001   000E62  ECDF  F00D         	call	___lwdiv	;wreg free
  4002   000E66  C00A  F01F         	movff	?___lwdiv,??_lastSunday
  4003   000E6A  C00B  F020         	movff	?___lwdiv+1,??_lastSunday+1
  4004   000E6E  0E00               	movlw	0
  4005   000E70  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4006   000E72  0E64               	movlw	100
  4007   000E74  6E13               	movwf	___lwmod@divisor^0,c
  4008   000E76  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  4009   000E7A  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  4010   000E7E  EC82  F00E         	call	___lwmod	;wreg free
  4011   000E82  5011               	movf	?___lwmod^0,w,c
  4012   000E84  241F               	addwf	??_lastSunday^0,w,c
  4013   000E86  6E21               	movwf	(??_lastSunday+2)^0,c
  4014   000E88  5012               	movf	(?___lwmod+1)^0,w,c
  4015   000E8A  2020               	addwfc	(??_lastSunday+1)^0,w,c
  4016   000E8C  6E22               	movwf	(??_lastSunday+3)^0,c
  4017   000E8E  0E00               	movlw	0
  4018   000E90  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4019   000E92  0E64               	movlw	100
  4020   000E94  6E13               	movwf	___lwmod@divisor^0,c
  4021   000E96  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  4022   000E9A  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  4023   000E9E  EC82  F00E         	call	___lwmod	;wreg free
  4024   000EA2  90D8               	bcf	status,0,c
  4025   000EA4  3212               	rrcf	(?___lwmod+1)^0,f,c
  4026   000EA6  3211               	rrcf	?___lwmod^0,f,c
  4027   000EA8  90D8               	bcf	status,0,c
  4028   000EAA  3212               	rrcf	(?___lwmod+1)^0,f,c
  4029   000EAC  3211               	rrcf	?___lwmod^0,f,c
  4030   000EAE  5011               	movf	?___lwmod^0,w,c
  4031   000EB0  2421               	addwf	(??_lastSunday+2)^0,w,c
  4032   000EB2  6E23               	movwf	(??_lastSunday+4)^0,c
  4033   000EB4  5012               	movf	(?___lwmod+1)^0,w,c
  4034   000EB6  2022               	addwfc	(??_lastSunday+3)^0,w,c
  4035   000EB8  6E24               	movwf	(??_lastSunday+5)^0,c
  4036   000EBA  0E00               	movlw	0
  4037   000EBC  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4038   000EBE  0E64               	movlw	100
  4039   000EC0  6E0C               	movwf	___lwdiv@divisor^0,c
  4040   000EC2  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  4041   000EC6  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  4042   000ECA  ECDF  F00D         	call	___lwdiv	;wreg free
  4043   000ECE  90D8               	bcf	status,0,c
  4044   000ED0  320B               	rrcf	(?___lwdiv+1)^0,f,c
  4045   000ED2  320A               	rrcf	?___lwdiv^0,f,c
  4046   000ED4  90D8               	bcf	status,0,c
  4047   000ED6  320B               	rrcf	(?___lwdiv+1)^0,f,c
  4048   000ED8  320A               	rrcf	?___lwdiv^0,f,c
  4049   000EDA  500A               	movf	?___lwdiv^0,w,c
  4050   000EDC  2423               	addwf	(??_lastSunday+4)^0,w,c
  4051   000EDE  6E25               	movwf	(??_lastSunday+6)^0,c
  4052   000EE0  500B               	movf	(?___lwdiv+1)^0,w,c
  4053   000EE2  2024               	addwfc	(??_lastSunday+5)^0,w,c
  4054   000EE4  6E26               	movwf	(??_lastSunday+7)^0,c
  4055   000EE6  0E00               	movlw	0
  4056   000EE8  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4057   000EEA  0E64               	movlw	100
  4058   000EEC  6E0C               	movwf	___lwdiv@divisor^0,c
  4059   000EEE  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  4060   000EF2  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  4061   000EF6  ECDF  F00D         	call	___lwdiv	;wreg free
  4062   000EFA  90D8               	bcf	status,0,c
  4063   000EFC  360A               	rlcf	?___lwdiv^0,f,c
  4064   000EFE  360B               	rlcf	(?___lwdiv+1)^0,f,c
  4065   000F00  500A               	movf	?___lwdiv^0,w,c
  4066   000F02  5C25               	subwf	(??_lastSunday+6)^0,w,c
  4067   000F04  6E27               	movwf	(??_lastSunday+8)^0,c
  4068   000F06  500B               	movf	(?___lwdiv+1)^0,w,c
  4069   000F08  5826               	subwfb	(??_lastSunday+7)^0,w,c
  4070   000F0A  6E28               	movwf	(??_lastSunday+9)^0,c
  4071   000F0C  0E01               	movlw	1
  4072   000F0E  2427               	addwf	(??_lastSunday+8)^0,w,c
  4073   000F10  6E37               	movwf	_lastSunday$2254^0,c
  4074   000F12  0E00               	movlw	0
  4075   000F14  2028               	addwfc	(??_lastSunday+9)^0,w,c
  4076   000F16  6E38               	movwf	(_lastSunday$2254+1)^0,c
  4077   000F18                     
  4078                           ;functions.c: 30:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  4079   000F18  C037  F011         	movff	_lastSunday$2254,___lwmod@dividend
  4080   000F1C  C038  F012         	movff	_lastSunday$2254+1,___lwmod@dividend+1
  4081   000F20  0E00               	movlw	0
  4082   000F22  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4083   000F24  0E07               	movlw	7
  4084   000F26  6E13               	movwf	___lwmod@divisor^0,c
  4085   000F28  EC82  F00E         	call	___lwmod	;wreg free
  4086   000F2C  C011  F029         	movff	?___lwmod,lastSunday@h
  4087   000F30  C012  F02A         	movff	?___lwmod+1,lastSunday@h+1
  4088   000F34                     
  4089                           ;functions.c: 31:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  4090   000F34  0E06               	movlw	6
  4091   000F36  2429               	addwf	lastSunday@h^0,w,c
  4092   000F38  6E11               	movwf	___lwmod@dividend^0,c
  4093   000F3A  0E00               	movlw	0
  4094   000F3C  202A               	addwfc	(lastSunday@h+1)^0,w,c
  4095   000F3E  6E12               	movwf	(___lwmod@dividend+1)^0,c
  4096   000F40  0E00               	movlw	0
  4097   000F42  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4098   000F44  0E07               	movlw	7
  4099   000F46  6E13               	movwf	___lwmod@divisor^0,c
  4100   000F48  EC82  F00E         	call	___lwmod	;wreg free
  4101   000F4C  C011  F02B         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  4102   000F50  C012  F02C         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  4103   000F54                     
  4104                           ;functions.c: 34:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  4105   000F54  0E1E               	movlw	30
  4106   000F56  242B               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  4107   000F58  6E11               	movwf	___lwmod@dividend^0,c
  4108   000F5A  0E00               	movlw	0
  4109   000F5C  202C               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  4110   000F5E  6E12               	movwf	(___lwmod@dividend+1)^0,c
  4111   000F60  0E00               	movlw	0
  4112   000F62  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4113   000F64  0E07               	movlw	7
  4114   000F66  6E13               	movwf	___lwmod@divisor^0,c
  4115   000F68  EC82  F00E         	call	___lwmod	;wreg free
  4116   000F6C  C011  F02D         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  4117   000F70  C012  F02E         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  4118   000F74                     
  4119                           ;functions.c: 37:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  4120   000F74  502D               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  4121   000F76  081F               	sublw	31
  4122   000F78  6E3F               	movwf	lastSunday@lastSundayDateMonth^0,c
  4123   000F7A  502E               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  4124   000F7C  A0D8               	btfss	status,0,c
  4125   000F7E  2AE8               	incf	wreg,f,c
  4126   000F80  0800               	sublw	0
  4127   000F82  6E40               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  4128   000F84                     
  4129                           ;functions.c: 40:     if (month == 3){
  4130   000F84  0E03               	movlw	3
  4131   000F86  181D               	xorwf	lastSunday@month^0,w,c
  4132   000F88  101E               	iorwf	(lastSunday@month+1)^0,w,c
  4133   000F8A  A4D8               	btfss	status,2,c
  4134   000F8C  EFCA  F007         	goto	u1501
  4135   000F90  EFCC  F007         	goto	u1500
  4136   000F94                     u1501:
  4137   000F94  EFF1  F007         	goto	l2230
  4138   000F98                     u1500:
  4139   000F98                     
  4140                           ;functions.c: 41:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  4141   000F98  503D               	movf	lastSunday@leapYear^0,w,c
  4142   000F9A  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  4143   000F9C  A4D8               	btfss	status,2,c
  4144   000F9E  EFD3  F007         	goto	u1511
  4145   000FA2  EFD5  F007         	goto	u1510
  4146   000FA6                     u1511:
  4147   000FA6  EFDB  F007         	goto	l2220
  4148   000FAA                     u1510:
  4149   000FAA  0E00               	movlw	0
  4150   000FAC  6E3A               	movwf	(_lastSunday$1187+1)^0,c
  4151   000FAE  0E1C               	movlw	28
  4152   000FB0  6E39               	movwf	_lastSunday$1187^0,c
  4153   000FB2  EFDF  F007         	goto	l2222
  4154   000FB6                     l2220:
  4155   000FB6  0E00               	movlw	0
  4156   000FB8  6E3A               	movwf	(_lastSunday$1187+1)^0,c
  4157   000FBA  0E1D               	movlw	29
  4158   000FBC  6E39               	movwf	_lastSunday$1187^0,c
  4159   000FBE                     l2222:
  4160   000FBE  0E1F               	movlw	31
  4161   000FC0  2439               	addwf	_lastSunday$1187^0,w,c
  4162   000FC2  6E2F               	movwf	lastSunday@daysBeforeMarch^0,c
  4163   000FC4  0E00               	movlw	0
  4164   000FC6  203A               	addwfc	(_lastSunday$1187+1)^0,w,c
  4165   000FC8  6E30               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  4166   000FCA                     
  4167                           ;functions.c: 42:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  4168   000FCA  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  4169   000FCC  242F               	addwf	lastSunday@daysBeforeMarch^0,w,c
  4170   000FCE  6E31               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  4171   000FD0  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  4172   000FD2  2030               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  4173   000FD4  6E32               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  4174   000FD6                     
  4175                           ;functions.c: 43:     return dayOfYearForDSTStart;
  4176   000FD6  C031  F01B         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  4177   000FDA  C032  F01C         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  4178   000FDE  EF1E  F008         	goto	l194
  4179   000FE2                     l2230:
  4180                           
  4181                           ;functions.c: 48:     if (month == 10){
  4182   000FE2  0E0A               	movlw	10
  4183   000FE4  181D               	xorwf	lastSunday@month^0,w,c
  4184   000FE6  101E               	iorwf	(lastSunday@month+1)^0,w,c
  4185   000FE8  A4D8               	btfss	status,2,c
  4186   000FEA  EFF9  F007         	goto	u1521
  4187   000FEE  EFFB  F007         	goto	u1520
  4188   000FF2                     u1521:
  4189   000FF2  EF1E  F008         	goto	l194
  4190   000FF6                     u1520:
  4191   000FF6                     
  4192                           ;functions.c: 49:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  4193   000FF6  503D               	movf	lastSunday@leapYear^0,w,c
  4194   000FF8  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  4195   000FFA  A4D8               	btfss	status,2,c
  4196   000FFC  EF02  F008         	goto	u1531
  4197   001000  EF04  F008         	goto	u1530
  4198   001004                     u1531:
  4199   001004  EF0A  F008         	goto	l2236
  4200   001008                     u1530:
  4201   001008  0E00               	movlw	0
  4202   00100A  6E3C               	movwf	(_lastSunday$1190+1)^0,c
  4203   00100C  0E1C               	movlw	28
  4204   00100E  6E3B               	movwf	_lastSunday$1190^0,c
  4205   001010  EF0E  F008         	goto	l2238
  4206   001014                     l2236:
  4207   001014  0E00               	movlw	0
  4208   001016  6E3C               	movwf	(_lastSunday$1190+1)^0,c
  4209   001018  0E1D               	movlw	29
  4210   00101A  6E3B               	movwf	_lastSunday$1190^0,c
  4211   00101C                     l2238:
  4212   00101C  0EF5               	movlw	245
  4213   00101E  243B               	addwf	_lastSunday$1190^0,w,c
  4214   001020  6E33               	movwf	lastSunday@daysBeforeOctober^0,c
  4215   001022  0E00               	movlw	0
  4216   001024  203C               	addwfc	(_lastSunday$1190+1)^0,w,c
  4217   001026  6E34               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  4218   001028                     
  4219                           ;functions.c: 51:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  4220   001028  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  4221   00102A  2433               	addwf	lastSunday@daysBeforeOctober^0,w,c
  4222   00102C  6E35               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  4223   00102E  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  4224   001030  2034               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  4225   001032  6E36               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  4226   001034                     
  4227                           ;functions.c: 53:     return dayOfYearForDSTEnd;
  4228   001034  C035  F01B         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  4229   001038  C036  F01C         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  4230   00103C                     l194:
  4231   00103C  0012               	return		;funcret
  4232   00103E                     __end_of_lastSunday:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _isLeapYear *****************
  4236 ;; Defined at:
  4237 ;;		line 17 in file "functions.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  year            2   21[COMRAM] unsigned int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2   21[COMRAM] unsigned int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;Total ram usage:        5 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 2
  4258 ;; This function calls:
  4259 ;;		___lwmod
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;;		_lastSunday
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text31
  4267   001ACE                     __ptext31:
  4268                           	callstack 0
  4269   001ACE                     _isLeapYear:
  4270                           	callstack 28
  4271   001ACE                     
  4272                           ;functions.c: 18:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  4273   001ACE  0E01               	movlw	1
  4274   001AD0  6E1A               	movwf	_isLeapYear$1177^0,c
  4275   001AD2  0E03               	movlw	3
  4276   001AD4  1416               	andwf	isLeapYear@year^0,w,c
  4277   001AD6  6E18               	movwf	??_isLeapYear^0,c
  4278   001AD8  0E00               	movlw	0
  4279   001ADA  1417               	andwf	(isLeapYear@year+1)^0,w,c
  4280   001ADC  6E19               	movwf	(??_isLeapYear+1)^0,c
  4281   001ADE  5018               	movf	??_isLeapYear^0,w,c
  4282   001AE0  1019               	iorwf	(??_isLeapYear+1)^0,w,c
  4283   001AE2  A4D8               	btfss	status,2,c
  4284   001AE4  EF76  F00D         	goto	u1401
  4285   001AE8  EF78  F00D         	goto	u1400
  4286   001AEC                     u1401:
  4287   001AEC  EF8B  F00D         	goto	l2068
  4288   001AF0                     u1400:
  4289   001AF0  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4290   001AF4  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4291   001AF8  0E00               	movlw	0
  4292   001AFA  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4293   001AFC  0E64               	movlw	100
  4294   001AFE  6E13               	movwf	___lwmod@divisor^0,c
  4295   001B00  EC82  F00E         	call	___lwmod	;wreg free
  4296   001B04  5011               	movf	?___lwmod^0,w,c
  4297   001B06  1012               	iorwf	(?___lwmod+1)^0,w,c
  4298   001B08  A4D8               	btfss	status,2,c
  4299   001B0A  EF89  F00D         	goto	u1411
  4300   001B0E  EF8B  F00D         	goto	u1410
  4301   001B12                     u1411:
  4302   001B12  EFA0  F00D         	goto	l2072
  4303   001B16                     u1410:
  4304   001B16                     l2068:
  4305   001B16  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4306   001B1A  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4307   001B1E  0E01               	movlw	1
  4308   001B20  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4309   001B22  0E90               	movlw	144
  4310   001B24  6E13               	movwf	___lwmod@divisor^0,c
  4311   001B26  EC82  F00E         	call	___lwmod	;wreg free
  4312   001B2A  5011               	movf	?___lwmod^0,w,c
  4313   001B2C  1012               	iorwf	(?___lwmod+1)^0,w,c
  4314   001B2E  B4D8               	btfsc	status,2,c
  4315   001B30  EF9C  F00D         	goto	u1421
  4316   001B34  EF9E  F00D         	goto	u1420
  4317   001B38                     u1421:
  4318   001B38  EFA0  F00D         	goto	l2072
  4319   001B3C                     u1420:
  4320   001B3C  0E00               	movlw	0
  4321   001B3E  6E1A               	movwf	_isLeapYear$1177^0,c
  4322   001B40                     l2072:
  4323   001B40  C01A  F016         	movff	_isLeapYear$1177,?_isLeapYear
  4324   001B44  6A17               	clrf	(?_isLeapYear+1)^0,c
  4325   001B46  0012               	return		;funcret
  4326   001B48                     __end_of_isLeapYear:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function ___lwmod *****************
  4330 ;; Defined at:
  4331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  dividend        2   16[COMRAM] unsigned int 
  4334 ;;  divisor         2   18[COMRAM] unsigned int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  counter         1   20[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2   16[COMRAM] unsigned int 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;Total ram usage:        5 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 1
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_isLeapYear
  4357 ;;		_lastSunday
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text32
  4362   001D04                     __ptext32:
  4363                           	callstack 0
  4364   001D04                     ___lwmod:
  4365                           	callstack 28
  4366   001D04  5013               	movf	___lwmod@divisor^0,w,c
  4367   001D06  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  4368   001D08  B4D8               	btfsc	status,2,c
  4369   001D0A  EF89  F00E         	goto	u1321
  4370   001D0E  EF8B  F00E         	goto	u1320
  4371   001D12                     u1321:
  4372   001D12  EFAF  F00E         	goto	l779
  4373   001D16                     u1320:
  4374   001D16  0E01               	movlw	1
  4375   001D18  6E15               	movwf	___lwmod@counter^0,c
  4376   001D1A  EF93  F00E         	goto	l1996
  4377   001D1E                     l1994:
  4378   001D1E  90D8               	bcf	status,0,c
  4379   001D20  3613               	rlcf	___lwmod@divisor^0,f,c
  4380   001D22  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  4381   001D24  2A15               	incf	___lwmod@counter^0,f,c
  4382   001D26                     l1996:
  4383   001D26  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  4384   001D28  EF98  F00E         	goto	u1331
  4385   001D2C  EF9A  F00E         	goto	u1330
  4386   001D30                     u1331:
  4387   001D30  EF8F  F00E         	goto	l1994
  4388   001D34                     u1330:
  4389   001D34                     l1998:
  4390   001D34  5013               	movf	___lwmod@divisor^0,w,c
  4391   001D36  5C11               	subwf	___lwmod@dividend^0,w,c
  4392   001D38  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4393   001D3A  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  4394   001D3C  A0D8               	btfss	status,0,c
  4395   001D3E  EFA3  F00E         	goto	u1341
  4396   001D42  EFA5  F00E         	goto	u1340
  4397   001D46                     u1341:
  4398   001D46  EFA9  F00E         	goto	l2002
  4399   001D4A                     u1340:
  4400   001D4A  5013               	movf	___lwmod@divisor^0,w,c
  4401   001D4C  5E11               	subwf	___lwmod@dividend^0,f,c
  4402   001D4E  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4403   001D50  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  4404   001D52                     l2002:
  4405   001D52  90D8               	bcf	status,0,c
  4406   001D54  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  4407   001D56  3213               	rrcf	___lwmod@divisor^0,f,c
  4408   001D58  2E15               	decfsz	___lwmod@counter^0,f,c
  4409   001D5A  EF9A  F00E         	goto	l1998
  4410   001D5E                     l779:
  4411   001D5E  C011  F011         	movff	___lwmod@dividend,?___lwmod
  4412   001D62  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  4413   001D66  0012               	return		;funcret
  4414   001D68                     __end_of___lwmod:
  4415                           	callstack 0
  4416                           
  4417 ;; *************** function ___wmul *****************
  4418 ;; Defined at:
  4419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  multiplier      2    3[COMRAM] unsigned int 
  4422 ;;  multiplicand    2    5[COMRAM] unsigned int 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  product         2    7[COMRAM] unsigned int 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  2    3[COMRAM] unsigned int 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, prodl, prodh
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4437 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;Total ram usage:        6 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_lastSunday
  4445 ;;		_read_prec_or_width
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text33
  4450   001F4C                     __ptext33:
  4451                           	callstack 0
  4452   001F4C                     ___wmul:
  4453                           	callstack 24
  4454   001F4C  5004               	movf	___wmul@multiplier^0,w,c
  4455   001F4E  0206               	mulwf	___wmul@multiplicand^0,c
  4456   001F50  CFF3 F008          	movff	prodl,___wmul@product
  4457   001F54  CFF4 F009          	movff	prodh,___wmul@product+1
  4458   001F58  5004               	movf	___wmul@multiplier^0,w,c
  4459   001F5A  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  4460   001F5C  50F3               	movf	243,w,c
  4461   001F5E  2609               	addwf	(___wmul@product+1)^0,f,c
  4462   001F60  5005               	movf	(___wmul@multiplier+1)^0,w,c
  4463   001F62  0206               	mulwf	___wmul@multiplicand^0,c
  4464   001F64  50F3               	movf	243,w,c
  4465   001F66  2609               	addwf	(___wmul@product+1)^0,f,c
  4466   001F68  C008  F004         	movff	___wmul@product,?___wmul
  4467   001F6C  C009  F005         	movff	___wmul@product+1,?___wmul+1
  4468   001F70  0012               	return		;funcret
  4469   001F72                     __end_of___wmul:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function ___lwdiv *****************
  4473 ;; Defined at:
  4474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  dividend        2    9[COMRAM] unsigned int 
  4477 ;;  divisor         2   11[COMRAM] unsigned int 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  quotient        2   13[COMRAM] unsigned int 
  4480 ;;  counter         1   15[COMRAM] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  2    9[COMRAM] unsigned int 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;Total ram usage:        7 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 1
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_lastSunday
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text34
  4505   001BBE                     __ptext34:
  4506                           	callstack 0
  4507   001BBE                     ___lwdiv:
  4508                           	callstack 27
  4509   001BBE  0E00               	movlw	0
  4510   001BC0  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  4511   001BC2  0E00               	movlw	0
  4512   001BC4  6E0E               	movwf	___lwdiv@quotient^0,c
  4513   001BC6  500C               	movf	___lwdiv@divisor^0,w,c
  4514   001BC8  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4515   001BCA  B4D8               	btfsc	status,2,c
  4516   001BCC  EFEA  F00D         	goto	u1441
  4517   001BD0  EFEC  F00D         	goto	u1440
  4518   001BD4                     u1441:
  4519   001BD4  EF14  F00E         	goto	l769
  4520   001BD8                     u1440:
  4521   001BD8  0E01               	movlw	1
  4522   001BDA  6E10               	movwf	___lwdiv@counter^0,c
  4523   001BDC  EFF4  F00D         	goto	l2102
  4524   001BE0                     l2100:
  4525   001BE0  90D8               	bcf	status,0,c
  4526   001BE2  360C               	rlcf	___lwdiv@divisor^0,f,c
  4527   001BE4  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4528   001BE6  2A10               	incf	___lwdiv@counter^0,f,c
  4529   001BE8                     l2102:
  4530   001BE8  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  4531   001BEA  EFF9  F00D         	goto	u1451
  4532   001BEE  EFFB  F00D         	goto	u1450
  4533   001BF2                     u1451:
  4534   001BF2  EFF0  F00D         	goto	l2100
  4535   001BF6                     u1450:
  4536   001BF6                     l2104:
  4537   001BF6  90D8               	bcf	status,0,c
  4538   001BF8  360E               	rlcf	___lwdiv@quotient^0,f,c
  4539   001BFA  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4540   001BFC  500C               	movf	___lwdiv@divisor^0,w,c
  4541   001BFE  5C0A               	subwf	___lwdiv@dividend^0,w,c
  4542   001C00  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  4543   001C02  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4544   001C04  A0D8               	btfss	status,0,c
  4545   001C06  EF07  F00E         	goto	u1461
  4546   001C0A  EF09  F00E         	goto	u1460
  4547   001C0E                     u1461:
  4548   001C0E  EF0E  F00E         	goto	l2112
  4549   001C12                     u1460:
  4550   001C12  500C               	movf	___lwdiv@divisor^0,w,c
  4551   001C14  5E0A               	subwf	___lwdiv@dividend^0,f,c
  4552   001C16  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  4553   001C18  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4554   001C1A  800E               	bsf	___lwdiv@quotient^0,0,c
  4555   001C1C                     l2112:
  4556   001C1C  90D8               	bcf	status,0,c
  4557   001C1E  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4558   001C20  320C               	rrcf	___lwdiv@divisor^0,f,c
  4559   001C22  2E10               	decfsz	___lwdiv@counter^0,f,c
  4560   001C24  EFFB  F00D         	goto	l2104
  4561   001C28                     l769:
  4562   001C28  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  4563   001C2C  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4564   001C30  0012               	return		;funcret
  4565   001C32                     __end_of___lwdiv:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function _changeHourDayYear *****************
  4569 ;; Defined at:
  4570 ;;		line 90 in file "functions.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  hour            1    3[COMRAM] PTR unsigned int 
  4573 ;;		 -> hour(2), 
  4574 ;;  day             1    4[COMRAM] PTR unsigned int 
  4575 ;;		 -> main@day(2), 
  4576 ;;  year            1    5[COMRAM] PTR unsigned int 
  4577 ;;		 -> main@year(2), 
  4578 ;;  leap            2    6[COMRAM] unsigned int 
  4579 ;;  synced          1    8[COMRAM] PTR unsigned int 
  4580 ;;		 -> main@synced(2), 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;Total ram usage:        8 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_main
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text35
  4607   00141C                     __ptext35:
  4608                           	callstack 0
  4609   00141C                     _changeHourDayYear:
  4610                           	callstack 29
  4611   00141C                     
  4612                           ;functions.c: 92:     if (*hour == 24) {
  4613   00141C  5004               	movf	changeHourDayYear@hour^0,w,c
  4614   00141E  6ED9               	movwf	fsr2l,c
  4615   001420  6ADA               	clrf	fsr2h,c
  4616   001422  0E18               	movlw	24
  4617   001424  18DE               	xorwf	postinc2,w,c
  4618   001426  10DE               	iorwf	postinc2,w,c
  4619   001428  A4D8               	btfss	status,2,c
  4620   00142A  EF19  F00A         	goto	u1721
  4621   00142E  EF1B  F00A         	goto	u1720
  4622   001432                     u1721:
  4623   001432  EF26  F00A         	goto	l2374
  4624   001436                     u1720:
  4625   001436                     
  4626                           ;functions.c: 93:        *hour = 0;
  4627   001436  5004               	movf	changeHourDayYear@hour^0,w,c
  4628   001438  6ED9               	movwf	fsr2l,c
  4629   00143A  6ADA               	clrf	fsr2h,c
  4630   00143C  6ADE               	clrf	postinc2,c
  4631   00143E  6ADD               	clrf	postdec2,c
  4632   001440                     
  4633                           ;functions.c: 94:        (*day)++;
  4634   001440  5005               	movf	changeHourDayYear@day^0,w,c
  4635   001442  6ED9               	movwf	fsr2l,c
  4636   001444  6ADA               	clrf	fsr2h,c
  4637   001446  2ADE               	incf	postinc2,f,c
  4638   001448  0E00               	movlw	0
  4639   00144A  22DD               	addwfc	postdec2,f,c
  4640   00144C                     l2374:
  4641                           
  4642                           ;functions.c: 98:     if (leap == 0 && *day > 365) {
  4643   00144C  5007               	movf	changeHourDayYear@leap^0,w,c
  4644   00144E  1008               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4645   001450  A4D8               	btfss	status,2,c
  4646   001452  EF2D  F00A         	goto	u1731
  4647   001456  EF2F  F00A         	goto	u1730
  4648   00145A                     u1731:
  4649   00145A  EF4F  F00A         	goto	l2384
  4650   00145E                     u1730:
  4651   00145E  5005               	movf	changeHourDayYear@day^0,w,c
  4652   001460  6ED9               	movwf	fsr2l,c
  4653   001462  6ADA               	clrf	fsr2h,c
  4654   001464  0E6E               	movlw	110
  4655   001466  5CDE               	subwf	postinc2,w,c
  4656   001468  0E01               	movlw	1
  4657   00146A  58DE               	subwfb	postinc2,w,c
  4658   00146C  A0D8               	btfss	status,0,c
  4659   00146E  EF3B  F00A         	goto	u1741
  4660   001472  EF3D  F00A         	goto	u1740
  4661   001476                     u1741:
  4662   001476  EF4F  F00A         	goto	l2384
  4663   00147A                     u1740:
  4664   00147A                     
  4665                           ;functions.c: 99:         *day = 1;
  4666   00147A  5005               	movf	changeHourDayYear@day^0,w,c
  4667   00147C  6ED9               	movwf	fsr2l,c
  4668   00147E  6ADA               	clrf	fsr2h,c
  4669   001480  0E01               	movlw	1
  4670   001482  6EDE               	movwf	postinc2,c
  4671   001484  0E00               	movlw	0
  4672   001486  6EDD               	movwf	postdec2,c
  4673   001488                     
  4674                           ;functions.c: 100:         (*year)++;
  4675   001488  5006               	movf	changeHourDayYear@year^0,w,c
  4676   00148A  6ED9               	movwf	fsr2l,c
  4677   00148C  6ADA               	clrf	fsr2h,c
  4678   00148E  2ADE               	incf	postinc2,f,c
  4679   001490  0E00               	movlw	0
  4680   001492  22DD               	addwfc	postdec2,f,c
  4681   001494                     
  4682                           ;functions.c: 101:         *synced = 0;
  4683   001494  5009               	movf	changeHourDayYear@synced^0,w,c
  4684   001496  6ED9               	movwf	fsr2l,c
  4685   001498  6ADA               	clrf	fsr2h,c
  4686   00149A  6ADE               	clrf	postinc2,c
  4687   00149C  6ADD               	clrf	postdec2,c
  4688   00149E                     l2384:
  4689                           
  4690                           ;functions.c: 105:     if (leap == 1 && *day > 366) {
  4691   00149E  0407               	decf	changeHourDayYear@leap^0,w,c
  4692   0014A0  1008               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4693   0014A2  A4D8               	btfss	status,2,c
  4694   0014A4  EF56  F00A         	goto	u1751
  4695   0014A8  EF58  F00A         	goto	u1750
  4696   0014AC                     u1751:
  4697   0014AC  EF73  F00A         	goto	l214
  4698   0014B0                     u1750:
  4699   0014B0  5005               	movf	changeHourDayYear@day^0,w,c
  4700   0014B2  6ED9               	movwf	fsr2l,c
  4701   0014B4  6ADA               	clrf	fsr2h,c
  4702   0014B6  0E6F               	movlw	111
  4703   0014B8  5CDE               	subwf	postinc2,w,c
  4704   0014BA  0E01               	movlw	1
  4705   0014BC  58DE               	subwfb	postinc2,w,c
  4706   0014BE  A0D8               	btfss	status,0,c
  4707   0014C0  EF64  F00A         	goto	u1761
  4708   0014C4  EF66  F00A         	goto	u1760
  4709   0014C8                     u1761:
  4710   0014C8  EF73  F00A         	goto	l214
  4711   0014CC                     u1760:
  4712   0014CC                     
  4713                           ;functions.c: 106:         *day = 1;
  4714   0014CC  5005               	movf	changeHourDayYear@day^0,w,c
  4715   0014CE  6ED9               	movwf	fsr2l,c
  4716   0014D0  6ADA               	clrf	fsr2h,c
  4717   0014D2  0E01               	movlw	1
  4718   0014D4  6EDE               	movwf	postinc2,c
  4719   0014D6  0E00               	movlw	0
  4720   0014D8  6EDD               	movwf	postdec2,c
  4721   0014DA                     
  4722                           ;functions.c: 107:         (*year)++;
  4723   0014DA  5006               	movf	changeHourDayYear@year^0,w,c
  4724   0014DC  6ED9               	movwf	fsr2l,c
  4725   0014DE  6ADA               	clrf	fsr2h,c
  4726   0014E0  2ADE               	incf	postinc2,f,c
  4727   0014E2  0E00               	movlw	0
  4728   0014E4  22DD               	addwfc	postdec2,f,c
  4729   0014E6                     l214:
  4730   0014E6  0012               	return		;funcret
  4731   0014E8                     __end_of_changeHourDayYear:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _LEDarray_disp_bin *****************
  4735 ;; Defined at:
  4736 ;;		line 33 in file "LEDarray.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  number          2    3[COMRAM] unsigned int 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		None
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;Total ram usage:        2 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text36
  4765   0014E8                     __ptext36:
  4766                           	callstack 0
  4767   0014E8                     _LEDarray_disp_bin:
  4768                           	callstack 29
  4769   0014E8                     
  4770                           ;LEDarray.c: 33: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 34: {;LEDarray.
      +                          c: 36:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  4771   0014E8  A004               	btfss	LEDarray_disp_bin@number^0,0,c
  4772   0014EA  EF79  F00A         	goto	u1551
  4773   0014EE  EF7B  F00A         	goto	u1550
  4774   0014F2                     u1551:
  4775   0014F2  EF7E  F00A         	goto	l81
  4776   0014F6                     u1550:
  4777   0014F6  807F               	bsf	127,0,c	;volatile
  4778   0014F8  EF7F  F00A         	goto	l82
  4779   0014FC                     l81:
  4780   0014FC  907F               	bcf	127,0,c	;volatile
  4781   0014FE                     l82:
  4782                           
  4783                           ;LEDarray.c: 37:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  4784   0014FE  A204               	btfss	LEDarray_disp_bin@number^0,1,c
  4785   001500  EF84  F00A         	goto	u1561
  4786   001504  EF86  F00A         	goto	u1560
  4787   001508                     u1561:
  4788   001508  EF89  F00A         	goto	l83
  4789   00150C                     u1560:
  4790   00150C  827F               	bsf	127,1,c	;volatile
  4791   00150E  EF8A  F00A         	goto	l84
  4792   001512                     l83:
  4793   001512  927F               	bcf	127,1,c	;volatile
  4794   001514                     l84:
  4795                           
  4796                           ;LEDarray.c: 38:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  4797   001514  A404               	btfss	LEDarray_disp_bin@number^0,2,c
  4798   001516  EF8F  F00A         	goto	u1571
  4799   00151A  EF91  F00A         	goto	u1570
  4800   00151E                     u1571:
  4801   00151E  EF94  F00A         	goto	l85
  4802   001522                     u1570:
  4803   001522  8479               	bsf	121,2,c	;volatile
  4804   001524  EF95  F00A         	goto	l86
  4805   001528                     l85:
  4806   001528  9479               	bcf	121,2,c	;volatile
  4807   00152A                     l86:
  4808                           
  4809                           ;LEDarray.c: 39:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  4810   00152A  A604               	btfss	LEDarray_disp_bin@number^0,3,c
  4811   00152C  EF9A  F00A         	goto	u1581
  4812   001530  EF9C  F00A         	goto	u1580
  4813   001534                     u1581:
  4814   001534  EF9F  F00A         	goto	l87
  4815   001538                     u1580:
  4816   001538  8C7E               	bsf	126,6,c	;volatile
  4817   00153A  EFA0  F00A         	goto	l88
  4818   00153E                     l87:
  4819   00153E  9C7E               	bcf	126,6,c	;volatile
  4820   001540                     l88:
  4821                           
  4822                           ;LEDarray.c: 40:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  4823   001540  A804               	btfss	LEDarray_disp_bin@number^0,4,c
  4824   001542  EFA5  F00A         	goto	u1591
  4825   001546  EFA7  F00A         	goto	u1590
  4826   00154A                     u1591:
  4827   00154A  EFAA  F00A         	goto	l89
  4828   00154E                     u1590:
  4829   00154E  8879               	bsf	121,4,c	;volatile
  4830   001550  EFAB  F00A         	goto	l90
  4831   001554                     l89:
  4832   001554  9879               	bcf	121,4,c	;volatile
  4833   001556                     l90:
  4834                           
  4835                           ;LEDarray.c: 41:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  4836   001556  AA04               	btfss	LEDarray_disp_bin@number^0,5,c
  4837   001558  EFB0  F00A         	goto	u1601
  4838   00155C  EFB2  F00A         	goto	u1600
  4839   001560                     u1601:
  4840   001560  EFB5  F00A         	goto	l91
  4841   001564                     u1600:
  4842   001564  8A79               	bsf	121,5,c	;volatile
  4843   001566  EFB6  F00A         	goto	l92
  4844   00156A                     l91:
  4845   00156A  9A79               	bcf	121,5,c	;volatile
  4846   00156C                     l92:
  4847                           
  4848                           ;LEDarray.c: 42:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  4849   00156C  AC04               	btfss	LEDarray_disp_bin@number^0,6,c
  4850   00156E  EFBB  F00A         	goto	u1611
  4851   001572  EFBD  F00A         	goto	u1610
  4852   001576                     u1611:
  4853   001576  EFC0  F00A         	goto	l93
  4854   00157A                     u1610:
  4855   00157A  807E               	bsf	126,0,c	;volatile
  4856   00157C  EFC1  F00A         	goto	l94
  4857   001580                     l93:
  4858   001580  907E               	bcf	126,0,c	;volatile
  4859   001582                     l94:
  4860                           
  4861                           ;LEDarray.c: 43:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  4862   001582  AE04               	btfss	LEDarray_disp_bin@number^0,7,c
  4863   001584  EFC6  F00A         	goto	u1621
  4864   001588  EFC8  F00A         	goto	u1620
  4865   00158C                     u1621:
  4866   00158C  EFCB  F00A         	goto	l95
  4867   001590                     u1620:
  4868   001590  807A               	bsf	122,0,c	;volatile
  4869   001592  EFCC  F00A         	goto	l96
  4870   001596                     l95:
  4871   001596  907A               	bcf	122,0,c	;volatile
  4872   001598                     l96:
  4873                           
  4874                           ;LEDarray.c: 44:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  4875   001598  A005               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4876   00159A  EFD1  F00A         	goto	u1631
  4877   00159E  EFD3  F00A         	goto	u1630
  4878   0015A2                     u1631:
  4879   0015A2  EFD6  F00A         	goto	l97
  4880   0015A6                     u1630:
  4881   0015A6  827A               	bsf	122,1,c	;volatile
  4882   0015A8  EFD7  F00A         	goto	l99
  4883   0015AC                     l97:
  4884   0015AC  927A               	bcf	122,1,c	;volatile
  4885   0015AE                     l99:
  4886   0015AE  0012               	return		;funcret
  4887   0015B0                     __end_of_LEDarray_disp_bin:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _LowISR *****************
  4891 ;; Defined at:
  4892 ;;		line 48 in file "interrupts.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;Total ram usage:        3 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		Interrupt level 1
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	intcodelo
  4920   000018                     __pintcodelo:
  4921                           	callstack 0
  4922   000018                     _LowISR:
  4923                           	callstack 21
  4924                           
  4925                           ;incstack = 0
  4926   000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4927   00001A  CFD8 F001          	movff	status,??_LowISR
  4928   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  4929   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  4930   000026                     
  4931                           ;interrupts.c: 51:     if (PIR0bits.TMR0IF == 1) {
  4932   000026  010E               	movlb	14	; () banked
  4933   000028  AB33               	btfss	51,5,b	;volatile
  4934   00002A  EF19  F000         	goto	i1u181_21
  4935   00002E  EF1B  F000         	goto	i1u181_20
  4936   000032                     i1u181_21:
  4937   000032  EF44  F000         	goto	i1l129
  4938   000036                     i1u181_20:
  4939   000036                     
  4940                           ; BSR set to: 14
  4941                           ;interrupts.c: 54:      hour++;
  4942   000036  0100               	movlb	0	; () banked
  4943   000038  4BAE               	infsnz	_hour& (0+255),f,b
  4944   00003A  2BAF               	incf	(_hour+1)& (0+255),f,b
  4945   00003C                     
  4946                           ; BSR set to: 0
  4947                           ;interrupts.c: 55:      TMR0H=00001011;
  4948   00003C  0E09               	movlw	9
  4949   00003E  6ED4               	movwf	212,c	;volatile
  4950   000040                     
  4951                           ; BSR set to: 0
  4952                           ;interrupts.c: 56:      TMR0L=110011011;
  4953   000040  0E83               	movlw	131
  4954   000042  6ED3               	movwf	211,c	;volatile
  4955   000044                     
  4956                           ; BSR set to: 0
  4957                           ;interrupts.c: 57:      if (hour >= 1 && hour < 5){
  4958   000044  51AE               	movf	_hour& (0+255),w,b
  4959   000046  11AF               	iorwf	(_hour+1)& (0+255),w,b
  4960   000048  B4D8               	btfsc	status,2,c
  4961   00004A  EF29  F000         	goto	i1u182_21
  4962   00004E  EF2B  F000         	goto	i1u182_20
  4963   000052                     i1u182_21:
  4964   000052  EF37  F000         	goto	i1l2436
  4965   000056                     i1u182_20:
  4966   000056                     
  4967                           ; BSR set to: 0
  4968   000056  51AF               	movf	(_hour+1)& (0+255),w,b
  4969   000058  E107               	bnz	i1u183_21
  4970   00005A  0E05               	movlw	5
  4971   00005C  5DAE               	subwf	_hour& (0+255),w,b
  4972   00005E  B0D8               	btfsc	status,0,c
  4973   000060  EF34  F000         	goto	i1u183_21
  4974   000064  EF36  F000         	goto	i1u183_20
  4975   000068                     i1u183_21:
  4976   000068  EF37  F000         	goto	i1l2436
  4977   00006C                     i1u183_20:
  4978   00006C                     
  4979                           ; BSR set to: 0
  4980                           ;interrupts.c: 58:          LATHbits.LATH3 = 0;
  4981   00006C  9680               	bcf	128,3,c	;volatile
  4982   00006E                     i1l2436:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;interrupts.c: 60:      if (hour == 6){
  4986   00006E  0E06               	movlw	6
  4987   000070  19AE               	xorwf	_hour& (0+255),w,b
  4988   000072  11AF               	iorwf	(_hour+1)& (0+255),w,b
  4989   000074  A4D8               	btfss	status,2,c
  4990   000076  EF3F  F000         	goto	i1u184_21
  4991   00007A  EF41  F000         	goto	i1u184_20
  4992   00007E                     i1u184_21:
  4993   00007E  EF42  F000         	goto	i1l131
  4994   000082                     i1u184_20:
  4995   000082                     
  4996                           ; BSR set to: 0
  4997                           ;interrupts.c: 61:          LATHbits.LATH3 = 1;
  4998   000082  8680               	bsf	128,3,c	;volatile
  4999   000084                     i1l131:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;interrupts.c: 64:      PIR0bits.TMR0IF = 0;
  5003   000084  010E               	movlb	14	; () banked
  5004   000086  9B33               	bcf	51,5,b	;volatile
  5005   000088                     i1l129:
  5006                           
  5007                           ; BSR set to: 14
  5008                           ;interrupts.c: 68:     if (PIR2bits.C1IF == 1) {
  5009   000088  A135               	btfss	53,0,b	;volatile
  5010   00008A  EF49  F000         	goto	i1u185_21
  5011   00008E  EF4B  F000         	goto	i1u185_20
  5012   000092                     i1u185_21:
  5013   000092  EF4D  F000         	goto	i1l132
  5014   000096                     i1u185_20:
  5015   000096                     
  5016                           ; BSR set to: 14
  5017                           ;interrupts.c: 70:         LATHbits.LATH3 = 1;
  5018   000096  8680               	bsf	128,3,c	;volatile
  5019                           
  5020                           ;interrupts.c: 72:         PIR2bits.C1IF = 0;
  5021   000098  9135               	bcf	53,0,b	;volatile
  5022   00009A                     i1l132:
  5023                           
  5024                           ; BSR set to: 14
  5025                           ;interrupts.c: 75:     if (PIR2bits.C2IF == 1) {
  5026   00009A  A335               	btfss	53,1,b	;volatile
  5027   00009C  EF52  F000         	goto	i1u186_21
  5028   0000A0  EF54  F000         	goto	i1u186_20
  5029   0000A4                     i1u186_21:
  5030   0000A4  EF56  F000         	goto	i1l134
  5031   0000A8                     i1u186_20:
  5032   0000A8                     
  5033                           ; BSR set to: 14
  5034                           ;interrupts.c: 76:             LATHbits.LATH3 = 0;
  5035   0000A8  9680               	bcf	128,3,c	;volatile
  5036                           
  5037                           ;interrupts.c: 77:             PIR2bits.C2IF = 0;
  5038   0000AA  9335               	bcf	53,1,b	;volatile
  5039   0000AC                     i1l134:
  5040                           
  5041                           ; BSR set to: 14
  5042   0000AC  C003  FFE0         	movff	??_LowISR+2,bsr
  5043   0000B0  C002  FFE8         	movff	??_LowISR+1,wreg
  5044   0000B4  C001  FFD8         	movff	??_LowISR,status
  5045   0000B8  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5046   0000BA  0010               	retfie	
  5047   0000BC                     __end_of_LowISR:
  5048                           	callstack 0
  5049                           
  5050                           	psect	rparam
  5051   000000                     
  5052                           	psect	temp
  5053   000055                     btemp:
  5054                           	callstack 0
  5055   000055                     	ds	1
  5056   000000                     int$flags	set	btemp
  5057   000000                     wtemp8	set	btemp+1
  5058   000000                     ttemp5	set	btemp+1
  5059   000000                     ttemp6	set	btemp+4
  5060   000000                     ttemp7	set	btemp+8
  5061                           
  5062                           	psect	config
  5063                           
  5064                           ;Config register CONFIG1L @ 0x300000
  5065                           ;	External Oscillator mode Selection bits
  5066                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5067                           ;	Power-up default value for COSC bits
  5068                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5069   300000                     	org	3145728
  5070   300000  AA                 	db	170
  5071                           
  5072                           ;Config register CONFIG1H @ 0x300001
  5073                           ;	unspecified, using default values
  5074                           ;	Clock Out Enable bit
  5075                           ;	CLKOUTEN = 0x1, unprogrammed default
  5076                           ;	Clock Switch Enable bit
  5077                           ;	CSWEN = 0x1, unprogrammed default
  5078                           ;	Fail-Safe Clock Monitor Enable bit
  5079                           ;	FCMEN = 0x1, unprogrammed default
  5080   300001                     	org	3145729
  5081   300001  FF                 	db	255
  5082                           
  5083                           ;Config register CONFIG3L @ 0x300004
  5084                           ;	WDT Period Select bits
  5085                           ;	WDTCPS = 0x1F, unprogrammed default
  5086                           ;	WDT operating mode
  5087                           ;	WDTE = OFF, WDT Disabled
  5088   300004                     	org	3145732
  5089   300004  9F                 	db	159
  5090                           
  5091                           ;Config register CONFIG3H @ 0x300005
  5092                           ;	unspecified, using default values
  5093                           ;	WDT Window Select bits
  5094                           ;	WDTCWS = 0x7, unprogrammed default
  5095                           ;	WDT input clock selector
  5096                           ;	WDTCCS = 0x7, unprogrammed default
  5097   300005                     	org	3145733
  5098   300005  FF                 	db	255
  5099                           tosu	equ	0xFFF
  5100                           tosh	equ	0xFFE
  5101                           tosl	equ	0xFFD
  5102                           stkptr	equ	0xFFC
  5103                           pclatu	equ	0xFFB
  5104                           pclath	equ	0xFFA
  5105                           pcl	equ	0xFF9
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           indf0	equ	0xFEF
  5113                           postinc0	equ	0xFEE
  5114                           postdec0	equ	0xFED
  5115                           preinc0	equ	0xFEC
  5116                           plusw0	equ	0xFEB
  5117                           fsr0h	equ	0xFEA
  5118                           fsr0l	equ	0xFE9
  5119                           wreg	equ	0xFE8
  5120                           indf1	equ	0xFE7
  5121                           postinc1	equ	0xFE6
  5122                           postdec1	equ	0xFE5
  5123                           preinc1	equ	0xFE4
  5124                           plusw1	equ	0xFE3
  5125                           fsr1h	equ	0xFE2
  5126                           fsr1l	equ	0xFE1
  5127                           bsr	equ	0xFE0
  5128                           indf2	equ	0xFDF
  5129                           postinc2	equ	0xFDE
  5130                           postdec2	equ	0xFDD
  5131                           preinc2	equ	0xFDC
  5132                           plusw2	equ	0xFDB
  5133                           fsr2h	equ	0xFDA
  5134                           fsr2l	equ	0xFD9
  5135                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      84
    BANK0           160     46      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    changeHourDayYear@day	PTR unsigned int  size(1) Largest target is 2
		 -> main@day(BANK0[2]), 

    changeHourDayYear@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    changeHourDayYear@synced	PTR unsigned int  size(1) Largest target is 2
		 -> main@synced(BANK0[2]), 

    changeHourDayYear@year	PTR unsigned int  size(1) Largest target is 2
		 -> main@year(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    findDSTdates@bkwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@bkwd_daylight_savings_day(BANK0[2]), 

    findDSTdates@fwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@fwd_daylight_savings_day(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    hourChangeDST@backward_zone	PTR unsigned int  size(1) Largest target is 2
		 -> main@backward_zone(BANK0[2]), 

    hourChangeDST@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1901$buffer	PTR unsigned char  size(2) Largest target is 0

    S1901$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    sunSync@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    sunSync@synced	PTR unsigned int  size(1) Largest target is 2
		 -> main@synced(BANK0[2]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _initialise->_LCD_init
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _findDSTdates->_lastSunday
    _lastSunday->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   20407
                                              0 BANK0     46    46      0
                        _LCD_setline
                  _LEDarray_disp_bin
                  _changeHourDayYear
                       _findDSTdates
                      _hourChangeDST
                         _initialise
                         _isLeapYear
                            _sunSync
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                         11     2      9    9625
                                             68 COMRAM    11     2      9
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    6918
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6261
                                             45 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    5902
                                             34 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     795
                                              9 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             23 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0     928
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1157
                                              8 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _sunSync                                              6     2      4     338
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0     972
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0     972
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     884
                                              4 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              3 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (3) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hourChangeDST                                       10     2      8     622
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _findDSTdates                                         8     0      8    5083
                                             64 COMRAM     8     0      8
                         _lastSunday
 ---------------------------------------------------------------------------------
 (2) _lastSunday                                          38    34      4    4571
                                             26 COMRAM    38    34      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (1) _isLeapYear                                           5     3      2    1465
                                             21 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1223
                                             16 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              9 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _changeHourDayYear                                    8     2      6     644
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _changeHourDayYear
   _findDSTdates
     _lastSunday
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul
       _isLeapYear
         ___lwmod
   _hourChangeDST
   _initialise
     _Comp1_init_fe
       _DAC_init
     _Comp1_init_re
       _DAC_init
     _Interrupts_init
     _LCD_init
       _LCD_sendbyte
       _LCD_sendnibble
     _LEDarray_init
     _Timer0_init
   _isLeapYear
   _sunSync
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      50       5       50.0%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      54       1       89.4%
BITBIGSFRlhhhhh     4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhlhh      4      0       0      38        0.0%
BITBIGSFRlhhhhl      1      0       0      35        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      47        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 11:39:41 2024

                                    l47 1F1E                                      l81 14FC  
                                    l90 1556                                      l82 14FE  
                                    l91 156A                                      l83 1512  
                                    l92 156C                                      l84 1514  
                                    l93 1580                                      l85 1528  
                                    l94 1582                                      l86 152A  
                                    l78 1F4A                                      l95 1596  
                                    l87 153E                                      l96 1598  
                                    l88 1540                                      l97 15AC  
                                    l89 1554                                      l99 15AE  
                          ___awdiv@sign 0009                                      bsr 0FE0  
                   ___wmul@multiplicand 0006                       ??_Interrupts_init 0004  
                                   l204 187E                                     l124 200C  
                                   l221 1FF2                                     l214 14E6  
                                   l208 1C9A                                     l240 202E  
                                   l162 1F94                                     l218 1BBC  
                                   l251 1D02                                     l243 1CB2  
                                   l165 1FB8                                     l245 1CC8  
                                   l254 1DFE                                     l270 1EF0  
                                   l159 2020                                     l247 1CDE  
                                   l256 1E20                                     l264 1E5A  
                                   l249 1CF4                                     l186 1B46  
                                   l194 103C                                     l522 1722  
                                   l259 1ACC                                     l275 19BC  
                                   l509 1672                                     l278 1F70  
                                   l776 1C30                                     l769 1C28  
                                   l786 1D66                                     l779 1D5E  
                                   l956 1E8E                                     l981 1A46  
                                   l976 19EE                                     l984 121E  
                                   l979 1A2C                                     l997 1326  
                                   u940 1890                                     u941 188C  
                                   u950 18A0                                     u951 189C  
                                   u960 18C6                                     u961 18C2  
                                   u970 18F8                                     u971 18F4  
                                   u980 1DE4                                     u981 1DE0  
                                   u990 15C2                                     u991 15BE  
                                   _abs 1E90                                     _pad 19BE  
                          ___awmod@sign 0009                                     wreg 0FE8  
                     main@backward_zone 0086                                    l1001 17C8  
                                  l1020 11BE                                    l1005 17D0  
                                  l1030 1EAA                                    l2000 1D4A  
                                  l1033 1EC2                                    l2002 1D52  
                                  l2010 106C                                    l1026 1DA8  
                                  ?_abs 000A                                    l2100 1BE0  
                                  l2004 1D58                                    l2020 1092  
                                  l2012 1078                                    l1045 1928  
                                  l1053 1DE4                                    l2110 1C1A  
                                  l2102 1BE8                                    l2030 10F4  
                                  l2014 107C                                    l2006 103E  
                                  l2112 1C1C                                    l2104 1BF6  
                                  l2200 1FB4                                    l1056 2030  
                                  l2040 1156                                    l2032 1102  
                                  l2024 109A                                    l2016 1084  
                                  l2008 1064                                    l2120 1D80  
                                  l2114 1C22                                    l2106 1BFC  
                                  l2210 0F54                                    l2202 0E26  
                                  l2130 1E3E                                    l2042 116E  
                                  l2034 110C                                    l2018 1086  
                                  l2026 10D0                                    l2122 1DA0  
                                  l2108 1C12                                    l2220 0FB6  
                                  l2212 0F74                                    l2204 0E3A  
                                  l2140 1F06                                    l2300 1FEA  
                                  l2132 1E50                                    l2044 1178  
                                  l2036 1116                                    l2028 10E0  
                                  l2052 1198                                    l2116 1D68  
                                  l2310 1522                                    l2070 1B3C  
                                  l2062 1ACE                                    l2222 0FBE  
                                  l2230 0FE2                                    l2214 0F84  
                                  l2206 0F18                                    l2150 1F12  
                                  l2142 1F0A                                    l2134 1EF2  
                                  l2302 1FEE                                    l2126 1E24  
                                  l2038 1136                                    l2118 1D70  
                                  l2320 1590                                    l2312 1538  
                                  l2304 14E8                                    l2072 1B40  
                                  l2064 1AD2                                    l2240 1028  
                                  l2232 0FF6                                    l2224 0FCA  
                                  l2216 0F98                                    l2208 0F34  
                                  l2080 201E                                    l2160 1F30  
                                  l2152 1F1C                                    l2144 1F0C  
                                  l2136 1EFA                                    l2400 1BA0  
                                  l2128 1E34                                    l2048 118C  
                                  l2322 15A6                                    l2314 154E  
                                  l2306 14F6                                    l2066 1AF0  
                                  l2242 1034                                    l2234 1008  
                                  l2226 0FD6                                    l2218 0FAA  
                                  l2090 1E0C                                    l2082 1DE8  
                                  l2250 1A66                                    l2170 1F46  
                                  l2162 1F3A                                    l2154 1F20  
                                  l2146 1F0E                                    l2138 1F04  
                                  l2330 1954                                    l2410 136E  
                                  l2402 1328                                    l2316 1564  
                                  l2308 150C                                    l2068 1B16  
                                  l2236 1014                                    l2076 200E  
                                  l2180 1F88                                    l2172 1FF4  
                                  l2092 1E18                                    l2084 1DF8  
                                  l2260 1A8E                                    l2252 1A6C  
                                  l2164 1F3C                                    l2156 1F28  
                                  l2148 1F10                                    l2332 195A  
                                  l2324 192A                                    l2420 1400  
                                  l2412 1374                                    l2404 134A  
                                  l2318 157A                                    l2094 1BBE  
                                  l2238 101C                                    l2350 17D2  
                                  l2078 2014                                    l2190 1F98  
                                  l2182 1F8A                                    l2174 1F72  
                                  l2086 1E00                                    l2270 1AC2  
                                  l2262 1A98                                    l2254 1A76  
                                  l2246 1A48                                    l2166 1F42  
                                  l2158 1F2A                                    l2342 19A4  
                                  l2334 196C                                    l2326 1930  
                                  l2414 139C                                    l2406 134E  
                                  l2096 1BC6                                    l2344 1C32  
                                  l2360 1832                                    l2352 17EA  
                                  l2192 1FAA                                    l2184 1F8C  
                                  l2176 1F74                                    l2088 1E06  
                                  l2264 1AA0                                    l2256 1A7C  
                                  l2248 1A60                                    l2168 1F44  
                                  l2272 1EC4                                    l1800 15B0  
                                  l2280 1E5C                                    l2336 1980  
                                  l2328 194C                                    l2416 13C0  
                                  l2408 1362                                    l2370 1436  
                                  l2098 1BD8                                    l2346 1C44  
                                  l2362 184C                                    l2354 1804  
                                  l2194 1FAC                                    l2186 1F90  
                                  l2178 1F86                                    l2266 1AAA  
                                  l2258 1A86                                    l2274 1EC8  
                                  l1810 15DC                                    l1802 15B4  
                                  l2282 1E64                                    l2338 198C  
                                  l2418 13E4                                    l2380 1488  
                                  l2372 1440                                    l2348 1C56  
                                  l2364 1864                                    l2356 1810  
                                  l2196 1FAE                                    l2188 1F96  
                                  l1900 2022                                    l2268 1AB8  
                                  l2292 1FDA                                    l2276 1ED8  
                                  l1820 160A                                    l1812 15E4  
                                  l1804 15C2                                    l2284 1E6C  
                                  l2390 14DA                                    l2382 1494  
                                  l2374 144C                                    l2366 1870  
                                  l2358 181A                                    l2198 1FB0  
                                  l1902 2024                                    l2294 1FDE  
                                  l2278 1EDA                                    l1830 1644  
                                  l1822 1612                                    l1814 15E8  
                                  l1806 15CA                                    l1910 11D8  
                                  l2286 1E74                                    l2376 145E  
                                  l2384 149E                                    l2368 141C  
                                  l1904 202C                                    l2296 1FE2  
                                  l2392 1B48                                    l1840 166A  
                                  l1832 1646                                    l1824 1620  
                                  l1816 15F0                                    l1808 15CE  
                                  l1920 1212                                    l1912 11E0  
                                  l2464 10C2                                    l2288 1E84  
                                  l2386 14B0                                    l2378 147A  
                                  l2298 1FE6                                    l2394 1B56  
                                  l1834 164C                                    l1826 1626  
                                  l1818 1602                                    l1850 168E  
                                  l1930 1264                                    l1922 121A  
                                  l1914 11F0                                    l1906 11C0  
                                  l2388 14CC                                    l2396 1B6A  
                                  l1828 163C                                    l1836 1652  
                                  l1860 16C2                                    l1852 1692  
                                  l1844 1674                                    l1780 18C6  
                                  l1772 1880                                    l1940 12B6  
                                  l1932 1268                                    l1924 1226  
                                  l1916 11F6                                    l1908 11C4  
                                  l2398 1B88                                    l1838 1662  
                                  l1870 16FC                                    l1862 16CA  
                                  l1854 16A0                                    l1846 1678  
                                  l1782 18F8                                    l1774 1890  
                                  l1790 1DC4                                    l1950 1304  
                                  l1942 12C6                                    l1934 126E  
                                  l1926 1230                                    l1918 1206  
                                  l1864 16D8                                    l1872 1702  
                                  l1856 16A8                                    l1848 1686  
                                  l1776 18A0                                    l1792 1DC8  
                                  l1880 19BE                                    l1952 1310  
                                  l1944 12E0                                    l1928 1236  
                                  l1936 128A                                    l1960 1752  
                                  l1794 1F4C                                    l1970 1C9E  
                                  l1874 1712                                    l1866 16EE  
                                  l1858 16BA                                    l1778 18AA  
                                  l1786 1DAA                                    l1890 1A0A  
                                  l1882 19CC                                    l1938 12A4  
                                  l1946 12EE                                    l1962 175A  
                                  l1796 1F68                                    l1980 1CD8  
                                  l1972 1CAC                                    l1876 171A  
                                  l1868 16F6                                    l1788 1DB6  
                                  l1892 1A0E                                    l1884 19D8  
                                  l1948 12FE                                    l1964 1776  
                                  l1956 1724                                    l1990 1D04  
                                  l1982 1CE0                                    l1974 1CB4  
                                  l1894 1A3A                                    l1886 19E6  
                                  l1966 1796                                    l1958 172C  
                                  ?_pad 0011                                    l1992 1D16  
                                  l1984 1CEE                                    l1976 1CC2  
                                  l1896 1E90                                    l1888 19FA  
                                  l1968 179E                                    l1994 1D1E  
                                  l1986 1CF6                                    l1978 1CCA  
                                  l1898 1E9E                                    l1996 1D26  
                                  l1988 1CFA                                    l1998 1D34  
          lastSunday@dayOfWeekMonth31st 002D                                    STR_1 0E01  
                                  STR_2 0E1B                                    STR_3 0E0F  
                                  u1000 15DC                                    u1001 15D8  
                                  u1010 1602                                    u1011 15FE  
                                  u1020 1620                                    u1100 1712  
                                  u1021 161C                                    u1101 170E  
                                  u1030 163C                                    u1110 19CC  
                                  u1031 1638                                    u1111 19C8  
                                  u1040 1662                                    u1120 19E6  
                                  u1200 12A4                                    u1041 165E  
                                  u1121 19E2                                    u1201 12A0  
                                  u1050 1686                                    u1130 1A2C  
                                  u1210 12B6                                    u1051 1682  
                                  u1131 1A28                                    u1211 12B2  
                                  u1300 1CD8                                    u1060 16A0  
                                  u1140 1A3A                                    u1220 12C6  
                                  u1301 1CD4                                    u1061 169C  
                                  u1141 1A36                                    u1221 12C2  
                                  u1310 1CEE                                    u1070 16BA  
                                  u1150 1E9E                                    u1230 12E0  
                                  u1311 1CEA                                    u1071 16B6  
                                  u1151 1E9A                                    u1231 12DC  
                                  u1320 1D16                                    u1400 1AF0  
                                  u1080 16D8                                    u1240 12EE  
                                  u1160 11D4                                    u1321 1D12  
                                  u1401 1AEC                                    u1081 16D4  
                                  u1241 12EA                                    u1161 11CE  
                                  u1330 1D34                                    u1410 1B16  
                                  u1090 16EE                                    u1250 12FE  
                                  u1170 11D6                                    u1331 1D30  
                                  u1411 1B12                                    u1091 16EA  
                                  u1251 12FA                                    u1340 1D4A  
                                  u1420 1B3C                                    u1500 0F98  
                                  u1180 11F0                                    u1260 1752  
                                  u1341 1D46                                    u1421 1B38  
                                  u1501 0F94                                    u1181 11EC  
                                  u1261 174E                                    _LATA 0F79  
                                  u1510 0FAA                                    u1430 1DF8  
                                  u1190 1206                                    u1270 17C8  
                                  u1350 1064                                    _LATB 0F7A  
                                  u1511 0FA6                                    u1431 1DF4  
                                  u1191 1202                                    u1271 17C4  
                                  u1351 1060                                    u1600 1564  
                                  u1440 1BD8                                    u1520 0FF6  
                                  u1280 1CAC                                    u1360 10E0  
                                  u1601 1560                                    u1441 1BD4  
                                  u1521 0FF2                                    u1281 1CA8  
                                  u1361 10DC                                    u1610 157A  
                                  u1450 1BF6                                    u1530 1008  
                                  u1290 1CC2                                    u1370 1102  
                                  u1611 1576                                    u1451 1BF2  
                                  u1531 1004                                    u1291 1CBE  
                                  u1371 10FE                                    _LATG 0F7F  
                                  u1620 1590                                    u1460 1C12  
                                  u1700 184C                                    u1540 1EF0  
                                  u1380 1136                                    u1621 158C  
                                  u1461 1C0E                                    u1701 1848  
                                  u1541 1EEC                                    u1381 1132  
                                  u1630 15A6                                    u1550 14F6  
                                  u1710 1864                                    u1390 1156  
                                  u1470 1DA0                                    u1631 15A2  
                                  u1551 14F2                                    u1711 1860  
                                  u1391 1152                                    u1471 1D9C  
                                  u1560 150C                                    u1720 1436  
                                  u1800 1BA0                                    u1480 1E34  
                                  u1640 196C                                    u1561 1508  
                                  u1721 1432                                    u1801 1B9C  
                                  u1481 1E30                                    u1641 1968  
                                  u1570 1522                                    u1730 145E  
                                  u1650 1C44                                    u1490 1E50  
                                  u1571 151E                                    u1731 145A  
                                  u1651 1C40                                    u1491 1E4C  
                                  u1580 1538                                    u1740 147A  
                                  u1660 1C56                                    u1581 1534  
                                  u1741 1476                                    u1661 1C52  
                                  u1590 154E                                    u1750 14B0  
                                  u1670 17EA                                    u1591 154A  
                                  u1751 14AC                                    u1671 17E6  
                                  u1760 14CC                                    u1680 1804  
                                  u1761 14C8                                    u1681 1800  
                                  u1690 1832                                    u1770 1B56  
                                  u1691 182E                                    u1907 1A88  
                                  u1771 1B52                                    u1780 1B6A  
                                  u1917 1A9A                                    u1781 1B66  
                                  u1790 1B88                                    u1927 1AB0  
                                  u1791 1B84                                    u1937 1E1A  
                                  u1947 1CFC                                    u1957 2026  
                                  u1877 19AE                                    u1887 1A68  
                                  u1897 1A78                                    abs@a 000A  
                                  _dbuf 008E                                    _main 1328  
                                  _dtoa 11C0                                    _hour 00AE  
                                  _prec 0052                                    pad@i 0016  
                                  pad@p 0013                                    fsr1h 0FE2  
                                  fsr2h 0FDA                                    indf2 0FDF  
                                  fsr1l 0FE1                                    fsr2l 0FD9  
                                  btemp 0055                            ?_LCD_setline 0001  
                                  prodh 0FF4                                    prodl 0FF3  
                                  start 00BC                        __end_of_DAC_init 2022  
                     _changeHourDayYear 141C                            ___param_bank 0000  
                    ?_changeHourDayYear 0004                                   ??_abs 000C  
                                 ??_pad 0015                        __end_of_LCD_init 1ACE  
                                 ?_main 0001                                   ?_dtoa 0018  
                       __end_of___awdiv 1674                         __end_of___awmod 1724  
                   ??_changeHourDayYear 000A                         ___awdiv@divisor 0006  
                       __end_of___lwdiv 1C32                                   i1l131 0084  
                                 i1l132 009A                                   i1l134 00AC  
                                 i1l129 0088                         __end_of___lwmod 1D68  
                       ___awdiv@counter 0008                            vfpfcnvrt@fmt 0024  
                                 _TMR0H 0FD4                                   _TMR0L 0FD3  
                                 _TRISA 0F81                                   _TRISB 0F82  
                                 _TRISG 0F87                                   _flags 0054  
                   read_prec_or_width@c 000C                     read_prec_or_width@n 000D  
                                 _fputc 1880                                   _fputs 1DAA  
                                 pad@fp 0011                                   _width 0050  
                                 _putch 2030                                   dtoa@d 0019  
                                 dtoa@i 0021                                   dtoa@p 001D  
                                 dtoa@s 0020                                   dtoa@w 001E  
                         ?_LCD_sendbyte 0005                    __end_of_findDSTdates 1C9C  
                                 tablat 0FF5                   __end_of_Comp1_init_fe 1FBA  
                 __end_of_Comp1_init_re 1F96                                   plusw2 0FDB  
                                 ttemp5 0056                                   ttemp6 0059  
                                 ttemp7 005D                                   status 0FD8  
                       __end_of_sunSync 1BBE            lastSunday@dayOfYearForDSTEnd 0035  
                                 wtemp8 0056                         __end_of_sprintf 1E90  
             __end_of_changeHourDayYear 14E8                         __initialization 1FBA  
                          __end_of_main 141C                            __end_of_dtoa 1328  
                    lastSunday@leapYear 003D                       __end_of_LCD_E_TOG 2030  
                                ??_main 0050                                  ??_dtoa 001B  
          main@fwd_daylight_savings_day 0082                           __activetblptr 0003  
            __end_of_read_prec_or_width 17D2                            ?_time2String 0045  
                           lastSunday@h 0029                                  ?_fputc 0004  
                                ?_fputs 000C                          ??_LCD_sendbyte 0006  
                      ___awdiv@dividend 0004                                  ?_putch 0001  
                 changeHourDayYear@leap 0007                   changeHourDayYear@hour 0004  
                                i1l2430 0044                                  i1l2422 0026  
                                i1l2440 0096                                  i1l2432 0056  
                                i1l2424 0036                                  i1l2442 00A8  
                                i1l2434 006C                                  i1l2426 003C  
                                i1l2436 006E                                  i1l2428 0040  
                                i1l2438 0082                   changeHourDayYear@year 0006  
                         vfpfcnvrt@done 002C                       _LEDarray_disp_bin 14E8  
                                _LowISR 0018                      ?_LEDarray_disp_bin 0004  
                         ??_Timer0_init 0004                            vfprintf@cfmt 0031  
                                ___wmul 1F4C                               ??___awdiv 0008  
                             ??___awmod 0008                               ??___lwdiv 000E  
                             ??___lwmod 0015  hourChangeDST@bkwd_daylight_savings_day 0008  
                  read_prec_or_width@ap 000B                     ??_LEDarray_disp_bin 0006  
                                clear_0 1FC0                        ___awdiv@quotient 000A  
                       ___awmod@divisor 0006                                  isa$std 0001  
                       ___awmod@counter 0008                                  pad@buf 0012  
                                dtoa@fp 0018                                  fputc@c 0004  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000C             lastSunday@dayOfWeekMonth1st 002B  
                          __mediumconst 0000                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                                putch@c 0001                               ?_DAC_init 0001  
                      __end_of_vfprintf 1DAA                               ??_sunSync 0008  
                             ??_sprintf 0038               __end_of_LEDarray_disp_bin 15B0  
                            __accesstop 0060                 __end_of__initialization 1FD0  
                             ?_LCD_init 0001                           ___rparam_used 0001  
                         _LEDarray_init 1F20                         _Interrupts_init 1FF4  
                      findDSTdates@hour 0041                        findDSTdates@year 0045  
                        __pcstackCOMRAM 0001                           __end_of_fputc 192A  
                         __end_of_fputs 1DE6                           __end_of_putch 2032  
                   __end_of_Timer0_init 1F20             lastSunday@daysBeforeOctober 0033  
                            ??_DAC_init 0004                                 ??_fputc 0007  
                               ??_fputs 000E                                 ??_putch 0004  
                            __pbssBANK0 008E                          _LCD_sendnibble 1C9C  
                            ??_LCD_init 0009                           _hourChangeDST 17D2  
                        ?_LEDarray_init 0001                          _LCD_sendstring 1EC4  
                               ?_LowISR 0001                                 ?___wmul 0004  
                  __end_of_LCD_sendbyte 1E22              hourChangeDST@backward_zone 000B  
                          _findDSTdates 1C32                              _isLeapYear 1ACE  
                      hourChangeDST@day 0004                  __end_of_LCD_sendnibble 1D04  
               __end_of_Interrupts_init 200E                          lastSunday@year 001B  
                __end_of_LCD_sendstring 1EF2                          ?_hourChangeDST 0004  
                               __Hparam 0000                                 __Lparam 0000  
                           _Timer0_init 1EF2                              _lastSunday 0E26  
                       _isLeapYear$1177 001A                                 ___awdiv 15B0  
                               ___awmod 1674                                 ___lwdiv 1BBE  
                               ___lwmod 1D04                               ?_vfprintf 002E  
                          __psmallconst 0E00                                 __pcinit 1FBA  
                               __ramtop 0E00                              _initialise 1FDA  
                               __ptext0 1328                                 __ptext1 192A  
                               __ptext2 1E5C                                 __ptext3 1D68  
                               __ptext4 103E                                 __ptext5 1724  
                               __ptext6 11C0                                 __ptext7 19BE  
                               __ptext8 1DAA                                 __ptext9 1880  
                 read_prec_or_width@fmt 000A                        ___awmod@dividend 0004  
                             _LCD_E_TOG 2022                         LCD_setline@line 0009  
                               _sunSync 1B48                                 main@day 008C  
                               main@buf 0060                                 _sprintf 1E5C  
                  end_of_initialization 1FD0                         ?_LCD_sendnibble 0001  
                               fputc@fp 0006                         ??_LEDarray_init 0004  
                               fputs@fp 000D                         ?_LCD_sendstring 0009  
                    _read_prec_or_width 1724   findDSTdates@bkwd_daylight_savings_day 0048  
                     __end_of_vfpfcnvrt 11C0                                 postdec2 0FDD  
                   ?_read_prec_or_width 000A                                 postinc0 0FEE  
                               postinc1 0FE6                                 postinc2 0FDE  
                      vfpfcnvrt@convarg 0028                              ??_vfprintf 0031  
        lastSunday@dayOfYearForDSTStart 0031                             ?_isLeapYear 0016  
                            ?_LCD_E_TOG 0001                               _TRISBbits 0F82  
                             _TRISCbits 0F83                               _TRISEbits 0F85  
                             _TRISFbits 0F86                               _TRISHbits 0F88  
                  ??_read_prec_or_width 000C                           sunSync@synced 0007  
                       ??_hourChangeDST 000C                             _CM1CON0bits 0ED0  
                           _CM1CON1bits 0ED1                        ?_Interrupts_init 0001  
                           _CM2CON0bits 0ECC                             _CM2CON1bits 0ECD  
                            main@synced 0088                             ?_lastSunday 001B  
                        __end_of_LowISR 00BC                             vfpfcnvrt@ap 0025  
                           vfpfcnvrt@cp 002D                             vfpfcnvrt@fp 0023  
                        __end_of___wmul 1F72                    LCD_sendnibble@number 0004  
                           ?_initialise 0001                     start_initialization 1FBA  
                           __end_of_abs 1EC4                             __end_of_pad 1A48  
                          _LCD_sendbyte 1DE6                           _Comp1_init_fe 1F96  
                         _Comp1_init_re 1F72                    changeHourDayYear@day 0005  
                         ??_LCD_setline 0009                                ??_LowISR 0001  
                           vfprintf@fmt 002F                    LCD_sendstring@string 0009  
                              ??___wmul 0008                             sunSync@hour 0004  
                           __pbssCOMRAM 0050                             ??_LCD_E_TOG 0004  
                         __pcstackBANK0 0060                         findDSTdates@day 0043  
                        ?_Comp1_init_fe 0001                          ?_Comp1_init_re 0001  
                      ___lwdiv@dividend 000A                               _dtoa$1980 001B  
                          ?_Timer0_init 0001                                ?___awdiv 0004  
                              ?___awmod 0004                     __end_of_LCD_setline 1E5C  
                              ?___lwdiv 000A                                ?___lwmod 0011  
                           __pintcodelo 0018                             __smallconst 0E00  
                         ??_time2String 004E                        ??_LCD_sendnibble 0004  
                              _DAC_init 200E                        ___lwdiv@quotient 000E  
                              ?_sunSync 0004                        ??_LCD_sendstring 000A  
                              ?_sprintf 0032                        LCD_sendbyte@Byte 0008  
                      LCD_sendbyte@type 0005                          ___wmul@product 0008  
                              _LATAbits 0F79                                _LATBbits 0F7A  
                              _LATCbits 0F7B                                _LATEbits 0F7D  
                              _LATFbits 0F7E                                _LATGbits 0F7F  
                              _LATHbits 0F80                                _LCD_init 1A48  
               changeHourDayYear@synced 0009                                _IPR0bits 0E1F  
                              _IPR2bits 0E21                                _PIE0bits 0E29  
                              _PIE2bits 0E2B                       hourChangeDST@hour 000A  
                              i1u181_20 0036                                i1u181_21 0032  
                              i1u182_20 0056                                i1u182_21 0052  
                              i1u183_20 006C                                i1u183_21 0068  
                              i1u184_20 0082                                i1u184_21 007E  
                              i1u185_20 0096                                i1u185_21 0092  
                              i1u186_20 00A8                                i1u186_21 00A4  
                              _PIR0bits 0E33                                _PIR2bits 0E35  
                          time2String@h 0046   hourChangeDST@fwd_daylight_savings_day 0006  
                             _vfpfcnvrt 103E                       ___wmul@multiplier 0004  
                          ??_isLeapYear 0018                              _CM1NCHbits 0ED2  
                       lastSunday@month 001D                              _CM1PCHbits 0ED3  
                            _CM2NCHbits 0ECE                              _CM2PCHbits 0ECF  
             lastSunday@daysBeforeMarch 002F                         ??_Comp1_init_fe 0004  
                       ??_Comp1_init_re 0004                     __end_of_time2String 19BE  
                 __end_of_LEDarray_init 1F4C                             _LCD_setline 1E22  
                              __Hrparam 0000           lastSunday@lastSundayDateMonth 003F  
                    __end_of_isLeapYear 1B48                            ??_lastSunday 001F  
                            vfprintf@ap 0030                                __Lrparam 0000  
                            vfprintf@fp 002E                              sunSync@day 0005  
                            ?_vfpfcnvrt 0023                            ??_initialise 000A  
                       _lastSunday$1190 003B                              _ANSELFbits 0EB4  
                       _lastSunday$1187 0039                         _lastSunday$2254 0037  
                            sprintf@fmt 0033                              _T0CON0bits 0FD5  
                            _T0CON1bits 0FD6                         ___lwdiv@divisor 000C  
                       ___lwdiv@counter 0010                                __ptext10 2030  
                              __ptext11 1E90                                __ptext20 1A48  
                              __ptext12 1674                                __ptext21 1DE6  
                              __ptext13 15B0                                __ptext30 0E26  
                              __ptext22 1C9C                                __ptext14 1E22  
                              __ptext31 1ACE                                __ptext23 2022  
                              __ptext15 1EC4                                __ptext32 1D04  
                              __ptext24 1FF4                                __ptext16 1B48  
                              __ptext33 1F4C                                __ptext25 1F72  
                              __ptext17 1FDA                                __ptext34 1BBE  
                              __ptext26 1F96                                __ptext18 1EF2  
                              __ptext35 141C                                __ptext27 200E  
                              __ptext19 1F20                                __ptext36 14E8  
                              __ptext28 17D2                                __ptext29 1C32  
                LCD_sendbyte@highNibble 0006                      __end_of_lastSunday 103E  
               LEDarray_disp_bin@number 0004                   __end_of_hourChangeDST 1880  
  findDSTdates@fwd_daylight_savings_day 0047                      __end_of_initialise 1FF4  
         main@bkwd_daylight_savings_day 0084                                isa$xinst 0000  
                       time2String@leap 004C                                int$flags 0055  
                       time2String@year 004A                                _vfprintf 1D68  
                         ?_findDSTdates 0041                                main@leap 0080  
                              main@year 008A                              _INTCONbits 0FF2  
                           _time2String 192A                                intlevel1 0000  
                             sprintf@ap 0038                            _DAC1CON0bits 0EC6  
                          _DAC1CON1bits 0EC7                        ___lwmod@dividend 0011  
                        time2String@day 0048                          time2String@buf 0045  
                        ??_findDSTdates 0049                             ??_vfpfcnvrt 0026  
                              sprintf@f 0039                                sprintf@s 0032  
                 LCD_sendbyte@lowNibble 0007                         ___lwmod@divisor 0013  
                       ___lwmod@counter 0015                          isLeapYear@year 0016  
