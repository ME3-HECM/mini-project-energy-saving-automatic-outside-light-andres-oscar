

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 08 21:01:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 21/07/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _CM2CON1bits	set	3789
    90   000000                     _CM2PCHbits	set	3791
    91   000000                     _CM1CON1bits	set	3793
    92   000000                     _TRISBbits	set	3970
    93   000000                     _LATBbits	set	3962
    94   000000                     _LATAbits	set	3961
    95   000000                     _LATGbits	set	3967
    96   000000                     _IPR0bits	set	3615
    97   000000                     _PIE0bits	set	3625
    98   000000                     _T0CON0bits	set	4053
    99   000000                     _T0CON1bits	set	4054
   100   000000                     _INTCONbits	set	4082
   101   000000                     _PIE2bits	set	3627
   102   000000                     _PIR0bits	set	3635
   103   000000                     _PIR2bits	set	3637
   104   000000                     _ANSELFbits	set	3764
   105   000000                     _LATA	set	3961
   106   000000                     _TMR0L	set	4051
   107   000000                     _TMR0H	set	4052
   108   000000                     _IPR2bits	set	3617
   109   000000                     _LATEbits	set	3965
   110   000000                     _LATCbits	set	3963
   111   000000                     _LATFbits	set	3966
   112   000000                     _LATB	set	3962
   113   000000                     _TRISEbits	set	3973
   114   000000                     _TRISCbits	set	3971
   115   000000                     _TRISFbits	set	3974
   116   000000                     _TRISB	set	3970
   117   000000                     _TRISA	set	3969
   118   000000                     _LATHbits	set	3968
   119   000000                     _LATG	set	3967
   120   000000                     _TRISHbits	set	3976
   121   000000                     _TRISG	set	3975
   122   000000                     _DAC1CON0bits	set	3782
   123   000000                     _CM2CON0bits	set	3788
   124   000000                     _CM2NCHbits	set	3790
   125   000000                     _CM1CON0bits	set	3792
   126   000000                     _CM1NCHbits	set	3794
   127   000000                     _DAC1CON1bits	set	3783
   128   000000                     _CM1PCHbits	set	3795
   129                           
   130                           	psect	smallconst
   131   000E00                     __psmallconst:
   132                           	callstack 0
   133   000E00  00                 	db	0
   134   000E01                     
   135                           ; BSR set to: 14
   136   000E01  56                 	db	86	;'V'
   137   000E02  6F                 	db	111	;'o'
   138   000E03  6C                 	db	108	;'l'
   139   000E04  74                 	db	116	;'t'
   140   000E05  61                 	db	97	;'a'
   141   000E06  67                 	db	103	;'g'
   142   000E07  65                 	db	101	;'e'
   143   000E08  20                 	db	32
   144   000E09  3D                 	db	61	;'='
   145   000E0A  20                 	db	32
   146   000E0B  25                 	db	37
   147   000E0C  64                 	db	100	;'d'
   148   000E0D  2E                 	db	46
   149   000E0E  25                 	db	37
   150   000E0F  30                 	db	48	;'0'
   151   000E10  32                 	db	50	;'2'
   152   000E11  64                 	db	100	;'d'
   153   000E12  00                 	db	0
   154   000E13                     STR_2:
   155                           
   156                           ; BSR set to: 14
   157   000E13  68                 	db	104	;'h'
   158   000E14  3D                 	db	61	;'='
   159   000E15  30                 	db	48	;'0'
   160   000E16  25                 	db	37
   161   000E17  64                 	db	100	;'d'
   162   000E18  20                 	db	32
   163   000E19  25                 	db	37
   164   000E1A  64                 	db	100	;'d'
   165   000E1B  20                 	db	32
   166   000E1C  25                 	db	37
   167   000E1D  64                 	db	100	;'d'
   168   000E1E  00                 	db	0
   169   000E1F                     STR_3:
   170                           
   171                           ; BSR set to: 14
   172   000E1F  68                 	db	104	;'h'
   173   000E20  3D                 	db	61	;'='
   174   000E21  25                 	db	37
   175   000E22  64                 	db	100	;'d'
   176   000E23  20                 	db	32
   177   000E24  25                 	db	37
   178   000E25  64                 	db	100	;'d'
   179   000E26  20                 	db	32
   180   000E27  25                 	db	37
   181   000E28  64                 	db	100	;'d'
   182   000E29  00                 	db	0
   183   000E2A  00                 	db	0	; dummy byte at the end
   184   000000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188   001EEC                     __pcinit:
   189                           	callstack 0
   190   001EEC                     start_initialization:
   191                           	callstack 0
   192   001EEC                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Clear objects allocated to BANK0 (34 bytes)
   196   001EEC  EE00  F08A         	lfsr	0,__pbssBANK0
   197   001EF0  0E22               	movlw	34
   198   001EF2                     clear_0:
   199   001EF2  6AEE               	clrf	postinc0,c
   200   001EF4  06E8               	decf	wreg,f,c
   201   001EF6  E1FD               	bnz	clear_0
   202                           
   203                           ; Clear objects allocated to COMRAM (9 bytes)
   204   001EF8  EE00  F050         	lfsr	0,__pbssCOMRAM
   205   001EFC  0E09               	movlw	9
   206   001EFE                     clear_1:
   207   001EFE  6AEE               	clrf	postinc0,c
   208   001F00  06E8               	decf	wreg,f,c
   209   001F02  E1FD               	bnz	clear_1
   210   001F04                     end_of_initialization:
   211                           	callstack 0
   212   001F04                     __end_of__initialization:
   213                           	callstack 0
   214   001F04  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   001F06  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   001F08  0100               	movlb	0
   217   001F0A  EFBE  F00A         	goto	_main	;jump to C main() function
   218                           
   219                           	psect	bssCOMRAM
   220   000050                     __pbssCOMRAM:
   221                           	callstack 0
   222   000050                     calc_max_PPM@loopCounter:
   223                           	callstack 0
   224   000050                     	ds	4
   225   000054                     _width:
   226                           	callstack 0
   227   000054                     	ds	2
   228   000056                     _prec:
   229                           	callstack 0
   230   000056                     	ds	2
   231   000058                     _flags:
   232                           	callstack 0
   233   000058                     	ds	1
   234                           
   235                           	psect	bssBANK0
   236   00008A                     __pbssBANK0:
   237                           	callstack 0
   238   00008A                     _dbuf:
   239                           	callstack 0
   240   00008A                     	ds	32
   241   0000AA                     _hour:
   242                           	callstack 0
   243   0000AA                     	ds	2
   244                           
   245                           	psect	cstackBANK0
   246   000060                     __pcstackBANK0:
   247                           	callstack 0
   248   000060                     main@buf:
   249                           	callstack 0
   250                           
   251                           ; 32 bytes @ 0x0
   252   000060                     	ds	32
   253   000080                     main@fwd_daylight_savings_day:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x20
   257   000080                     	ds	2
   258   000082                     main@bkwd_daylight_savings_day:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x22
   262   000082                     	ds	2
   263   000084                     main@backward_zone:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x24
   267   000084                     	ds	2
   268   000086                     main@year:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x26
   272   000086                     	ds	2
   273   000088                     main@day:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x28
   277   000088                     	ds	2
   278                           
   279                           	psect	cstackCOMRAM
   280   000001                     __pcstackCOMRAM:
   281                           	callstack 0
   282   000001                     ??_LowISR:
   283   000001                     
   284                           ; 1 bytes @ 0x0
   285   000001                     	ds	3
   286   000004                     ?___wmul:
   287                           	callstack 0
   288   000004                     ?___awdiv:
   289                           	callstack 0
   290   000004                     ?___awmod:
   291                           	callstack 0
   292   000004                     LCD_sendnibble@number:
   293                           	callstack 0
   294   000004                     LEDarray_disp_bin@number:
   295                           	callstack 0
   296   000004                     increaseHour@day:
   297                           	callstack 0
   298   000004                     ___wmul@multiplier:
   299                           	callstack 0
   300   000004                     ___awdiv@dividend:
   301                           	callstack 0
   302   000004                     ___awmod@dividend:
   303                           	callstack 0
   304   000004                     fputc@c:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x3
   308   000004                     	ds	1
   309   000005                     LCD_sendbyte@type:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x4
   313   000005                     	ds	1
   314   000006                     LCD_sendbyte@highNibble:
   315                           	callstack 0
   316   000006                     fputc@fp:
   317                           	callstack 0
   318   000006                     increaseHour@fwd_daylight_savings_day:
   319                           	callstack 0
   320   000006                     ___wmul@multiplicand:
   321                           	callstack 0
   322   000006                     ___awdiv@divisor:
   323                           	callstack 0
   324   000006                     ___awmod@divisor:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x5
   328   000006                     	ds	1
   329   000007                     ??_fputc:
   330   000007                     LCD_sendbyte@lowNibble:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x6
   334   000007                     	ds	1
   335   000008                     LCD_sendbyte@Byte:
   336                           	callstack 0
   337   000008                     ___awdiv@counter:
   338                           	callstack 0
   339   000008                     ___awmod@counter:
   340                           	callstack 0
   341   000008                     increaseHour@bkwd_daylight_savings_day:
   342                           	callstack 0
   343   000008                     ___wmul@product:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x7
   347   000008                     	ds	1
   348   000009                     ??_LCD_init:
   349   000009                     LCD_setline@line:
   350                           	callstack 0
   351   000009                     LCD_sendstring@string:
   352                           	callstack 0
   353   000009                     ___awdiv@sign:
   354                           	callstack 0
   355   000009                     ___awmod@sign:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x8
   359   000009                     	ds	1
   360   00000A                     ?_abs:
   361                           	callstack 0
   362   00000A                     ?___lwdiv:
   363                           	callstack 0
   364   00000A                     ?_read_prec_or_width:
   365                           	callstack 0
   366   00000A                     increaseHour@hour:
   367                           	callstack 0
   368   00000A                     read_prec_or_width@fmt:
   369                           	callstack 0
   370   00000A                     ___awdiv@quotient:
   371                           	callstack 0
   372   00000A                     ___lwdiv@dividend:
   373                           	callstack 0
   374   00000A                     abs@a:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x9
   378   00000A                     	ds	1
   379   00000B                     increaseHour@backward_zone:
   380                           	callstack 0
   381   00000B                     read_prec_or_width@ap:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0xA
   385   00000B                     	ds	1
   386   00000C                     ??_abs:
   387   00000C                     read_prec_or_width@c:
   388                           	callstack 0
   389   00000C                     fputs@s:
   390                           	callstack 0
   391   00000C                     ___lwdiv@divisor:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0xB
   395   00000C                     	ds	1
   396   00000D                     fputs@fp:
   397                           	callstack 0
   398   00000D                     read_prec_or_width@n:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xC
   402   00000D                     	ds	1
   403   00000E                     fputs@c:
   404                           	callstack 0
   405   00000E                     ___lwdiv@quotient:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xD
   409   00000E                     	ds	1
   410   00000F                     fputs@i:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xE
   414   00000F                     	ds	1
   415   000010                     ___lwdiv@counter:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xF
   419   000010                     	ds	1
   420   000011                     ?___lwmod:
   421                           	callstack 0
   422   000011                     pad@fp:
   423                           	callstack 0
   424   000011                     ___lwmod@dividend:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x10
   428   000011                     	ds	1
   429   000012                     pad@buf:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x11
   433   000012                     	ds	1
   434   000013                     ___lwmod@divisor:
   435                           	callstack 0
   436   000013                     pad@p:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x12
   440   000013                     	ds	2
   441   000015                     ??_pad:
   442   000015                     ___lwmod@counter:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x14
   446   000015                     	ds	1
   447   000016                     ?_isLeapYear:
   448                           	callstack 0
   449   000016                     isLeapYear@year:
   450                           	callstack 0
   451   000016                     pad@i:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x15
   455   000016                     	ds	2
   456   000018                     ??_isLeapYear:
   457   000018                     dtoa@fp:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x17
   461   000018                     	ds	1
   462   000019                     dtoa@d:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x18
   466   000019                     	ds	1
   467   00001A                     _isLeapYear$1167:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x19
   471   00001A                     	ds	1
   472   00001B                     ?_lastSunday:
   473                           	callstack 0
   474   00001B                     changeHourDayYear@hour:
   475                           	callstack 0
   476   00001B                     lastSunday@year:
   477                           	callstack 0
   478   00001B                     _dtoa$1967:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1A
   482   00001B                     	ds	1
   483   00001C                     changeHourDayYear@day:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1B
   487   00001C                     	ds	1
   488   00001D                     changeHourDayYear@year:
   489                           	callstack 0
   490   00001D                     dtoa@p:
   491                           	callstack 0
   492   00001D                     lastSunday@month:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x1C
   496   00001D                     	ds	1
   497   00001E                     dtoa@w:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x1D
   501   00001E                     	ds	1
   502   00001F                     ??_lastSunday:
   503                           
   504                           ; 1 bytes @ 0x1E
   505   00001F                     	ds	1
   506   000020                     dtoa@s:
   507                           	callstack 0
   508   000020                     changeHourDayYear@leap:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x1F
   512   000020                     	ds	1
   513   000021                     dtoa@i:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x20
   517   000021                     	ds	2
   518   000023                     vfpfcnvrt@fp:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x22
   522   000023                     	ds	1
   523   000024                     vfpfcnvrt@fmt:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x23
   527   000024                     	ds	1
   528   000025                     vfpfcnvrt@ap:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x24
   532   000025                     	ds	1
   533   000026                     ??_vfpfcnvrt:
   534                           
   535                           ; 1 bytes @ 0x25
   536   000026                     	ds	2
   537   000028                     vfpfcnvrt@convarg:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x27
   541   000028                     	ds	1
   542   000029                     lastSunday@h:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x28
   546   000029                     	ds	2
   547   00002B                     lastSunday@dayOfWeekMonth1st:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x2A
   551   00002B                     	ds	1
   552   00002C                     vfpfcnvrt@done:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x2B
   556   00002C                     	ds	1
   557   00002D                     vfpfcnvrt@cp:
   558                           	callstack 0
   559   00002D                     lastSunday@dayOfWeekMonth31st:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2C
   563   00002D                     	ds	1
   564   00002E                     ?_vfprintf:
   565                           	callstack 0
   566   00002E                     vfprintf@fp:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x2D
   570   00002E                     	ds	1
   571   00002F                     vfprintf@fmt:
   572                           	callstack 0
   573   00002F                     lastSunday@daysBeforeMarch:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x2E
   577   00002F                     	ds	1
   578   000030                     vfprintf@ap:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x2F
   582   000030                     	ds	1
   583   000031                     vfprintf@cfmt:
   584                           	callstack 0
   585   000031                     lastSunday@dayOfYearForDSTStart:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x30
   589   000031                     	ds	1
   590   000032                     ?_sprintf:
   591                           	callstack 0
   592   000032                     sprintf@s:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x31
   596   000032                     	ds	1
   597   000033                     sprintf@fmt:
   598                           	callstack 0
   599   000033                     lastSunday@daysBeforeOctober:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x32
   603   000033                     	ds	2
   604   000035                     lastSunday@dayOfYearForDSTEnd:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x34
   608   000035                     	ds	2
   609   000037                     _lastSunday$2264:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x36
   613   000037                     	ds	2
   614   000039                     _lastSunday$1178:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x38
   618   000039                     	ds	1
   619   00003A                     sprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x39
   623   00003A                     	ds	1
   624   00003B                     _lastSunday$1181:
   625                           	callstack 0
   626   00003B                     sprintf@f:
   627                           	callstack 0
   628                           
   629                           ; 12 bytes @ 0x3A
   630   00003B                     	ds	2
   631   00003D                     lastSunday@leapYear:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x3C
   635   00003D                     	ds	2
   636   00003F                     lastSunday@lastSundayDateMonth:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x3E
   640   00003F                     	ds	2
   641   000041                     findDSTdates@hour:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x40
   645   000041                     	ds	2
   646   000043                     findDSTdates@day:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x42
   650   000043                     	ds	2
   651   000045                     findDSTdates@year:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x44
   655   000045                     	ds	2
   656   000047                     findDSTdates@fwd_daylight_savings_day:
   657                           	callstack 0
   658   000047                     time2String@buf:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x46
   662   000047                     	ds	1
   663   000048                     findDSTdates@bkwd_daylight_savings_day:
   664                           	callstack 0
   665   000048                     time2String@h:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x47
   669   000048                     	ds	1
   670   000049                     
   671                           ; 1 bytes @ 0x48
   672   000049                     	ds	1
   673   00004A                     time2String@day:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x49
   677   00004A                     	ds	2
   678   00004C                     time2String@year:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x4B
   682   00004C                     	ds	2
   683   00004E                     ??_time2String:
   684                           
   685                           ; 1 bytes @ 0x4D
   686   00004E                     	ds	2
   687   000050                     
   688                           ; 1 bytes @ 0x4F
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   691 ;;
   692 ;; *************** function _main *****************
   693 ;; Defined at:
   694 ;;		line 20 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  buf            32    0[BANK0 ] unsigned char [32]
   699 ;;  day             2   40[BANK0 ] unsigned int 
   700 ;;  year            2   38[BANK0 ] unsigned int 
   701 ;;  backward_zon    2   36[BANK0 ] unsigned int 
   702 ;;  bkwd_dayligh    2   34[BANK0 ] unsigned int 
   703 ;;  fwd_daylight    2   32[BANK0 ] unsigned int 
   704 ;;  daylight_sav    2    0        unsigned int 
   705 ;;  leap            2    0        unsigned int 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   718 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   719 ;;Total ram usage:       42 bytes
   720 ;; Hardware stack levels required when called: 11
   721 ;; This function calls:
   722 ;;		_LCD_setline
   723 ;;		_LEDarray_disp_bin
   724 ;;		_changeHourDayYear
   725 ;;		_findDSTdates
   726 ;;		_increaseHour
   727 ;;		_initialise
   728 ;;		_time2String
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text0
   735   00157C                     __ptext0:
   736                           	callstack 0
   737   00157C                     _main:
   738                           	callstack 20
   739   00157C                     
   740                           ;main.c: 23:     unsigned int day = 364;
   741   00157C  0E01               	movlw	1
   742   00157E  0100               	movlb	0	; () banked
   743   001580  6F89               	movwf	(main@day+1)& (0+255),b
   744   001582  0E6C               	movlw	108
   745   001584  6F88               	movwf	main@day& (0+255),b
   746                           
   747                           ;main.c: 24:     unsigned int year = 2024;
   748   001586  0E07               	movlw	7
   749   001588  6F87               	movwf	(main@year+1)& (0+255),b
   750   00158A  0EE8               	movlw	232
   751   00158C  6F86               	movwf	main@year& (0+255),b
   752                           
   753                           ;main.c: 25:     unsigned int leap;;main.c: 26:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 27:     unsigned int bkwd_daylight_savings_day;;main.c: 28:     unsigned int 
      +                          backward_zone = 0;
   754   00158E  0E00               	movlw	0
   755   001590  6F85               	movwf	(main@backward_zone+1)& (0+255),b
   756   001592  0E00               	movlw	0
   757   001594  6F84               	movwf	main@backward_zone& (0+255),b
   758   001596                     
   759                           ; BSR set to: 0
   760                           ;main.c: 29:     char buf[32];;main.c: 31:     initialise();
   761   001596  EC87  F00F         	call	_initialise	;wreg free
   762   00159A                     l2465:
   763                           
   764                           ;main.c: 35:         LEDarray_disp_bin(hour);
   765   00159A  C0AA  F004         	movff	_hour,LEDarray_disp_bin@number
   766   00159E  C0AB  F005         	movff	_hour+1,LEDarray_disp_bin@number+1
   767   0015A2  EC97  F009         	call	_LEDarray_disp_bin	;wreg free
   768   0015A6                     
   769                           ;main.c: 37:         LCD_setline(1);
   770   0015A6  0E01               	movlw	1
   771   0015A8  ECAA  F00E         	call	_LCD_setline
   772   0015AC                     
   773                           ;main.c: 39:         time2String(buf,hour,day,year);
   774   0015AC  0E60               	movlw	low main@buf
   775   0015AE  6E47               	movwf	time2String@buf^0,c
   776   0015B0  C0AA  F048         	movff	_hour,time2String@h
   777   0015B4  C0AB  F049         	movff	_hour+1,time2String@h+1
   778   0015B8  C088  F04A         	movff	main@day,time2String@day
   779   0015BC  C089  F04B         	movff	main@day+1,time2String@day+1
   780   0015C0  C086  F04C         	movff	main@year,time2String@year
   781   0015C4  C087  F04D         	movff	main@year+1,time2String@year+1
   782   0015C8  ECF9  F00C         	call	_time2String	;wreg free
   783   0015CC                     
   784                           ;main.c: 41:         findDSTdates(hour, day, year,&fwd_daylight_savings_day, &bkwd_dayli
      +                          ght_savings_day);
   785   0015CC  C0AA  F041         	movff	_hour,findDSTdates@hour
   786   0015D0  C0AB  F042         	movff	_hour+1,findDSTdates@hour+1
   787   0015D4  C088  F043         	movff	main@day,findDSTdates@day
   788   0015D8  C089  F044         	movff	main@day+1,findDSTdates@day+1
   789   0015DC  C086  F045         	movff	main@year,findDSTdates@year
   790   0015E0  C087  F046         	movff	main@year+1,findDSTdates@year+1
   791   0015E4  0E80               	movlw	low main@fwd_daylight_savings_day
   792   0015E6  6E47               	movwf	findDSTdates@fwd_daylight_savings_day^0,c
   793   0015E8  0E82               	movlw	low main@bkwd_daylight_savings_day
   794   0015EA  6E48               	movwf	findDSTdates@bkwd_daylight_savings_day^0,c
   795   0015EC  ECB2  F00D         	call	_findDSTdates	;wreg free
   796   0015F0                     
   797                           ;main.c: 43:         increaseHour(day, fwd_daylight_savings_day, bkwd_daylight_savings_d
      +                          ay, &hour, &backward_zone);
   798   0015F0  C088  F004         	movff	main@day,increaseHour@day
   799   0015F4  C089  F005         	movff	main@day+1,increaseHour@day+1
   800   0015F8  C080  F006         	movff	main@fwd_daylight_savings_day,increaseHour@fwd_daylight_savings_day
   801   0015FC  C081  F007         	movff	main@fwd_daylight_savings_day+1,increaseHour@fwd_daylight_savings_day+1
   802   001600  C082  F008         	movff	main@bkwd_daylight_savings_day,increaseHour@bkwd_daylight_savings_day
   803   001604  C083  F009         	movff	main@bkwd_daylight_savings_day+1,increaseHour@bkwd_daylight_savings_day+1
   804   001608  0EAA               	movlw	low _hour
   805   00160A  6E0A               	movwf	increaseHour@hour^0,c
   806   00160C  0E84               	movlw	low main@backward_zone
   807   00160E  6E0B               	movwf	increaseHour@backward_zone^0,c
   808   001610  ECC5  F00B         	call	_increaseHour	;wreg free
   809   001614                     
   810                           ;main.c: 45:         changeHourDayYear(&hour, &day, &year);
   811   001614  0EAA               	movlw	low _hour
   812   001616  6E1B               	movwf	changeHourDayYear@hour^0,c
   813   001618  0E88               	movlw	low main@day
   814   00161A  6E1C               	movwf	changeHourDayYear@day^0,c
   815   00161C  0E86               	movlw	low main@year
   816   00161E  6E1D               	movwf	changeHourDayYear@year^0,c
   817   001620  EC5D  F00A         	call	_changeHourDayYear	;wreg free
   818   001624  EFCD  F00A         	goto	l2465
   819   001628  EF3E  F000         	goto	start
   820   00162C                     __end_of_main:
   821                           	callstack 0
   822                           
   823 ;; *************** function _time2String *****************
   824 ;; Defined at:
   825 ;;		line 152 in file "LCD.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  buf             1   70[COMRAM] PTR unsigned char 
   828 ;;		 -> main@buf(32), 
   829 ;;  h               2   71[COMRAM] unsigned int 
   830 ;;  day             2   73[COMRAM] unsigned int 
   831 ;;  year            2   75[COMRAM] unsigned int 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   843 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;Total ram usage:        9 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 10
   850 ;; This function calls:
   851 ;;		_LCD_sendstring
   852 ;;		_sprintf
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text1
   859   0019F2                     __ptext1:
   860                           	callstack 0
   861   0019F2                     _time2String:
   862                           	callstack 20
   863   0019F2                     
   864                           ;LCD.c: 153:     if (h<=9){
   865   0019F2  5049               	movf	(time2String@h+1)^0,w,c
   866   0019F4  E107               	bnz	u1661
   867   0019F6  0E0A               	movlw	10
   868   0019F8  5C48               	subwf	time2String@h^0,w,c
   869   0019FA  B0D8               	btfsc	status,0,c
   870   0019FC  EF02  F00D         	goto	u1661
   871   001A00  EF04  F00D         	goto	u1660
   872   001A04                     u1661:
   873   001A04  EF18  F00D         	goto	l2409
   874   001A08                     u1660:
   875   001A08                     
   876                           ;LCD.c: 154:         sprintf(buf,"h=0%d %d %d",h,day,year);
   877   001A08  C047  F032         	movff	time2String@buf,sprintf@s
   878   001A0C  0E13               	movlw	low STR_2
   879   001A0E  6E33               	movwf	sprintf@fmt^0,c
   880   001A10  C048  F034         	movff	time2String@h,?_sprintf+2
   881   001A14  C049  F035         	movff	time2String@h+1,?_sprintf+3
   882   001A18  C04A  F036         	movff	time2String@day,?_sprintf+4
   883   001A1C  C04B  F037         	movff	time2String@day+1,?_sprintf+5
   884   001A20  C04C  F038         	movff	time2String@year,?_sprintf+6
   885   001A24  C04D  F039         	movff	time2String@year+1,?_sprintf+7
   886   001A28  ECC7  F00E         	call	_sprintf	;wreg free
   887                           
   888                           ;LCD.c: 155:     }
   889   001A2C  EF2A  F00D         	goto	l2411
   890   001A30                     l2409:
   891   001A30  C047  F032         	movff	time2String@buf,sprintf@s
   892   001A34  0E1F               	movlw	low STR_3
   893   001A36  6E33               	movwf	sprintf@fmt^0,c
   894   001A38  C048  F034         	movff	time2String@h,?_sprintf+2
   895   001A3C  C049  F035         	movff	time2String@h+1,?_sprintf+3
   896   001A40  C04A  F036         	movff	time2String@day,?_sprintf+4
   897   001A44  C04B  F037         	movff	time2String@day+1,?_sprintf+5
   898   001A48  C04C  F038         	movff	time2String@year,?_sprintf+6
   899   001A4C  C04D  F039         	movff	time2String@year+1,?_sprintf+7
   900   001A50  ECC7  F00E         	call	_sprintf	;wreg free
   901   001A54                     l2411:
   902                           
   903                           ;LCD.c: 157:     LCD_sendstring(buf);
   904   001A54  C047  F009         	movff	time2String@buf,LCD_sendstring@string
   905   001A58  ECFB  F00E         	call	_LCD_sendstring	;wreg free
   906   001A5C                     
   907                           ;LCD.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
   908   001A5C  0E11               	movlw	17
   909   001A5E  6E4F               	movwf	(??_time2String+1)^0,c
   910   001A60  0E3C               	movlw	60
   911   001A62  6E4E               	movwf	??_time2String^0,c
   912   001A64  0ECB               	movlw	203
   913   001A66                     u1857:
   914   001A66  2EE8               	decfsz	wreg,f,c
   915   001A68  D7FE               	bra	u1857
   916   001A6A  2E4E               	decfsz	??_time2String^0,f,c
   917   001A6C  D7FC               	bra	u1857
   918   001A6E  2E4F               	decfsz	(??_time2String+1)^0,f,c
   919   001A70  D7FA               	bra	u1857
   920   001A72  0000               	nop	
   921   001A74  0012               	return		;funcret
   922   001A76                     __end_of_time2String:
   923                           	callstack 0
   924                           
   925 ;; *************** function _sprintf *****************
   926 ;; Defined at:
   927 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  s               1   49[COMRAM] PTR unsigned char 
   930 ;;		 -> main@buf(32), 
   931 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
   932 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  f              12   58[COMRAM] struct _IO_FILE
   935 ;;  ret             2    0        int 
   936 ;;  ap              1   57[COMRAM] PTR void [1]
   937 ;;		 -> ?_sprintf(2), 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2   49[COMRAM] int 
   940 ;; Registers used:
   941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;Total ram usage:       21 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 9
   954 ;; This function calls:
   955 ;;		_vfprintf
   956 ;; This function is called by:
   957 ;;		_time2String
   958 ;;		_ADC2String
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text2
   963   001D8E                     __ptext2:
   964                           	callstack 0
   965   001D8E                     _sprintf:
   966                           	callstack 20
   967   001D8E  0E34               	movlw	low (?_sprintf+2)
   968   001D90  6E3A               	movwf	sprintf@ap^0,c
   969   001D92  C032  F03B         	movff	sprintf@s,sprintf@f
   970   001D96  0E00               	movlw	0
   971   001D98  6E3F               	movwf	(sprintf@f+4)^0,c
   972   001D9A  0E00               	movlw	0
   973   001D9C  6E3E               	movwf	(sprintf@f+3)^0,c
   974   001D9E  0E00               	movlw	0
   975   001DA0  6E46               	movwf	(sprintf@f+11)^0,c
   976   001DA2  0E00               	movlw	0
   977   001DA4  6E45               	movwf	(sprintf@f+10)^0,c
   978   001DA6  0E3B               	movlw	low sprintf@f
   979   001DA8  6E2E               	movwf	vfprintf@fp^0,c
   980   001DAA  C033  F02F         	movff	sprintf@fmt,vfprintf@fmt
   981   001DAE  0E3A               	movlw	low sprintf@ap
   982   001DB0  6E30               	movwf	vfprintf@ap^0,c
   983   001DB2  EC4D  F00E         	call	_vfprintf	;wreg free
   984   001DB6  5032               	movf	sprintf@s^0,w,c
   985   001DB8  243E               	addwf	(sprintf@f+3)^0,w,c
   986   001DBA  6ED9               	movwf	fsr2l,c
   987   001DBC  6ADA               	clrf	fsr2h,c
   988   001DBE  6ADF               	clrf	indf2,c
   989   001DC0  0012               	return		;funcret
   990   001DC2                     __end_of_sprintf:
   991                           	callstack 0
   992                           
   993 ;; *************** function _vfprintf *****************
   994 ;; Defined at:
   995 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
   998 ;;		 -> sprintf@f(12), 
   999 ;;  fmt             1   46[COMRAM] PTR const unsigned char 
  1000 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1001 ;;  ap              1   47[COMRAM] PTR PTR void 
  1002 ;;		 -> sprintf@ap(1), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  cfmt            1   48[COMRAM] PTR unsigned char 
  1005 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  2   45[COMRAM] int 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1015 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1019 ;;Total ram usage:        4 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 8
  1022 ;; This function calls:
  1023 ;;		_vfpfcnvrt
  1024 ;; This function is called by:
  1025 ;;		_sprintf
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text3
  1030   001C9A                     __ptext3:
  1031                           	callstack 0
  1032   001C9A                     _vfprintf:
  1033                           	callstack 20
  1034   001C9A                     
  1035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1036   001C9A  C02F  F031         	movff	vfprintf@fmt,vfprintf@cfmt
  1037                           
  1038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1039   001C9E  EF59  F00E         	goto	l2201
  1040   001CA2                     l2199:
  1041                           
  1042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1043   001CA2  C02E  F023         	movff	vfprintf@fp,vfpfcnvrt@fp
  1044   001CA6  0E31               	movlw	low vfprintf@cfmt
  1045   001CA8  6E24               	movwf	vfpfcnvrt@fmt^0,c
  1046   001CAA  C030  F025         	movff	vfprintf@ap,vfpfcnvrt@ap
  1047   001CAE  EC22  F008         	call	_vfpfcnvrt	;wreg free
  1048   001CB2                     l2201:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1051   001CB2  C031  FFF6         	movff	vfprintf@cfmt,tblptrl
  1052   001CB6                     	if	1	;There is more than 1 active tblptr byte
  1053   001CB6  0E0E               	movlw	high __smallconst
  1054   001CB8  6EF7               	movwf	tblptrh,c
  1055   001CBA                     	endif
  1056   001CBA                     	if	0	;tblptru may be non-zero
  1057   001CBA                     	endif
  1058   001CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1059   001CBA  0E00               	movlw	low (__smallconst shr (0+16))
  1060   001CBC  6EF8               	movwf	tblptru,c
  1061   001CBE                     	endif
  1062   001CBE  0008               	tblrd		*
  1063   001CC0  50F5               	movf	tablat,w,c
  1064   001CC2  0900               	iorlw	0
  1065   001CC4  A4D8               	btfss	status,2,c
  1066   001CC6  EF67  F00E         	goto	u1491
  1067   001CCA  EF69  F00E         	goto	u1490
  1068   001CCE                     u1491:
  1069   001CCE  EF51  F00E         	goto	l2199
  1070   001CD2                     u1490:
  1071   001CD2                     
  1072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1073   001CD2  0E00               	movlw	0
  1074   001CD4  6E2F               	movwf	(?_vfprintf+1)^0,c
  1075   001CD6  0E00               	movlw	0
  1076   001CD8  6E2E               	movwf	?_vfprintf^0,c
  1077   001CDA  0012               	return		;funcret
  1078   001CDC                     __end_of_vfprintf:
  1079                           	callstack 0
  1080                           
  1081 ;; *************** function _vfpfcnvrt *****************
  1082 ;; Defined at:
  1083 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  fp              1   34[COMRAM] PTR struct _IO_FILE
  1086 ;;		 -> sprintf@f(12), 
  1087 ;;  fmt             1   35[COMRAM] PTR PTR unsigned char 
  1088 ;;		 -> vfprintf@cfmt(1), 
  1089 ;;  ap              1   36[COMRAM] PTR PTR void 
  1090 ;;		 -> sprintf@ap(1), 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  convarg         4   39[COMRAM] struct .
  1093 ;;  cp              1   44[COMRAM] PTR unsigned char 
  1094 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1095 ;;  done            1   43[COMRAM] _Bool 
  1096 ;;  c               1    0        unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1109 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1110 ;;Total ram usage:       11 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 7
  1113 ;; This function calls:
  1114 ;;		_dtoa
  1115 ;;		_fputc
  1116 ;;		_read_prec_or_width
  1117 ;; This function is called by:
  1118 ;;		_vfprintf
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text4
  1123   001044                     __ptext4:
  1124                           	callstack 0
  1125   001044                     _vfpfcnvrt:
  1126                           	callstack 20
  1127   001044                     
  1128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1129   001044  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1130   001046  6ED9               	movwf	fsr2l,c
  1131   001048  6ADA               	clrf	fsr2h,c
  1132   00104A  CFDF FFF6          	movff	indf2,tblptrl
  1133   00104E                     	if	1	;There is more than 1 active tblptr byte
  1134   00104E  0E0E               	movlw	high __smallconst
  1135   001050  6EF7               	movwf	tblptrh,c
  1136   001052                     	endif
  1137   001052                     	if	0	;tblptru may be non-zero
  1138   001052                     	endif
  1139   001052                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1140   001052  0E00               	movlw	low (__smallconst shr (0+16))
  1141   001054  6EF8               	movwf	tblptru,c
  1142   001056                     	endif
  1143   001056  0008               	tblrd		*
  1144   001058  50F5               	movf	tablat,w,c
  1145   00105A  0A25               	xorlw	37
  1146   00105C  A4D8               	btfss	status,2,c
  1147   00105E  EF33  F008         	goto	u1371
  1148   001062  EF35  F008         	goto	u1370
  1149   001066                     u1371:
  1150   001066  EFCF  F008         	goto	l2133
  1151   00106A                     u1370:
  1152   00106A                     
  1153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1154   00106A  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1155   00106C  6ED9               	movwf	fsr2l,c
  1156   00106E  6ADA               	clrf	fsr2h,c
  1157   001070  2ADF               	incf	indf2,f,c
  1158   001072                     
  1159                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1160   001072  0E00               	movlw	0
  1161   001074  6E55               	movwf	(_width+1)^0,c
  1162   001076  0E00               	movlw	0
  1163   001078  6E54               	movwf	_width^0,c
  1164   00107A  C054  F058         	movff	_width,_flags
  1165   00107E                     
  1166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1167   00107E  6856               	setf	_prec^0,c
  1168   001080  6857               	setf	(_prec+1)^0,c
  1169   001082                     
  1170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1171   001082  0E00               	movlw	0
  1172   001084  6E2C               	movwf	vfpfcnvrt@done^0,c
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1175   001086  EF6B  F008         	goto	l2107
  1176   00108A                     l2097:
  1177                           
  1178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1179   00108A  8258               	bsf	_flags^0,1,c
  1180   00108C                     
  1181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1182   00108C  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1183   00108E  6ED9               	movwf	fsr2l,c
  1184   001090  6ADA               	clrf	fsr2h,c
  1185   001092  2ADF               	incf	indf2,f,c
  1186                           
  1187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1188   001094  EF6B  F008         	goto	l2107
  1189   001098                     l2101:
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1192   001098  0E01               	movlw	1
  1193   00109A  6E2C               	movwf	vfpfcnvrt@done^0,c
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1196   00109C  EF6B  F008         	goto	l2107
  1197   0010A0                     l2105:
  1198   0010A0  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1199   0010A2  6ED9               	movwf	fsr2l,c
  1200   0010A4  6ADA               	clrf	fsr2h,c
  1201   0010A6  CFDF FFF6          	movff	indf2,tblptrl
  1202   0010AA                     	if	1	;There is more than 1 active tblptr byte
  1203   0010AA  0E0E               	movlw	high __smallconst
  1204   0010AC  6EF7               	movwf	tblptrh,c
  1205   0010AE                     	endif
  1206   0010AE                     	if	0	;tblptru may be non-zero
  1207   0010AE                     	endif
  1208   0010AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1209   0010AE  0E00               	movlw	low (__smallconst shr (0+16))
  1210   0010B0  6EF8               	movwf	tblptru,c
  1211   0010B2                     	endif
  1212   0010B2  0008               	tblrd		*
  1213   0010B4  50F5               	movf	tablat,w,c
  1214   0010B6  6E26               	movwf	??_vfpfcnvrt^0,c
  1215   0010B8  6A27               	clrf	(??_vfpfcnvrt+1)^0,c
  1216                           
  1217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 1, Range of values is 0 to 0
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte            4     3 (average)
  1223                           ;	Chosen strategy is simple_byte
  1224   0010BA  5027               	movf	(??_vfpfcnvrt+1)^0,w,c
  1225   0010BC  0A00               	xorlw	0	; case 0
  1226   0010BE  B4D8               	btfsc	status,2,c
  1227   0010C0  EF64  F008         	goto	l2547
  1228   0010C4  EF4C  F008         	goto	l2101
  1229   0010C8                     l2547:
  1230                           
  1231                           ; Switch size 1, requested type "simple"
  1232                           ; Number of cases is 1, Range of values is 48 to 48
  1233                           ; switch strategies available:
  1234                           ; Name         Instructions Cycles
  1235                           ; simple_byte            4     3 (average)
  1236                           ;	Chosen strategy is simple_byte
  1237   0010C8  5026               	movf	??_vfpfcnvrt^0,w,c
  1238   0010CA  0A30               	xorlw	48	; case 48
  1239   0010CC  B4D8               	btfsc	status,2,c
  1240   0010CE  EF45  F008         	goto	l2097
  1241   0010D2  EF4C  F008         	goto	l2101
  1242   0010D6                     l2107:
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1245   0010D6  502C               	movf	vfpfcnvrt@done^0,w,c
  1246   0010D8  B4D8               	btfsc	status,2,c
  1247   0010DA  EF71  F008         	goto	u1381
  1248   0010DE  EF73  F008         	goto	u1380
  1249   0010E2                     u1381:
  1250   0010E2  EF50  F008         	goto	l2105
  1251   0010E6                     u1380:
  1252   0010E6                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1254   0010E6  C024  F00A         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1255   0010EA  C025  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1256   0010EE  EC6E  F00B         	call	_read_prec_or_width	;wreg free
  1257   0010F2  C00A  F054         	movff	?_read_prec_or_width,_width
  1258   0010F6  C00B  F055         	movff	?_read_prec_or_width+1,_width+1
  1259   0010FA                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1261   0010FA  BE55               	btfsc	(_width+1)^0,7,c
  1262   0010FC  EF84  F008         	goto	u1390
  1263   001100  EF82  F008         	goto	u1391
  1264   001104                     u1391:
  1265   001104  EF89  F008         	goto	l2115
  1266   001108                     u1390:
  1267   001108                     
  1268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1269   001108  8058               	bsf	_flags^0,0,c
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1272   00110A  6C54               	negf	_width^0,c
  1273   00110C  1E55               	comf	(_width+1)^0,f,c
  1274   00110E  B0D8               	btfsc	status,0,c
  1275   001110  2A55               	incf	(_width+1)^0,f,c
  1276   001112                     l2115:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1279   001112  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1280   001114  6ED9               	movwf	fsr2l,c
  1281   001116  6ADA               	clrf	fsr2h,c
  1282   001118  50DF               	movf	indf2,w,c
  1283   00111A  6E2D               	movwf	vfpfcnvrt@cp^0,c
  1284   00111C                     
  1285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1286   00111C  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1287   001120                     	if	1	;There is more than 1 active tblptr byte
  1288   001120  0E0E               	movlw	high __smallconst
  1289   001122  6EF7               	movwf	tblptrh,c
  1290   001124                     	endif
  1291   001124                     	if	0	;tblptru may be non-zero
  1292   001124                     	endif
  1293   001124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1294   001124  0E00               	movlw	low (__smallconst shr (0+16))
  1295   001126  6EF8               	movwf	tblptru,c
  1296   001128                     	endif
  1297   001128  0008               	tblrd		*
  1298   00112A  50F5               	movf	tablat,w,c
  1299   00112C  0A64               	xorlw	100
  1300   00112E  B4D8               	btfsc	status,2,c
  1301   001130  EF9C  F008         	goto	u1401
  1302   001134  EF9E  F008         	goto	u1400
  1303   001138                     u1401:
  1304   001138  EFAE  F008         	goto	l2121
  1305   00113C                     u1400:
  1306   00113C  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1307   001140                     	if	1	;There is more than 1 active tblptr byte
  1308   001140  0E0E               	movlw	high __smallconst
  1309   001142  6EF7               	movwf	tblptrh,c
  1310   001144                     	endif
  1311   001144                     	if	0	;tblptru may be non-zero
  1312   001144                     	endif
  1313   001144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1314   001144  0E00               	movlw	low (__smallconst shr (0+16))
  1315   001146  6EF8               	movwf	tblptru,c
  1316   001148                     	endif
  1317   001148  0008               	tblrd		*
  1318   00114A  50F5               	movf	tablat,w,c
  1319   00114C  0A69               	xorlw	105
  1320   00114E  A4D8               	btfss	status,2,c
  1321   001150  EFAC  F008         	goto	u1411
  1322   001154  EFAE  F008         	goto	u1410
  1323   001158                     u1411:
  1324   001158  EFC9  F008         	goto	l2129
  1325   00115C                     u1410:
  1326   00115C                     l2121:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1329   00115C  5025               	movf	vfpfcnvrt@ap^0,w,c
  1330   00115E  6ED9               	movwf	fsr2l,c
  1331   001160  6ADA               	clrf	fsr2h,c
  1332   001162  0E02               	movlw	2
  1333   001164  26DF               	addwf	indf2,f,c
  1334   001166  5CDF               	subwf	indf2,w,c
  1335   001168  6ED9               	movwf	fsr2l,c
  1336   00116A  6ADA               	clrf	fsr2h,c
  1337   00116C  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg
  1338   001170  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg+1
  1339   001174                     
  1340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1341   001174  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1342   001176  6ED9               	movwf	fsr2l,c
  1343   001178  6ADA               	clrf	fsr2h,c
  1344   00117A  282D               	incf	vfpfcnvrt@cp^0,w,c
  1345   00117C  6EDF               	movwf	indf2,c
  1346   00117E                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1348   00117E  C023  F018         	movff	vfpfcnvrt@fp,dtoa@fp
  1349   001182  C028  F019         	movff	vfpfcnvrt@convarg,dtoa@d
  1350   001186  C029  F01A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1351   00118A  ECE3  F008         	call	_dtoa	;wreg free
  1352   00118E  EFE2  F008         	goto	l1057
  1353   001192                     l2129:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1356   001192  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1357   001194  6ED9               	movwf	fsr2l,c
  1358   001196  6ADA               	clrf	fsr2h,c
  1359   001198  2ADF               	incf	indf2,f,c
  1360   00119A  EFE2  F008         	goto	l1057
  1361   00119E                     l2133:
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1364   00119E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1365   0011A0  6ED9               	movwf	fsr2l,c
  1366   0011A2  6ADA               	clrf	fsr2h,c
  1367   0011A4  CFDF FFF6          	movff	indf2,tblptrl
  1368   0011A8                     	if	1	;There is more than 1 active tblptr byte
  1369   0011A8  0E0E               	movlw	high __smallconst
  1370   0011AA  6EF7               	movwf	tblptrh,c
  1371   0011AC                     	endif
  1372   0011AC                     	if	0	;tblptru may be non-zero
  1373   0011AC                     	endif
  1374   0011AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1375   0011AC  0E00               	movlw	low (__smallconst shr (0+16))
  1376   0011AE  6EF8               	movwf	tblptru,c
  1377   0011B0                     	endif
  1378   0011B0  0008               	tblrd		*
  1379   0011B2  50F5               	movf	tablat,w,c
  1380   0011B4  6E04               	movwf	fputc@c^0,c
  1381   0011B6  6A05               	clrf	(fputc@c+1)^0,c
  1382   0011B8  C023  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1383   0011BC  EC1C  F00C         	call	_fputc	;wreg free
  1384   0011C0  EFC9  F008         	goto	l2129
  1385   0011C4                     l1057:
  1386   0011C4  0012               	return		;funcret
  1387   0011C6                     __end_of_vfpfcnvrt:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _read_prec_or_width *****************
  1391 ;; Defined at:
  1392 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  fmt             1    9[COMRAM] PTR PTR const unsigned c
  1395 ;;		 -> vfprintf@cfmt(1), 
  1396 ;;  ap              1   10[COMRAM] PTR PTR void [1]
  1397 ;;		 -> sprintf@ap(1), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  c               1   11[COMRAM] unsigned char 
  1400 ;;  n               2   12[COMRAM] int 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2    9[COMRAM] int 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;Total ram usage:        5 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 3
  1417 ;; This function calls:
  1418 ;;		___wmul
  1419 ;; This function is called by:
  1420 ;;		_vfpfcnvrt
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text5
  1425   0016DC                     __ptext5:
  1426                           	callstack 0
  1427   0016DC                     _read_prec_or_width:
  1428                           	callstack 23
  1429   0016DC                     
  1430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1431   0016DC  0E00               	movlw	0
  1432   0016DE  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1433   0016E0  0E00               	movlw	0
  1434   0016E2  6E0D               	movwf	read_prec_or_width@n^0,c
  1435   0016E4                     
  1436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1437   0016E4  500A               	movf	read_prec_or_width@fmt^0,w,c
  1438   0016E6  6ED9               	movwf	fsr2l,c
  1439   0016E8  6ADA               	clrf	fsr2h,c
  1440   0016EA  CFDF FFF6          	movff	indf2,tblptrl
  1441   0016EE                     	if	1	;There is more than 1 active tblptr byte
  1442   0016EE  0E0E               	movlw	high __smallconst
  1443   0016F0  6EF7               	movwf	tblptrh,c
  1444   0016F2                     	endif
  1445   0016F2                     	if	0	;tblptru may be non-zero
  1446   0016F2                     	endif
  1447   0016F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1448   0016F2  0E00               	movlw	low (__smallconst shr (0+16))
  1449   0016F4  6EF8               	movwf	tblptru,c
  1450   0016F6                     	endif
  1451   0016F6  0008               	tblrd		*
  1452   0016F8  50F5               	movf	tablat,w,c
  1453   0016FA  0A2A               	xorlw	42
  1454   0016FC  A4D8               	btfss	status,2,c
  1455   0016FE  EF83  F00B         	goto	u1281
  1456   001702  EF85  F00B         	goto	u1280
  1457   001706                     u1281:
  1458   001706  EFAB  F00B         	goto	l2049
  1459   00170A                     u1280:
  1460   00170A                     
  1461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1462   00170A  500A               	movf	read_prec_or_width@fmt^0,w,c
  1463   00170C  6ED9               	movwf	fsr2l,c
  1464   00170E  6ADA               	clrf	fsr2h,c
  1465   001710  2ADF               	incf	indf2,f,c
  1466   001712                     
  1467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1468   001712  500B               	movf	read_prec_or_width@ap^0,w,c
  1469   001714  6ED9               	movwf	fsr2l,c
  1470   001716  6ADA               	clrf	fsr2h,c
  1471   001718  0E02               	movlw	2
  1472   00171A  26DF               	addwf	indf2,f,c
  1473   00171C  5CDF               	subwf	indf2,w,c
  1474   00171E  6ED9               	movwf	fsr2l,c
  1475   001720  6ADA               	clrf	fsr2h,c
  1476   001722  CFDE F00D          	movff	postinc2,read_prec_or_width@n
  1477   001726  CFDE F00E          	movff	postinc2,read_prec_or_width@n+1
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1480   00172A  EFC0  F00B         	goto	l1038
  1481   00172E                     l2045:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1484   00172E  C00D  F004         	movff	read_prec_or_width@n,___wmul@multiplier
  1485   001732  C00E  F005         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1486   001736  0E00               	movlw	0
  1487   001738  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  1488   00173A  0E0A               	movlw	10
  1489   00173C  6E06               	movwf	___wmul@multiplicand^0,c
  1490   00173E  EC3F  F00F         	call	___wmul	;wreg free
  1491   001742  500C               	movf	read_prec_or_width@c^0,w,c
  1492   001744  2404               	addwf	?___wmul^0,w,c
  1493   001746  6E0D               	movwf	read_prec_or_width@n^0,c
  1494   001748  0E00               	movlw	0
  1495   00174A  2005               	addwfc	(?___wmul+1)^0,w,c
  1496   00174C  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1497   00174E                     
  1498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1499   00174E  500A               	movf	read_prec_or_width@fmt^0,w,c
  1500   001750  6ED9               	movwf	fsr2l,c
  1501   001752  6ADA               	clrf	fsr2h,c
  1502   001754  2ADF               	incf	indf2,f,c
  1503   001756                     l2049:
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1506   001756  500A               	movf	read_prec_or_width@fmt^0,w,c
  1507   001758  6ED9               	movwf	fsr2l,c
  1508   00175A  6ADA               	clrf	fsr2h,c
  1509   00175C  CFDF FFF6          	movff	indf2,tblptrl
  1510   001760                     	if	1	;There is more than 1 active tblptr byte
  1511   001760  0E0E               	movlw	high __smallconst
  1512   001762  6EF7               	movwf	tblptrh,c
  1513   001764                     	endif
  1514   001764                     	if	0	;tblptru may be non-zero
  1515   001764                     	endif
  1516   001764                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1517   001764  0E00               	movlw	low (__smallconst shr (0+16))
  1518   001766  6EF8               	movwf	tblptru,c
  1519   001768                     	endif
  1520   001768  0008               	tblrd		*
  1521   00176A  50F5               	movf	tablat,w,c
  1522   00176C  0FD0               	addlw	208
  1523   00176E  6E0C               	movwf	read_prec_or_width@c^0,c
  1524   001770  0E09               	movlw	9
  1525   001772  640C               	cpfsgt	read_prec_or_width@c^0,c
  1526   001774  EFBE  F00B         	goto	u1291
  1527   001778  EFC0  F00B         	goto	u1290
  1528   00177C                     u1291:
  1529   00177C  EF97  F00B         	goto	l2045
  1530   001780                     u1290:
  1531   001780                     l1038:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1534   001780  C00D  F00A         	movff	read_prec_or_width@n,?_read_prec_or_width
  1535   001784  C00E  F00B         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1536   001788  0012               	return		;funcret
  1537   00178A                     __end_of_read_prec_or_width:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _dtoa *****************
  1541 ;; Defined at:
  1542 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1545 ;;		 -> sprintf@f(12), 
  1546 ;;  d               2   24[COMRAM] int 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  i               2   32[COMRAM] int 
  1549 ;;  w               2   29[COMRAM] int 
  1550 ;;  s               1   31[COMRAM] unsigned char 
  1551 ;;  p               1   28[COMRAM] _Bool 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1561 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;Total ram usage:       11 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 6
  1568 ;; This function calls:
  1569 ;;		___awdiv
  1570 ;;		___awmod
  1571 ;;		_abs
  1572 ;;		_pad
  1573 ;; This function is called by:
  1574 ;;		_vfpfcnvrt
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text6
  1579   0011C6                     __ptext6:
  1580                           	callstack 0
  1581   0011C6                     _dtoa:
  1582                           	callstack 20
  1583   0011C6                     
  1584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1585   0011C6  0E01               	movlw	1
  1586   0011C8  6E1D               	movwf	dtoa@p^0,c
  1587   0011CA                     
  1588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1589   0011CA  BE1A               	btfsc	(dtoa@d+1)^0,7,c
  1590   0011CC  EFEA  F008         	goto	u1181
  1591   0011D0  EFED  F008         	goto	u1180
  1592   0011D4                     u1181:
  1593   0011D4  0E01               	movlw	1
  1594   0011D6  EFEE  F008         	goto	u1190
  1595   0011DA                     u1180:
  1596   0011DA  0E00               	movlw	0
  1597   0011DC                     u1190:
  1598   0011DC  6E20               	movwf	dtoa@s^0,c
  1599   0011DE                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1601   0011DE  C054  F01E         	movff	_width,dtoa@w
  1602   0011E2  C055  F01F         	movff	_width+1,dtoa@w+1
  1603   0011E6                     
  1604                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1605   0011E6  5020               	movf	dtoa@s^0,w,c
  1606   0011E8  B4D8               	btfsc	status,2,c
  1607   0011EA  EFF9  F008         	goto	u1201
  1608   0011EE  EFFB  F008         	goto	u1200
  1609   0011F2                     u1201:
  1610   0011F2  EF12  F009         	goto	l1021
  1611   0011F6                     u1200:
  1612   0011F6                     
  1613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1614   0011F6  061E               	decf	dtoa@w^0,f,c
  1615   0011F8  A0D8               	btfss	status,0,c
  1616   0011FA  061F               	decf	(dtoa@w+1)^0,f,c
  1617   0011FC                     
  1618                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1619   0011FC  5020               	movf	dtoa@s^0,w,c
  1620   0011FE  A4D8               	btfss	status,2,c
  1621   001200  EF04  F009         	goto	u1211
  1622   001204  EF06  F009         	goto	u1210
  1623   001208                     u1211:
  1624   001208  EF0C  F009         	goto	l2001
  1625   00120C                     u1210:
  1626   00120C  0E00               	movlw	0
  1627   00120E  6E1C               	movwf	(_dtoa$1967+1)^0,c
  1628   001210  0E2B               	movlw	43
  1629   001212  6E1B               	movwf	_dtoa$1967^0,c
  1630   001214  EF10  F009         	goto	l2003
  1631   001218                     l2001:
  1632   001218  0E00               	movlw	0
  1633   00121A  6E1C               	movwf	(_dtoa$1967+1)^0,c
  1634   00121C  0E2D               	movlw	45
  1635   00121E  6E1B               	movwf	_dtoa$1967^0,c
  1636   001220                     l2003:
  1637   001220  C01B  F020         	movff	_dtoa$1967,dtoa@s
  1638   001224                     l1021:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1641   001224  0E00               	movlw	0
  1642   001226  6E22               	movwf	(dtoa@i+1)^0,c
  1643   001228  0E1F               	movlw	31
  1644   00122A  6E21               	movwf	dtoa@i^0,c
  1645   00122C                     
  1646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1647   00122C  0E00               	movlw	0
  1648   00122E  0100               	movlb	0	; () banked
  1649   001230  6FA9               	movwf	(_dbuf+31)& (0+255),b
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1652   001232  EF48  F009         	goto	l2017
  1653   001236                     l2007:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1656   001236  0621               	decf	dtoa@i^0,f,c
  1657   001238  A0D8               	btfss	status,0,c
  1658   00123A  0622               	decf	(dtoa@i+1)^0,f,c
  1659   00123C                     
  1660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1661   00123C  5021               	movf	dtoa@i^0,w,c
  1662   00123E  0F8A               	addlw	low _dbuf
  1663   001240  6ED9               	movwf	fsr2l,c
  1664   001242  6ADA               	clrf	fsr2h,c
  1665   001244  C019  F004         	movff	dtoa@d,___awmod@dividend
  1666   001248  C01A  F005         	movff	dtoa@d+1,___awmod@dividend+1
  1667   00124C  0E00               	movlw	0
  1668   00124E  6E07               	movwf	(___awmod@divisor+1)^0,c
  1669   001250  0E0A               	movlw	10
  1670   001252  6E06               	movwf	___awmod@divisor^0,c
  1671   001254  EC16  F00B         	call	___awmod	;wreg free
  1672   001258  C004  F00A         	movff	?___awmod,abs@a
  1673   00125C  C005  F00B         	movff	?___awmod+1,abs@a+1
  1674   001260  ECE1  F00E         	call	_abs	;wreg free
  1675   001264  500A               	movf	?_abs^0,w,c
  1676   001266  0F30               	addlw	48
  1677   001268  6EDF               	movwf	indf2,c
  1678   00126A                     
  1679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1680   00126A  0E00               	movlw	0
  1681   00126C  6E1D               	movwf	dtoa@p^0,c
  1682   00126E                     
  1683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1684   00126E  061E               	decf	dtoa@w^0,f,c
  1685   001270  A0D8               	btfss	status,0,c
  1686   001272  061F               	decf	(dtoa@w+1)^0,f,c
  1687   001274                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1689   001274  C019  F004         	movff	dtoa@d,___awdiv@dividend
  1690   001278  C01A  F005         	movff	dtoa@d+1,___awdiv@dividend+1
  1691   00127C  0E00               	movlw	0
  1692   00127E  6E07               	movwf	(___awdiv@divisor+1)^0,c
  1693   001280  0E0A               	movlw	10
  1694   001282  6E06               	movwf	___awdiv@divisor^0,c
  1695   001284  ECFB  F009         	call	___awdiv	;wreg free
  1696   001288  C004  F019         	movff	?___awdiv,dtoa@d
  1697   00128C  C005  F01A         	movff	?___awdiv+1,dtoa@d+1
  1698   001290                     l2017:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1701   001290  BE22               	btfsc	(dtoa@i+1)^0,7,c
  1702   001292  EF53  F009         	goto	u1221
  1703   001296  5022               	movf	(dtoa@i+1)^0,w,c
  1704   001298  E108               	bnz	u1220
  1705   00129A  0421               	decf	dtoa@i^0,w,c
  1706   00129C  A0D8               	btfss	status,0,c
  1707   00129E  EF53  F009         	goto	u1221
  1708   0012A2  EF55  F009         	goto	u1220
  1709   0012A6                     u1221:
  1710   0012A6  EF7A  F009         	goto	l2027
  1711   0012AA                     u1220:
  1712   0012AA  5019               	movf	dtoa@d^0,w,c
  1713   0012AC  101A               	iorwf	(dtoa@d+1)^0,w,c
  1714   0012AE  A4D8               	btfss	status,2,c
  1715   0012B0  EF5C  F009         	goto	u1231
  1716   0012B4  EF5E  F009         	goto	u1230
  1717   0012B8                     u1231:
  1718   0012B8  EF1B  F009         	goto	l2007
  1719   0012BC                     u1230:
  1720   0012BC  501D               	movf	dtoa@p^0,w,c
  1721   0012BE  A4D8               	btfss	status,2,c
  1722   0012C0  EF64  F009         	goto	u1241
  1723   0012C4  EF66  F009         	goto	u1240
  1724   0012C8                     u1241:
  1725   0012C8  EF1B  F009         	goto	l2007
  1726   0012CC                     u1240:
  1727   0012CC  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  1728   0012CE  EF71  F009         	goto	u1251
  1729   0012D2  501F               	movf	(dtoa@w+1)^0,w,c
  1730   0012D4  E108               	bnz	u1250
  1731   0012D6  041E               	decf	dtoa@w^0,w,c
  1732   0012D8  A0D8               	btfss	status,0,c
  1733   0012DA  EF71  F009         	goto	u1251
  1734   0012DE  EF73  F009         	goto	u1250
  1735   0012E2                     u1251:
  1736   0012E2  EF7A  F009         	goto	l2027
  1737   0012E6                     u1250:
  1738   0012E6  B258               	btfsc	_flags^0,1,c
  1739   0012E8  EF78  F009         	goto	u1261
  1740   0012EC  EF7A  F009         	goto	u1260
  1741   0012F0                     u1261:
  1742   0012F0  EF1B  F009         	goto	l2007
  1743   0012F4                     u1260:
  1744   0012F4                     l2027:
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1747   0012F4  5020               	movf	dtoa@s^0,w,c
  1748   0012F6  B4D8               	btfsc	status,2,c
  1749   0012F8  EF80  F009         	goto	u1271
  1750   0012FC  EF82  F009         	goto	u1270
  1751   001300                     u1271:
  1752   001300  EF8B  F009         	goto	l2033
  1753   001304                     u1270:
  1754   001304                     
  1755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1756   001304  0621               	decf	dtoa@i^0,f,c
  1757   001306  A0D8               	btfss	status,0,c
  1758   001308  0622               	decf	(dtoa@i+1)^0,f,c
  1759   00130A                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1761   00130A  5021               	movf	dtoa@i^0,w,c
  1762   00130C  0F8A               	addlw	low _dbuf
  1763   00130E  6ED9               	movwf	fsr2l,c
  1764   001310  6ADA               	clrf	fsr2h,c
  1765   001312  C020  FFDF         	movff	dtoa@s,indf2
  1766   001316                     l2033:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1769   001316  C018  F011         	movff	dtoa@fp,pad@fp
  1770   00131A  5021               	movf	dtoa@i^0,w,c
  1771   00131C  0F8A               	addlw	low _dbuf
  1772   00131E  6E12               	movwf	pad@buf^0,c
  1773   001320  C01E  F013         	movff	dtoa@w,pad@p
  1774   001324  C01F  F014         	movff	dtoa@w+1,pad@p+1
  1775   001328  EC71  F00C         	call	_pad	;wreg free
  1776   00132C  0012               	return		;funcret
  1777   00132E                     __end_of_dtoa:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _pad *****************
  1781 ;; Defined at:
  1782 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  1785 ;;		 -> sprintf@f(12), 
  1786 ;;  buf             1   17[COMRAM] PTR unsigned char 
  1787 ;;		 -> dbuf(32), 
  1788 ;;  p               2   18[COMRAM] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  i               2   21[COMRAM] int 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;Total ram usage:        7 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 5
  1807 ;; This function calls:
  1808 ;;		_fputc
  1809 ;;		_fputs
  1810 ;; This function is called by:
  1811 ;;		_dtoa
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text7
  1816   0018E2                     __ptext7:
  1817                           	callstack 0
  1818   0018E2                     _pad:
  1819                           	callstack 20
  1820   0018E2                     
  1821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1822   0018E2  A058               	btfss	_flags^0,0,c
  1823   0018E4  EF76  F00C         	goto	u1131
  1824   0018E8  EF78  F00C         	goto	u1130
  1825   0018EC                     u1131:
  1826   0018EC  EF7E  F00C         	goto	l1965
  1827   0018F0                     u1130:
  1828   0018F0                     
  1829                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1830   0018F0  C012  F00C         	movff	pad@buf,fputs@s
  1831   0018F4  C011  F00D         	movff	pad@fp,fputs@fp
  1832   0018F8  EC6E  F00E         	call	_fputs	;wreg free
  1833   0018FC                     l1965:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1836   0018FC  BE14               	btfsc	(pad@p+1)^0,7,c
  1837   0018FE  EF85  F00C         	goto	u1140
  1838   001902  EF83  F00C         	goto	u1141
  1839   001906                     u1141:
  1840   001906  EF89  F00C         	goto	l1013
  1841   00190A                     u1140:
  1842   00190A                     
  1843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1844   00190A  0E00               	movlw	0
  1845   00190C  6E14               	movwf	(pad@p+1)^0,c
  1846   00190E  0E00               	movlw	0
  1847   001910  6E13               	movwf	pad@p^0,c
  1848   001912                     l1013:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1851   001912  0E00               	movlw	0
  1852   001914  6E17               	movwf	(pad@i+1)^0,c
  1853   001916  0E00               	movlw	0
  1854   001918  6E16               	movwf	pad@i^0,c
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1857   00191A  EF99  F00C         	goto	l1973
  1858   00191E                     l1969:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1861   00191E  0E00               	movlw	0
  1862   001920  6E05               	movwf	(fputc@c+1)^0,c
  1863   001922  0E20               	movlw	32
  1864   001924  6E04               	movwf	fputc@c^0,c
  1865   001926  C011  F006         	movff	pad@fp,fputc@fp
  1866   00192A  EC1C  F00C         	call	_fputc	;wreg free
  1867   00192E                     
  1868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1869   00192E  4A16               	infsnz	pad@i^0,f,c
  1870   001930  2A17               	incf	(pad@i+1)^0,f,c
  1871   001932                     l1973:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1874   001932  5013               	movf	pad@p^0,w,c
  1875   001934  5C16               	subwf	pad@i^0,w,c
  1876   001936  5017               	movf	(pad@i+1)^0,w,c
  1877   001938  0A80               	xorlw	128
  1878   00193A  6E15               	movwf	??_pad^0,c
  1879   00193C  5014               	movf	(pad@p+1)^0,w,c
  1880   00193E  0A80               	xorlw	128
  1881   001940  5815               	subwfb	??_pad^0,w,c
  1882   001942  A0D8               	btfss	status,0,c
  1883   001944  EFA6  F00C         	goto	u1151
  1884   001948  EFA8  F00C         	goto	u1150
  1885   00194C                     u1151:
  1886   00194C  EF8F  F00C         	goto	l1969
  1887   001950                     u1150:
  1888   001950                     
  1889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1890   001950  B058               	btfsc	_flags^0,0,c
  1891   001952  EFAD  F00C         	goto	u1161
  1892   001956  EFAF  F00C         	goto	u1160
  1893   00195A                     u1161:
  1894   00195A  EFB5  F00C         	goto	l1018
  1895   00195E                     u1160:
  1896   00195E                     
  1897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1898   00195E  C012  F00C         	movff	pad@buf,fputs@s
  1899   001962  C011  F00D         	movff	pad@fp,fputs@fp
  1900   001966  EC6E  F00E         	call	_fputs	;wreg free
  1901   00196A                     l1018:
  1902   00196A  0012               	return		;funcret
  1903   00196C                     __end_of_pad:
  1904                           	callstack 0
  1905                           
  1906 ;; *************** function _fputs *****************
  1907 ;; Defined at:
  1908 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1911 ;;		 -> dbuf(32), 
  1912 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1913 ;;		 -> sprintf@f(12), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  i               2   14[COMRAM] int 
  1916 ;;  c               1   13[COMRAM] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2   11[COMRAM] int 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;Total ram usage:        5 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 4
  1933 ;; This function calls:
  1934 ;;		_fputc
  1935 ;; This function is called by:
  1936 ;;		_pad
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text8
  1941   001CDC                     __ptext8:
  1942                           	callstack 0
  1943   001CDC                     _fputs:
  1944                           	callstack 20
  1945   001CDC  0E00               	movlw	0
  1946   001CDE  6E10               	movwf	(fputs@i+1)^0,c
  1947   001CE0  0E00               	movlw	0
  1948   001CE2  6E0F               	movwf	fputs@i^0,c
  1949   001CE4  EF7D  F00E         	goto	l1873
  1950   001CE8                     l1869:
  1951   001CE8  C00E  F004         	movff	fputs@c,fputc@c
  1952   001CEC  6A05               	clrf	(fputc@c+1)^0,c
  1953   001CEE  C00D  F006         	movff	fputs@fp,fputc@fp
  1954   001CF2  EC1C  F00C         	call	_fputc	;wreg free
  1955   001CF6  4A0F               	infsnz	fputs@i^0,f,c
  1956   001CF8  2A10               	incf	(fputs@i+1)^0,f,c
  1957   001CFA                     l1873:
  1958   001CFA  500C               	movf	fputs@s^0,w,c
  1959   001CFC  240F               	addwf	fputs@i^0,w,c
  1960   001CFE  6ED9               	movwf	fsr2l,c
  1961   001D00  6ADA               	clrf	fsr2h,c
  1962   001D02  50DF               	movf	indf2,w,c
  1963   001D04  6E0E               	movwf	fputs@c^0,c
  1964   001D06  500E               	movf	fputs@c^0,w,c
  1965   001D08  A4D8               	btfss	status,2,c
  1966   001D0A  EF89  F00E         	goto	u1001
  1967   001D0E  EF8B  F00E         	goto	u1000
  1968   001D12                     u1001:
  1969   001D12  EF74  F00E         	goto	l1869
  1970   001D16                     u1000:
  1971   001D16  0012               	return		;funcret
  1972   001D18                     __end_of_fputs:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _fputc *****************
  1976 ;; Defined at:
  1977 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  c               2    3[COMRAM] int 
  1980 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  1981 ;;		 -> sprintf@f(12), 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  2    3[COMRAM] int 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1993 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;Total ram usage:        8 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 3
  2000 ;; This function calls:
  2001 ;;		_putch
  2002 ;; This function is called by:
  2003 ;;		_pad
  2004 ;;		_vfpfcnvrt
  2005 ;;		_fputs
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text9
  2010   001838                     __ptext9:
  2011                           	callstack 0
  2012   001838                     _fputc:
  2013                           	callstack 23
  2014   001838  5006               	movf	fputc@fp^0,w,c
  2015   00183A  B4D8               	btfsc	status,2,c
  2016   00183C  EF22  F00C         	goto	u961
  2017   001840  EF24  F00C         	goto	u960
  2018   001844                     u961:
  2019   001844  EF2C  F00C         	goto	l1857
  2020   001848                     u960:
  2021   001848  5006               	movf	fputc@fp^0,w,c
  2022   00184A  A4D8               	btfss	status,2,c
  2023   00184C  EF2A  F00C         	goto	u971
  2024   001850  EF2C  F00C         	goto	u970
  2025   001854                     u971:
  2026   001854  EF31  F00C         	goto	l1859
  2027   001858                     u970:
  2028   001858                     l1857:
  2029   001858  5004               	movf	fputc@c^0,w,c
  2030   00185A  ECBC  F00F         	call	_putch
  2031   00185E  EF70  F00C         	goto	l1082
  2032   001862                     l1859:
  2033   001862  5006               	movf	fputc@fp^0,w,c
  2034   001864  6ED9               	movwf	fsr2l,c
  2035   001866  6ADA               	clrf	fsr2h,c
  2036   001868  0E0A               	movlw	10
  2037   00186A  26D9               	addwf	fsr2l,f,c
  2038   00186C  50DE               	movf	postinc2,w,c
  2039   00186E  10DE               	iorwf	postinc2,w,c
  2040   001870  B4D8               	btfsc	status,2,c
  2041   001872  EF3D  F00C         	goto	u981
  2042   001876  EF3F  F00C         	goto	u980
  2043   00187A                     u981:
  2044   00187A  EF58  F00C         	goto	l1863
  2045   00187E                     u980:
  2046   00187E  5006               	movf	fputc@fp^0,w,c
  2047   001880  6ED9               	movwf	fsr2l,c
  2048   001882  6ADA               	clrf	fsr2h,c
  2049   001884  0E0A               	movlw	10
  2050   001886  26D9               	addwf	fsr2l,f,c
  2051   001888  5006               	movf	fputc@fp^0,w,c
  2052   00188A  6EE1               	movwf	fsr1l,c
  2053   00188C  6AE2               	clrf	fsr1h,c
  2054   00188E  0E03               	movlw	3
  2055   001890  26E1               	addwf	fsr1l,f,c
  2056   001892  50DE               	movf	postinc2,w,c
  2057   001894  5CE6               	subwf	postinc1,w,c
  2058   001896  50E6               	movf	postinc1,w,c
  2059   001898  0A80               	xorlw	128
  2060   00189A  6E0B               	movwf	(??_fputc+4)^0,c
  2061   00189C  50DE               	movf	postinc2,w,c
  2062   00189E  0A80               	xorlw	128
  2063   0018A0  580B               	subwfb	(??_fputc+4)^0,w,c
  2064   0018A2  B0D8               	btfsc	status,0,c
  2065   0018A4  EF56  F00C         	goto	u991
  2066   0018A8  EF58  F00C         	goto	u990
  2067   0018AC                     u991:
  2068   0018AC  EF70  F00C         	goto	l1082
  2069   0018B0                     u990:
  2070   0018B0                     l1863:
  2071   0018B0  5006               	movf	fputc@fp^0,w,c
  2072   0018B2  6ED9               	movwf	fsr2l,c
  2073   0018B4  6ADA               	clrf	fsr2h,c
  2074   0018B6  0E03               	movlw	3
  2075   0018B8  26D9               	addwf	fsr2l,f,c
  2076   0018BA  50DF               	movf	indf2,w,c
  2077   0018BC  6E07               	movwf	??_fputc^0,c
  2078   0018BE  5006               	movf	fputc@fp^0,w,c
  2079   0018C0  6ED9               	movwf	fsr2l,c
  2080   0018C2  6ADA               	clrf	fsr2h,c
  2081   0018C4  50DF               	movf	indf2,w,c
  2082   0018C6  2407               	addwf	??_fputc^0,w,c
  2083   0018C8  6ED9               	movwf	fsr2l,c
  2084   0018CA  6ADA               	clrf	fsr2h,c
  2085   0018CC  C004  FFDF         	movff	fputc@c,indf2
  2086   0018D0  5006               	movf	fputc@fp^0,w,c
  2087   0018D2  6ED9               	movwf	fsr2l,c
  2088   0018D4  6ADA               	clrf	fsr2h,c
  2089   0018D6  0E03               	movlw	3
  2090   0018D8  26D9               	addwf	fsr2l,f,c
  2091   0018DA  2ADE               	incf	postinc2,f,c
  2092   0018DC  0E00               	movlw	0
  2093   0018DE  22DD               	addwfc	postdec2,f,c
  2094   0018E0                     l1082:
  2095   0018E0  0012               	return		;funcret
  2096   0018E2                     __end_of_fputc:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _putch *****************
  2100 ;; Defined at:
  2101 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  c               1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  c               1    0[COMRAM] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 2
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_fputc
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text10
  2130   001F78                     __ptext10:
  2131                           	callstack 0
  2132   001F78                     _putch:
  2133                           	callstack 23
  2134   001F78  0012               	return		;funcret
  2135   001F7A                     __end_of_putch:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _abs *****************
  2139 ;; Defined at:
  2140 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  a               2    9[COMRAM] int 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  2    9[COMRAM] int 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;Total ram usage:        4 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 2
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_dtoa
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text11
  2169   001DC2                     __ptext11:
  2170                           	callstack 0
  2171   001DC2                     _abs:
  2172                           	callstack 23
  2173   001DC2  BE0B               	btfsc	(abs@a+1)^0,7,c
  2174   001DC4  EFE6  F00E         	goto	u1171
  2175   001DC8  EFE8  F00E         	goto	u1170
  2176   001DCC                     u1171:
  2177   001DCC  EFEE  F00E         	goto	l1067
  2178   001DD0                     u1170:
  2179   001DD0  C00A  F00A         	movff	abs@a,?_abs
  2180   001DD4  C00B  F00B         	movff	abs@a+1,?_abs+1
  2181   001DD8  EFFA  F00E         	goto	l1070
  2182   001DDC                     l1067:
  2183   001DDC  C00A  F00C         	movff	abs@a,??_abs
  2184   001DE0  C00B  F00D         	movff	abs@a+1,??_abs+1
  2185   001DE4  1E0C               	comf	??_abs^0,f,c
  2186   001DE6  1E0D               	comf	(??_abs+1)^0,f,c
  2187   001DE8  4A0C               	infsnz	??_abs^0,f,c
  2188   001DEA  2A0D               	incf	(??_abs+1)^0,f,c
  2189   001DEC  C00C  F00A         	movff	??_abs,?_abs
  2190   001DF0  C00D  F00B         	movff	??_abs+1,?_abs+1
  2191   001DF4                     l1070:
  2192   001DF4  0012               	return		;funcret
  2193   001DF6                     __end_of_abs:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function ___awmod *****************
  2197 ;; Defined at:
  2198 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  dividend        2    3[COMRAM] int 
  2201 ;;  divisor         2    5[COMRAM] int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  sign            1    8[COMRAM] unsigned char 
  2204 ;;  counter         1    7[COMRAM] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  2    3[COMRAM] int 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;Total ram usage:        6 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 2
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_dtoa
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text12
  2229   00162C                     __ptext12:
  2230                           	callstack 0
  2231   00162C                     ___awmod:
  2232                           	callstack 23
  2233   00162C  0E00               	movlw	0
  2234   00162E  6E09               	movwf	___awmod@sign^0,c
  2235   001630  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  2236   001632  EF1F  F00B         	goto	u1070
  2237   001636  EF1D  F00B         	goto	u1071
  2238   00163A                     u1071:
  2239   00163A  EF25  F00B         	goto	l1933
  2240   00163E                     u1070:
  2241   00163E  6C04               	negf	___awmod@dividend^0,c
  2242   001640  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2243   001642  B0D8               	btfsc	status,0,c
  2244   001644  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2245   001646  0E01               	movlw	1
  2246   001648  6E09               	movwf	___awmod@sign^0,c
  2247   00164A                     l1933:
  2248   00164A  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  2249   00164C  EF2C  F00B         	goto	u1080
  2250   001650  EF2A  F00B         	goto	u1081
  2251   001654                     u1081:
  2252   001654  EF30  F00B         	goto	l1937
  2253   001658                     u1080:
  2254   001658  6C06               	negf	___awmod@divisor^0,c
  2255   00165A  1E07               	comf	(___awmod@divisor+1)^0,f,c
  2256   00165C  B0D8               	btfsc	status,0,c
  2257   00165E  2A07               	incf	(___awmod@divisor+1)^0,f,c
  2258   001660                     l1937:
  2259   001660  5006               	movf	___awmod@divisor^0,w,c
  2260   001662  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  2261   001664  B4D8               	btfsc	status,2,c
  2262   001666  EF37  F00B         	goto	u1091
  2263   00166A  EF39  F00B         	goto	u1090
  2264   00166E                     u1091:
  2265   00166E  EF5D  F00B         	goto	l1953
  2266   001672                     u1090:
  2267   001672  0E01               	movlw	1
  2268   001674  6E08               	movwf	___awmod@counter^0,c
  2269   001676  EF41  F00B         	goto	l1943
  2270   00167A                     l1941:
  2271   00167A  90D8               	bcf	status,0,c
  2272   00167C  3606               	rlcf	___awmod@divisor^0,f,c
  2273   00167E  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  2274   001680  2A08               	incf	___awmod@counter^0,f,c
  2275   001682                     l1943:
  2276   001682  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  2277   001684  EF46  F00B         	goto	u1101
  2278   001688  EF48  F00B         	goto	u1100
  2279   00168C                     u1101:
  2280   00168C  EF3D  F00B         	goto	l1941
  2281   001690                     u1100:
  2282   001690                     l1945:
  2283   001690  5006               	movf	___awmod@divisor^0,w,c
  2284   001692  5C04               	subwf	___awmod@dividend^0,w,c
  2285   001694  5007               	movf	(___awmod@divisor+1)^0,w,c
  2286   001696  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  2287   001698  A0D8               	btfss	status,0,c
  2288   00169A  EF51  F00B         	goto	u1111
  2289   00169E  EF53  F00B         	goto	u1110
  2290   0016A2                     u1111:
  2291   0016A2  EF57  F00B         	goto	l1949
  2292   0016A6                     u1110:
  2293   0016A6  5006               	movf	___awmod@divisor^0,w,c
  2294   0016A8  5E04               	subwf	___awmod@dividend^0,f,c
  2295   0016AA  5007               	movf	(___awmod@divisor+1)^0,w,c
  2296   0016AC  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  2297   0016AE                     l1949:
  2298   0016AE  90D8               	bcf	status,0,c
  2299   0016B0  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  2300   0016B2  3206               	rrcf	___awmod@divisor^0,f,c
  2301   0016B4  2E08               	decfsz	___awmod@counter^0,f,c
  2302   0016B6  EF48  F00B         	goto	l1945
  2303   0016BA                     l1953:
  2304   0016BA  5009               	movf	___awmod@sign^0,w,c
  2305   0016BC  B4D8               	btfsc	status,2,c
  2306   0016BE  EF63  F00B         	goto	u1121
  2307   0016C2  EF65  F00B         	goto	u1120
  2308   0016C6                     u1121:
  2309   0016C6  EF69  F00B         	goto	l1957
  2310   0016CA                     u1120:
  2311   0016CA  6C04               	negf	___awmod@dividend^0,c
  2312   0016CC  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2313   0016CE  B0D8               	btfsc	status,0,c
  2314   0016D0  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2315   0016D2                     l1957:
  2316   0016D2  C004  F004         	movff	___awmod@dividend,?___awmod
  2317   0016D6  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  2318   0016DA  0012               	return		;funcret
  2319   0016DC                     __end_of___awmod:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function ___awdiv *****************
  2323 ;; Defined at:
  2324 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  dividend        2    3[COMRAM] int 
  2327 ;;  divisor         2    5[COMRAM] int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  quotient        2    9[COMRAM] int 
  2330 ;;  sign            1    8[COMRAM] unsigned char 
  2331 ;;  counter         1    7[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2    3[COMRAM] int 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;Total ram usage:        8 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 2
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_dtoa
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text13
  2356   0013F6                     __ptext13:
  2357                           	callstack 0
  2358   0013F6                     ___awdiv:
  2359                           	callstack 23
  2360   0013F6  0E00               	movlw	0
  2361   0013F8  6E09               	movwf	___awdiv@sign^0,c
  2362   0013FA  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  2363   0013FC  EF04  F00A         	goto	u1010
  2364   001400  EF02  F00A         	goto	u1011
  2365   001404                     u1011:
  2366   001404  EF0A  F00A         	goto	l1889
  2367   001408                     u1010:
  2368   001408  6C06               	negf	___awdiv@divisor^0,c
  2369   00140A  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  2370   00140C  B0D8               	btfsc	status,0,c
  2371   00140E  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  2372   001410  0E01               	movlw	1
  2373   001412  6E09               	movwf	___awdiv@sign^0,c
  2374   001414                     l1889:
  2375   001414  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  2376   001416  EF11  F00A         	goto	u1020
  2377   00141A  EF0F  F00A         	goto	u1021
  2378   00141E                     u1021:
  2379   00141E  EF17  F00A         	goto	l1895
  2380   001422                     u1020:
  2381   001422  6C04               	negf	___awdiv@dividend^0,c
  2382   001424  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  2383   001426  B0D8               	btfsc	status,0,c
  2384   001428  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  2385   00142A  0E01               	movlw	1
  2386   00142C  1A09               	xorwf	___awdiv@sign^0,f,c
  2387   00142E                     l1895:
  2388   00142E  0E00               	movlw	0
  2389   001430  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  2390   001432  0E00               	movlw	0
  2391   001434  6E0A               	movwf	___awdiv@quotient^0,c
  2392   001436  5006               	movf	___awdiv@divisor^0,w,c
  2393   001438  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  2394   00143A  B4D8               	btfsc	status,2,c
  2395   00143C  EF22  F00A         	goto	u1031
  2396   001440  EF24  F00A         	goto	u1030
  2397   001444                     u1031:
  2398   001444  EF4C  F00A         	goto	l1917
  2399   001448                     u1030:
  2400   001448  0E01               	movlw	1
  2401   00144A  6E08               	movwf	___awdiv@counter^0,c
  2402   00144C  EF2C  F00A         	goto	l1903
  2403   001450                     l1901:
  2404   001450  90D8               	bcf	status,0,c
  2405   001452  3606               	rlcf	___awdiv@divisor^0,f,c
  2406   001454  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  2407   001456  2A08               	incf	___awdiv@counter^0,f,c
  2408   001458                     l1903:
  2409   001458  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  2410   00145A  EF31  F00A         	goto	u1041
  2411   00145E  EF33  F00A         	goto	u1040
  2412   001462                     u1041:
  2413   001462  EF28  F00A         	goto	l1901
  2414   001466                     u1040:
  2415   001466                     l1905:
  2416   001466  90D8               	bcf	status,0,c
  2417   001468  360A               	rlcf	___awdiv@quotient^0,f,c
  2418   00146A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2419   00146C  5006               	movf	___awdiv@divisor^0,w,c
  2420   00146E  5C04               	subwf	___awdiv@dividend^0,w,c
  2421   001470  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2422   001472  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  2423   001474  A0D8               	btfss	status,0,c
  2424   001476  EF3F  F00A         	goto	u1051
  2425   00147A  EF41  F00A         	goto	u1050
  2426   00147E                     u1051:
  2427   00147E  EF46  F00A         	goto	l1913
  2428   001482                     u1050:
  2429   001482  5006               	movf	___awdiv@divisor^0,w,c
  2430   001484  5E04               	subwf	___awdiv@dividend^0,f,c
  2431   001486  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2432   001488  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  2433   00148A  800A               	bsf	___awdiv@quotient^0,0,c
  2434   00148C                     l1913:
  2435   00148C  90D8               	bcf	status,0,c
  2436   00148E  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  2437   001490  3206               	rrcf	___awdiv@divisor^0,f,c
  2438   001492  2E08               	decfsz	___awdiv@counter^0,f,c
  2439   001494  EF33  F00A         	goto	l1905
  2440   001498                     l1917:
  2441   001498  5009               	movf	___awdiv@sign^0,w,c
  2442   00149A  B4D8               	btfsc	status,2,c
  2443   00149C  EF52  F00A         	goto	u1061
  2444   0014A0  EF54  F00A         	goto	u1060
  2445   0014A4                     u1061:
  2446   0014A4  EF58  F00A         	goto	l1921
  2447   0014A8                     u1060:
  2448   0014A8  6C0A               	negf	___awdiv@quotient^0,c
  2449   0014AA  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  2450   0014AC  B0D8               	btfsc	status,0,c
  2451   0014AE  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  2452   0014B0                     l1921:
  2453   0014B0  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  2454   0014B4  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  2455   0014B8  0012               	return		;funcret
  2456   0014BA                     __end_of___awdiv:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _LCD_sendstring *****************
  2460 ;; Defined at:
  2461 ;;		line 117 in file "LCD.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  string          1    8[COMRAM] PTR unsigned char 
  2464 ;;		 -> main@buf(32), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 5
  2483 ;; This function calls:
  2484 ;;		_LCD_sendbyte
  2485 ;; This function is called by:
  2486 ;;		_time2String
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text14
  2491   001DF6                     __ptext14:
  2492                           	callstack 0
  2493   001DF6                     _LCD_sendstring:
  2494                           	callstack 24
  2495   001DF6                     
  2496                           ;LCD.c: 117: void LCD_sendstring(char *string);LCD.c: 118: {;LCD.c: 120:     while(*stri
      +                          ng != 0){
  2497   001DF6  EF06  F00F         	goto	l2351
  2498   001DFA                     l2347:
  2499                           
  2500                           ;LCD.c: 121:   LCD_sendbyte(*string++,1);
  2501   001DFA  0E01               	movlw	1
  2502   001DFC  6E05               	movwf	LCD_sendbyte@type^0,c
  2503   001DFE  5009               	movf	LCD_sendstring@string^0,w,c
  2504   001E00  6ED9               	movwf	fsr2l,c
  2505   001E02  6ADA               	clrf	fsr2h,c
  2506   001E04  50DF               	movf	indf2,w,c
  2507   001E06  EC8C  F00E         	call	_LCD_sendbyte
  2508   001E0A  2A09               	incf	LCD_sendstring@string^0,f,c
  2509   001E0C                     l2351:
  2510                           
  2511                           ;LCD.c: 120:     while(*string != 0){
  2512   001E0C  5009               	movf	LCD_sendstring@string^0,w,c
  2513   001E0E  6ED9               	movwf	fsr2l,c
  2514   001E10  6ADA               	clrf	fsr2h,c
  2515   001E12  50DF               	movf	indf2,w,c
  2516   001E14  A4D8               	btfss	status,2,c
  2517   001E16  EF0F  F00F         	goto	u1541
  2518   001E1A  EF11  F00F         	goto	u1540
  2519   001E1E                     u1541:
  2520   001E1E  EFFD  F00E         	goto	l2347
  2521   001E22                     u1540:
  2522   001E22  0012               	return		;funcret
  2523   001E24                     __end_of_LCD_sendstring:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _initialise *****************
  2527 ;; Defined at:
  2528 ;;		line 92 in file "functions.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 6
  2549 ;; This function calls:
  2550 ;;		_Comp1_init_fe
  2551 ;;		_Comp1_init_re
  2552 ;;		_Interrupts_init
  2553 ;;		_LCD_init
  2554 ;;		_LEDarray_init
  2555 ;;		_Timer0_init
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text15
  2562   001F0E                     __ptext15:
  2563                           	callstack 0
  2564   001F0E                     _initialise:
  2565                           	callstack 24
  2566   001F0E                     
  2567                           ;functions.c: 94:     Interrupts_init();
  2568   001F0E  ECA0  F00F         	call	_Interrupts_init	;wreg free
  2569   001F12                     
  2570                           ;functions.c: 95:     Comp1_init_re();
  2571   001F12  EC52  F00F         	call	_Comp1_init_re	;wreg free
  2572   001F16                     
  2573                           ;functions.c: 96:     Comp1_init_fe();
  2574   001F16  EC64  F00F         	call	_Comp1_init_fe	;wreg free
  2575   001F1A                     
  2576                           ;functions.c: 97:     Timer0_init();
  2577   001F1A  EC12  F00F         	call	_Timer0_init	;wreg free
  2578   001F1E                     
  2579                           ;functions.c: 98:     LEDarray_init();
  2580   001F1E  EC29  F00F         	call	_LEDarray_init	;wreg free
  2581   001F22                     
  2582                           ;functions.c: 99:     LCD_init();
  2583   001F22  ECB6  F00C         	call	_LCD_init	;wreg free
  2584   001F26  0012               	return		;funcret
  2585   001F28                     __end_of_initialise:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _Timer0_init *****************
  2589 ;; Defined at:
  2590 ;;		line 9 in file "timers.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 2
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_initialise
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text16
  2619   001E24                     __ptext16:
  2620                           	callstack 0
  2621   001E24                     _Timer0_init:
  2622                           	callstack 27
  2623   001E24                     
  2624                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
  2625   001E24  50D6               	movf	214,w,c	;volatile
  2626   001E26  0B1F               	andlw	-225
  2627   001E28  0940               	iorlw	64
  2628   001E2A  6ED6               	movwf	214,c	;volatile
  2629   001E2C                     
  2630                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
  2631   001E2C  88D6               	bsf	214,4,c	;volatile
  2632                           
  2633                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  2634   001E2E  50D6               	movf	214,w,c	;volatile
  2635   001E30  0BF0               	andlw	-16
  2636   001E32  0908               	iorlw	8
  2637   001E34  6ED6               	movwf	214,c	;volatile
  2638   001E36                     
  2639                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  2640   001E36  88D5               	bsf	213,4,c	;volatile
  2641   001E38                     
  2642                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  2643   001E38  010E               	movlb	14	; () banked
  2644   001E3A  8B29               	bsf	41,5,b	;volatile
  2645   001E3C                     
  2646                           ; BSR set to: 14
  2647                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  2648   001E3C  9B33               	bcf	51,5,b	;volatile
  2649   001E3E                     
  2650                           ; BSR set to: 14
  2651                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  2652   001E3E  9B1F               	bcf	31,5,b	;volatile
  2653   001E40                     
  2654                           ; BSR set to: 14
  2655                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  2656   001E40  8AF2               	bsf	242,5,c	;volatile
  2657   001E42                     
  2658                           ; BSR set to: 14
  2659                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  2660   001E42  8CF2               	bsf	242,6,c	;volatile
  2661   001E44                     
  2662                           ; BSR set to: 14
  2663                           ;timers.c: 21:     INTCONbits.GIE = 1;
  2664   001E44  8EF2               	bsf	242,7,c	;volatile
  2665                           
  2666                           ;timers.c: 24:     TMR0H=00001011;
  2667   001E46  0E09               	movlw	9
  2668   001E48  6ED4               	movwf	212,c	;volatile
  2669                           
  2670                           ;timers.c: 25:     TMR0L=110011011;
  2671   001E4A  0E83               	movlw	131
  2672   001E4C  6ED3               	movwf	211,c	;volatile
  2673   001E4E                     
  2674                           ; BSR set to: 14
  2675                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  2676   001E4E  8ED5               	bsf	213,7,c	;volatile
  2677   001E50                     
  2678                           ; BSR set to: 14
  2679   001E50  0012               	return		;funcret
  2680   001E52                     __end_of_Timer0_init:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _LEDarray_init *****************
  2684 ;; Defined at:
  2685 ;;		line 8 in file "LEDarray.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 2
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_initialise
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text17
  2714   001E52                     __ptext17:
  2715                           	callstack 0
  2716   001E52                     _LEDarray_init:
  2717                           	callstack 27
  2718   001E52                     
  2719                           ;LEDarray.c: 10:     LATA = 0;
  2720   001E52  0E00               	movlw	0
  2721   001E54  6E79               	movwf	121,c	;volatile
  2722                           
  2723                           ;LEDarray.c: 11:     LATB = 0;
  2724   001E56  0E00               	movlw	0
  2725   001E58  6E7A               	movwf	122,c	;volatile
  2726   001E5A                     
  2727                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  2728   001E5A  907E               	bcf	126,0,c	;volatile
  2729   001E5C                     
  2730                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  2731   001E5C  9C7E               	bcf	126,6,c	;volatile
  2732                           
  2733                           ;LEDarray.c: 14:     LATG = 0;
  2734   001E5E  0E00               	movlw	0
  2735   001E60  6E7F               	movwf	127,c	;volatile
  2736   001E62                     
  2737                           ;LEDarray.c: 15:  LATHbits.LATH3 = 1;
  2738   001E62  8680               	bsf	128,3,c	;volatile
  2739                           
  2740                           ;LEDarray.c: 18:     TRISA = 0;
  2741   001E64  0E00               	movlw	0
  2742   001E66  6E81               	movwf	129,c	;volatile
  2743                           
  2744                           ;LEDarray.c: 19:  TRISB = 0;
  2745   001E68  0E00               	movlw	0
  2746   001E6A  6E82               	movwf	130,c	;volatile
  2747   001E6C                     
  2748                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2749   001E6C  9086               	bcf	134,0,c	;volatile
  2750   001E6E                     
  2751                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  2752   001E6E  9C86               	bcf	134,6,c	;volatile
  2753                           
  2754                           ;LEDarray.c: 22:     TRISG = 0;
  2755   001E70  0E00               	movlw	0
  2756   001E72  6E87               	movwf	135,c	;volatile
  2757   001E74                     
  2758                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  2759   001E74  9688               	bcf	136,3,c	;volatile
  2760   001E76                     
  2761                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  2762   001E76  8486               	bsf	134,2,c	;volatile
  2763   001E78                     
  2764                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  2765   001E78  010E               	movlb	14	; () banked
  2766   001E7A  95B4               	bcf	180,2,b	;volatile
  2767   001E7C                     
  2768                           ; BSR set to: 14
  2769   001E7C  0012               	return		;funcret
  2770   001E7E                     __end_of_LEDarray_init:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _LCD_init *****************
  2774 ;; Defined at:
  2775 ;;		line 63 in file "LCD.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:        1 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 5
  2796 ;; This function calls:
  2797 ;;		_LCD_sendbyte
  2798 ;;		_LCD_sendnibble
  2799 ;; This function is called by:
  2800 ;;		_initialise
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text18
  2805   00196C                     __ptext18:
  2806                           	callstack 0
  2807   00196C                     _LCD_init:
  2808                           	callstack 24
  2809   00196C                     
  2810                           ;LCD.c: 67:     TRISCbits.TRISC6=0;
  2811   00196C  9C83               	bcf	131,6,c	;volatile
  2812                           
  2813                           ;LCD.c: 68:     TRISCbits.TRISC2=0;
  2814   00196E  9483               	bcf	131,2,c	;volatile
  2815                           
  2816                           ;LCD.c: 69:     TRISBbits.TRISB3=0;
  2817   001970  9682               	bcf	130,3,c	;volatile
  2818                           
  2819                           ;LCD.c: 70:     TRISBbits.TRISB2=0;
  2820   001972  9482               	bcf	130,2,c	;volatile
  2821                           
  2822                           ;LCD.c: 71:     TRISEbits.TRISE3=0;
  2823   001974  9685               	bcf	133,3,c	;volatile
  2824                           
  2825                           ;LCD.c: 72:     TRISEbits.TRISE1=0;
  2826   001976  9285               	bcf	133,1,c	;volatile
  2827                           
  2828                           ;LCD.c: 75:     LATCbits.LATC6=0;
  2829   001978  9C7B               	bcf	123,6,c	;volatile
  2830                           
  2831                           ;LCD.c: 76:     LATCbits.LATC2=0;
  2832   00197A  947B               	bcf	123,2,c	;volatile
  2833                           
  2834                           ;LCD.c: 77:     LATBbits.LATB4 = 0;
  2835   00197C  987A               	bcf	122,4,c	;volatile
  2836                           
  2837                           ;LCD.c: 78:     LATBbits.LATB5 = 0;
  2838   00197E  9A7A               	bcf	122,5,c	;volatile
  2839                           
  2840                           ;LCD.c: 79:     LATBbits.LATB6 = 0;
  2841   001980  9C7A               	bcf	122,6,c	;volatile
  2842                           
  2843                           ;LCD.c: 80:     LATBbits.LATB7 = 0;
  2844   001982  9E7A               	bcf	122,7,c	;volatile
  2845   001984                     
  2846                           ;LCD.c: 85:     LCD_sendnibble(0b0011);
  2847   001984  0E03               	movlw	3
  2848   001986  ECE7  F00D         	call	_LCD_sendnibble
  2849   00198A                     
  2850                           ;LCD.c: 86:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  2851   00198A  0ED0               	movlw	208
  2852   00198C                     u1867:
  2853   00198C  2EE8               	decfsz	wreg,f,c
  2854   00198E  D7FE               	bra	u1867
  2855   001990                     
  2856                           ;LCD.c: 88:     LCD_sendbyte(0b00101000,0);
  2857   001990  0E00               	movlw	0
  2858   001992  6E05               	movwf	LCD_sendbyte@type^0,c
  2859   001994  0E28               	movlw	40
  2860   001996  EC8C  F00E         	call	_LCD_sendbyte
  2861   00199A                     
  2862                           ;LCD.c: 89:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  2863   00199A  0ED0               	movlw	208
  2864   00199C                     u1877:
  2865   00199C  2EE8               	decfsz	wreg,f,c
  2866   00199E  D7FE               	bra	u1877
  2867   0019A0                     
  2868                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  2869   0019A0  0E00               	movlw	0
  2870   0019A2  6E05               	movwf	LCD_sendbyte@type^0,c
  2871   0019A4  0E28               	movlw	40
  2872   0019A6  EC8C  F00E         	call	_LCD_sendbyte
  2873   0019AA                     
  2874                           ;LCD.c: 91:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  2875   0019AA  0EC5               	movlw	197
  2876   0019AC                     u1887:
  2877   0019AC  2EE8               	decfsz	wreg,f,c
  2878   0019AE  D7FE               	bra	u1887
  2879   0019B0  0000               	nop	
  2880   0019B2                     
  2881                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  2882   0019B2  0E00               	movlw	0
  2883   0019B4  6E05               	movwf	LCD_sendbyte@type^0,c
  2884   0019B6  0E0C               	movlw	12
  2885   0019B8  EC8C  F00E         	call	_LCD_sendbyte
  2886   0019BC                     
  2887                           ;LCD.c: 93:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  2888   0019BC  0EC5               	movlw	197
  2889   0019BE                     u1897:
  2890   0019BE  2EE8               	decfsz	wreg,f,c
  2891   0019C0  D7FE               	bra	u1897
  2892   0019C2  0000               	nop	
  2893   0019C4                     
  2894                           ;LCD.c: 94:     LCD_sendbyte(0b00000001,0);
  2895   0019C4  0E00               	movlw	0
  2896   0019C6  6E05               	movwf	LCD_sendbyte@type^0,c
  2897   0019C8  0E01               	movlw	1
  2898   0019CA  EC8C  F00E         	call	_LCD_sendbyte
  2899   0019CE                     
  2900                           ;LCD.c: 95:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  2901   0019CE  0E20               	movlw	32
  2902   0019D0  6E09               	movwf	??_LCD_init^0,c
  2903   0019D2  0ECA               	movlw	202
  2904   0019D4                     u1907:
  2905   0019D4  2EE8               	decfsz	wreg,f,c
  2906   0019D6  D7FE               	bra	u1907
  2907   0019D8  2E09               	decfsz	??_LCD_init^0,f,c
  2908   0019DA  D7FC               	bra	u1907
  2909   0019DC                     
  2910                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  2911   0019DC  0E00               	movlw	0
  2912   0019DE  6E05               	movwf	LCD_sendbyte@type^0,c
  2913   0019E0  0E06               	movlw	6
  2914   0019E2  EC8C  F00E         	call	_LCD_sendbyte
  2915   0019E6                     
  2916                           ;LCD.c: 100:     LCD_sendbyte(0b1111,0);
  2917   0019E6  0E00               	movlw	0
  2918   0019E8  6E05               	movwf	LCD_sendbyte@type^0,c
  2919   0019EA  0E0F               	movlw	15
  2920   0019EC  EC8C  F00E         	call	_LCD_sendbyte
  2921   0019F0  0012               	return		;funcret
  2922   0019F2                     __end_of_LCD_init:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _Interrupts_init *****************
  2926 ;; Defined at:
  2927 ;;		line 11 in file "interrupts.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		None
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 2
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_initialise
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text19
  2956   001F40                     __ptext19:
  2957                           	callstack 0
  2958   001F40                     _Interrupts_init:
  2959                           	callstack 27
  2960   001F40                     
  2961                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  2962   001F40  010E               	movlb	14	; () banked
  2963   001F42  812B               	bsf	43,0,b	;volatile
  2964                           
  2965                           ;interrupts.c: 14:     IPR2bits.C1IP = 0;
  2966   001F44  9121               	bcf	33,0,b	;volatile
  2967                           
  2968                           ;interrupts.c: 17:     PIE2bits.C2IE = 1;
  2969   001F46  832B               	bsf	43,1,b	;volatile
  2970                           
  2971                           ;interrupts.c: 18:     IPR2bits.C2IP = 0;
  2972   001F48  9321               	bcf	33,1,b	;volatile
  2973                           
  2974                           ;interrupts.c: 21:     PIE0bits.TMR0IE = 1;
  2975   001F4A  8B29               	bsf	41,5,b	;volatile
  2976                           
  2977                           ;interrupts.c: 22:     IPR0bits.TMR0IP = 0;
  2978   001F4C  9B1F               	bcf	31,5,b	;volatile
  2979                           
  2980                           ;interrupts.c: 25:     INTCONbits.IPEN = 1;
  2981   001F4E  8AF2               	bsf	242,5,c	;volatile
  2982                           
  2983                           ;interrupts.c: 28:     INTCONbits.PEIE = 1;
  2984   001F50  8CF2               	bsf	242,6,c	;volatile
  2985                           
  2986                           ;interrupts.c: 31:     INTCONbits.GIE = 1;
  2987   001F52  8EF2               	bsf	242,7,c	;volatile
  2988   001F54                     
  2989                           ; BSR set to: 14
  2990   001F54  0012               	return		;funcret
  2991   001F56                     __end_of_Interrupts_init:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _Comp1_init_re *****************
  2995 ;; Defined at:
  2996 ;;		line 23 in file "comparator.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 3
  3017 ;; This function calls:
  3018 ;;		_DAC_init
  3019 ;; This function is called by:
  3020 ;;		_initialise
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text20
  3025   001EA4                     __ptext20:
  3026                           	callstack 0
  3027   001EA4                     _Comp1_init_re:
  3028                           	callstack 26
  3029   001EA4                     
  3030                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  3031   001EA4  8E86               	bsf	134,7,c	;volatile
  3032   001EA6                     
  3033                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  3034   001EA6  010E               	movlb	14	; () banked
  3035   001EA8  51D2               	movf	210,w,b	;volatile
  3036   001EAA  0BF8               	andlw	-8
  3037   001EAC  0903               	iorlw	3
  3038   001EAE  6FD2               	movwf	210,b	;volatile
  3039                           
  3040                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  3041   001EB0  51D3               	movf	211,w,b	;volatile
  3042   001EB2  0BF8               	andlw	-8
  3043   001EB4  0905               	iorlw	5
  3044   001EB6  6FD3               	movwf	211,b	;volatile
  3045   001EB8                     
  3046                           ; BSR set to: 14
  3047                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  3048   001EB8  83D0               	bsf	208,1,b	;volatile
  3049   001EBA                     
  3050                           ; BSR set to: 14
  3051                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  3052   001EBA  89D0               	bsf	208,4,b	;volatile
  3053   001EBC                     
  3054                           ; BSR set to: 14
  3055                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  3056   001EBC  83D1               	bsf	209,1,b	;volatile
  3057   001EBE                     
  3058                           ; BSR set to: 14
  3059                           ;comparator.c: 31:     DAC_init();
  3060   001EBE  ECAB  F00F         	call	_DAC_init	;wreg free
  3061   001EC2                     
  3062                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  3063   001EC2  010E               	movlb	14	; () banked
  3064   001EC4  8FD0               	bsf	208,7,b	;volatile
  3065   001EC6                     
  3066                           ; BSR set to: 14
  3067   001EC6  0012               	return		;funcret
  3068   001EC8                     __end_of_Comp1_init_re:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _Comp1_init_fe *****************
  3072 ;; Defined at:
  3073 ;;		line 36 in file "comparator.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;Total ram usage:        0 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 3
  3094 ;; This function calls:
  3095 ;;		_DAC_init
  3096 ;; This function is called by:
  3097 ;;		_initialise
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text21
  3102   001EC8                     __ptext21:
  3103                           	callstack 0
  3104   001EC8                     _Comp1_init_fe:
  3105                           	callstack 26
  3106   001EC8                     
  3107                           ;comparator.c: 38:     TRISFbits.TRISF7=1;
  3108   001EC8  8E86               	bsf	134,7,c	;volatile
  3109   001ECA                     
  3110                           ;comparator.c: 39:     CM2NCHbits.NCH=0b011;
  3111   001ECA  010E               	movlb	14	; () banked
  3112   001ECC  51CE               	movf	206,w,b	;volatile
  3113   001ECE  0BF8               	andlw	-8
  3114   001ED0  0903               	iorlw	3
  3115   001ED2  6FCE               	movwf	206,b	;volatile
  3116                           
  3117                           ;comparator.c: 40:     CM2PCHbits.PCH=0b101;
  3118   001ED4  51CF               	movf	207,w,b	;volatile
  3119   001ED6  0BF8               	andlw	-8
  3120   001ED8  0905               	iorlw	5
  3121   001EDA  6FCF               	movwf	207,b	;volatile
  3122   001EDC                     
  3123                           ; BSR set to: 14
  3124                           ;comparator.c: 41:     CM2CON0bits.HYS=1;
  3125   001EDC  83CC               	bsf	204,1,b	;volatile
  3126   001EDE                     
  3127                           ; BSR set to: 14
  3128                           ;comparator.c: 42:     CM2CON0bits.POL=1;
  3129   001EDE  89CC               	bsf	204,4,b	;volatile
  3130   001EE0                     
  3131                           ; BSR set to: 14
  3132                           ;comparator.c: 43:     CM2CON1bits.INTN=1;
  3133   001EE0  81CD               	bsf	205,0,b	;volatile
  3134   001EE2                     
  3135                           ; BSR set to: 14
  3136                           ;comparator.c: 44:     DAC_init();
  3137   001EE2  ECAB  F00F         	call	_DAC_init	;wreg free
  3138   001EE6                     
  3139                           ;comparator.c: 45:     CM2CON0bits.EN=1;
  3140   001EE6  010E               	movlb	14	; () banked
  3141   001EE8  8FCC               	bsf	204,7,b	;volatile
  3142   001EEA                     
  3143                           ; BSR set to: 14
  3144   001EEA  0012               	return		;funcret
  3145   001EEC                     __end_of_Comp1_init_fe:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _DAC_init *****************
  3149 ;; Defined at:
  3150 ;;		line 6 in file "comparator.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 2
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_Comp1_init_re
  3175 ;;		_Comp1_init_fe
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text22
  3180   001F56                     __ptext22:
  3181                           	callstack 0
  3182   001F56                     _DAC_init:
  3183                           	callstack 26
  3184   001F56                     
  3185                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  3186   001F56  0EF3               	movlw	-13
  3187   001F58  010E               	movlb	14	; () banked
  3188   001F5A  17C6               	andwf	198,f,b	;volatile
  3189   001F5C                     
  3190                           ; BSR set to: 14
  3191                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  3192   001F5C  91C6               	bcf	198,0,b	;volatile
  3193                           
  3194                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  3195   001F5E  51C7               	movf	199,w,b	;volatile
  3196   001F60  0BE0               	andlw	-32
  3197   001F62  0914               	iorlw	20
  3198   001F64  6FC7               	movwf	199,b	;volatile
  3199   001F66                     
  3200                           ; BSR set to: 14
  3201                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  3202   001F66  8FC6               	bsf	198,7,b	;volatile
  3203   001F68                     
  3204                           ; BSR set to: 14
  3205   001F68  0012               	return		;funcret
  3206   001F6A                     __end_of_DAC_init:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _increaseHour *****************
  3210 ;; Defined at:
  3211 ;;		line 51 in file "functions.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  day             2    3[COMRAM] unsigned int 
  3214 ;;  fwd_daylight    2    5[COMRAM] unsigned int 
  3215 ;;  bkwd_dayligh    2    7[COMRAM] unsigned int 
  3216 ;;  hour            1    9[COMRAM] PTR unsigned int 
  3217 ;;		 -> hour(2), 
  3218 ;;  backward_zon    1   10[COMRAM] PTR unsigned int 
  3219 ;;		 -> main@backward_zone(2), 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3231 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3234 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;Total ram usage:       10 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 2
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text23
  3246   00178A                     __ptext23:
  3247                           	callstack 0
  3248   00178A                     _increaseHour:
  3249                           	callstack 28
  3250   00178A                     
  3251                           ;functions.c: 53:     if (day == fwd_daylight_savings_day && *hour == 2) {
  3252   00178A  5006               	movf	increaseHour@fwd_daylight_savings_day^0,w,c
  3253   00178C  1804               	xorwf	increaseHour@day^0,w,c
  3254   00178E  E107               	bnz	u1691
  3255   001790  5007               	movf	(increaseHour@fwd_daylight_savings_day+1)^0,w,c
  3256   001792  1805               	xorwf	(increaseHour@day+1)^0,w,c
  3257   001794  A4D8               	btfss	status,2,c
  3258   001796  EFCF  F00B         	goto	u1691
  3259   00179A  EFD1  F00B         	goto	u1690
  3260   00179E                     u1691:
  3261   00179E  EFE9  F00B         	goto	l2429
  3262   0017A2                     u1690:
  3263   0017A2  500A               	movf	increaseHour@hour^0,w,c
  3264   0017A4  6ED9               	movwf	fsr2l,c
  3265   0017A6  6ADA               	clrf	fsr2h,c
  3266   0017A8  0E02               	movlw	2
  3267   0017AA  18DE               	xorwf	postinc2,w,c
  3268   0017AC  10DE               	iorwf	postinc2,w,c
  3269   0017AE  A4D8               	btfss	status,2,c
  3270   0017B0  EFDC  F00B         	goto	u1701
  3271   0017B4  EFDE  F00B         	goto	u1700
  3272   0017B8                     u1701:
  3273   0017B8  EFE9  F00B         	goto	l2429
  3274   0017BC                     u1700:
  3275   0017BC                     
  3276                           ;functions.c: 54:         (*hour)++;
  3277   0017BC  500A               	movf	increaseHour@hour^0,w,c
  3278   0017BE  6ED9               	movwf	fsr2l,c
  3279   0017C0  6ADA               	clrf	fsr2h,c
  3280   0017C2  2ADE               	incf	postinc2,f,c
  3281   0017C4  0E00               	movlw	0
  3282   0017C6  22DD               	addwfc	postdec2,f,c
  3283   0017C8                     
  3284                           ;functions.c: 55:         *backward_zone = 0;
  3285   0017C8  500B               	movf	increaseHour@backward_zone^0,w,c
  3286   0017CA  6ED9               	movwf	fsr2l,c
  3287   0017CC  6ADA               	clrf	fsr2h,c
  3288   0017CE  6ADE               	clrf	postinc2,c
  3289   0017D0  6ADD               	clrf	postdec2,c
  3290   0017D2                     l2429:
  3291                           
  3292                           ;functions.c: 58:     if (day == bkwd_daylight_savings_day && *hour == 2 && *backward_zo
      +                          ne == 0) {
  3293   0017D2  5008               	movf	increaseHour@bkwd_daylight_savings_day^0,w,c
  3294   0017D4  1804               	xorwf	increaseHour@day^0,w,c
  3295   0017D6  E107               	bnz	u1711
  3296   0017D8  5009               	movf	(increaseHour@bkwd_daylight_savings_day+1)^0,w,c
  3297   0017DA  1805               	xorwf	(increaseHour@day+1)^0,w,c
  3298   0017DC  A4D8               	btfss	status,2,c
  3299   0017DE  EFF3  F00B         	goto	u1711
  3300   0017E2  EFF5  F00B         	goto	u1710
  3301   0017E6                     u1711:
  3302   0017E6  EF1B  F00C         	goto	l238
  3303   0017EA                     u1710:
  3304   0017EA  500A               	movf	increaseHour@hour^0,w,c
  3305   0017EC  6ED9               	movwf	fsr2l,c
  3306   0017EE  6ADA               	clrf	fsr2h,c
  3307   0017F0  0E02               	movlw	2
  3308   0017F2  18DE               	xorwf	postinc2,w,c
  3309   0017F4  10DE               	iorwf	postinc2,w,c
  3310   0017F6  A4D8               	btfss	status,2,c
  3311   0017F8  EF00  F00C         	goto	u1721
  3312   0017FC  EF02  F00C         	goto	u1720
  3313   001800                     u1721:
  3314   001800  EF1B  F00C         	goto	l238
  3315   001804                     u1720:
  3316   001804  500B               	movf	increaseHour@backward_zone^0,w,c
  3317   001806  6ED9               	movwf	fsr2l,c
  3318   001808  6ADA               	clrf	fsr2h,c
  3319   00180A  50DE               	movf	postinc2,w,c
  3320   00180C  10DE               	iorwf	postinc2,w,c
  3321   00180E  A4D8               	btfss	status,2,c
  3322   001810  EF0C  F00C         	goto	u1731
  3323   001814  EF0E  F00C         	goto	u1730
  3324   001818                     u1731:
  3325   001818  EF1B  F00C         	goto	l238
  3326   00181C                     u1730:
  3327   00181C                     
  3328                           ;functions.c: 59:         (*hour)--;
  3329   00181C  500A               	movf	increaseHour@hour^0,w,c
  3330   00181E  6ED9               	movwf	fsr2l,c
  3331   001820  6ADA               	clrf	fsr2h,c
  3332   001822  06DE               	decf	postinc2,f,c
  3333   001824  0E00               	movlw	0
  3334   001826  5ADD               	subwfb	postdec2,f,c
  3335   001828                     
  3336                           ;functions.c: 60:         *backward_zone = 1;
  3337   001828  500B               	movf	increaseHour@backward_zone^0,w,c
  3338   00182A  6ED9               	movwf	fsr2l,c
  3339   00182C  6ADA               	clrf	fsr2h,c
  3340   00182E  0E01               	movlw	1
  3341   001830  6EDE               	movwf	postinc2,c
  3342   001832  0E00               	movlw	0
  3343   001834  6EDD               	movwf	postdec2,c
  3344   001836                     l238:
  3345   001836  0012               	return		;funcret
  3346   001838                     __end_of_increaseHour:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _findDSTdates *****************
  3350 ;; Defined at:
  3351 ;;		line 64 in file "functions.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  hour            2   64[COMRAM] unsigned int 
  3354 ;;  day             2   66[COMRAM] unsigned int 
  3355 ;;  year            2   68[COMRAM] unsigned int 
  3356 ;;  fwd_daylight    1   70[COMRAM] PTR unsigned int 
  3357 ;;		 -> main@fwd_daylight_savings_day(2), 
  3358 ;;  bkwd_dayligh    1   71[COMRAM] PTR unsigned int 
  3359 ;;		 -> main@bkwd_daylight_savings_day(2), 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3371 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;Total ram usage:        8 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 5
  3378 ;; This function calls:
  3379 ;;		_lastSunday
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text24
  3386   001B64                     __ptext24:
  3387                           	callstack 0
  3388   001B64                     _findDSTdates:
  3389                           	callstack 25
  3390   001B64                     
  3391                           ;functions.c: 66:     if (day==1 && hour == 0){
  3392   001B64  0443               	decf	findDSTdates@day^0,w,c
  3393   001B66  1044               	iorwf	(findDSTdates@day+1)^0,w,c
  3394   001B68  A4D8               	btfss	status,2,c
  3395   001B6A  EFB9  F00D         	goto	u1671
  3396   001B6E  EFBB  F00D         	goto	u1670
  3397   001B72                     u1671:
  3398   001B72  EFE6  F00D         	goto	l242
  3399   001B76                     u1670:
  3400   001B76  5041               	movf	findDSTdates@hour^0,w,c
  3401   001B78  1042               	iorwf	(findDSTdates@hour+1)^0,w,c
  3402   001B7A  A4D8               	btfss	status,2,c
  3403   001B7C  EFC2  F00D         	goto	u1681
  3404   001B80  EFC4  F00D         	goto	u1680
  3405   001B84                     u1681:
  3406   001B84  EFE6  F00D         	goto	l242
  3407   001B88                     u1680:
  3408   001B88                     
  3409                           ;functions.c: 67:         *fwd_daylight_savings_day = lastSunday(year, 3);
  3410   001B88  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3411   001B8C  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3412   001B90  0E00               	movlw	0
  3413   001B92  6E1E               	movwf	(lastSunday@month+1)^0,c
  3414   001B94  0E03               	movlw	3
  3415   001B96  6E1D               	movwf	lastSunday@month^0,c
  3416   001B98  EC16  F007         	call	_lastSunday	;wreg free
  3417   001B9C  5047               	movf	findDSTdates@fwd_daylight_savings_day^0,w,c
  3418   001B9E  6ED9               	movwf	fsr2l,c
  3419   001BA0  6ADA               	clrf	fsr2h,c
  3420   001BA2  C01B  FFDE         	movff	?_lastSunday,postinc2
  3421   001BA6  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3422                           
  3423                           ;functions.c: 68:         *bkwd_daylight_savings_day = lastSunday(year, 10);
  3424   001BAA  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3425   001BAE  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3426   001BB2  0E00               	movlw	0
  3427   001BB4  6E1E               	movwf	(lastSunday@month+1)^0,c
  3428   001BB6  0E0A               	movlw	10
  3429   001BB8  6E1D               	movwf	lastSunday@month^0,c
  3430   001BBA  EC16  F007         	call	_lastSunday	;wreg free
  3431   001BBE  5048               	movf	findDSTdates@bkwd_daylight_savings_day^0,w,c
  3432   001BC0  6ED9               	movwf	fsr2l,c
  3433   001BC2  6ADA               	clrf	fsr2h,c
  3434   001BC4  C01B  FFDE         	movff	?_lastSunday,postinc2
  3435   001BC8  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3436   001BCC                     l242:
  3437   001BCC  0012               	return		;funcret
  3438   001BCE                     __end_of_findDSTdates:
  3439                           	callstack 0
  3440                           
  3441 ;; *************** function _lastSunday *****************
  3442 ;; Defined at:
  3443 ;;		line 18 in file "functions.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  year            2   26[COMRAM] unsigned int 
  3446 ;;  month           2   28[COMRAM] unsigned int 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  dayOfYearFor    2   52[COMRAM] unsigned int 
  3449 ;;  daysBeforeOc    2   50[COMRAM] unsigned int 
  3450 ;;  dayOfYearFor    2   48[COMRAM] unsigned int 
  3451 ;;  daysBeforeMa    2   46[COMRAM] unsigned int 
  3452 ;;  lastSundayDa    2   62[COMRAM] unsigned int 
  3453 ;;  leapYear        2   60[COMRAM] unsigned int 
  3454 ;;  dayOfWeekMon    2   44[COMRAM] unsigned int 
  3455 ;;  dayOfWeekMon    2   42[COMRAM] unsigned int 
  3456 ;;  h               2   40[COMRAM] unsigned int 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2   26[COMRAM] unsigned int 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;Total ram usage:       38 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 4
  3473 ;; This function calls:
  3474 ;;		___lwdiv
  3475 ;;		___lwmod
  3476 ;;		___wmul
  3477 ;;		_isLeapYear
  3478 ;; This function is called by:
  3479 ;;		_findDSTdates
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text25
  3484   000E2C                     __ptext25:
  3485                           	callstack 0
  3486   000E2C                     _lastSunday:
  3487                           	callstack 25
  3488   000E2C                     
  3489                           ;functions.c: 19:     unsigned int leapYear = isLeapYear(year);
  3490   000E2C  C01B  F016         	movff	lastSunday@year,isLeapYear@year
  3491   000E30  C01C  F017         	movff	lastSunday@year+1,isLeapYear@year+1
  3492   000E34  EC3B  F00D         	call	_isLeapYear	;wreg free
  3493   000E38  C016  F03D         	movff	?_isLeapYear,lastSunday@leapYear
  3494   000E3C  C017  F03E         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  3495   000E40                     
  3496                           ;functions.c: 23:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3497   000E40  0E00               	movlw	0
  3498   000E42  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3499   000E44  0E05               	movlw	5
  3500   000E46  6E0C               	movwf	___lwdiv@divisor^0,c
  3501   000E48  0E01               	movlw	1
  3502   000E4A  241D               	addwf	lastSunday@month^0,w,c
  3503   000E4C  6E04               	movwf	___wmul@multiplier^0,c
  3504   000E4E  0E00               	movlw	0
  3505   000E50  201E               	addwfc	(lastSunday@month+1)^0,w,c
  3506   000E52  6E05               	movwf	(___wmul@multiplier+1)^0,c
  3507   000E54  0E00               	movlw	0
  3508   000E56  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  3509   000E58  0E0D               	movlw	13
  3510   000E5A  6E06               	movwf	___wmul@multiplicand^0,c
  3511   000E5C  EC3F  F00F         	call	___wmul	;wreg free
  3512   000E60  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  3513   000E64  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  3514   000E68  EC78  F00D         	call	___lwdiv	;wreg free
  3515   000E6C  C00A  F01F         	movff	?___lwdiv,??_lastSunday
  3516   000E70  C00B  F020         	movff	?___lwdiv+1,??_lastSunday+1
  3517   000E74  0E00               	movlw	0
  3518   000E76  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3519   000E78  0E64               	movlw	100
  3520   000E7A  6E13               	movwf	___lwmod@divisor^0,c
  3521   000E7C  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  3522   000E80  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  3523   000E84  EC1B  F00E         	call	___lwmod	;wreg free
  3524   000E88  5011               	movf	?___lwmod^0,w,c
  3525   000E8A  241F               	addwf	??_lastSunday^0,w,c
  3526   000E8C  6E21               	movwf	(??_lastSunday+2)^0,c
  3527   000E8E  5012               	movf	(?___lwmod+1)^0,w,c
  3528   000E90  2020               	addwfc	(??_lastSunday+1)^0,w,c
  3529   000E92  6E22               	movwf	(??_lastSunday+3)^0,c
  3530   000E94  0E00               	movlw	0
  3531   000E96  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3532   000E98  0E64               	movlw	100
  3533   000E9A  6E13               	movwf	___lwmod@divisor^0,c
  3534   000E9C  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  3535   000EA0  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  3536   000EA4  EC1B  F00E         	call	___lwmod	;wreg free
  3537   000EA8  90D8               	bcf	status,0,c
  3538   000EAA  3212               	rrcf	(?___lwmod+1)^0,f,c
  3539   000EAC  3211               	rrcf	?___lwmod^0,f,c
  3540   000EAE  90D8               	bcf	status,0,c
  3541   000EB0  3212               	rrcf	(?___lwmod+1)^0,f,c
  3542   000EB2  3211               	rrcf	?___lwmod^0,f,c
  3543   000EB4  5011               	movf	?___lwmod^0,w,c
  3544   000EB6  2421               	addwf	(??_lastSunday+2)^0,w,c
  3545   000EB8  6E23               	movwf	(??_lastSunday+4)^0,c
  3546   000EBA  5012               	movf	(?___lwmod+1)^0,w,c
  3547   000EBC  2022               	addwfc	(??_lastSunday+3)^0,w,c
  3548   000EBE  6E24               	movwf	(??_lastSunday+5)^0,c
  3549   000EC0  0E00               	movlw	0
  3550   000EC2  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3551   000EC4  0E64               	movlw	100
  3552   000EC6  6E0C               	movwf	___lwdiv@divisor^0,c
  3553   000EC8  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  3554   000ECC  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  3555   000ED0  EC78  F00D         	call	___lwdiv	;wreg free
  3556   000ED4  90D8               	bcf	status,0,c
  3557   000ED6  320B               	rrcf	(?___lwdiv+1)^0,f,c
  3558   000ED8  320A               	rrcf	?___lwdiv^0,f,c
  3559   000EDA  90D8               	bcf	status,0,c
  3560   000EDC  320B               	rrcf	(?___lwdiv+1)^0,f,c
  3561   000EDE  320A               	rrcf	?___lwdiv^0,f,c
  3562   000EE0  500A               	movf	?___lwdiv^0,w,c
  3563   000EE2  2423               	addwf	(??_lastSunday+4)^0,w,c
  3564   000EE4  6E25               	movwf	(??_lastSunday+6)^0,c
  3565   000EE6  500B               	movf	(?___lwdiv+1)^0,w,c
  3566   000EE8  2024               	addwfc	(??_lastSunday+5)^0,w,c
  3567   000EEA  6E26               	movwf	(??_lastSunday+7)^0,c
  3568   000EEC  0E00               	movlw	0
  3569   000EEE  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3570   000EF0  0E64               	movlw	100
  3571   000EF2  6E0C               	movwf	___lwdiv@divisor^0,c
  3572   000EF4  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  3573   000EF8  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  3574   000EFC  EC78  F00D         	call	___lwdiv	;wreg free
  3575   000F00  90D8               	bcf	status,0,c
  3576   000F02  360A               	rlcf	?___lwdiv^0,f,c
  3577   000F04  360B               	rlcf	(?___lwdiv+1)^0,f,c
  3578   000F06  500A               	movf	?___lwdiv^0,w,c
  3579   000F08  5C25               	subwf	(??_lastSunday+6)^0,w,c
  3580   000F0A  6E27               	movwf	(??_lastSunday+8)^0,c
  3581   000F0C  500B               	movf	(?___lwdiv+1)^0,w,c
  3582   000F0E  5826               	subwfb	(??_lastSunday+7)^0,w,c
  3583   000F10  6E28               	movwf	(??_lastSunday+9)^0,c
  3584   000F12  0E01               	movlw	1
  3585   000F14  2427               	addwf	(??_lastSunday+8)^0,w,c
  3586   000F16  6E37               	movwf	_lastSunday$2264^0,c
  3587   000F18  0E00               	movlw	0
  3588   000F1A  2028               	addwfc	(??_lastSunday+9)^0,w,c
  3589   000F1C  6E38               	movwf	(_lastSunday$2264+1)^0,c
  3590   000F1E                     
  3591                           ;functions.c: 23:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3592   000F1E  C037  F011         	movff	_lastSunday$2264,___lwmod@dividend
  3593   000F22  C038  F012         	movff	_lastSunday$2264+1,___lwmod@dividend+1
  3594   000F26  0E00               	movlw	0
  3595   000F28  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3596   000F2A  0E07               	movlw	7
  3597   000F2C  6E13               	movwf	___lwmod@divisor^0,c
  3598   000F2E  EC1B  F00E         	call	___lwmod	;wreg free
  3599   000F32  C011  F029         	movff	?___lwmod,lastSunday@h
  3600   000F36  C012  F02A         	movff	?___lwmod+1,lastSunday@h+1
  3601   000F3A                     
  3602                           ;functions.c: 24:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  3603   000F3A  0E06               	movlw	6
  3604   000F3C  2429               	addwf	lastSunday@h^0,w,c
  3605   000F3E  6E11               	movwf	___lwmod@dividend^0,c
  3606   000F40  0E00               	movlw	0
  3607   000F42  202A               	addwfc	(lastSunday@h+1)^0,w,c
  3608   000F44  6E12               	movwf	(___lwmod@dividend+1)^0,c
  3609   000F46  0E00               	movlw	0
  3610   000F48  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3611   000F4A  0E07               	movlw	7
  3612   000F4C  6E13               	movwf	___lwmod@divisor^0,c
  3613   000F4E  EC1B  F00E         	call	___lwmod	;wreg free
  3614   000F52  C011  F02B         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  3615   000F56  C012  F02C         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  3616   000F5A                     
  3617                           ;functions.c: 27:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  3618   000F5A  0E1E               	movlw	30
  3619   000F5C  242B               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  3620   000F5E  6E11               	movwf	___lwmod@dividend^0,c
  3621   000F60  0E00               	movlw	0
  3622   000F62  202C               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  3623   000F64  6E12               	movwf	(___lwmod@dividend+1)^0,c
  3624   000F66  0E00               	movlw	0
  3625   000F68  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3626   000F6A  0E07               	movlw	7
  3627   000F6C  6E13               	movwf	___lwmod@divisor^0,c
  3628   000F6E  EC1B  F00E         	call	___lwmod	;wreg free
  3629   000F72  C011  F02D         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  3630   000F76  C012  F02E         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  3631   000F7A                     
  3632                           ;functions.c: 30:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  3633   000F7A  502D               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  3634   000F7C  081F               	sublw	31
  3635   000F7E  6E3F               	movwf	lastSunday@lastSundayDateMonth^0,c
  3636   000F80  502E               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  3637   000F82  A0D8               	btfss	status,0,c
  3638   000F84  2AE8               	incf	wreg,f,c
  3639   000F86  0800               	sublw	0
  3640   000F88  6E40               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  3641   000F8A                     
  3642                           ;functions.c: 33:     if (month == 3){
  3643   000F8A  0E03               	movlw	3
  3644   000F8C  181D               	xorwf	lastSunday@month^0,w,c
  3645   000F8E  101E               	iorwf	(lastSunday@month+1)^0,w,c
  3646   000F90  A4D8               	btfss	status,2,c
  3647   000F92  EFCD  F007         	goto	u1501
  3648   000F96  EFCF  F007         	goto	u1500
  3649   000F9A                     u1501:
  3650   000F9A  EFF4  F007         	goto	l2303
  3651   000F9E                     u1500:
  3652   000F9E                     
  3653                           ;functions.c: 34:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  3654   000F9E  503D               	movf	lastSunday@leapYear^0,w,c
  3655   000FA0  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  3656   000FA2  A4D8               	btfss	status,2,c
  3657   000FA4  EFD6  F007         	goto	u1511
  3658   000FA8  EFD8  F007         	goto	u1510
  3659   000FAC                     u1511:
  3660   000FAC  EFDE  F007         	goto	l2293
  3661   000FB0                     u1510:
  3662   000FB0  0E00               	movlw	0
  3663   000FB2  6E3A               	movwf	(_lastSunday$1178+1)^0,c
  3664   000FB4  0E1C               	movlw	28
  3665   000FB6  6E39               	movwf	_lastSunday$1178^0,c
  3666   000FB8  EFE2  F007         	goto	l2295
  3667   000FBC                     l2293:
  3668   000FBC  0E00               	movlw	0
  3669   000FBE  6E3A               	movwf	(_lastSunday$1178+1)^0,c
  3670   000FC0  0E1D               	movlw	29
  3671   000FC2  6E39               	movwf	_lastSunday$1178^0,c
  3672   000FC4                     l2295:
  3673   000FC4  0E1F               	movlw	31
  3674   000FC6  2439               	addwf	_lastSunday$1178^0,w,c
  3675   000FC8  6E2F               	movwf	lastSunday@daysBeforeMarch^0,c
  3676   000FCA  0E00               	movlw	0
  3677   000FCC  203A               	addwfc	(_lastSunday$1178+1)^0,w,c
  3678   000FCE  6E30               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  3679   000FD0                     
  3680                           ;functions.c: 35:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  3681   000FD0  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  3682   000FD2  242F               	addwf	lastSunday@daysBeforeMarch^0,w,c
  3683   000FD4  6E31               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  3684   000FD6  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  3685   000FD8  2030               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  3686   000FDA  6E32               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  3687   000FDC                     
  3688                           ;functions.c: 36:     return dayOfYearForDSTStart;
  3689   000FDC  C031  F01B         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  3690   000FE0  C032  F01C         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  3691   000FE4  EF21  F008         	goto	l228
  3692   000FE8                     l2303:
  3693                           
  3694                           ;functions.c: 41:     if (month == 10){
  3695   000FE8  0E0A               	movlw	10
  3696   000FEA  181D               	xorwf	lastSunday@month^0,w,c
  3697   000FEC  101E               	iorwf	(lastSunday@month+1)^0,w,c
  3698   000FEE  A4D8               	btfss	status,2,c
  3699   000FF0  EFFC  F007         	goto	u1521
  3700   000FF4  EFFE  F007         	goto	u1520
  3701   000FF8                     u1521:
  3702   000FF8  EF21  F008         	goto	l228
  3703   000FFC                     u1520:
  3704   000FFC                     
  3705                           ;functions.c: 42:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  3706   000FFC  503D               	movf	lastSunday@leapYear^0,w,c
  3707   000FFE  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  3708   001000  A4D8               	btfss	status,2,c
  3709   001002  EF05  F008         	goto	u1531
  3710   001006  EF07  F008         	goto	u1530
  3711   00100A                     u1531:
  3712   00100A  EF0D  F008         	goto	l2309
  3713   00100E                     u1530:
  3714   00100E  0E00               	movlw	0
  3715   001010  6E3C               	movwf	(_lastSunday$1181+1)^0,c
  3716   001012  0E1C               	movlw	28
  3717   001014  6E3B               	movwf	_lastSunday$1181^0,c
  3718   001016  EF11  F008         	goto	l2311
  3719   00101A                     l2309:
  3720   00101A  0E00               	movlw	0
  3721   00101C  6E3C               	movwf	(_lastSunday$1181+1)^0,c
  3722   00101E  0E1D               	movlw	29
  3723   001020  6E3B               	movwf	_lastSunday$1181^0,c
  3724   001022                     l2311:
  3725   001022  0EF5               	movlw	245
  3726   001024  243B               	addwf	_lastSunday$1181^0,w,c
  3727   001026  6E33               	movwf	lastSunday@daysBeforeOctober^0,c
  3728   001028  0E00               	movlw	0
  3729   00102A  203C               	addwfc	(_lastSunday$1181+1)^0,w,c
  3730   00102C  6E34               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  3731   00102E                     
  3732                           ;functions.c: 44:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  3733   00102E  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  3734   001030  2433               	addwf	lastSunday@daysBeforeOctober^0,w,c
  3735   001032  6E35               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  3736   001034  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  3737   001036  2034               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  3738   001038  6E36               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  3739   00103A                     
  3740                           ;functions.c: 46:     return dayOfYearForDSTEnd;
  3741   00103A  C035  F01B         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  3742   00103E  C036  F01C         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  3743   001042                     l228:
  3744   001042  0012               	return		;funcret
  3745   001044                     __end_of_lastSunday:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function ___wmul *****************
  3749 ;; Defined at:
  3750 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  multiplier      2    3[COMRAM] unsigned int 
  3753 ;;  multiplicand    2    5[COMRAM] unsigned int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  product         2    7[COMRAM] unsigned int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  2    3[COMRAM] unsigned int 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, prodl, prodh
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 2
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_lastSunday
  3776 ;;		_read_prec_or_width
  3777 ;;		_LED_Light_Meter
  3778 ;;		_ADC2String
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text26
  3783   001E7E                     __ptext26:
  3784                           	callstack 0
  3785   001E7E                     ___wmul:
  3786                           	callstack 23
  3787   001E7E  5004               	movf	___wmul@multiplier^0,w,c
  3788   001E80  0206               	mulwf	___wmul@multiplicand^0,c
  3789   001E82  CFF3 F008          	movff	prodl,___wmul@product
  3790   001E86  CFF4 F009          	movff	prodh,___wmul@product+1
  3791   001E8A  5004               	movf	___wmul@multiplier^0,w,c
  3792   001E8C  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  3793   001E8E  50F3               	movf	243,w,c
  3794   001E90  2609               	addwf	(___wmul@product+1)^0,f,c
  3795   001E92  5005               	movf	(___wmul@multiplier+1)^0,w,c
  3796   001E94  0206               	mulwf	___wmul@multiplicand^0,c
  3797   001E96  50F3               	movf	243,w,c
  3798   001E98  2609               	addwf	(___wmul@product+1)^0,f,c
  3799   001E9A  C008  F004         	movff	___wmul@product,?___wmul
  3800   001E9E  C009  F005         	movff	___wmul@product+1,?___wmul+1
  3801   001EA2  0012               	return		;funcret
  3802   001EA4                     __end_of___wmul:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function ___lwdiv *****************
  3806 ;; Defined at:
  3807 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  dividend        2    9[COMRAM] unsigned int 
  3810 ;;  divisor         2   11[COMRAM] unsigned int 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  quotient        2   13[COMRAM] unsigned int 
  3813 ;;  counter         1   15[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  2    9[COMRAM] unsigned int 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;Total ram usage:        7 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 2
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_lastSunday
  3834 ;;		_LED_Light_Meter
  3835 ;;		_ADC2String
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text27
  3840   001AF0                     __ptext27:
  3841                           	callstack 0
  3842   001AF0                     ___lwdiv:
  3843                           	callstack 26
  3844   001AF0  0E00               	movlw	0
  3845   001AF2  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  3846   001AF4  0E00               	movlw	0
  3847   001AF6  6E0E               	movwf	___lwdiv@quotient^0,c
  3848   001AF8  500C               	movf	___lwdiv@divisor^0,w,c
  3849   001AFA  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3850   001AFC  B4D8               	btfsc	status,2,c
  3851   001AFE  EF83  F00D         	goto	u1461
  3852   001B02  EF85  F00D         	goto	u1460
  3853   001B06                     u1461:
  3854   001B06  EFAD  F00D         	goto	l806
  3855   001B0A                     u1460:
  3856   001B0A  0E01               	movlw	1
  3857   001B0C  6E10               	movwf	___lwdiv@counter^0,c
  3858   001B0E  EF8D  F00D         	goto	l2183
  3859   001B12                     l2181:
  3860   001B12  90D8               	bcf	status,0,c
  3861   001B14  360C               	rlcf	___lwdiv@divisor^0,f,c
  3862   001B16  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3863   001B18  2A10               	incf	___lwdiv@counter^0,f,c
  3864   001B1A                     l2183:
  3865   001B1A  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  3866   001B1C  EF92  F00D         	goto	u1471
  3867   001B20  EF94  F00D         	goto	u1470
  3868   001B24                     u1471:
  3869   001B24  EF89  F00D         	goto	l2181
  3870   001B28                     u1470:
  3871   001B28                     l2185:
  3872   001B28  90D8               	bcf	status,0,c
  3873   001B2A  360E               	rlcf	___lwdiv@quotient^0,f,c
  3874   001B2C  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3875   001B2E  500C               	movf	___lwdiv@divisor^0,w,c
  3876   001B30  5C0A               	subwf	___lwdiv@dividend^0,w,c
  3877   001B32  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3878   001B34  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3879   001B36  A0D8               	btfss	status,0,c
  3880   001B38  EFA0  F00D         	goto	u1481
  3881   001B3C  EFA2  F00D         	goto	u1480
  3882   001B40                     u1481:
  3883   001B40  EFA7  F00D         	goto	l2193
  3884   001B44                     u1480:
  3885   001B44  500C               	movf	___lwdiv@divisor^0,w,c
  3886   001B46  5E0A               	subwf	___lwdiv@dividend^0,f,c
  3887   001B48  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3888   001B4A  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3889   001B4C  800E               	bsf	___lwdiv@quotient^0,0,c
  3890   001B4E                     l2193:
  3891   001B4E  90D8               	bcf	status,0,c
  3892   001B50  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3893   001B52  320C               	rrcf	___lwdiv@divisor^0,f,c
  3894   001B54  2E10               	decfsz	___lwdiv@counter^0,f,c
  3895   001B56  EF94  F00D         	goto	l2185
  3896   001B5A                     l806:
  3897   001B5A  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  3898   001B5E  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3899   001B62  0012               	return		;funcret
  3900   001B64                     __end_of___lwdiv:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _changeHourDayYear *****************
  3904 ;; Defined at:
  3905 ;;		line 73 in file "functions.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  hour            1   26[COMRAM] PTR unsigned int 
  3908 ;;		 -> hour(2), 
  3909 ;;  day             1   27[COMRAM] PTR unsigned int 
  3910 ;;		 -> main@day(2), 
  3911 ;;  year            1   28[COMRAM] PTR unsigned int 
  3912 ;;		 -> main@year(2), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  leap            2   31[COMRAM] unsigned int 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;Total ram usage:        7 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 4
  3931 ;; This function calls:
  3932 ;;		_isLeapYear
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text28
  3939   0014BA                     __ptext28:
  3940                           	callstack 0
  3941   0014BA                     _changeHourDayYear:
  3942                           	callstack 26
  3943   0014BA                     
  3944                           ;functions.c: 74:         if (*hour == 24) {
  3945   0014BA  501B               	movf	changeHourDayYear@hour^0,w,c
  3946   0014BC  6ED9               	movwf	fsr2l,c
  3947   0014BE  6ADA               	clrf	fsr2h,c
  3948   0014C0  0E18               	movlw	24
  3949   0014C2  18DE               	xorwf	postinc2,w,c
  3950   0014C4  10DE               	iorwf	postinc2,w,c
  3951   0014C6  A4D8               	btfss	status,2,c
  3952   0014C8  EF68  F00A         	goto	u1741
  3953   0014CC  EF6A  F00A         	goto	u1740
  3954   0014D0                     u1741:
  3955   0014D0  EF75  F00A         	goto	l2445
  3956   0014D4                     u1740:
  3957   0014D4                     
  3958                           ;functions.c: 75:            *hour = 0;
  3959   0014D4  501B               	movf	changeHourDayYear@hour^0,w,c
  3960   0014D6  6ED9               	movwf	fsr2l,c
  3961   0014D8  6ADA               	clrf	fsr2h,c
  3962   0014DA  6ADE               	clrf	postinc2,c
  3963   0014DC  6ADD               	clrf	postdec2,c
  3964   0014DE                     
  3965                           ;functions.c: 76:            (*day)++;
  3966   0014DE  501C               	movf	changeHourDayYear@day^0,w,c
  3967   0014E0  6ED9               	movwf	fsr2l,c
  3968   0014E2  6ADA               	clrf	fsr2h,c
  3969   0014E4  2ADE               	incf	postinc2,f,c
  3970   0014E6  0E00               	movlw	0
  3971   0014E8  22DD               	addwfc	postdec2,f,c
  3972   0014EA                     l2445:
  3973                           
  3974                           ;functions.c: 78:         if (*day == 365){
  3975   0014EA  501C               	movf	changeHourDayYear@day^0,w,c
  3976   0014EC  6ED9               	movwf	fsr2l,c
  3977   0014EE  6ADA               	clrf	fsr2h,c
  3978   0014F0  0E6D               	movlw	109
  3979   0014F2  18DE               	xorwf	postinc2,w,c
  3980   0014F4  E106               	bnz	u1751
  3981   0014F6  04DE               	decf	postinc2,w,c
  3982   0014F8  A4D8               	btfss	status,2,c
  3983   0014FA  EF81  F00A         	goto	u1751
  3984   0014FE  EF83  F00A         	goto	u1750
  3985   001502                     u1751:
  3986   001502  EFA2  F00A         	goto	l2455
  3987   001506                     u1750:
  3988   001506                     
  3989                           ;functions.c: 79:             unsigned int leap = isLeapYear(year);
  3990   001506  C01D  F016         	movff	changeHourDayYear@year,isLeapYear@year
  3991   00150A  6A17               	clrf	(isLeapYear@year+1)^0,c
  3992   00150C  EC3B  F00D         	call	_isLeapYear	;wreg free
  3993   001510  C016  F020         	movff	?_isLeapYear,changeHourDayYear@leap
  3994   001514  C017  F021         	movff	?_isLeapYear+1,changeHourDayYear@leap+1
  3995   001518                     
  3996                           ;functions.c: 80:             if (leap == 0){
  3997   001518  5020               	movf	changeHourDayYear@leap^0,w,c
  3998   00151A  1021               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  3999   00151C  A4D8               	btfss	status,2,c
  4000   00151E  EF93  F00A         	goto	u1761
  4001   001522  EF95  F00A         	goto	u1760
  4002   001526                     u1761:
  4003   001526  EFA2  F00A         	goto	l2455
  4004   00152A                     u1760:
  4005   00152A                     
  4006                           ;functions.c: 81:                 *day=1;
  4007   00152A  501C               	movf	changeHourDayYear@day^0,w,c
  4008   00152C  6ED9               	movwf	fsr2l,c
  4009   00152E  6ADA               	clrf	fsr2h,c
  4010   001530  0E01               	movlw	1
  4011   001532  6EDE               	movwf	postinc2,c
  4012   001534  0E00               	movlw	0
  4013   001536  6EDD               	movwf	postdec2,c
  4014   001538                     
  4015                           ;functions.c: 82:                 (*year)++;
  4016   001538  501D               	movf	changeHourDayYear@year^0,w,c
  4017   00153A  6ED9               	movwf	fsr2l,c
  4018   00153C  6ADA               	clrf	fsr2h,c
  4019   00153E  2ADE               	incf	postinc2,f,c
  4020   001540  0E00               	movlw	0
  4021   001542  22DD               	addwfc	postdec2,f,c
  4022   001544                     l2455:
  4023                           
  4024                           ;functions.c: 86:         if (*day == 366){
  4025   001544  501C               	movf	changeHourDayYear@day^0,w,c
  4026   001546  6ED9               	movwf	fsr2l,c
  4027   001548  6ADA               	clrf	fsr2h,c
  4028   00154A  0E6E               	movlw	110
  4029   00154C  18DE               	xorwf	postinc2,w,c
  4030   00154E  E106               	bnz	u1771
  4031   001550  04DE               	decf	postinc2,w,c
  4032   001552  A4D8               	btfss	status,2,c
  4033   001554  EFAE  F00A         	goto	u1771
  4034   001558  EFB0  F00A         	goto	u1770
  4035   00155C                     u1771:
  4036   00155C  EFBD  F00A         	goto	l249
  4037   001560                     u1770:
  4038   001560                     
  4039                           ;functions.c: 87:             *day = 1;
  4040   001560  501C               	movf	changeHourDayYear@day^0,w,c
  4041   001562  6ED9               	movwf	fsr2l,c
  4042   001564  6ADA               	clrf	fsr2h,c
  4043   001566  0E01               	movlw	1
  4044   001568  6EDE               	movwf	postinc2,c
  4045   00156A  0E00               	movlw	0
  4046   00156C  6EDD               	movwf	postdec2,c
  4047   00156E                     
  4048                           ;functions.c: 88:             (*year)++;
  4049   00156E  501D               	movf	changeHourDayYear@year^0,w,c
  4050   001570  6ED9               	movwf	fsr2l,c
  4051   001572  6ADA               	clrf	fsr2h,c
  4052   001574  2ADE               	incf	postinc2,f,c
  4053   001576  0E00               	movlw	0
  4054   001578  22DD               	addwfc	postdec2,f,c
  4055   00157A                     l249:
  4056   00157A  0012               	return		;funcret
  4057   00157C                     __end_of_changeHourDayYear:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _isLeapYear *****************
  4061 ;; Defined at:
  4062 ;;		line 14 in file "functions.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  year            2   21[COMRAM] unsigned int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2   21[COMRAM] unsigned int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;Total ram usage:        5 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 3
  4083 ;; This function calls:
  4084 ;;		___lwmod
  4085 ;; This function is called by:
  4086 ;;		_lastSunday
  4087 ;;		_changeHourDayYear
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text29
  4092   001A76                     __ptext29:
  4093                           	callstack 0
  4094   001A76                     _isLeapYear:
  4095                           	callstack 25
  4096   001A76                     
  4097                           ;functions.c: 15:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  4098   001A76  0E01               	movlw	1
  4099   001A78  6E1A               	movwf	_isLeapYear$1167^0,c
  4100   001A7A  0E03               	movlw	3
  4101   001A7C  1416               	andwf	isLeapYear@year^0,w,c
  4102   001A7E  6E18               	movwf	??_isLeapYear^0,c
  4103   001A80  0E00               	movlw	0
  4104   001A82  1417               	andwf	(isLeapYear@year+1)^0,w,c
  4105   001A84  6E19               	movwf	(??_isLeapYear+1)^0,c
  4106   001A86  5018               	movf	??_isLeapYear^0,w,c
  4107   001A88  1019               	iorwf	(??_isLeapYear+1)^0,w,c
  4108   001A8A  A4D8               	btfss	status,2,c
  4109   001A8C  EF4A  F00D         	goto	u1421
  4110   001A90  EF4C  F00D         	goto	u1420
  4111   001A94                     u1421:
  4112   001A94  EF5F  F00D         	goto	l2155
  4113   001A98                     u1420:
  4114   001A98  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4115   001A9C  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4116   001AA0  0E00               	movlw	0
  4117   001AA2  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4118   001AA4  0E64               	movlw	100
  4119   001AA6  6E13               	movwf	___lwmod@divisor^0,c
  4120   001AA8  EC1B  F00E         	call	___lwmod	;wreg free
  4121   001AAC  5011               	movf	?___lwmod^0,w,c
  4122   001AAE  1012               	iorwf	(?___lwmod+1)^0,w,c
  4123   001AB0  A4D8               	btfss	status,2,c
  4124   001AB2  EF5D  F00D         	goto	u1431
  4125   001AB6  EF5F  F00D         	goto	u1430
  4126   001ABA                     u1431:
  4127   001ABA  EF74  F00D         	goto	l2159
  4128   001ABE                     u1430:
  4129   001ABE                     l2155:
  4130   001ABE  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4131   001AC2  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4132   001AC6  0E01               	movlw	1
  4133   001AC8  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4134   001ACA  0E90               	movlw	144
  4135   001ACC  6E13               	movwf	___lwmod@divisor^0,c
  4136   001ACE  EC1B  F00E         	call	___lwmod	;wreg free
  4137   001AD2  5011               	movf	?___lwmod^0,w,c
  4138   001AD4  1012               	iorwf	(?___lwmod+1)^0,w,c
  4139   001AD6  B4D8               	btfsc	status,2,c
  4140   001AD8  EF70  F00D         	goto	u1441
  4141   001ADC  EF72  F00D         	goto	u1440
  4142   001AE0                     u1441:
  4143   001AE0  EF74  F00D         	goto	l2159
  4144   001AE4                     u1440:
  4145   001AE4  0E00               	movlw	0
  4146   001AE6  6E1A               	movwf	_isLeapYear$1167^0,c
  4147   001AE8                     l2159:
  4148   001AE8  C01A  F016         	movff	_isLeapYear$1167,?_isLeapYear
  4149   001AEC  6A17               	clrf	(?_isLeapYear+1)^0,c
  4150   001AEE  0012               	return		;funcret
  4151   001AF0                     __end_of_isLeapYear:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function ___lwmod *****************
  4155 ;; Defined at:
  4156 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  dividend        2   16[COMRAM] unsigned int 
  4159 ;;  divisor         2   18[COMRAM] unsigned int 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  counter         1   20[COMRAM] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2   16[COMRAM] unsigned int 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;Total ram usage:        5 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 2
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_isLeapYear
  4182 ;;		_lastSunday
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text30
  4187   001C36                     __ptext30:
  4188                           	callstack 0
  4189   001C36                     ___lwmod:
  4190                           	callstack 25
  4191   001C36  5013               	movf	___lwmod@divisor^0,w,c
  4192   001C38  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  4193   001C3A  B4D8               	btfsc	status,2,c
  4194   001C3C  EF22  F00E         	goto	u1341
  4195   001C40  EF24  F00E         	goto	u1340
  4196   001C44                     u1341:
  4197   001C44  EF48  F00E         	goto	l816
  4198   001C48                     u1340:
  4199   001C48  0E01               	movlw	1
  4200   001C4A  6E15               	movwf	___lwmod@counter^0,c
  4201   001C4C  EF2C  F00E         	goto	l2077
  4202   001C50                     l2075:
  4203   001C50  90D8               	bcf	status,0,c
  4204   001C52  3613               	rlcf	___lwmod@divisor^0,f,c
  4205   001C54  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  4206   001C56  2A15               	incf	___lwmod@counter^0,f,c
  4207   001C58                     l2077:
  4208   001C58  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  4209   001C5A  EF31  F00E         	goto	u1351
  4210   001C5E  EF33  F00E         	goto	u1350
  4211   001C62                     u1351:
  4212   001C62  EF28  F00E         	goto	l2075
  4213   001C66                     u1350:
  4214   001C66                     l2079:
  4215   001C66  5013               	movf	___lwmod@divisor^0,w,c
  4216   001C68  5C11               	subwf	___lwmod@dividend^0,w,c
  4217   001C6A  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4218   001C6C  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  4219   001C6E  A0D8               	btfss	status,0,c
  4220   001C70  EF3C  F00E         	goto	u1361
  4221   001C74  EF3E  F00E         	goto	u1360
  4222   001C78                     u1361:
  4223   001C78  EF42  F00E         	goto	l2083
  4224   001C7C                     u1360:
  4225   001C7C  5013               	movf	___lwmod@divisor^0,w,c
  4226   001C7E  5E11               	subwf	___lwmod@dividend^0,f,c
  4227   001C80  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4228   001C82  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  4229   001C84                     l2083:
  4230   001C84  90D8               	bcf	status,0,c
  4231   001C86  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  4232   001C88  3213               	rrcf	___lwmod@divisor^0,f,c
  4233   001C8A  2E15               	decfsz	___lwmod@counter^0,f,c
  4234   001C8C  EF33  F00E         	goto	l2079
  4235   001C90                     l816:
  4236   001C90  C011  F011         	movff	___lwmod@dividend,?___lwmod
  4237   001C94  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  4238   001C98  0012               	return		;funcret
  4239   001C9A                     __end_of___lwmod:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _LEDarray_disp_bin *****************
  4243 ;; Defined at:
  4244 ;;		line 33 in file "LEDarray.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  number          2    3[COMRAM] unsigned int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		None
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;Total ram usage:        2 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 2
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_main
  4269 ;;		_LEDarray_disp_PPM
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text31
  4274   00132E                     __ptext31:
  4275                           	callstack 0
  4276   00132E                     _LEDarray_disp_bin:
  4277                           	callstack 28
  4278   00132E                     
  4279                           ;LEDarray.c: 33: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 34: {;LEDarray.
      +                          c: 36:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  4280   00132E  A004               	btfss	LEDarray_disp_bin@number^0,0,c
  4281   001330  EF9C  F009         	goto	u1551
  4282   001334  EF9E  F009         	goto	u1550
  4283   001338                     u1551:
  4284   001338  EFA1  F009         	goto	l84
  4285   00133C                     u1550:
  4286   00133C  807F               	bsf	127,0,c	;volatile
  4287   00133E  EFA2  F009         	goto	l85
  4288   001342                     l84:
  4289   001342  907F               	bcf	127,0,c	;volatile
  4290   001344                     l85:
  4291                           
  4292                           ;LEDarray.c: 37:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  4293   001344  A204               	btfss	LEDarray_disp_bin@number^0,1,c
  4294   001346  EFA7  F009         	goto	u1561
  4295   00134A  EFA9  F009         	goto	u1560
  4296   00134E                     u1561:
  4297   00134E  EFAC  F009         	goto	l86
  4298   001352                     u1560:
  4299   001352  827F               	bsf	127,1,c	;volatile
  4300   001354  EFAD  F009         	goto	l87
  4301   001358                     l86:
  4302   001358  927F               	bcf	127,1,c	;volatile
  4303   00135A                     l87:
  4304                           
  4305                           ;LEDarray.c: 38:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  4306   00135A  A404               	btfss	LEDarray_disp_bin@number^0,2,c
  4307   00135C  EFB2  F009         	goto	u1571
  4308   001360  EFB4  F009         	goto	u1570
  4309   001364                     u1571:
  4310   001364  EFB7  F009         	goto	l88
  4311   001368                     u1570:
  4312   001368  8479               	bsf	121,2,c	;volatile
  4313   00136A  EFB8  F009         	goto	l89
  4314   00136E                     l88:
  4315   00136E  9479               	bcf	121,2,c	;volatile
  4316   001370                     l89:
  4317                           
  4318                           ;LEDarray.c: 39:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  4319   001370  A604               	btfss	LEDarray_disp_bin@number^0,3,c
  4320   001372  EFBD  F009         	goto	u1581
  4321   001376  EFBF  F009         	goto	u1580
  4322   00137A                     u1581:
  4323   00137A  EFC2  F009         	goto	l90
  4324   00137E                     u1580:
  4325   00137E  8C7E               	bsf	126,6,c	;volatile
  4326   001380  EFC3  F009         	goto	l91
  4327   001384                     l90:
  4328   001384  9C7E               	bcf	126,6,c	;volatile
  4329   001386                     l91:
  4330                           
  4331                           ;LEDarray.c: 40:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  4332   001386  A804               	btfss	LEDarray_disp_bin@number^0,4,c
  4333   001388  EFC8  F009         	goto	u1591
  4334   00138C  EFCA  F009         	goto	u1590
  4335   001390                     u1591:
  4336   001390  EFCD  F009         	goto	l92
  4337   001394                     u1590:
  4338   001394  8879               	bsf	121,4,c	;volatile
  4339   001396  EFCE  F009         	goto	l93
  4340   00139A                     l92:
  4341   00139A  9879               	bcf	121,4,c	;volatile
  4342   00139C                     l93:
  4343                           
  4344                           ;LEDarray.c: 41:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  4345   00139C  AA04               	btfss	LEDarray_disp_bin@number^0,5,c
  4346   00139E  EFD3  F009         	goto	u1601
  4347   0013A2  EFD5  F009         	goto	u1600
  4348   0013A6                     u1601:
  4349   0013A6  EFD8  F009         	goto	l94
  4350   0013AA                     u1600:
  4351   0013AA  8A79               	bsf	121,5,c	;volatile
  4352   0013AC  EFD9  F009         	goto	l95
  4353   0013B0                     l94:
  4354   0013B0  9A79               	bcf	121,5,c	;volatile
  4355   0013B2                     l95:
  4356                           
  4357                           ;LEDarray.c: 42:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  4358   0013B2  AC04               	btfss	LEDarray_disp_bin@number^0,6,c
  4359   0013B4  EFDE  F009         	goto	u1611
  4360   0013B8  EFE0  F009         	goto	u1610
  4361   0013BC                     u1611:
  4362   0013BC  EFE3  F009         	goto	l96
  4363   0013C0                     u1610:
  4364   0013C0  807E               	bsf	126,0,c	;volatile
  4365   0013C2  EFE4  F009         	goto	l97
  4366   0013C6                     l96:
  4367   0013C6  907E               	bcf	126,0,c	;volatile
  4368   0013C8                     l97:
  4369                           
  4370                           ;LEDarray.c: 43:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  4371   0013C8  AE04               	btfss	LEDarray_disp_bin@number^0,7,c
  4372   0013CA  EFE9  F009         	goto	u1621
  4373   0013CE  EFEB  F009         	goto	u1620
  4374   0013D2                     u1621:
  4375   0013D2  EFEE  F009         	goto	l98
  4376   0013D6                     u1620:
  4377   0013D6  807A               	bsf	122,0,c	;volatile
  4378   0013D8  EFEF  F009         	goto	l99
  4379   0013DC                     l98:
  4380   0013DC  907A               	bcf	122,0,c	;volatile
  4381   0013DE                     l99:
  4382                           
  4383                           ;LEDarray.c: 44:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  4384   0013DE  A005               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4385   0013E0  EFF4  F009         	goto	u1631
  4386   0013E4  EFF6  F009         	goto	u1630
  4387   0013E8                     u1631:
  4388   0013E8  EFF9  F009         	goto	l100
  4389   0013EC                     u1630:
  4390   0013EC  827A               	bsf	122,1,c	;volatile
  4391   0013EE  EFFA  F009         	goto	l102
  4392   0013F2                     l100:
  4393   0013F2  927A               	bcf	122,1,c	;volatile
  4394   0013F4                     l102:
  4395   0013F4  0012               	return		;funcret
  4396   0013F6                     __end_of_LEDarray_disp_bin:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _LCD_setline *****************
  4400 ;; Defined at:
  4401 ;;		line 106 in file "LCD.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  line            1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  line            1    8[COMRAM] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;Total ram usage:        1 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 5
  4422 ;; This function calls:
  4423 ;;		_LCD_sendbyte
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text32
  4430   001D54                     __ptext32:
  4431                           	callstack 0
  4432   001D54                     _LCD_setline:
  4433                           	callstack 25
  4434                           
  4435                           ;incstack = 0
  4436                           ;LCD_setline@line stored from wreg
  4437   001D54  6E09               	movwf	LCD_setline@line^0,c
  4438   001D56                     
  4439                           ;LCD.c: 106: void LCD_setline (char line);LCD.c: 107: {;LCD.c: 109:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  4440   001D56  0409               	decf	LCD_setline@line^0,w,c
  4441   001D58  A4D8               	btfss	status,2,c
  4442   001D5A  EFB1  F00E         	goto	u1641
  4443   001D5E  EFB3  F00E         	goto	u1640
  4444   001D62                     u1641:
  4445   001D62  EFB8  F00E         	goto	l2401
  4446   001D66                     u1640:
  4447   001D66  0E00               	movlw	0
  4448   001D68  6E05               	movwf	LCD_sendbyte@type^0,c
  4449   001D6A  0E80               	movlw	128
  4450   001D6C  EC8C  F00E         	call	_LCD_sendbyte
  4451   001D70                     l2401:
  4452                           
  4453                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4454   001D70  0E02               	movlw	2
  4455   001D72  1809               	xorwf	LCD_setline@line^0,w,c
  4456   001D74  A4D8               	btfss	status,2,c
  4457   001D76  EFBF  F00E         	goto	u1651
  4458   001D7A  EFC1  F00E         	goto	u1650
  4459   001D7E                     u1651:
  4460   001D7E  EFC6  F00E         	goto	l295
  4461   001D82                     u1650:
  4462   001D82  0E00               	movlw	0
  4463   001D84  6E05               	movwf	LCD_sendbyte@type^0,c
  4464   001D86  0EC0               	movlw	192
  4465   001D88  EC8C  F00E         	call	_LCD_sendbyte
  4466   001D8C                     l295:
  4467   001D8C  0012               	return		;funcret
  4468   001D8E                     __end_of_LCD_setline:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _LCD_sendbyte *****************
  4472 ;; Defined at:
  4473 ;;		line 43 in file "LCD.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  Byte            1    wreg     unsigned char 
  4476 ;;  type            1    4[COMRAM] unsigned char 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  Byte            1    7[COMRAM] unsigned char 
  4479 ;;  lowNibble       1    6[COMRAM] unsigned char 
  4480 ;;  highNibble      1    5[COMRAM] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;Total ram usage:        4 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 4
  4497 ;; This function calls:
  4498 ;;		_LCD_sendnibble
  4499 ;; This function is called by:
  4500 ;;		_LCD_init
  4501 ;;		_LCD_setline
  4502 ;;		_LCD_sendstring
  4503 ;;		_LCD_scroll
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text33
  4508   001D18                     __ptext33:
  4509                           	callstack 0
  4510   001D18                     _LCD_sendbyte:
  4511                           	callstack 24
  4512                           
  4513                           ;incstack = 0
  4514                           ;LCD_sendbyte@Byte stored from wreg
  4515   001D18  6E08               	movwf	LCD_sendbyte@Byte^0,c
  4516   001D1A                     
  4517                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  4518   001D1A  0405               	decf	LCD_sendbyte@type^0,w,c
  4519   001D1C  A4D8               	btfss	status,2,c
  4520   001D1E  EF93  F00E         	goto	u1451
  4521   001D22  EF95  F00E         	goto	u1450
  4522   001D26                     u1451:
  4523   001D26  EF98  F00E         	goto	l285
  4524   001D2A                     u1450:
  4525   001D2A  8C7B               	bsf	123,6,c	;volatile
  4526   001D2C  EF99  F00E         	goto	l2167
  4527   001D30                     l285:
  4528   001D30  9C7B               	bcf	123,6,c	;volatile
  4529   001D32                     l2167:
  4530                           
  4531                           ;LCD.c: 50:     unsigned char highNibble = (Byte >> 4) ;
  4532   001D32  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  4533   001D34  0B0F               	andlw	15
  4534   001D36  6E06               	movwf	LCD_sendbyte@highNibble^0,c
  4535   001D38                     
  4536                           ;LCD.c: 51:     LCD_sendnibble(highNibble);
  4537   001D38  5006               	movf	LCD_sendbyte@highNibble^0,w,c
  4538   001D3A  ECE7  F00D         	call	_LCD_sendnibble
  4539   001D3E                     
  4540                           ;LCD.c: 54:     unsigned char lowNibble = Byte & 0b1111;
  4541   001D3E  5008               	movf	LCD_sendbyte@Byte^0,w,c
  4542   001D40  0B0F               	andlw	15
  4543   001D42  6E07               	movwf	LCD_sendbyte@lowNibble^0,c
  4544                           
  4545                           ;LCD.c: 55:     LCD_sendnibble(lowNibble);
  4546   001D44  5007               	movf	LCD_sendbyte@lowNibble^0,w,c
  4547   001D46  ECE7  F00D         	call	_LCD_sendnibble
  4548   001D4A                     
  4549                           ;LCD.c: 57:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4550   001D4A  0EA0               	movlw	160
  4551   001D4C                     u1917:
  4552   001D4C  D000               	nop2	
  4553   001D4E  2EE8               	decfsz	wreg,f,c
  4554   001D50  D7FD               	bra	u1917
  4555   001D52  0012               	return		;funcret
  4556   001D54                     __end_of_LCD_sendbyte:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function _LCD_sendnibble *****************
  4560 ;; Defined at:
  4561 ;;		line 21 in file "LCD.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  number          1    wreg     unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  number          1    3[COMRAM] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;Total ram usage:        1 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 3
  4582 ;; This function calls:
  4583 ;;		_LCD_E_TOG
  4584 ;; This function is called by:
  4585 ;;		_LCD_sendbyte
  4586 ;;		_LCD_init
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text34
  4591   001BCE                     __ptext34:
  4592                           	callstack 0
  4593   001BCE                     _LCD_sendnibble:
  4594                           	callstack 24
  4595                           
  4596                           ;incstack = 0
  4597                           ;LCD_sendnibble@number stored from wreg
  4598   001BCE  6E04               	movwf	LCD_sendnibble@number^0,c
  4599   001BD0                     
  4600                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  4601   001BD0  A004               	btfss	LCD_sendnibble@number^0,0,c
  4602   001BD2  EFED  F00D         	goto	u1301
  4603   001BD6  EFEF  F00D         	goto	u1300
  4604   001BDA                     u1301:
  4605   001BDA  EFF2  F00D         	goto	l274
  4606   001BDE                     u1300:
  4607   001BDE  867A               	bsf	122,3,c	;volatile
  4608   001BE0  EFF3  F00D         	goto	l2055
  4609   001BE4                     l274:
  4610   001BE4  967A               	bcf	122,3,c	;volatile
  4611   001BE6                     l2055:
  4612                           
  4613                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  4614   001BE6  A204               	btfss	LCD_sendnibble@number^0,1,c
  4615   001BE8  EFF8  F00D         	goto	u1311
  4616   001BEC  EFFA  F00D         	goto	u1310
  4617   001BF0                     u1311:
  4618   001BF0  EFFD  F00D         	goto	l276
  4619   001BF4                     u1310:
  4620   001BF4  847A               	bsf	122,2,c	;volatile
  4621   001BF6  EFFE  F00D         	goto	l2059
  4622   001BFA                     l276:
  4623   001BFA  947A               	bcf	122,2,c	;volatile
  4624   001BFC                     l2059:
  4625                           
  4626                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  4627   001BFC  A404               	btfss	LCD_sendnibble@number^0,2,c
  4628   001BFE  EF03  F00E         	goto	u1321
  4629   001C02  EF05  F00E         	goto	u1320
  4630   001C06                     u1321:
  4631   001C06  EF08  F00E         	goto	l278
  4632   001C0A                     u1320:
  4633   001C0A  867D               	bsf	125,3,c	;volatile
  4634   001C0C  EF09  F00E         	goto	l2063
  4635   001C10                     l278:
  4636   001C10  967D               	bcf	125,3,c	;volatile
  4637   001C12                     l2063:
  4638                           
  4639                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  4640   001C12  A604               	btfss	LCD_sendnibble@number^0,3,c
  4641   001C14  EF0E  F00E         	goto	u1331
  4642   001C18  EF10  F00E         	goto	u1330
  4643   001C1C                     u1331:
  4644   001C1C  EF13  F00E         	goto	l280
  4645   001C20                     u1330:
  4646   001C20  827D               	bsf	125,1,c	;volatile
  4647   001C22  EF14  F00E         	goto	l2067
  4648   001C26                     l280:
  4649   001C26  927D               	bcf	125,1,c	;volatile
  4650   001C28                     l2067:
  4651                           
  4652                           ;LCD.c: 34:     LCD_E_TOG();
  4653   001C28  ECB5  F00F         	call	_LCD_E_TOG	;wreg free
  4654   001C2C                     
  4655                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4656   001C2C  0E1A               	movlw	26
  4657   001C2E                     u1927:
  4658   001C2E  2EE8               	decfsz	wreg,f,c
  4659   001C30  D7FE               	bra	u1927
  4660   001C32  D000               	nop2	
  4661   001C34  0012               	return		;funcret
  4662   001C36                     __end_of_LCD_sendnibble:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _LCD_E_TOG *****************
  4666 ;; Defined at:
  4667 ;;		line 9 in file "LCD.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 2
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_LCD_sendnibble
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text35
  4696   001F6A                     __ptext35:
  4697                           	callstack 0
  4698   001F6A                     _LCD_E_TOG:
  4699                           	callstack 24
  4700   001F6A                     
  4701                           ;LCD.c: 12:     LATCbits.LATC2=1;
  4702   001F6A  847B               	bsf	123,2,c	;volatile
  4703   001F6C                     
  4704                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4705   001F6C  0E0A               	movlw	10
  4706   001F6E                     u1937:
  4707   001F6E  2EE8               	decfsz	wreg,f,c
  4708   001F70  D7FE               	bra	u1937
  4709   001F72  D000               	nop2	
  4710   001F74                     
  4711                           ;LCD.c: 15:     LATCbits.LATC2=0;
  4712   001F74  947B               	bcf	123,2,c	;volatile
  4713   001F76  0012               	return		;funcret
  4714   001F78                     __end_of_LCD_E_TOG:
  4715                           	callstack 0
  4716                           
  4717 ;; *************** function _LowISR *****************
  4718 ;; Defined at:
  4719 ;;		line 51 in file "interrupts.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;		None
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;Total ram usage:        3 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 1
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		Interrupt level 1
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	intcodelo
  4748   000018                     __pintcodelo:
  4749                           	callstack 0
  4750   000018                     _LowISR:
  4751                           	callstack 20
  4752                           
  4753                           ;incstack = 0
  4754   000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4755   00001A  CFD8 F001          	movff	status,??_LowISR
  4756   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  4757   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  4758   000026                     
  4759                           ;interrupts.c: 54:     if (PIR0bits.TMR0IF == 1) {
  4760   000026  010E               	movlb	14	; () banked
  4761   000028  AB33               	btfss	51,5,b	;volatile
  4762   00002A  EF19  F000         	goto	i1u182_21
  4763   00002E  EF1B  F000         	goto	i1u182_20
  4764   000032                     i1u182_21:
  4765   000032  EF24  F000         	goto	i1l2513
  4766   000036                     i1u182_20:
  4767   000036                     
  4768                           ; BSR set to: 14
  4769                           ;interrupts.c: 57:         hour++;
  4770   000036  0100               	movlb	0	; () banked
  4771   000038  4BAA               	infsnz	_hour& (0+255),f,b
  4772   00003A  2BAB               	incf	(_hour+1)& (0+255),f,b
  4773   00003C                     
  4774                           ; BSR set to: 0
  4775                           ;interrupts.c: 58:         TMR0H=00001011;
  4776   00003C  0E09               	movlw	9
  4777   00003E  6ED4               	movwf	212,c	;volatile
  4778   000040                     
  4779                           ; BSR set to: 0
  4780                           ;interrupts.c: 59:         TMR0L=110011011;
  4781   000040  0E83               	movlw	131
  4782   000042  6ED3               	movwf	211,c	;volatile
  4783   000044                     
  4784                           ; BSR set to: 0
  4785                           ;interrupts.c: 60:         PIR0bits.TMR0IF = 0;
  4786   000044  010E               	movlb	14	; () banked
  4787   000046  9B33               	bcf	51,5,b	;volatile
  4788   000048                     i1l2513:
  4789                           
  4790                           ; BSR set to: 14
  4791                           ;interrupts.c: 65:     if (PIR2bits.C1IF == 1) {
  4792   000048  A135               	btfss	53,0,b	;volatile
  4793   00004A  EF29  F000         	goto	i1u183_21
  4794   00004E  EF2B  F000         	goto	i1u183_20
  4795   000052                     i1u183_21:
  4796   000052  EF2D  F000         	goto	i1l168
  4797   000056                     i1u183_20:
  4798   000056                     
  4799                           ; BSR set to: 14
  4800                           ;interrupts.c: 66:         LATHbits.LATH3 = 1;
  4801   000056  8680               	bsf	128,3,c	;volatile
  4802                           
  4803                           ;interrupts.c: 67:         PIR2bits.C1IF = 0;
  4804   000058  9135               	bcf	53,0,b	;volatile
  4805   00005A                     i1l168:
  4806                           
  4807                           ; BSR set to: 14
  4808                           ;interrupts.c: 70:     if (PIR2bits.C2IF == 1) {
  4809   00005A  A335               	btfss	53,1,b	;volatile
  4810   00005C  EF32  F000         	goto	i1u184_21
  4811   000060  EF34  F000         	goto	i1u184_20
  4812   000064                     i1u184_21:
  4813   000064  EF36  F000         	goto	i1l170
  4814   000068                     i1u184_20:
  4815   000068                     
  4816                           ; BSR set to: 14
  4817                           ;interrupts.c: 71:             LATHbits.LATH3 = 0;
  4818   000068  9680               	bcf	128,3,c	;volatile
  4819                           
  4820                           ;interrupts.c: 72:             PIR2bits.C2IF = 0;
  4821   00006A  9335               	bcf	53,1,b	;volatile
  4822   00006C                     i1l170:
  4823                           
  4824                           ; BSR set to: 14
  4825   00006C  C003  FFE0         	movff	??_LowISR+2,bsr
  4826   000070  C002  FFE8         	movff	??_LowISR+1,wreg
  4827   000074  C001  FFD8         	movff	??_LowISR,status
  4828   000078  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4829   00007A  0010               	retfie	
  4830   00007C                     __end_of_LowISR:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _HighISR *****************
  4834 ;; Defined at:
  4835 ;;		line 40 in file "interrupts.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		None
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		Interrupt level 2
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	intcode
  4863   000008                     __pintcode:
  4864                           	callstack 0
  4865   000008                     _HighISR:
  4866                           	callstack 20
  4867                           
  4868                           ; BSR set to: 14
  4869                           ;incstack = 0
  4870   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4871   00000A  EF94  F00F         	goto	int_func
  4872                           
  4873                           	psect	intcode_body
  4874   001F28                     __pintcode_body:
  4875                           	callstack 20
  4876   001F28                     int_func:
  4877                           	callstack 20
  4878   001F28                     
  4879                           ;interrupts.c: 42:     if (PIR2bits.C3IF == 1) {
  4880   001F28  010E               	movlb	14	; () banked
  4881   001F2A  A535               	btfss	53,2,b	;volatile
  4882   001F2C  EF9A  F00F         	goto	i2u92_41
  4883   001F30  EF9C  F00F         	goto	i2u92_40
  4884   001F34                     i2u92_41:
  4885   001F34  EF9E  F00F         	goto	i2l162
  4886   001F38                     i2u92_40:
  4887   001F38                     
  4888                           ; BSR set to: 14
  4889                           ;interrupts.c: 43:         LATHbits.LATH3 = 0;
  4890   001F38  9680               	bcf	128,3,c	;volatile
  4891                           
  4892                           ;interrupts.c: 44:         PIR2bits.C3IF = 0;
  4893   001F3A  9535               	bcf	53,2,b	;volatile
  4894   001F3C                     i2l162:
  4895                           
  4896                           ; BSR set to: 14
  4897   001F3C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4898   001F3E  0011               	retfie		f
  4899   001F40                     __end_of_HighISR:
  4900                           	callstack 0
  4901                           
  4902                           	psect	rparam
  4903   000000                     
  4904                           	psect	temp
  4905   000059                     btemp:
  4906                           	callstack 0
  4907   000059                     	ds	1
  4908   000000                     int$flags	set	btemp
  4909   000000                     wtemp8	set	btemp+1
  4910   000000                     ttemp5	set	btemp+1
  4911   000000                     ttemp6	set	btemp+4
  4912   000000                     ttemp7	set	btemp+8
  4913                           
  4914                           	psect	config
  4915                           
  4916                           ;Config register CONFIG1L @ 0x300000
  4917                           ;	External Oscillator mode Selection bits
  4918                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4919                           ;	Power-up default value for COSC bits
  4920                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4921   300000                     	org	3145728
  4922   300000  AA                 	db	170
  4923                           
  4924                           ;Config register CONFIG1H @ 0x300001
  4925                           ;	unspecified, using default values
  4926                           ;	Clock Out Enable bit
  4927                           ;	CLKOUTEN = 0x1, unprogrammed default
  4928                           ;	Clock Switch Enable bit
  4929                           ;	CSWEN = 0x1, unprogrammed default
  4930                           ;	Fail-Safe Clock Monitor Enable bit
  4931                           ;	FCMEN = 0x1, unprogrammed default
  4932   300001                     	org	3145729
  4933   300001  FF                 	db	255
  4934                           
  4935                           ;Config register CONFIG3L @ 0x300004
  4936                           ;	WDT Period Select bits
  4937                           ;	WDTCPS = 0x1F, unprogrammed default
  4938                           ;	WDT operating mode
  4939                           ;	WDTE = OFF, WDT Disabled
  4940   300004                     	org	3145732
  4941   300004  9F                 	db	159
  4942                           
  4943                           ;Config register CONFIG3H @ 0x300005
  4944                           ;	unspecified, using default values
  4945                           ;	WDT Window Select bits
  4946                           ;	WDTCWS = 0x7, unprogrammed default
  4947                           ;	WDT input clock selector
  4948                           ;	WDTCCS = 0x7, unprogrammed default
  4949   300005                     	org	3145733
  4950   300005  FF                 	db	255
  4951                           tosu	equ	0xFFF
  4952                           tosh	equ	0xFFE
  4953                           tosl	equ	0xFFD
  4954                           stkptr	equ	0xFFC
  4955                           pclatu	equ	0xFFB
  4956                           pclath	equ	0xFFA
  4957                           pcl	equ	0xFF9
  4958                           tblptru	equ	0xFF8
  4959                           tblptrh	equ	0xFF7
  4960                           tblptrl	equ	0xFF6
  4961                           tablat	equ	0xFF5
  4962                           prodh	equ	0xFF4
  4963                           prodl	equ	0xFF3
  4964                           indf0	equ	0xFEF
  4965                           postinc0	equ	0xFEE
  4966                           postdec0	equ	0xFED
  4967                           preinc0	equ	0xFEC
  4968                           plusw0	equ	0xFEB
  4969                           fsr0h	equ	0xFEA
  4970                           fsr0l	equ	0xFE9
  4971                           wreg	equ	0xFE8
  4972                           indf1	equ	0xFE7
  4973                           postinc1	equ	0xFE6
  4974                           postdec1	equ	0xFE5
  4975                           preinc1	equ	0xFE4
  4976                           plusw1	equ	0xFE3
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           bsr	equ	0xFE0
  4980                           indf2	equ	0xFDF
  4981                           postinc2	equ	0xFDE
  4982                           postdec2	equ	0xFDD
  4983                           preinc2	equ	0xFDC
  4984                           plusw2	equ	0xFDB
  4985                           fsr2h	equ	0xFDA
  4986                           fsr2l	equ	0xFD9
  4987                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      88
    BANK0           160     42      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    changeHourDayYear@day	PTR unsigned int  size(1) Largest target is 2
		 -> main@day(BANK0[2]), 

    changeHourDayYear@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    changeHourDayYear@year	PTR unsigned int  size(1) Largest target is 2
		 -> main@year(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    findDSTdates@bkwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@bkwd_daylight_savings_day(BANK0[2]), 

    findDSTdates@fwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@fwd_daylight_savings_day(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    increaseHour@backward_zone	PTR unsigned int  size(1) Largest target is 2
		 -> main@backward_zone(BANK0[2]), 

    increaseHour@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1888$buffer	PTR unsigned char  size(2) Largest target is 0

    S1888$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_sendstring->_LCD_sendbyte
    _initialise->_LCD_init
    _LCD_init->_LCD_sendbyte
    _findDSTdates->_lastSunday
    _lastSunday->_isLeapYear
    ___lwdiv->___wmul
    _changeHourDayYear->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   20251
                                              0 BANK0     42    42      0
                        _LCD_setline
                  _LEDarray_disp_bin
                  _changeHourDayYear
                       _findDSTdates
                       _increaseHour
                         _initialise
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                          9     2      7    8979
                                             70 COMRAM     9     2      7
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    7374
                                             49 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6717
                                             45 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6358
                                             34 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1251
                                              9 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             23 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1081
                                              8 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0    1048
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    1048
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (3) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increaseHour                                        10     2      8     622
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _findDSTdates                                         8     0      8    5995
                                             64 COMRAM     8     0      8
                         _lastSunday
 ---------------------------------------------------------------------------------
 (2) _lastSunday                                          38    34      4    5483
                                             26 COMRAM    38    34      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1074
                                              9 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _changeHourDayYear                                    7     4      3    1936
                                             26 COMRAM     7     4      3
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (3) _isLeapYear                                           5     3      2    1465
                                             21 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1223
                                             16 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     350
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1004
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     960
                                              4 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              3 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _changeHourDayYear
     _isLeapYear
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
   _findDSTdates
     _lastSunday
       ___lwdiv
       ___lwmod
       ___wmul
       _isLeapYear
   _increaseHour
   _initialise
     _Comp1_init_fe
       _DAC_init
     _Comp1_init_re
       _DAC_init
     _Interrupts_init
     _LCD_init
       _LCD_sendbyte
       _LCD_sendnibble
     _LEDarray_init
     _Timer0_init
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      4C       5       47.5%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      58       1       93.6%
BITBIGSFRlhhhhh     4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhlhh      4      0       0      38        0.0%
BITBIGSFRlhhhhl      1      0       0      35        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      47        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 08 21:01:42 2024

                                   l43 1E50                                     l81 1E7C  
                                   l90 1384                                     l91 1386  
                                   l92 139A                                     l84 1342  
                                   l93 139C                                     l85 1344  
                                   l94 13B0                                     l86 1358  
                                   l95 13B2                                     l87 135A  
                                   l96 13C6                                     l88 136E  
                                   l97 13C8                                     l89 1370  
                                   l98 13DC                                     l99 13DE  
                         ___awdiv@sign 0009                                     bsr 0FE0  
                  ___wmul@multiplicand 0006                      ??_Interrupts_init 0004  
                                  l100 13F2                                    l102 13F4  
                                  l201 1EEA                                    l220 1AEE  
                                  l301 1E22                                    l312 1A74  
                                  l242 1BCC                                    l315 1EA2  
                                  l228 1042                                    l156 1F54  
                                  l252 1F26                                    l238 1836  
                                  l271 1F76                                    l280 1C26  
                                  l249 157A                                    l282 1C34  
                                  l274 1BE4                                    l290 19F0  
                                  l195 1F68                                    l276 1BFA  
                                  l285 1D30                                    l278 1C10  
                                  l198 1EC6                                    l287 1D52  
                                  l295 1D8C                                    l546 14B8  
                                  l813 1B62                                    l806 1B5A  
                                  l823 1C98                                    l559 16DA  
                                  l816 1C90                                    l993 1DC0  
                                  u960 1848                                    u961 1844  
                                  u970 1858                                    u971 1854  
                                  u980 187E                                    u981 187A  
                                  u990 18B0                                    u991 18AC  
                                  _abs 1DC2                                    _pad 18E2  
                         ___awmod@sign 0009                                    wreg 0FE8  
                    main@backward_zone 0084                                   l1013 1912  
                                 l1021 1224                                   l1016 1950  
                                 l2001 1218                                   l1018 196A  
                                 l1034 132C                                   l1042 1788  
                                 l2011 126A                                   l2003 1220  
                                 ?_abs 000A                                   l2021 12BC  
                                 l2013 126E                                   l2005 122C  
                                 l2101 1098                                   l1070 1DF4  
                                 l1038 1780                                   l2031 130A  
                                 l2023 12CC                                   l2015 1274  
                                 l2007 1236                                   l2111 10FA  
                                 l1063 1CDA                                   l2033 1316  
                                 l2025 12E6                                   l2009 123C  
                                 l2017 1290                                   l2041 170A  
                                 l1057 11C4                                   l2121 115C  
                                 l2113 1108                                   l2105 10A0  
                                 l2201 1CB2                                   l1082 18E0  
                                 l1090 1D16                                   l2051 1BD0  
                                 l2211 1E36                                   l1067 1DDC  
                                 l2019 12AA                                   l2027 12F4  
                                 l2043 1712                                   l2123 1174  
                                 l2115 1112                                   l2107 10D6  
                                 l2203 1CD2                                   l2061 1C0A  
                                 l2053 1BDE                                   l2221 1E42  
                                 l2213 1E38                                   l1093 1F78  
                                 l2029 1304                                   l2045 172E  
                                 l2037 16DC                                   l2125 117E  
                                 l2117 111C                                   l2109 10E6  
                                 l2133 119E                                   l2063 1C12  
                                 l2055 1BE6                                   l2071 1C36  
                                 l2151 1A7A                                   l2311 1022  
                                 l2303 0FE8                                   l2143 1F56  
                                 l2231 1E5C                                   l2223 1E44  
                                 l2215 1E3C                                   l2207 1E24  
                                 l2047 174E                                   l2039 16E4  
                                 l2119 113C                                   l2065 1C20  
                                 l2057 1BF4                                   l2401 1D70  
                                 l2081 1C7C                                   l2073 1C48  
                                 l2153 1A98                                   l2313 102E  
                                 l2305 0FFC                                   l2145 1F5C  
                                 l2321 1984                                   l2241 1E76  
                                 l2233 1E62                                   l2225 1E4E  
                                 l2217 1E3E                                   l2209 1E2C  
                                 l2049 1756                                   l2129 1192  
                                 l2067 1C28                                   l2059 1BFC  
                                 l2171 1D3E                                   l2163 1D1A  
                                 l2403 1D82                                   l2083 1C84  
                                 l2075 1C50                                   l2155 1ABE  
                                 l2315 103A                                   l2307 100E  
                                 l2147 1F66                                   l2251 1EB8  
                                 l2331 19AA                                   l2323 198A  
                                 l2243 1E78                                   l2235 1E6C  
                                 l2227 1E52                                   l2219 1E40  
                                 l2091 1072                                   l2411 1A54  
                                 l2069 1C2C                                   l2173 1D4A  
                                 l2165 1D2A                                   l2085 1C8A  
                                 l2077 1C58                                   l2157 1AE4  
                                 l2149 1A76                                   l2181 1B12  
                                 l2309 101A                                   l2421 178A  
                                 l2261 1EC8                                   l2253 1EBA  
                                 l2245 1F40                                   l2341 19DC  
                                 l2333 19B2                                   l2325 1990  
                                 l2237 1E6E                                   l2229 1E5A  
                                 l2093 107E                                   l2413 1A5C  
                                 l2405 19F2                                   l2167 1D32  
                                 l2079 1C66                                   l2159 1AE8  
                                 l2191 1B4C                                   l2183 1B1A  
                                 l2175 1AF0                                   l2415 1B64  
                                 l2431 17EA                                   l2423 17A2  
                                 l2271 1EE2                                   l2263 1ECA  
                                 l2255 1EBC                                   l2247 1EA4  
                                 l2343 19E6                                   l2335 19BC  
                                 l2327 199A                                   l2319 196C  
                                 l2239 1E74                                   l2351 1E0C  
                                 l2095 1082                                   l2087 1044  
                                 l2407 1A08                                   l2169 1D38  
                                 l2441 14D4                                   l2193 1B4E  
                                 l2185 1B28                                   l2177 1AF8  
                                 l2281 0F3A                                   l2417 1B76  
                                 l2433 1804                                   l2425 17BC  
                                 l2273 1EE6                                   l2265 1EDC  
                                 l2257 1EBE                                   l2249 1EA6  
                                 l2337 19C4                                   l2329 19A0  
                                 l2345 1DF6                                   l2097 108A  
                                 l2089 106A                                   l2361 1DB6  
                                 l2353 1D8E                                   l2409 1A30  
                                 l2451 152A                                   l2443 14DE  
                                 l2195 1B54                                   l2187 1B2E  
                                 l2179 1B0A                                   l2291 0FB0  
                                 l2283 0F5A                                   l2275 0E2C  
                                 l2419 1B88                                   l2435 181C  
                                 l2427 17C8                                   l2267 1EDE  
                                 l2259 1EC2                                   l2339 19CE  
                                 l2371 1F1A                                   l2347 1DFA  
                                 l2099 108C                                   l2355 1D96  
                                 l2381 1352                                   l2453 1538  
                                 l2445 14EA                                   l2189 1B44  
                                 l2293 0FBC                                   l2285 0F7A  
                                 l2277 0E40                                   l2437 1828  
                                 l2429 17D2                                   l2269 1EE0  
                                 l2373 1F1E                                   l2365 1F0E  
                                 l2349 1E0A                                   l1901 1450  
                                 l2197 1C9A                                   l2357 1D9E  
                                 l2461 157C                                   l2391 13C0  
                                 l2383 1368                                   l2447 1506  
                                 l2455 1544                                   l2439 14BA  
                                 l2295 0FC4                                   l2287 0F8A  
                                 l2279 0F1E                                   l2375 1F22  
                                 l2367 1F12                                   l1911 148A  
                                 l1903 1458                                   l2199 1CA2  
                                 l2359 1DA6                                   l2471 15CC  
                                 l2463 1596                                   l2393 13D6  
                                 l2385 137E                                   l2377 132E  
                                 l2457 1560                                   l2449 1518  
                                 l2297 0FD0                                   l2289 0F9E  
                                 l2369 1F16                                   l1921 14B0  
                                 l1913 148C                                   l1905 1466  
                                 l2473 15F0                                   l2465 159A  
                                 l2395 13EC                                   l2387 1394  
                                 l2379 133C                                   l2459 156E  
                                 l2299 0FDC                                   l1915 1492  
                                 l1907 146C                                   l1931 1646  
                                 l2547 10C8                                   l2475 1614  
                                 l2467 15A6                                   l2397 1D56  
                                 l2389 13AA                                   l1909 1482  
                                 l1917 1498                                   l1941 167A  
                                 l1933 164A                                   l1925 162C  
                                 l1861 187E                                   l1853 1838  
                                 l2469 15AC                                   l2399 1D66  
                                 l1919 14A8                                   l1951 16B4  
                                 l1943 1682                                   l1935 1658  
                                 l1927 1630                                   l1863 18B0  
                                 l1855 1848                                   l1871 1CF6  
                                 l1881 13F6                                   l1945 1690  
                                 l1953 16BA                                   l1937 1660  
                                 l1929 163E                                   l1857 1858  
                                 l1873 1CFA                                   l1961 18E2  
                                 l1875 1E7E                                   l1891 1422  
                                 l1883 13FA                                   l1955 16CA  
                                 l1947 16A6                                   l1939 1672  
                                 l1859 1862                                   l1867 1CDC  
                                 l1971 192E                                   l1963 18F0  
                                 l1981 1F6A                                   l1877 1E9A  
                                 l1893 142A                                   l1885 1408  
                                 l1957 16D2                                   l1949 16AE  
                                 l1869 1CE8                                   l1973 1932  
                                 l1965 18FC                                   ?_pad 0011  
                                 l1983 1F6C                                   l1895 142E  
                                 l1887 1410                                   l1975 195E  
                                 l1967 190A                                   l1991 11DE  
                                 l1985 1F74                                   l1897 1436  
                                 l1889 1414                                   l1977 1DC2  
                                 l1969 191E                                   l1993 11E6  
                                 l1899 1448                                   l1979 1DD0  
                                 l1995 11F6                                   l1987 11C6  
                                 l1997 11FC                                   l1989 11CA  
                                 l1999 120C           lastSunday@dayOfWeekMonth31st 002D  
                                 STR_1 0E01                                   STR_2 0E13  
                                 STR_3 0E1F                                   u1000 1D16  
                                 u1001 1D12                                   u1010 1408  
                                 u1011 1404                                   u1020 1422  
                                 u1100 1690                                   u1021 141E  
                                 u1101 168C                                   u1030 1448  
                                 u1110 16A6                                   u1031 1444  
                                 u1111 16A2                                   u1040 1466  
                                 u1120 16CA                                   u1200 11F6  
                                 u1041 1462                                   u1121 16C6  
                                 u1201 11F2                                   u1050 1482  
                                 u1130 18F0                                   u1210 120C  
                                 u1051 147E                                   u1131 18EC  
                                 u1211 1208                                   u1300 1BDE  
                                 u1060 14A8                                   u1140 190A  
                                 u1220 12AA                                   u1301 1BDA  
                                 u1061 14A4                                   u1141 1906  
                                 u1221 12A6                                   u1310 1BF4  
                                 u1070 163E                                   u1150 1950  
                                 u1230 12BC                                   u1311 1BF0  
                                 u1071 163A                                   u1151 194C  
                                 u1231 12B8                                   u1320 1C0A  
                                 u1080 1658                                   u1160 195E  
                                 u1240 12CC                                   u1400 113C  
                                 u1321 1C06                                   u1081 1654  
                                 u1161 195A                                   u1241 12C8  
                                 u1401 1138                                   u1330 1C20  
                                 u1090 1672                                   u1170 1DD0  
                                 u1250 12E6                                   u1410 115C  
                                 u1331 1C1C                                   u1091 166E  
                                 u1171 1DCC                                   u1251 12E2  
                                 u1411 1158                                   u1340 1C48  
                                 u1420 1A98                                   u1500 0F9E  
                                 u1260 12F4                                   u1180 11DA  
                                 u1341 1C44                                   u1421 1A94  
                                 u1501 0F9A                                   u1261 12F0  
                                 u1181 11D4                                   _LATA 0F79  
                                 u1350 1C66                                   u1430 1ABE  
                                 u1510 0FB0                                   u1270 1304  
                                 u1190 11DC                                   _LATB 0F7A  
                                 u1351 1C62                                   u1431 1ABA  
                                 u1511 0FAC                                   u1271 1300  
                                 u1600 13AA                                   u1360 1C7C  
                                 u1440 1AE4                                   u1520 0FFC  
                                 u1280 170A                                   u1601 13A6  
                                 u1361 1C78                                   u1441 1AE0  
                                 u1521 0FF8                                   u1281 1706  
                                 u1450 1D2A                                   u1610 13C0  
                                 u1530 100E                                   u1290 1780  
                                 u1370 106A                                   u1451 1D26  
                                 u1611 13BC                                   u1531 100A  
                                 u1291 177C                                   u1371 1066  
                                 _LATG 0F7F                                   u1620 13D6  
                                 u1460 1B0A                                   u1700 17BC  
                                 u1540 1E22                                   u1380 10E6  
                                 u1621 13D2                                   u1461 1B06  
                                 u1701 17B8                                   u1541 1E1E  
                                 u1381 10E2                                   u1630 13EC  
                                 u1550 133C                                   u1470 1B28  
                                 u1710 17EA                                   u1390 1108  
                                 u1631 13E8                                   u1551 1338  
                                 u1471 1B24                                   u1711 17E6  
                                 u1391 1104                                   u1640 1D66  
                                 u1560 1352                                   u1480 1B44  
                                 u1720 1804                                   u1641 1D62  
                                 u1561 134E                                   u1481 1B40  
                                 u1721 1800                                   u1650 1D82  
                                 u1570 1368                                   u1730 181C  
                                 u1490 1CD2                                   u1651 1D7E  
                                 u1571 1364                                   u1731 1818  
                                 u1491 1CCE                                   u1580 137E  
                                 u1740 14D4                                   u1660 1A08  
                                 u1581 137A                                   u1741 14D0  
                                 u1661 1A04                                   u1590 1394  
                                 u1750 1506                                   u1670 1B76  
                                 u1591 1390                                   u1751 1502  
                                 u1671 1B72                                   u1760 152A  
                                 u1680 1B88                                   u1761 1526  
                                 u1681 1B84                                   u1770 1560  
                                 u1690 17A2                                   u1771 155C  
                                 u1691 179E                                   u1907 19D4  
                                 u1917 1D4C                                   u1927 1C2E  
                                 u1937 1F6E                                   u1857 1A66  
                                 u1867 198C                                   u1877 199C  
                                 u1887 19AC                                   u1897 19BE  
                                 abs@a 000A                                   _dbuf 008A  
                                 _main 157C                                   _dtoa 11C6  
                                 _hour 00AA                                   _prec 0056  
                                 pad@i 0016                                   pad@p 0013  
                                 fsr1h 0FE2                                   fsr2h 0FDA  
                                 indf2 0FDF                                   fsr1l 0FE1  
                                 fsr2l 0FD9                                   btemp 0059  
                         ?_LCD_setline 0001                                   prodh 0FF4  
                                 prodl 0FF3                                   start 007C  
                     __end_of_DAC_init 1F6A                      _changeHourDayYear 14BA  
                      __end_of_HighISR 1F40                           ___param_bank 0000  
                   ?_changeHourDayYear 001B                                  ??_abs 000C  
                                ??_pad 0015                       __end_of_LCD_init 19F2  
                                ?_main 0001                                  ?_dtoa 0018  
                      __end_of___awdiv 14BA                        __end_of___awmod 16DC  
                  ??_changeHourDayYear 001E                        ___awdiv@divisor 0006  
                      __end_of___lwdiv 1B64                                  i1l170 006C  
                                i1l168 005A                        __end_of___lwmod 1C9A  
                                i2l162 1F3C                        ___awdiv@counter 0008  
                         vfpfcnvrt@fmt 0024                                  _TMR0H 0FD4  
                                _TMR0L 0FD3                                  _TRISA 0F81  
                                _TRISB 0F82                                  _TRISG 0F87  
                                _flags 0058                    read_prec_or_width@c 000C  
                  read_prec_or_width@n 000D                                  _fputc 1838  
                                _fputs 1CDC                                  pad@fp 0011  
                                _width 0054                                  _putch 1F78  
                                dtoa@d 0019                                  dtoa@i 0021  
                                dtoa@p 001D                                  dtoa@s 0020  
                                dtoa@w 001E                          ?_LCD_sendbyte 0005  
                 __end_of_findDSTdates 1BCE                                  tablat 0FF5  
                __end_of_Comp1_init_fe 1EEC                  __end_of_Comp1_init_re 1EC8  
                                ttemp5 005A                                  ttemp6 005D  
                                ttemp7 0061                                  status 0FD8  
         lastSunday@dayOfYearForDSTEnd 0035                                  wtemp8 005A  
                      __end_of_sprintf 1DC2              __end_of_changeHourDayYear 157C  
                        ?_increaseHour 0004                        __initialization 1EEC  
                         __end_of_main 162C                           __end_of_dtoa 132E  
                   lastSunday@leapYear 003D                      __end_of_LCD_E_TOG 1F78  
                               ??_main 0050                                 ??_dtoa 001B  
         main@fwd_daylight_savings_day 0080                          __activetblptr 0003  
           __end_of_read_prec_or_width 178A                           ?_time2String 0047  
                          lastSunday@h 0029                                 ?_fputc 0004  
                               ?_fputs 000C                         ??_LCD_sendbyte 0006  
                     ___awdiv@dividend 0004                                 ?_putch 0001  
                changeHourDayYear@leap 0020                  changeHourDayYear@hour 001B  
                               i1l2511 0044                                 i1l2503 0026  
                               i1l2505 0036                                 i1l2513 0048  
                               i1l2515 0056                                 i1l2507 003C  
                               i1l2517 0068                                 i1l2509 0040  
                changeHourDayYear@year 001D                                 i2l1803 1F28  
                               i2l1805 1F38                          vfpfcnvrt@done 002C  
                            ??_HighISR 0001                      _LEDarray_disp_bin 132E  
                       ??_increaseHour 000C                                 _LowISR 0018  
                   ?_LEDarray_disp_bin 0004                          ??_Timer0_init 0004  
                         vfprintf@cfmt 0031                                 ___wmul 1E7E  
                            ??___awdiv 0008                              ??___awmod 0008  
                            ??___lwdiv 000E                              ??___lwmod 0015  
                 read_prec_or_width@ap 000B                    ??_LEDarray_disp_bin 0006  
                               clear_0 1EF2                                 clear_1 1EFE  
                     ___awdiv@quotient 000A                        ___awmod@divisor 0006  
                               isa$std 0001                        ___awmod@counter 0008  
                               pad@buf 0012                                 dtoa@fp 0018  
                               fputc@c 0004                                 fputs@c 000E  
                               fputs@i 000F                                 fputs@s 000C  
          lastSunday@dayOfWeekMonth1st 002B                           __mediumconst 0000  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 putch@c 0001  
                            ?_DAC_init 0001                       __end_of_vfprintf 1CDC  
                            ??_sprintf 003A              __end_of_LEDarray_disp_bin 13F6  
                           __accesstop 0060                __end_of__initialization 1F04  
                            ?_LCD_init 0001                          ___rparam_used 0001  
                        _LEDarray_init 1E52                        _Interrupts_init 1F40  
                     findDSTdates@hour 0041                       findDSTdates@year 0045  
                       __pcstackCOMRAM 0001   increaseHour@fwd_daylight_savings_day 0006  
                        __end_of_fputc 18E2                          __end_of_fputs 1D18  
                        __end_of_putch 1F7A                       increaseHour@hour 000A  
                  __end_of_Timer0_init 1E52            lastSunday@daysBeforeOctober 0033  
            increaseHour@backward_zone 000B                             ??_DAC_init 0004  
                              ??_fputc 0007                                ??_fputs 000E  
                              ??_putch 0004                             __pbssBANK0 008A  
                       _LCD_sendnibble 1BCE                             ??_LCD_init 0009  
                       ?_LEDarray_init 0001                         _LCD_sendstring 1DF6  
                              ?_LowISR 0001                                ?___wmul 0004  
                 __end_of_LCD_sendbyte 1D54                           _findDSTdates 1B64  
                           _isLeapYear 1A76                   __end_of_increaseHour 1838  
                              i2u92_40 1F38                                i2u92_41 1F34  
               __end_of_LCD_sendnibble 1C36                __end_of_Interrupts_init 1F56  
                              _HighISR 0008                         lastSunday@year 001B  
               __end_of_LCD_sendstring 1E24                                __Hparam 0000  
                              __Lparam 0000                            _Timer0_init 1E24  
                           _lastSunday 0E2C                        _isLeapYear$1167 001A  
                              ___awdiv 13F6                                ___awmod 162C  
                              ___lwdiv 1AF0                                ___lwmod 1C36  
                            ?_vfprintf 002E                           __psmallconst 0E00  
                              __pcinit 1EEC                                __ramtop 0E00  
                           _initialise 1F0E                                __ptext0 157C  
                              __ptext1 19F2                                __ptext2 1D8E  
                              __ptext3 1C9A                                __ptext4 1044  
                              __ptext5 16DC                                __ptext6 11C6  
                              __ptext7 18E2                                __ptext8 1CDC  
                              __ptext9 1838                  read_prec_or_width@fmt 000A  
                     ___awmod@dividend 0004                              _LCD_E_TOG 1F6A  
                      LCD_setline@line 0009                                main@day 0088  
                              main@buf 0060                                _sprintf 1D8E  
                       __pintcode_body 1F28                   end_of_initialization 1F04  
                      ?_LCD_sendnibble 0001                                fputc@fp 0006  
                      ??_LEDarray_init 0004                                int_func 1F28  
                              fputs@fp 000D                        ?_LCD_sendstring 0009  
                   _read_prec_or_width 16DC  findDSTdates@bkwd_daylight_savings_day 0048  
                    __end_of_vfpfcnvrt 11C6                                postdec2 0FDD  
                  ?_read_prec_or_width 000A                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
                     vfpfcnvrt@convarg 0028                             ??_vfprintf 0031  
       lastSunday@dayOfYearForDSTStart 0031                            ?_isLeapYear 0016  
                           ?_LCD_E_TOG 0001                              _TRISBbits 0F82  
                            _TRISCbits 0F83                              _TRISEbits 0F85  
                            _TRISFbits 0F86                              _TRISHbits 0F88  
                 ??_read_prec_or_width 000C                            _CM1CON0bits 0ED0  
                          _CM1CON1bits 0ED1                       ?_Interrupts_init 0001  
                          _CM2CON0bits 0ECC                            _CM2CON1bits 0ECD  
                          ?_lastSunday 001B                         __end_of_LowISR 007C  
                          vfpfcnvrt@ap 0025                            vfpfcnvrt@cp 002D  
                          vfpfcnvrt@fp 0023                         __end_of___wmul 1EA4  
                 LCD_sendnibble@number 0004                            ?_initialise 0001  
                  start_initialization 1EEC                            __end_of_abs 1DF6  
                          __end_of_pad 196C                           _LCD_sendbyte 1D18  
                        _Comp1_init_fe 1EC8                          _Comp1_init_re 1EA4  
                 changeHourDayYear@day 001C                          ??_LCD_setline 0009  
                             ??_LowISR 0001                           _increaseHour 178A  
                          vfprintf@fmt 002F                   LCD_sendstring@string 0009  
                             ??___wmul 0008                            __pbssCOMRAM 0050  
                          ??_LCD_E_TOG 0004                          __pcstackBANK0 0060  
                      findDSTdates@day 0043                        increaseHour@day 0004  
                       ?_Comp1_init_fe 0001                         ?_Comp1_init_re 0001  
                             ?_HighISR 0001                       ___lwdiv@dividend 000A  
                            _dtoa$1967 001B                           ?_Timer0_init 0001  
                            __pintcode 0008                               ?___awdiv 0004  
                             ?___awmod 0004                    __end_of_LCD_setline 1D8E  
                             ?___lwdiv 000A                               ?___lwmod 0011  
                          __pintcodelo 0018                            __smallconst 0E00  
                        ??_time2String 004E                       ??_LCD_sendnibble 0004  
increaseHour@bkwd_daylight_savings_day 0008                               _DAC_init 1F56  
                     ___lwdiv@quotient 000E                       ??_LCD_sendstring 000A  
                             ?_sprintf 0032                       LCD_sendbyte@Byte 0008  
                     LCD_sendbyte@type 0005                         ___wmul@product 0008  
                             _LATAbits 0F79                               _LATBbits 0F7A  
                             _LATCbits 0F7B                               _LATEbits 0F7D  
                             _LATFbits 0F7E                               _LATGbits 0F7F  
                             _LATHbits 0F80                               _LCD_init 196C  
                             _IPR0bits 0E1F                               _IPR2bits 0E21  
                             _PIE0bits 0E29                               _PIE2bits 0E2B  
                             i1u182_20 0036                               i1u182_21 0032  
                             i1u183_20 0056                               i1u183_21 0052  
                             i1u184_20 0068                               i1u184_21 0064  
                             _PIR0bits 0E33                               _PIR2bits 0E35  
                         time2String@h 0048                              _vfpfcnvrt 1044  
                    ___wmul@multiplier 0004                           ??_isLeapYear 0018  
                           _CM1NCHbits 0ED2                        lastSunday@month 001D  
                           _CM1PCHbits 0ED3                             _CM2NCHbits 0ECE  
                           _CM2PCHbits 0ECF              lastSunday@daysBeforeMarch 002F  
                      ??_Comp1_init_fe 0004                        ??_Comp1_init_re 0004  
                  __end_of_time2String 1A76                  __end_of_LEDarray_init 1E7E  
                          _LCD_setline 1D54                               __Hrparam 0000  
        lastSunday@lastSundayDateMonth 003F                     __end_of_isLeapYear 1AF0  
                         ??_lastSunday 001F                             vfprintf@ap 0030  
                             __Lrparam 0000                             vfprintf@fp 002E  
                           ?_vfpfcnvrt 0023                           ??_initialise 000A  
                      _lastSunday$1181 003B                             _ANSELFbits 0EB4  
                      _lastSunday$1178 0039                        _lastSunday$2264 0037  
                           sprintf@fmt 0033                             _T0CON0bits 0FD5  
                           _T0CON1bits 0FD6                        ___lwdiv@divisor 000C  
                      ___lwdiv@counter 0010                               __ptext10 1F78  
                             __ptext11 1DC2                               __ptext20 1EA4  
                             __ptext12 162C                               __ptext21 1EC8  
                             __ptext13 13F6                               __ptext30 1C36  
                             __ptext22 1F56                               __ptext14 1DF6  
                             __ptext31 132E                               __ptext23 178A  
                             __ptext15 1F0E                               __ptext32 1D54  
                             __ptext24 1B64                               __ptext16 1E24  
                             __ptext33 1D18                               __ptext25 0E2C  
                             __ptext17 1E52                               __ptext34 1BCE  
                             __ptext26 1E7E                               __ptext18 196C  
                             __ptext35 1F6A                               __ptext27 1AF0  
                             __ptext19 1F40                               __ptext28 14BA  
                             __ptext29 1A76                 LCD_sendbyte@highNibble 0006  
                   __end_of_lastSunday 1044                LEDarray_disp_bin@number 0004  
 findDSTdates@fwd_daylight_savings_day 0047                     __end_of_initialise 1F28  
        main@bkwd_daylight_savings_day 0082                               isa$xinst 0000  
                             int$flags 0059                        time2String@year 004C  
                             _vfprintf 1C9A                          ?_findDSTdates 0041  
                             main@year 0086                             _INTCONbits 0FF2  
                          _time2String 19F2                               intlevel1 0000  
                             intlevel2 0000                              sprintf@ap 003A  
                         _DAC1CON0bits 0EC6                           _DAC1CON1bits 0EC7  
                     ___lwmod@dividend 0011                         time2String@day 004A  
                       time2String@buf 0047                         ??_findDSTdates 0049  
                          ??_vfpfcnvrt 0026                               sprintf@f 003B  
                             sprintf@s 0032                  LCD_sendbyte@lowNibble 0007  
                      ___lwmod@divisor 0013                        ___lwmod@counter 0015  
                       isLeapYear@year 0016                calc_max_PPM@loopCounter 0050  
