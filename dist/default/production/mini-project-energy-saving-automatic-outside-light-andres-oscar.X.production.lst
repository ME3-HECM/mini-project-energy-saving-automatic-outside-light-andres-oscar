

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 19:30:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 21/07/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F67K40 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     _CM1CON1bits	set	3793
    58   000000                     _TRISG	set	3975
    59   000000                     _LATG	set	3967
    60   000000                     _LATBbits	set	3962
    61   000000                     _LATAbits	set	3961
    62   000000                     _LATGbits	set	3967
    63   000000                     _IPR0bits	set	3615
    64   000000                     _PIE0bits	set	3625
    65   000000                     _LATHbits	set	3968
    66   000000                     _TRISHbits	set	3976
    67   000000                     _TMR0L	set	4051
    68   000000                     _TMR0H	set	4052
    69   000000                     _T0CON0bits	set	4053
    70   000000                     _T0CON1bits	set	4054
    71   000000                     _TRISFbits	set	3974
    72   000000                     _TRISB	set	3970
    73   000000                     _TRISA	set	3969
    74   000000                     _INTCONbits	set	4082
    75   000000                     _PIE2bits	set	3627
    76   000000                     _PIR0bits	set	3635
    77   000000                     _PIR2bits	set	3637
    78   000000                     _ANSELFbits	set	3764
    79   000000                     _LATA	set	3961
    80   000000                     _IPR2bits	set	3617
    81   000000                     _LATFbits	set	3966
    82   000000                     _LATB	set	3962
    83   000000                     _DAC1CON0bits	set	3782
    84   000000                     _CM1CON0bits	set	3792
    85   000000                     _CM1NCHbits	set	3794
    86   000000                     _DAC1CON1bits	set	3783
    87   000000                     _CM1PCHbits	set	3795
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   000FE2                     __pcinit:
    93                           	callstack 0
    94   000FE2                     start_initialization:
    95                           	callstack 0
    96   000FE2                     __initialization:
    97                           	callstack 0
    98                           
    99                           ; Clear objects allocated to COMRAM (6 bytes)
   100   000FE2  6A10               	clrf	(__pbssCOMRAM+5)& (0+255),c
   101   000FE4  6A0F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   102   000FE6  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   103   000FE8  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   104   000FEA  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   105   000FEC  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   106   000FEE                     end_of_initialization:
   107                           	callstack 0
   108   000FEE                     __end_of__initialization:
   109                           	callstack 0
   110   000FEE  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   111   000FF0  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   112   000FF2  0100               	movlb	0
   113   000FF4  EF65  F007         	goto	_main	;jump to C main() function
   114                           
   115                           	psect	bssCOMRAM
   116   00000B                     __pbssCOMRAM:
   117                           	callstack 0
   118   00000B                     calc_max_PPM@loopCounter:
   119                           	callstack 0
   120   00000B                     	ds	4
   121   00000F                     _hour:
   122                           	callstack 0
   123   00000F                     	ds	2
   124                           
   125                           	psect	cstackCOMRAM
   126   000001                     __pcstackCOMRAM:
   127                           	callstack 0
   128   000001                     ??_HighISR:
   129   000001                     
   130                           ; 1 bytes @ 0x0
   131   000001                     	ds	1
   132   000002                     ??_LowISR:
   133                           
   134                           ; 1 bytes @ 0x1
   135   000002                     	ds	3
   136   000005                     ?_getHour:
   137                           	callstack 0
   138   000005                     LEDarray_disp_bin@number:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x4
   142   000005                     	ds	2
   143   000007                     main@light_state:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x6
   147   000007                     	ds	2
   148   000009                     main@hour:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x8
   152   000009                     	ds	2
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 17 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;  hour            2    8[COMRAM] unsigned int 
   164 ;;  light_state     2    6[COMRAM] unsigned int 
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   175 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   178 ;;Total ram usage:        4 bytes
   179 ;; Hardware stack levels required when called: 3
   180 ;; This function calls:
   181 ;;		_Interrupts_init
   182 ;;		_LEDarray_disp_bin
   183 ;;		_LEDarray_init
   184 ;;		_Timer0_init
   185 ;;		_getHour
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192   000ECA                     __ptext0:
   193                           	callstack 0
   194   000ECA                     _main:
   195                           	callstack 28
   196   000ECA                     
   197                           ;main.c: 22:     TRISHbits.TRISH3 = 0;
   198   000ECA  9688               	bcf	136,3,c	;volatile
   199   000ECC                     
   200                           ;main.c: 23:     LATHbits.LATH3 = 0;
   201   000ECC  9680               	bcf	128,3,c	;volatile
   202   000ECE                     
   203                           ;main.c: 25:     Interrupts_init();
   204   000ECE  ECFC  F007         	call	_Interrupts_init	;wreg free
   205                           
   206                           ;main.c: 26:     Timer0_init();
   207   000ED2  ECC6  F007         	call	_Timer0_init	;wreg free
   208                           
   209                           ;main.c: 27:     LEDarray_init();
   210   000ED6  ECDD  F007         	call	_LEDarray_init	;wreg free
   211   000EDA                     l1074:
   212                           
   213                           ;main.c: 30:         unsigned int hour;;main.c: 31:         hour = getHour();
   214   000EDA  EC02  F008         	call	_getHour	;wreg free
   215   000EDE  C005  F009         	movff	?_getHour,main@hour
   216   000EE2  C006  F00A         	movff	?_getHour+1,main@hour+1
   217   000EE6                     
   218                           ;main.c: 33:         LEDarray_disp_bin(hour);
   219   000EE6  C009  F005         	movff	main@hour,LEDarray_disp_bin@number
   220   000EEA  C00A  F006         	movff	main@hour+1,LEDarray_disp_bin@number+1
   221   000EEE  EC01  F007         	call	_LEDarray_disp_bin	;wreg free
   222   000EF2                     
   223                           ;main.c: 35:         if (hour >= 1 && hour <= 5){
   224   000EF2  5009               	movf	main@hour^0,w,c
   225   000EF4  100A               	iorwf	(main@hour+1)^0,w,c
   226   000EF6  B4D8               	btfsc	status,2,c
   227   000EF8  EF80  F007         	goto	u361
   228   000EFC  EF82  F007         	goto	u360
   229   000F00                     u361:
   230   000F00  EF93  F007         	goto	l1084
   231   000F04                     u360:
   232   000F04  500A               	movf	(main@hour+1)^0,w,c
   233   000F06  E107               	bnz	u371
   234   000F08  0E06               	movlw	6
   235   000F0A  5C09               	subwf	main@hour^0,w,c
   236   000F0C  B0D8               	btfsc	status,0,c
   237   000F0E  EF8B  F007         	goto	u371
   238   000F12  EF8D  F007         	goto	u370
   239   000F16                     u371:
   240   000F16  EF93  F007         	goto	l1084
   241   000F1A                     u370:
   242   000F1A                     
   243                           ;main.c: 36:             light_state = 1;
   244   000F1A  0E00               	movlw	0
   245   000F1C  6E08               	movwf	(main@light_state+1)^0,c
   246   000F1E  0E01               	movlw	1
   247   000F20  6E07               	movwf	main@light_state^0,c
   248                           
   249                           ;main.c: 37:         } else {
   250   000F22  EF97  F007         	goto	l1086
   251   000F26                     l1084:
   252                           
   253                           ;main.c: 38:             light_state = 0;
   254   000F26  0E00               	movlw	0
   255   000F28  6E08               	movwf	(main@light_state+1)^0,c
   256   000F2A  0E00               	movlw	0
   257   000F2C  6E07               	movwf	main@light_state^0,c
   258   000F2E                     l1086:
   259                           
   260                           ;main.c: 41:         if (light_state == 1){
   261   000F2E  0407               	decf	main@light_state^0,w,c
   262   000F30  1008               	iorwf	(main@light_state+1)^0,w,c
   263   000F32  A4D8               	btfss	status,2,c
   264   000F34  EF9E  F007         	goto	u381
   265   000F38  EFA0  F007         	goto	u380
   266   000F3C                     u381:
   267   000F3C  EFA3  F007         	goto	l22
   268   000F40                     u380:
   269   000F40                     
   270                           ;main.c: 42:             LATHbits.LATH3 = 1;
   271   000F40  8680               	bsf	128,3,c	;volatile
   272                           
   273                           ;main.c: 43:         } else {
   274   000F42  EF6D  F007         	goto	l1074
   275   000F46                     l22:
   276                           
   277                           ;main.c: 44:             LATHbits.LATH3 = 0;
   278   000F46  9680               	bcf	128,3,c	;volatile
   279   000F48  EF6D  F007         	goto	l1074
   280   000F4C  EF38  F000         	goto	start
   281   000F50                     __end_of_main:
   282                           	callstack 0
   283                           
   284 ;; *************** function _getHour *****************
   285 ;; Defined at:
   286 ;;		line 55 in file "interrupts.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  2    4[COMRAM] unsigned int 
   293 ;; Registers used:
   294 ;;		None
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels used: 1
   306 ;; Hardware stack levels required when called: 2
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text1
   315   001004                     __ptext1:
   316                           	callstack 0
   317   001004                     _getHour:
   318                           	callstack 28
   319   001004                     
   320                           ;interrupts.c: 57:     return hour;
   321   001004  C00F  F005         	movff	_hour,?_getHour
   322   001008  C010  F006         	movff	_hour+1,?_getHour+1
   323   00100C  0012               	return		;funcret
   324   00100E                     __end_of_getHour:
   325                           	callstack 0
   326                           
   327 ;; *************** function _Timer0_init *****************
   328 ;; Defined at:
   329 ;;		line 9 in file "timers.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; Hardware stack levels required when called: 2
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358   000F8C                     __ptext2:
   359                           	callstack 0
   360   000F8C                     _Timer0_init:
   361                           	callstack 28
   362   000F8C                     
   363                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
   364   000F8C  50D6               	movf	214,w,c	;volatile
   365   000F8E  0B1F               	andlw	-225
   366   000F90  0940               	iorlw	64
   367   000F92  6ED6               	movwf	214,c	;volatile
   368   000F94                     
   369                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
   370   000F94  88D6               	bsf	214,4,c	;volatile
   371                           
   372                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
   373   000F96  50D6               	movf	214,w,c	;volatile
   374   000F98  0BF0               	andlw	-16
   375   000F9A  0908               	iorlw	8
   376   000F9C  6ED6               	movwf	214,c	;volatile
   377   000F9E                     
   378                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
   379   000F9E  88D5               	bsf	213,4,c	;volatile
   380   000FA0                     
   381                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
   382   000FA0  010E               	movlb	14	; () banked
   383   000FA2  8B29               	bsf	41,5,b	;volatile
   384   000FA4                     
   385                           ; BSR set to: 14
   386                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
   387   000FA4  9B33               	bcf	51,5,b	;volatile
   388   000FA6                     
   389                           ; BSR set to: 14
   390                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
   391   000FA6  9B1F               	bcf	31,5,b	;volatile
   392   000FA8                     
   393                           ; BSR set to: 14
   394                           ;timers.c: 19:     INTCONbits.IPEN = 1;
   395   000FA8  8AF2               	bsf	242,5,c	;volatile
   396   000FAA                     
   397                           ; BSR set to: 14
   398                           ;timers.c: 20:     INTCONbits.PEIE = 1;
   399   000FAA  8CF2               	bsf	242,6,c	;volatile
   400   000FAC                     
   401                           ; BSR set to: 14
   402                           ;timers.c: 21:     INTCONbits.GIE = 1;
   403   000FAC  8EF2               	bsf	242,7,c	;volatile
   404                           
   405                           ;timers.c: 24:     TMR0H=00001011;
   406   000FAE  0E09               	movlw	9
   407   000FB0  6ED4               	movwf	212,c	;volatile
   408                           
   409                           ;timers.c: 25:     TMR0L=110011011;
   410   000FB2  0E83               	movlw	131
   411   000FB4  6ED3               	movwf	211,c	;volatile
   412   000FB6                     
   413                           ; BSR set to: 14
   414                           ;timers.c: 26:     T0CON0bits.T0EN=1;
   415   000FB6  8ED5               	bsf	213,7,c	;volatile
   416   000FB8                     
   417                           ; BSR set to: 14
   418   000FB8  0012               	return		;funcret
   419   000FBA                     __end_of_Timer0_init:
   420                           	callstack 0
   421                           
   422 ;; *************** function _LEDarray_init *****************
   423 ;; Defined at:
   424 ;;		line 8 in file "LEDarray.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 2
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text3
   453   000FBA                     __ptext3:
   454                           	callstack 0
   455   000FBA                     _LEDarray_init:
   456                           	callstack 28
   457   000FBA                     
   458                           ;LEDarray.c: 10:     LATA = 0;
   459   000FBA  0E00               	movlw	0
   460   000FBC  6E79               	movwf	121,c	;volatile
   461                           
   462                           ;LEDarray.c: 11:     LATB = 0;
   463   000FBE  0E00               	movlw	0
   464   000FC0  6E7A               	movwf	122,c	;volatile
   465   000FC2                     
   466                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
   467   000FC2  907E               	bcf	126,0,c	;volatile
   468   000FC4                     
   469                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
   470   000FC4  9C7E               	bcf	126,6,c	;volatile
   471                           
   472                           ;LEDarray.c: 14:     LATG = 0;
   473   000FC6  0E00               	movlw	0
   474   000FC8  6E7F               	movwf	127,c	;volatile
   475                           
   476                           ;LEDarray.c: 16:     TRISA = 0;
   477   000FCA  0E00               	movlw	0
   478   000FCC  6E81               	movwf	129,c	;volatile
   479                           
   480                           ;LEDarray.c: 17:  TRISB = 0;
   481   000FCE  0E00               	movlw	0
   482   000FD0  6E82               	movwf	130,c	;volatile
   483   000FD2                     
   484                           ;LEDarray.c: 18:     TRISFbits.TRISF0 = 0;
   485   000FD2  9086               	bcf	134,0,c	;volatile
   486   000FD4                     
   487                           ;LEDarray.c: 19:     TRISFbits.TRISF6 = 0;
   488   000FD4  9C86               	bcf	134,6,c	;volatile
   489                           
   490                           ;LEDarray.c: 20:     TRISG = 0;
   491   000FD6  0E00               	movlw	0
   492   000FD8  6E87               	movwf	135,c	;volatile
   493   000FDA                     
   494                           ;LEDarray.c: 22:     TRISFbits.TRISF2=1;
   495   000FDA  8486               	bsf	134,2,c	;volatile
   496   000FDC                     
   497                           ;LEDarray.c: 23:     ANSELFbits.ANSELF2=0;
   498   000FDC  010E               	movlb	14	; () banked
   499   000FDE  95B4               	bcf	180,2,b	;volatile
   500   000FE0                     
   501                           ; BSR set to: 14
   502   000FE0  0012               	return		;funcret
   503   000FE2                     __end_of_LEDarray_init:
   504                           	callstack 0
   505                           
   506 ;; *************** function _LEDarray_disp_bin *****************
   507 ;; Defined at:
   508 ;;		line 30 in file "LEDarray.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;  number          2    4[COMRAM] unsigned int 
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		None
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   526 ;;Total ram usage:        2 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 2
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;;		_LEDarray_disp_PPM
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text4
   538   000E02                     __ptext4:
   539                           	callstack 0
   540   000E02                     _LEDarray_disp_bin:
   541                           	callstack 28
   542   000E02                     
   543                           ;LEDarray.c: 30: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 31: {;LEDarray.
      +                          c: 33:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
   544   000E02  A005               	btfss	LEDarray_disp_bin@number^0,0,c
   545   000E04  EF06  F007         	goto	u271
   546   000E08  EF08  F007         	goto	u270
   547   000E0C                     u271:
   548   000E0C  EF0B  F007         	goto	l82
   549   000E10                     u270:
   550   000E10  807F               	bsf	127,0,c	;volatile
   551   000E12  EF0C  F007         	goto	l83
   552   000E16                     l82:
   553   000E16  907F               	bcf	127,0,c	;volatile
   554   000E18                     l83:
   555                           
   556                           ;LEDarray.c: 34:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
   557   000E18  A205               	btfss	LEDarray_disp_bin@number^0,1,c
   558   000E1A  EF11  F007         	goto	u281
   559   000E1E  EF13  F007         	goto	u280
   560   000E22                     u281:
   561   000E22  EF16  F007         	goto	l84
   562   000E26                     u280:
   563   000E26  827F               	bsf	127,1,c	;volatile
   564   000E28  EF17  F007         	goto	l85
   565   000E2C                     l84:
   566   000E2C  927F               	bcf	127,1,c	;volatile
   567   000E2E                     l85:
   568                           
   569                           ;LEDarray.c: 35:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
   570   000E2E  A405               	btfss	LEDarray_disp_bin@number^0,2,c
   571   000E30  EF1C  F007         	goto	u291
   572   000E34  EF1E  F007         	goto	u290
   573   000E38                     u291:
   574   000E38  EF21  F007         	goto	l86
   575   000E3C                     u290:
   576   000E3C  8479               	bsf	121,2,c	;volatile
   577   000E3E  EF22  F007         	goto	l87
   578   000E42                     l86:
   579   000E42  9479               	bcf	121,2,c	;volatile
   580   000E44                     l87:
   581                           
   582                           ;LEDarray.c: 36:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
   583   000E44  A605               	btfss	LEDarray_disp_bin@number^0,3,c
   584   000E46  EF27  F007         	goto	u301
   585   000E4A  EF29  F007         	goto	u300
   586   000E4E                     u301:
   587   000E4E  EF2C  F007         	goto	l88
   588   000E52                     u300:
   589   000E52  8C7E               	bsf	126,6,c	;volatile
   590   000E54  EF2D  F007         	goto	l89
   591   000E58                     l88:
   592   000E58  9C7E               	bcf	126,6,c	;volatile
   593   000E5A                     l89:
   594                           
   595                           ;LEDarray.c: 37:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
   596   000E5A  A805               	btfss	LEDarray_disp_bin@number^0,4,c
   597   000E5C  EF32  F007         	goto	u311
   598   000E60  EF34  F007         	goto	u310
   599   000E64                     u311:
   600   000E64  EF37  F007         	goto	l90
   601   000E68                     u310:
   602   000E68  8879               	bsf	121,4,c	;volatile
   603   000E6A  EF38  F007         	goto	l91
   604   000E6E                     l90:
   605   000E6E  9879               	bcf	121,4,c	;volatile
   606   000E70                     l91:
   607                           
   608                           ;LEDarray.c: 38:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
   609   000E70  AA05               	btfss	LEDarray_disp_bin@number^0,5,c
   610   000E72  EF3D  F007         	goto	u321
   611   000E76  EF3F  F007         	goto	u320
   612   000E7A                     u321:
   613   000E7A  EF42  F007         	goto	l92
   614   000E7E                     u320:
   615   000E7E  8A79               	bsf	121,5,c	;volatile
   616   000E80  EF43  F007         	goto	l93
   617   000E84                     l92:
   618   000E84  9A79               	bcf	121,5,c	;volatile
   619   000E86                     l93:
   620                           
   621                           ;LEDarray.c: 39:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
   622   000E86  AC05               	btfss	LEDarray_disp_bin@number^0,6,c
   623   000E88  EF48  F007         	goto	u331
   624   000E8C  EF4A  F007         	goto	u330
   625   000E90                     u331:
   626   000E90  EF4D  F007         	goto	l94
   627   000E94                     u330:
   628   000E94  807E               	bsf	126,0,c	;volatile
   629   000E96  EF4E  F007         	goto	l95
   630   000E9A                     l94:
   631   000E9A  907E               	bcf	126,0,c	;volatile
   632   000E9C                     l95:
   633                           
   634                           ;LEDarray.c: 40:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
   635   000E9C  AE05               	btfss	LEDarray_disp_bin@number^0,7,c
   636   000E9E  EF53  F007         	goto	u341
   637   000EA2  EF55  F007         	goto	u340
   638   000EA6                     u341:
   639   000EA6  EF58  F007         	goto	l96
   640   000EAA                     u340:
   641   000EAA  807A               	bsf	122,0,c	;volatile
   642   000EAC  EF59  F007         	goto	l97
   643   000EB0                     l96:
   644   000EB0  907A               	bcf	122,0,c	;volatile
   645   000EB2                     l97:
   646                           
   647                           ;LEDarray.c: 41:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
   648   000EB2  A006               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
   649   000EB4  EF5E  F007         	goto	u351
   650   000EB8  EF60  F007         	goto	u350
   651   000EBC                     u351:
   652   000EBC  EF63  F007         	goto	l98
   653   000EC0                     u350:
   654   000EC0  827A               	bsf	122,1,c	;volatile
   655   000EC2  EF64  F007         	goto	l100
   656   000EC6                     l98:
   657   000EC6  927A               	bcf	122,1,c	;volatile
   658   000EC8                     l100:
   659   000EC8  0012               	return		;funcret
   660   000ECA                     __end_of_LEDarray_disp_bin:
   661                           	callstack 0
   662                           
   663 ;; *************** function _Interrupts_init *****************
   664 ;; Defined at:
   665 ;;		line 12 in file "interrupts.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		None
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 2
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text5
   694   000FF8                     __ptext5:
   695                           	callstack 0
   696   000FF8                     _Interrupts_init:
   697                           	callstack 28
   698   000FF8                     
   699                           ;interrupts.c: 16:     PIE2bits.C1IE = 1;
   700   000FF8  010E               	movlb	14	; () banked
   701   000FFA  812B               	bsf	43,0,b	;volatile
   702                           
   703                           ;interrupts.c: 17:     IPR2bits.C1IP = 1;
   704   000FFC  8121               	bsf	33,0,b	;volatile
   705                           
   706                           ;interrupts.c: 18:     INTCONbits.PEIE = 1;
   707   000FFE  8CF2               	bsf	242,6,c	;volatile
   708                           
   709                           ;interrupts.c: 19:     INTCONbits.GIE = 1;
   710   001000  8EF2               	bsf	242,7,c	;volatile
   711   001002                     
   712                           ; BSR set to: 14
   713   001002  0012               	return		;funcret
   714   001004                     __end_of_Interrupts_init:
   715                           	callstack 0
   716                           
   717 ;; *************** function _LowISR *****************
   718 ;; Defined at:
   719 ;;		line 37 in file "interrupts.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		Interrupt level 1
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	intcodelo
   748   000018                     __pintcodelo:
   749                           	callstack 0
   750   000018                     _LowISR:
   751                           	callstack 28
   752                           
   753                           ; BSR set to: 14
   754                           ;incstack = 0
   755   000018  8011               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   756   00001A  CFD8 F002          	movff	status,??_LowISR
   757   00001E  CFE8 F003          	movff	wreg,??_LowISR+1
   758   000022  CFE0 F004          	movff	bsr,??_LowISR+2
   759   000026                     
   760                           ;interrupts.c: 40:     if (PIR0bits.TMR0IF == 1) {
   761   000026  010E               	movlb	14	; () banked
   762   000028  AB33               	btfss	51,5,b	;volatile
   763   00002A  EF19  F000         	goto	i1u25_21
   764   00002E  EF1B  F000         	goto	i1u25_20
   765   000032                     i1u25_21:
   766   000032  EF30  F000         	goto	i1l163
   767   000036                     i1u25_20:
   768   000036                     
   769                           ; BSR set to: 14
   770                           ;interrupts.c: 43:         hour++;
   771   000036  4A0F               	infsnz	_hour^0,f,c
   772   000038  2A10               	incf	(_hour+1)^0,f,c
   773   00003A                     
   774                           ; BSR set to: 14
   775                           ;interrupts.c: 46:        if (hour == 24) {hour = 0;}
   776   00003A  0E18               	movlw	24
   777   00003C  180F               	xorwf	_hour^0,w,c
   778   00003E  1010               	iorwf	(_hour+1)^0,w,c
   779   000040  A4D8               	btfss	status,2,c
   780   000042  EF25  F000         	goto	i1u26_21
   781   000046  EF27  F000         	goto	i1u26_20
   782   00004A                     i1u26_21:
   783   00004A  EF2B  F000         	goto	i1l162
   784   00004E                     i1u26_20:
   785   00004E                     
   786                           ; BSR set to: 14
   787   00004E  0E00               	movlw	0
   788   000050  6E10               	movwf	(_hour+1)^0,c
   789   000052  0E00               	movlw	0
   790   000054  6E0F               	movwf	_hour^0,c
   791   000056                     i1l162:
   792                           
   793                           ; BSR set to: 14
   794                           ;interrupts.c: 48:         TMR0H=00001011;
   795   000056  0E09               	movlw	9
   796   000058  6ED4               	movwf	212,c	;volatile
   797                           
   798                           ;interrupts.c: 49:         TMR0L=110011011;
   799   00005A  0E83               	movlw	131
   800   00005C  6ED3               	movwf	211,c	;volatile
   801   00005E                     
   802                           ; BSR set to: 14
   803                           ;interrupts.c: 50:         PIR0bits.TMR0IF = 0;
   804   00005E  9B33               	bcf	51,5,b	;volatile
   805   000060                     i1l163:
   806                           
   807                           ; BSR set to: 14
   808   000060  C004  FFE0         	movff	??_LowISR+2,bsr
   809   000064  C003  FFE8         	movff	??_LowISR+1,wreg
   810   000068  C002  FFD8         	movff	??_LowISR,status
   811   00006C  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   812   00006E  0010               	retfie	
   813   000070                     __end_of_LowISR:
   814                           	callstack 0
   815                           
   816 ;; *************** function _HighISR *****************
   817 ;; Defined at:
   818 ;;		line 26 in file "interrupts.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:        1 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		Interrupt level 2
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	intcode
   846   000008                     __pintcode:
   847                           	callstack 0
   848   000008                     _HighISR:
   849                           	callstack 28
   850                           
   851                           ; BSR set to: 14
   852                           ;incstack = 0
   853   000008  8211               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   854   00000A  EFA8  F007         	goto	int_func
   855                           
   856                           	psect	intcode_body
   857   000F50                     __pintcode_body:
   858                           	callstack 28
   859   000F50                     int_func:
   860                           	callstack 28
   861   000F50                     
   862                           ;interrupts.c: 29:     if (PIR2bits.C1IF == 1) {
   863   000F50  010E               	movlb	14	; () banked
   864   000F52  A135               	btfss	53,0,b	;volatile
   865   000F54  EFAE  F007         	goto	i2u22_41
   866   000F58  EFB0  F007         	goto	i2u22_40
   867   000F5C                     i2u22_41:
   868   000F5C  EFC4  F007         	goto	i2l154
   869   000F60                     i2u22_40:
   870   000F60                     
   871                           ; BSR set to: 14
   872                           ;interrupts.c: 30:     LATHbits.LATH3 = !LATHbits.LATH3;
   873   000F60  A680               	btfss	128,3,c	;volatile
   874   000F62  EFB5  F007         	goto	i2u23_41
   875   000F66  EFB9  F007         	goto	i2u23_40
   876   000F6A                     i2u23_41:
   877   000F6A  6A01               	clrf	??_HighISR^0,c
   878   000F6C  2A01               	incf	??_HighISR^0,f,c
   879   000F6E  EFBA  F007         	goto	i2u24_48
   880   000F72                     i2u23_40:
   881   000F72  6A01               	clrf	??_HighISR^0,c
   882   000F74                     i2u24_48:
   883   000F74  4601               	rlncf	??_HighISR^0,f,c
   884   000F76  4601               	rlncf	??_HighISR^0,f,c
   885   000F78  4601               	rlncf	??_HighISR^0,f,c
   886   000F7A  5080               	movf	128,w,c	;volatile
   887   000F7C  1801               	xorwf	??_HighISR^0,w,c
   888   000F7E  0BF7               	andlw	-9
   889   000F80  1801               	xorwf	??_HighISR^0,w,c
   890   000F82  6E80               	movwf	128,c	;volatile
   891   000F84                     
   892                           ;interrupts.c: 31:         PIR2bits.C1IF = 0;
   893   000F84  010E               	movlb	14	; () banked
   894   000F86  9135               	bcf	53,0,b	;volatile
   895   000F88                     i2l154:
   896                           
   897                           ; BSR set to: 14
   898   000F88  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   899   000F8A  0011               	retfie		f
   900   000F8C                     __end_of_HighISR:
   901                           	callstack 0
   902                           
   903                           	psect	smallconst
   904   000E00                     __psmallconst:
   905                           	callstack 0
   906   000E00  00                 	db	0
   907   000E01  00                 	db	0	; dummy byte at the end
   908   000000                     
   909                           	psect	rparam
   910   000000                     
   911                           	psect	temp
   912   000011                     btemp:
   913                           	callstack 0
   914   000011                     	ds	1
   915   000000                     int$flags	set	btemp
   916   000000                     wtemp8	set	btemp+1
   917   000000                     ttemp5	set	btemp+1
   918   000000                     ttemp6	set	btemp+4
   919   000000                     ttemp7	set	btemp+8
   920                           
   921                           	psect	config
   922                           
   923                           ;Config register CONFIG1L @ 0x300000
   924                           ;	External Oscillator mode Selection bits
   925                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   926                           ;	Power-up default value for COSC bits
   927                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   928   300000                     	org	3145728
   929   300000  AA                 	db	170
   930                           
   931                           ;Config register CONFIG1H @ 0x300001
   932                           ;	unspecified, using default values
   933                           ;	Clock Out Enable bit
   934                           ;	CLKOUTEN = 0x1, unprogrammed default
   935                           ;	Clock Switch Enable bit
   936                           ;	CSWEN = 0x1, unprogrammed default
   937                           ;	Fail-Safe Clock Monitor Enable bit
   938                           ;	FCMEN = 0x1, unprogrammed default
   939   300001                     	org	3145729
   940   300001  FF                 	db	255
   941                           
   942                           ;Config register CONFIG3L @ 0x300004
   943                           ;	WDT Period Select bits
   944                           ;	WDTCPS = 0x1F, unprogrammed default
   945                           ;	WDT operating mode
   946                           ;	WDTE = OFF, WDT Disabled
   947   300004                     	org	3145732
   948   300004  9F                 	db	159
   949                           
   950                           ;Config register CONFIG3H @ 0x300005
   951                           ;	unspecified, using default values
   952                           ;	WDT Window Select bits
   953                           ;	WDTCWS = 0x7, unprogrammed default
   954                           ;	WDT input clock selector
   955                           ;	WDTCCS = 0x7, unprogrammed default
   956   300005                     	org	3145733
   957   300005  FF                 	db	255
   958                           tosu	equ	0xFFF
   959                           tosh	equ	0xFFE
   960                           tosl	equ	0xFFD
   961                           stkptr	equ	0xFFC
   962                           pclatu	equ	0xFFB
   963                           pclath	equ	0xFFA
   964                           pcl	equ	0xFF9
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           prodh	equ	0xFF4
   970                           prodl	equ	0xFF3
   971                           indf0	equ	0xFEF
   972                           postinc0	equ	0xFEE
   973                           postdec0	equ	0xFED
   974                           preinc0	equ	0xFEC
   975                           plusw0	equ	0xFEB
   976                           fsr0h	equ	0xFEA
   977                           fsr0l	equ	0xFE9
   978                           wreg	equ	0xFE8
   979                           indf1	equ	0xFE7
   980                           postinc1	equ	0xFE6
   981                           postdec1	equ	0xFE5
   982                           preinc1	equ	0xFE4
   983                           plusw1	equ	0xFE3
   984                           fsr1h	equ	0xFE2
   985                           fsr1l	equ	0xFE1
   986                           bsr	equ	0xFE0
   987                           indf2	equ	0xFDF
   988                           postinc2	equ	0xFDE
   989                           postdec2	equ	0xFDD
   990                           preinc2	equ	0xFDC
   991                           plusw2	equ	0xFDB
   992                           fsr2h	equ	0xFDA
   993                           fsr2l	equ	0xFD9
   994                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LEDarray_disp_bin
    _main->_getHour

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     442
                                              6 COMRAM     4     4      0
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                            _getHour
 ---------------------------------------------------------------------------------
 (1) _getHour                                              2     0      2       0
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     350
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _LowISR                                               3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _getHour

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRllhhlh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllhhll     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      10       1       17.0%
BITBIGSFRhl         4A      0       0      34        0.0%
BITBIGSFRllll       30      0       0      46        0.0%
BITBIGSFRhhl        1B      0       0      33        0.0%
BITBIGSFRllhhlh     11      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllhhlh      8      0       0      38        0.0%
BITBIGSFRlllhh       7      0       0      44        0.0%
BITBIGSFRllhlh       7      0       0      42        0.0%
BITBIGSFRllhhhl      3      0       0      36        0.0%
BITBIGSFRlhl         3      0       0      35        0.0%
BITBIGSFRlllhl       1      0       0      45        0.0%
BITBIGSFRllhhll      1      0       0      41        0.0%
BITBIGSFRllhll       1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      47        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 19:30:37 2024

                       l22 0F46                         l45 0FB8                         l90 0E6E  
                       l82 0E16                         l91 0E70                         l83 0E18  
                       l92 0E84                         l84 0E2C                         l93 0E86  
                       l85 0E2E                         l94 0E9A                         l86 0E42  
                       l95 0E9C                         l87 0E44                         l79 0FE0  
                       l96 0EB0                         l88 0E58                         l97 0EB2  
                       l89 0E5A                         l98 0EC6                         bsr 0FE0  
        ??_Interrupts_init 0005                        l100 0EC8                        l148 1002  
                      l166 100C                        l862 0FF8                        l870 0FA0  
                      l880 0FAC                        l872 0FA4                        l864 0F8C  
                      l890 0FD2                        l882 0FB6                        l874 0FA6  
                      l866 0F94                        l892 0FD4                        l884 0FBA  
                      l876 0FA8                        l868 0F9E                        l894 0FDA  
                      l886 0FC2                        l878 0FAA                        l896 0FDC  
                      l888 0FC4                        u300 0E52                        u301 0E4E  
                      u310 0E68                        u311 0E64                        u320 0E7E  
                      u321 0E7A                        u330 0E94                        u331 0E90  
                      u340 0EAA                        u341 0EA6                        u350 0EC0  
                      u270 0E10                        u351 0EBC                        u271 0E0C  
                      u280 0E26                        u360 0F04                        u281 0E22  
                      u361 0F00                        u290 0E3C                        u370 0F1A  
                      u291 0E38                        u371 0F16                        u380 0F40  
                      u381 0F3C                        wreg 0FE8                       l1050 0E26  
                     l1060 0E94                       l1052 0E3C                       l1044 1004  
                     l1062 0EAA                       l1054 0E52                       l1046 0E02  
                     l1070 0ECC                       l1064 0EC0                       l1056 0E68  
                     l1048 0E10                       l1080 0F04                       l1072 0ECE  
                     l1058 0E7E                       l1082 0F1A                       l1074 0EDA  
                     l1066 0ECA                       l1084 0F26                       l1076 0EE6  
                     l1068 0ECA                       l1086 0F2E                       l1078 0EF2  
                     l1088 0F40                       _LATA 0F79                       _LATB 0F7A  
                     _LATG 0F7F                       _main 0ECA                       _hour 000F  
                     btemp 0011                       start 0070            __end_of_HighISR 0F8C  
             ___param_bank 0000                      ?_main 0001                      i1l162 0056  
                    i1l163 0060                      i2l154 0F88                      _TMR0H 0FD4  
                    _TMR0L 0FD3                      _TRISA 0F81                      _TRISB 0F82  
                    _TRISG 0F87            __end_of_getHour 100E                      ttemp5 0012  
                    ttemp6 0015                      ttemp7 0019                      status 0FD8  
                    wtemp8 0012            __initialization 0FE2               __end_of_main 0F50  
                   ??_main 0007              __activetblptr 0000                     i1l1020 0026  
                   i1l1022 0036                     i1l1024 003A                     i1l1026 004E  
                   i1l1028 005E                     i2l1014 0F50                     i2l1016 0F60  
                   i2l1018 0F84                  ??_HighISR 0001          _LEDarray_disp_bin 0E02  
                   _LowISR 0018         ?_LEDarray_disp_bin 0005              ??_Timer0_init 0005  
      ??_LEDarray_disp_bin 0007                     isa$std 0001                  ??_getHour 0007  
             __mediumconst 0000  __end_of_LEDarray_disp_bin 0ECA                 __accesstop 0060  
  __end_of__initialization 0FEE              ___rparam_used 0001              _LEDarray_init 0FBA  
          _Interrupts_init 0FF8             __pcstackCOMRAM 0001        __end_of_Timer0_init 0FBA  
           ?_LEDarray_init 0001                    ?_LowISR 0001                    i1u25_20 0036  
                  i1u25_21 0032                    i1u26_20 004E                    i1u26_21 004A  
                  i2u22_40 0F60                    i2u22_41 0F5C                    i2u23_40 0F72  
                  i2u23_41 0F6A                    i2u24_48 0F74    __end_of_Interrupts_init 1004  
                  _HighISR 0008                    __Hparam 0000                    __Lparam 0000  
              _Timer0_init 0F8C               __psmallconst 0E00                    __pcinit 0FE2  
                  __ramtop 0E00                    _getHour 1004                    __ptext0 0ECA  
                  __ptext1 1004                    __ptext2 0F8C                    __ptext3 0FBA  
                  __ptext4 0E02                    __ptext5 0FF8             __pintcode_body 0F50  
     end_of_initialization 0FEE            ??_LEDarray_init 0005                    int_func 0F50  
                _TRISFbits 0F86                  _TRISHbits 0F88                _CM1CON0bits 0ED0  
              _CM1CON1bits 0ED1           ?_Interrupts_init 0001             __end_of_LowISR 0070  
      start_initialization 0FE2                   ??_LowISR 0002                __pbssCOMRAM 000B  
                 ?_HighISR 0001               ?_Timer0_init 0001                  __pintcode 0008  
              __pintcodelo 0018                   ?_getHour 0005                __smallconst 0E00  
                 _LATAbits 0F79                   _LATBbits 0F7A                   _LATFbits 0F7E  
                 _LATGbits 0F7F                   _LATHbits 0F80                   _IPR0bits 0E1F  
                 _IPR2bits 0E21                   _PIE0bits 0E29                   _PIE2bits 0E2B  
                 _PIR0bits 0E33                   _PIR2bits 0E35            main@light_state 0007  
               _CM1NCHbits 0ED2                 _CM1PCHbits 0ED3      __end_of_LEDarray_init 0FE2  
                 __Hrparam 0000                   __Lrparam 0000                 _ANSELFbits 0EB4  
               _T0CON0bits 0FD5                 _T0CON1bits 0FD6    LEDarray_disp_bin@number 0005  
                 isa$xinst 0000                   int$flags 0011                   main@hour 0009  
               _INTCONbits 0FF2                   intlevel1 0000                   intlevel2 0000  
             _DAC1CON0bits 0EC6               _DAC1CON1bits 0EC7    calc_max_PPM@loopCounter 000B  
