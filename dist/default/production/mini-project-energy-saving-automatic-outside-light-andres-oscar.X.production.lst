

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 08 15:32:36 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 21/07/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F67K40 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     _CM1CON1bits	set	3793
    86   000000                     _LATG	set	3967
    87   000000                     _TRISBbits	set	3970
    88   000000                     _LATBbits	set	3962
    89   000000                     _LATAbits	set	3961
    90   000000                     _LATGbits	set	3967
    91   000000                     _IPR0bits	set	3615
    92   000000                     _PIE0bits	set	3625
    93   000000                     _LATHbits	set	3968
    94   000000                     _TRISEbits	set	3973
    95   000000                     _TRISCbits	set	3971
    96   000000                     _TRISFbits	set	3974
    97   000000                     _TRISB	set	3970
    98   000000                     _TRISA	set	3969
    99   000000                     _TMR0L	set	4051
   100   000000                     _TMR0H	set	4052
   101   000000                     _T0CON0bits	set	4053
   102   000000                     _T0CON1bits	set	4054
   103   000000                     _INTCONbits	set	4082
   104   000000                     _PIE2bits	set	3627
   105   000000                     _PIR0bits	set	3635
   106   000000                     _PIR2bits	set	3637
   107   000000                     _ANSELFbits	set	3764
   108   000000                     _LATA	set	3961
   109   000000                     _IPR2bits	set	3617
   110   000000                     _LATEbits	set	3965
   111   000000                     _LATCbits	set	3963
   112   000000                     _LATFbits	set	3966
   113   000000                     _LATB	set	3962
   114   000000                     _TRISHbits	set	3976
   115   000000                     _TRISG	set	3975
   116   000000                     _DAC1CON0bits	set	3782
   117   000000                     _CM1CON0bits	set	3792
   118   000000                     _CM1NCHbits	set	3794
   119   000000                     _DAC1CON1bits	set	3783
   120   000000                     _CM1PCHbits	set	3795
   121                           
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     
   127                           ; BSR set to: 14
   128   000E01  56                 	db	86	;'V'
   129   000E02  6F                 	db	111	;'o'
   130   000E03  6C                 	db	108	;'l'
   131   000E04  74                 	db	116	;'t'
   132   000E05  61                 	db	97	;'a'
   133   000E06  67                 	db	103	;'g'
   134   000E07  65                 	db	101	;'e'
   135   000E08  20                 	db	32
   136   000E09  3D                 	db	61	;'='
   137   000E0A  20                 	db	32
   138   000E0B  25                 	db	37
   139   000E0C  64                 	db	100	;'d'
   140   000E0D  2E                 	db	46
   141   000E0E  25                 	db	37
   142   000E0F  30                 	db	48	;'0'
   143   000E10  32                 	db	50	;'2'
   144   000E11  64                 	db	100	;'d'
   145   000E12  00                 	db	0
   146   000E13                     STR_2:
   147                           
   148                           ; BSR set to: 14
   149   000E13  68                 	db	104	;'h'
   150   000E14  3D                 	db	61	;'='
   151   000E15  30                 	db	48	;'0'
   152   000E16  25                 	db	37
   153   000E17  64                 	db	100	;'d'
   154   000E18  20                 	db	32
   155   000E19  25                 	db	37
   156   000E1A  64                 	db	100	;'d'
   157   000E1B  20                 	db	32
   158   000E1C  25                 	db	37
   159   000E1D  64                 	db	100	;'d'
   160   000E1E  00                 	db	0
   161   000E1F                     STR_3:
   162                           
   163                           ; BSR set to: 14
   164   000E1F  68                 	db	104	;'h'
   165   000E20  3D                 	db	61	;'='
   166   000E21  25                 	db	37
   167   000E22  64                 	db	100	;'d'
   168   000E23  20                 	db	32
   169   000E24  25                 	db	37
   170   000E25  64                 	db	100	;'d'
   171   000E26  20                 	db	32
   172   000E27  25                 	db	37
   173   000E28  64                 	db	100	;'d'
   174   000E29  00                 	db	0
   175   000E2A  00                 	db	0	; dummy byte at the end
   176   000000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180   001DD8                     __pcinit:
   181                           	callstack 0
   182   001DD8                     start_initialization:
   183                           	callstack 0
   184   001DD8                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to BANK0 (34 bytes)
   188   001DD8  EE00  F088         	lfsr	0,__pbssBANK0
   189   001DDC  0E22               	movlw	34
   190   001DDE                     clear_0:
   191   001DDE  6AEE               	clrf	postinc0,c
   192   001DE0  06E8               	decf	wreg,f,c
   193   001DE2  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to COMRAM (9 bytes)
   196   001DE4  EE00  F051         	lfsr	0,__pbssCOMRAM
   197   001DE8  0E09               	movlw	9
   198   001DEA                     clear_1:
   199   001DEA  6AEE               	clrf	postinc0,c
   200   001DEC  06E8               	decf	wreg,f,c
   201   001DEE  E1FD               	bnz	clear_1
   202   001DF0                     end_of_initialization:
   203                           	callstack 0
   204   001DF0                     __end_of__initialization:
   205                           	callstack 0
   206   001DF0  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   207   001DF2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   208   001DF4  0100               	movlb	0
   209   001DF6  EFC7  F008         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212   000051                     __pbssCOMRAM:
   213                           	callstack 0
   214   000051                     calc_max_PPM@loopCounter:
   215                           	callstack 0
   216   000051                     	ds	4
   217   000055                     _width:
   218                           	callstack 0
   219   000055                     	ds	2
   220   000057                     _prec:
   221                           	callstack 0
   222   000057                     	ds	2
   223   000059                     _flags:
   224                           	callstack 0
   225   000059                     	ds	1
   226                           
   227                           	psect	bssBANK0
   228   000088                     __pbssBANK0:
   229                           	callstack 0
   230   000088                     _hour:
   231                           	callstack 0
   232   000088                     	ds	2
   233   00008A                     _dbuf:
   234                           	callstack 0
   235   00008A                     	ds	32
   236                           
   237                           	psect	cstackBANK0
   238   000060                     __pcstackBANK0:
   239                           	callstack 0
   240   000060                     main@buf:
   241                           	callstack 0
   242                           
   243                           ; 32 bytes @ 0x0
   244   000060                     	ds	32
   245   000080                     main@backward_zone:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x20
   249   000080                     	ds	2
   250   000082                     main@leap:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x22
   254   000082                     	ds	2
   255   000084                     main@year:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x24
   259   000084                     	ds	2
   260   000086                     main@day:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x26
   264   000086                     	ds	2
   265                           
   266                           	psect	cstackCOMRAM
   267   000001                     __pcstackCOMRAM:
   268                           	callstack 0
   269   000001                     ??_HighISR:
   270   000001                     
   271                           ; 1 bytes @ 0x0
   272   000001                     	ds	1
   273   000002                     ??_LowISR:
   274                           
   275                           ; 1 bytes @ 0x1
   276   000002                     	ds	3
   277   000005                     ?___wmul:
   278                           	callstack 0
   279   000005                     ?___awdiv:
   280                           	callstack 0
   281   000005                     ?___awmod:
   282                           	callstack 0
   283   000005                     ?___lwdiv:
   284                           	callstack 0
   285   000005                     LCD_sendnibble@number:
   286                           	callstack 0
   287   000005                     LEDarray_disp_bin@number:
   288                           	callstack 0
   289   000005                     ___wmul@multiplier:
   290                           	callstack 0
   291   000005                     ___awdiv@dividend:
   292                           	callstack 0
   293   000005                     ___awmod@dividend:
   294                           	callstack 0
   295   000005                     ___lwdiv@dividend:
   296                           	callstack 0
   297   000005                     fputc@c:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x4
   301   000005                     	ds	1
   302   000006                     LCD_sendbyte@type:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x5
   306   000006                     	ds	1
   307   000007                     LCD_sendbyte@highNibble:
   308                           	callstack 0
   309   000007                     fputc@fp:
   310                           	callstack 0
   311   000007                     ___wmul@multiplicand:
   312                           	callstack 0
   313   000007                     ___awdiv@divisor:
   314                           	callstack 0
   315   000007                     ___awmod@divisor:
   316                           	callstack 0
   317   000007                     ___lwdiv@divisor:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x6
   321   000007                     	ds	1
   322   000008                     ??_fputc:
   323   000008                     LCD_sendbyte@lowNibble:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x7
   327   000008                     	ds	1
   328   000009                     LCD_sendbyte@Byte:
   329                           	callstack 0
   330   000009                     ___awdiv@counter:
   331                           	callstack 0
   332   000009                     ___awmod@counter:
   333                           	callstack 0
   334   000009                     ___wmul@product:
   335                           	callstack 0
   336   000009                     ___lwdiv@quotient:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x8
   340   000009                     	ds	1
   341   00000A                     ??_LCD_init:
   342   00000A                     LCD_setline@line:
   343                           	callstack 0
   344   00000A                     LCD_sendstring@string:
   345                           	callstack 0
   346   00000A                     ___awdiv@sign:
   347                           	callstack 0
   348   00000A                     ___awmod@sign:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x9
   352   00000A                     	ds	1
   353   00000B                     ?_abs:
   354                           	callstack 0
   355   00000B                     ?_read_prec_or_width:
   356                           	callstack 0
   357   00000B                     ___lwdiv@counter:
   358                           	callstack 0
   359   00000B                     read_prec_or_width@fmt:
   360                           	callstack 0
   361   00000B                     ___awdiv@quotient:
   362                           	callstack 0
   363   00000B                     abs@a:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xA
   367   00000B                     	ds	1
   368   00000C                     ?___lwmod:
   369                           	callstack 0
   370   00000C                     read_prec_or_width@ap:
   371                           	callstack 0
   372   00000C                     ___lwmod@dividend:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xB
   376   00000C                     	ds	1
   377   00000D                     ??_abs:
   378   00000D                     read_prec_or_width@c:
   379                           	callstack 0
   380   00000D                     fputs@s:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xC
   384   00000D                     	ds	1
   385   00000E                     fputs@fp:
   386                           	callstack 0
   387   00000E                     ___lwmod@divisor:
   388                           	callstack 0
   389   00000E                     read_prec_or_width@n:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xD
   393   00000E                     	ds	1
   394   00000F                     fputs@c:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0xE
   398   00000F                     	ds	1
   399   000010                     ___lwmod@counter:
   400                           	callstack 0
   401   000010                     fputs@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0xF
   405   000010                     	ds	1
   406   000011                     ?_isLeapYear:
   407                           	callstack 0
   408   000011                     isLeapYear@year:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x10
   412   000011                     	ds	1
   413   000012                     pad@fp:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x11
   417   000012                     	ds	1
   418   000013                     ??_isLeapYear:
   419   000013                     pad@buf:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x12
   423   000013                     	ds	1
   424   000014                     pad@p:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x13
   428   000014                     	ds	1
   429   000015                     _isLeapYear$1080:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x14
   433   000015                     	ds	1
   434   000016                     ??_pad:
   435   000016                     ?_lastSunday:
   436                           	callstack 0
   437   000016                     lastSunday@year:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x15
   441   000016                     	ds	1
   442   000017                     pad@i:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x16
   446   000017                     	ds	1
   447   000018                     lastSunday@month:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x17
   451   000018                     	ds	1
   452   000019                     dtoa@fp:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x18
   456   000019                     	ds	1
   457   00001A                     ??_lastSunday:
   458   00001A                     dtoa@d:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x19
   462   00001A                     	ds	2
   463   00001C                     _dtoa$1861:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x1B
   467   00001C                     	ds	2
   468   00001E                     dtoa@p:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x1D
   472   00001E                     	ds	1
   473   00001F                     dtoa@w:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x1E
   477   00001F                     	ds	2
   478   000021                     dtoa@s:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x20
   482   000021                     	ds	1
   483   000022                     lastSunday@h:
   484                           	callstack 0
   485   000022                     dtoa@i:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x21
   489   000022                     	ds	2
   490   000024                     vfpfcnvrt@fp:
   491                           	callstack 0
   492   000024                     lastSunday@dayOfWeekMonth1st:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x23
   496   000024                     	ds	1
   497   000025                     vfpfcnvrt@fmt:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x24
   501   000025                     	ds	1
   502   000026                     vfpfcnvrt@ap:
   503                           	callstack 0
   504   000026                     lastSunday@dayOfWeekMonth31st:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x25
   508   000026                     	ds	1
   509   000027                     ??_vfpfcnvrt:
   510                           
   511                           ; 1 bytes @ 0x26
   512   000027                     	ds	1
   513   000028                     lastSunday@daysBeforeMarch:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x27
   517   000028                     	ds	1
   518   000029                     vfpfcnvrt@convarg:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x28
   522   000029                     	ds	1
   523   00002A                     lastSunday@dayOfYearForDSTStart:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x29
   527   00002A                     	ds	2
   528   00002C                     lastSunday@daysBeforeOctober:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x2B
   532   00002C                     	ds	1
   533   00002D                     vfpfcnvrt@done:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x2C
   537   00002D                     	ds	1
   538   00002E                     vfpfcnvrt@cp:
   539                           	callstack 0
   540   00002E                     lastSunday@dayOfYearForDSTEnd:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x2D
   544   00002E                     	ds	1
   545   00002F                     ?_vfprintf:
   546                           	callstack 0
   547   00002F                     vfprintf@fp:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x2E
   551   00002F                     	ds	1
   552   000030                     vfprintf@fmt:
   553                           	callstack 0
   554   000030                     _lastSunday$2147:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x2F
   558   000030                     	ds	1
   559   000031                     vfprintf@ap:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x30
   563   000031                     	ds	1
   564   000032                     vfprintf@cfmt:
   565                           	callstack 0
   566   000032                     _lastSunday$1090:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x31
   570   000032                     	ds	1
   571   000033                     ?_sprintf:
   572                           	callstack 0
   573   000033                     sprintf@s:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x32
   577   000033                     	ds	1
   578   000034                     sprintf@fmt:
   579                           	callstack 0
   580   000034                     _lastSunday$1093:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x33
   584   000034                     	ds	2
   585   000036                     lastSunday@leapYear:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x35
   589   000036                     	ds	2
   590   000038                     lastSunday@lastSundayDateMonth:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x37
   594   000038                     	ds	3
   595   00003B                     sprintf@ap:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x3A
   599   00003B                     	ds	1
   600   00003C                     sprintf@f:
   601                           	callstack 0
   602                           
   603                           ; 12 bytes @ 0x3B
   604   00003C                     	ds	12
   605   000048                     time2String@buf:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x47
   609   000048                     	ds	1
   610   000049                     time2String@h:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x48
   614   000049                     	ds	2
   615   00004B                     time2String@day:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x4A
   619   00004B                     	ds	2
   620   00004D                     time2String@year:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x4C
   624   00004D                     	ds	2
   625   00004F                     ??_time2String:
   626                           
   627                           ; 1 bytes @ 0x4E
   628   00004F                     	ds	2
   629   000051                     
   630                           ; 1 bytes @ 0x50
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 20 in file "main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  buf            32    0[BANK0 ] unsigned char [32]
   641 ;;  day             2   38[BANK0 ] unsigned int 
   642 ;;  year            2   36[BANK0 ] unsigned int 
   643 ;;  leap            2   34[BANK0 ] unsigned int 
   644 ;;  backward_zon    2   32[BANK0 ] unsigned int 
   645 ;;  bkwd_dayligh    2    0        unsigned int 
   646 ;;  fwd_daylight    2    0        unsigned int 
   647 ;;  daylight_sav    2    0        unsigned int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   658 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;Total ram usage:       40 bytes
   662 ;; Hardware stack levels required when called: 11
   663 ;; This function calls:
   664 ;;		_Comp1_init_fe
   665 ;;		_Comp1_init_re
   666 ;;		_Interrupts_init
   667 ;;		_LCD_init
   668 ;;		_LCD_setline
   669 ;;		_LEDarray_disp_bin
   670 ;;		_LEDarray_init
   671 ;;		_Timer0_init
   672 ;;		_isLeapYear
   673 ;;		_lastSunday
   674 ;;		_time2String
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text0
   681   00118E                     __ptext0:
   682                           	callstack 0
   683   00118E                     _main:
   684                           	callstack 20
   685   00118E                     
   686                           ;main.c: 23:     unsigned int day = 9;
   687   00118E  0E00               	movlw	0
   688   001190  0100               	movlb	0	; () banked
   689   001192  6F87               	movwf	(main@day+1)& (0+255),b
   690   001194  0E09               	movlw	9
   691   001196  6F86               	movwf	main@day& (0+255),b
   692                           
   693                           ;main.c: 24:     unsigned int year = 2024;
   694   001198  0E07               	movlw	7
   695   00119A  6F85               	movwf	(main@year+1)& (0+255),b
   696   00119C  0EE8               	movlw	232
   697   00119E  6F84               	movwf	main@year& (0+255),b
   698                           
   699                           ;main.c: 25:     unsigned int leap;;main.c: 26:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 27:     unsigned int bkwd_daylight_savings_day;;main.c: 28:     unsigned int 
      +                          backward_zone = 0;
   700   0011A0  0E00               	movlw	0
   701   0011A2  6F81               	movwf	(main@backward_zone+1)& (0+255),b
   702   0011A4  0E00               	movlw	0
   703   0011A6  6F80               	movwf	main@backward_zone& (0+255),b
   704   0011A8                     
   705                           ; BSR set to: 0
   706                           ;main.c: 29:     char buf[32];;main.c: 32:     Interrupts_init();
   707   0011A8  EC07  F00F         	call	_Interrupts_init	;wreg free
   708                           
   709                           ;main.c: 33:     Comp1_init_re();
   710   0011AC  ECC8  F00E         	call	_Comp1_init_re	;wreg free
   711                           
   712                           ;main.c: 34:     Comp1_init_fe();
   713   0011B0  ECDA  F00E         	call	_Comp1_init_fe	;wreg free
   714                           
   715                           ;main.c: 35:     Timer0_init();
   716   0011B4  EC88  F00E         	call	_Timer0_init	;wreg free
   717                           
   718                           ;main.c: 36:     LEDarray_init();
   719   0011B8  EC9F  F00E         	call	_LEDarray_init	;wreg free
   720   0011BC                     
   721                           ;main.c: 37:     LCD_init();
   722   0011BC  EC43  F00C         	call	_LCD_init	;wreg free
   723   0011C0                     l2355:
   724                           
   725                           ;main.c: 43:         LEDarray_disp_bin(hour);
   726   0011C0  C088  F005         	movff	_hour,LEDarray_disp_bin@number
   727   0011C4  C089  F006         	movff	_hour+1,LEDarray_disp_bin@number+1
   728   0011C8  EC34  F00A         	call	_LEDarray_disp_bin	;wreg free
   729   0011CC                     
   730                           ;main.c: 44:         LCD_setline(1);
   731   0011CC  0E01               	movlw	1
   732   0011CE  EC20  F00E         	call	_LCD_setline
   733   0011D2                     
   734                           ;main.c: 45:         time2String(buf,hour,day,year);
   735   0011D2  0E60               	movlw	low main@buf
   736   0011D4  6E48               	movwf	time2String@buf^0,c
   737   0011D6  C088  F049         	movff	_hour,time2String@h
   738   0011DA  C089  F04A         	movff	_hour+1,time2String@h+1
   739   0011DE  C086  F04B         	movff	main@day,time2String@day
   740   0011E2  C087  F04C         	movff	main@day+1,time2String@day+1
   741   0011E6  C084  F04D         	movff	main@year,time2String@year
   742   0011EA  C085  F04E         	movff	main@year+1,time2String@year+1
   743   0011EE  EC86  F00C         	call	_time2String	;wreg free
   744   0011F2                     
   745                           ;main.c: 50:         if (day==1 && hour == 0){
   746   0011F2  0100               	movlb	0	; () banked
   747   0011F4  0586               	decf	main@day& (0+255),w,b
   748   0011F6  1187               	iorwf	(main@day+1)& (0+255),w,b
   749   0011F8  A4D8               	btfss	status,2,c
   750   0011FA  EF01  F009         	goto	u1691
   751   0011FE  EF03  F009         	goto	u1690
   752   001202                     u1691:
   753   001202  EF20  F009         	goto	l2367
   754   001206                     u1690:
   755   001206                     
   756                           ; BSR set to: 0
   757   001206  5188               	movf	_hour& (0+255),w,b
   758   001208  1189               	iorwf	(_hour+1)& (0+255),w,b
   759   00120A  A4D8               	btfss	status,2,c
   760   00120C  EF0A  F009         	goto	u1701
   761   001210  EF0C  F009         	goto	u1700
   762   001214                     u1701:
   763   001214  EF20  F009         	goto	l2367
   764   001218                     u1700:
   765   001218                     
   766                           ; BSR set to: 0
   767   001218  C084  F016         	movff	main@year,lastSunday@year
   768   00121C  C085  F017         	movff	main@year+1,lastSunday@year+1
   769   001220  0E00               	movlw	0
   770   001222  6E19               	movwf	(lastSunday@month+1)^0,c
   771   001224  0E03               	movlw	3
   772   001226  6E18               	movwf	lastSunday@month^0,c
   773   001228  EC16  F007         	call	_lastSunday	;wreg free
   774   00122C  C084  F016         	movff	main@year,lastSunday@year
   775   001230  C085  F017         	movff	main@year+1,lastSunday@year+1
   776   001234  0E00               	movlw	0
   777   001236  6E19               	movwf	(lastSunday@month+1)^0,c
   778   001238  0E0A               	movlw	10
   779   00123A  6E18               	movwf	lastSunday@month^0,c
   780   00123C  EC16  F007         	call	_lastSunday	;wreg free
   781   001240                     l2367:
   782                           
   783                           ;main.c: 59:         if (hour >= 1 && hour <= 5){
   784   001240  0100               	movlb	0	; () banked
   785   001242  5188               	movf	_hour& (0+255),w,b
   786   001244  1189               	iorwf	(_hour+1)& (0+255),w,b
   787   001246  B4D8               	btfsc	status,2,c
   788   001248  EF28  F009         	goto	u1711
   789   00124C  EF2A  F009         	goto	u1710
   790   001250                     u1711:
   791   001250  EF36  F009         	goto	l2373
   792   001254                     u1710:
   793   001254                     
   794                           ; BSR set to: 0
   795   001254  5189               	movf	(_hour+1)& (0+255),w,b
   796   001256  E107               	bnz	u1721
   797   001258  0E06               	movlw	6
   798   00125A  5D88               	subwf	_hour& (0+255),w,b
   799   00125C  B0D8               	btfsc	status,0,c
   800   00125E  EF33  F009         	goto	u1721
   801   001262  EF35  F009         	goto	u1720
   802   001266                     u1721:
   803   001266  EF36  F009         	goto	l2373
   804   00126A                     u1720:
   805   00126A                     
   806                           ; BSR set to: 0
   807                           ;main.c: 60:             LATHbits.LATH3 = 1;
   808   00126A  8680               	bsf	128,3,c	;volatile
   809   00126C                     l2373:
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 67:         if (hour == 24) {
   813   00126C  0E18               	movlw	24
   814   00126E  1988               	xorwf	_hour& (0+255),w,b
   815   001270  1189               	iorwf	(_hour+1)& (0+255),w,b
   816   001272  A4D8               	btfss	status,2,c
   817   001274  EF3E  F009         	goto	u1731
   818   001278  EF40  F009         	goto	u1730
   819   00127C                     u1731:
   820   00127C  EF46  F009         	goto	l2379
   821   001280                     u1730:
   822   001280                     
   823                           ; BSR set to: 0
   824                           ;main.c: 68:            hour = 0;
   825   001280  0E00               	movlw	0
   826   001282  6F89               	movwf	(_hour+1)& (0+255),b
   827   001284  0E00               	movlw	0
   828   001286  6F88               	movwf	_hour& (0+255),b
   829   001288                     
   830                           ; BSR set to: 0
   831                           ;main.c: 69:            day++;
   832   001288  4B86               	infsnz	main@day& (0+255),f,b
   833   00128A  2B87               	incf	(main@day+1)& (0+255),f,b
   834   00128C                     l2379:
   835                           
   836                           ; BSR set to: 0
   837                           ;main.c: 71:         if (day == 365){
   838   00128C  0E6D               	movlw	109
   839   00128E  1986               	xorwf	main@day& (0+255),w,b
   840   001290  E106               	bnz	u1741
   841   001292  0587               	decf	(main@day+1)& (0+255),w,b
   842   001294  A4D8               	btfss	status,2,c
   843   001296  EF4F  F009         	goto	u1741
   844   00129A  EF51  F009         	goto	u1740
   845   00129E                     u1741:
   846   00129E  EF6B  F009         	goto	l2389
   847   0012A2                     u1740:
   848   0012A2                     
   849                           ; BSR set to: 0
   850                           ;main.c: 72:             leap = isLeapYear(year);
   851   0012A2  C084  F011         	movff	main@year,isLeapYear@year
   852   0012A6  C085  F012         	movff	main@year+1,isLeapYear@year+1
   853   0012AA  ECC8  F00C         	call	_isLeapYear	;wreg free
   854   0012AE  C011  F082         	movff	?_isLeapYear,main@leap
   855   0012B2  C012  F083         	movff	?_isLeapYear+1,main@leap+1
   856   0012B6                     
   857                           ;main.c: 73:             if (leap == 0){
   858   0012B6  0100               	movlb	0	; () banked
   859   0012B8  5182               	movf	main@leap& (0+255),w,b
   860   0012BA  1183               	iorwf	(main@leap+1)& (0+255),w,b
   861   0012BC  A4D8               	btfss	status,2,c
   862   0012BE  EF63  F009         	goto	u1751
   863   0012C2  EF65  F009         	goto	u1750
   864   0012C6                     u1751:
   865   0012C6  EF6B  F009         	goto	l2389
   866   0012CA                     u1750:
   867   0012CA                     
   868                           ; BSR set to: 0
   869                           ;main.c: 74:                 day=1;
   870   0012CA  0E00               	movlw	0
   871   0012CC  6F87               	movwf	(main@day+1)& (0+255),b
   872   0012CE  0E01               	movlw	1
   873   0012D0  6F86               	movwf	main@day& (0+255),b
   874   0012D2                     
   875                           ; BSR set to: 0
   876                           ;main.c: 75:                 year++;
   877   0012D2  4B84               	infsnz	main@year& (0+255),f,b
   878   0012D4  2B85               	incf	(main@year+1)& (0+255),f,b
   879   0012D6                     l2389:
   880                           
   881                           ; BSR set to: 0
   882                           ;main.c: 79:         if (day == 366){
   883   0012D6  0E6E               	movlw	110
   884   0012D8  1986               	xorwf	main@day& (0+255),w,b
   885   0012DA  E106               	bnz	u1761
   886   0012DC  0587               	decf	(main@day+1)& (0+255),w,b
   887   0012DE  A4D8               	btfss	status,2,c
   888   0012E0  EF74  F009         	goto	u1761
   889   0012E4  EF76  F009         	goto	u1760
   890   0012E8                     u1761:
   891   0012E8  EFE0  F008         	goto	l2355
   892   0012EC                     u1760:
   893   0012EC                     
   894                           ; BSR set to: 0
   895                           ;main.c: 80:             day = 1;
   896   0012EC  0E00               	movlw	0
   897   0012EE  6F87               	movwf	(main@day+1)& (0+255),b
   898   0012F0  0E01               	movlw	1
   899   0012F2  6F86               	movwf	main@day& (0+255),b
   900   0012F4                     
   901                           ; BSR set to: 0
   902                           ;main.c: 81:             year++;
   903   0012F4  4B84               	infsnz	main@year& (0+255),f,b
   904   0012F6  2B85               	incf	(main@year+1)& (0+255),f,b
   905   0012F8  EFE0  F008         	goto	l2355
   906   0012FC  EF2C  F000         	goto	start
   907   001300                     __end_of_main:
   908                           	callstack 0
   909                           
   910 ;; *************** function _time2String *****************
   911 ;; Defined at:
   912 ;;		line 152 in file "LCD.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  buf             1   71[COMRAM] PTR unsigned char 
   915 ;;		 -> main@buf(32), 
   916 ;;  h               2   72[COMRAM] unsigned int 
   917 ;;  day             2   74[COMRAM] unsigned int 
   918 ;;  year            2   76[COMRAM] unsigned int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   930 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   933 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   934 ;;Total ram usage:        9 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; Hardware stack levels required when called: 10
   937 ;; This function calls:
   938 ;;		_LCD_sendstring
   939 ;;		_sprintf
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text1
   946   00190C                     __ptext1:
   947                           	callstack 0
   948   00190C                     _time2String:
   949                           	callstack 20
   950   00190C                     
   951                           ;LCD.c: 153:     if (h<=9){
   952   00190C  504A               	movf	(time2String@h+1)^0,w,c
   953   00190E  E107               	bnz	u1641
   954   001910  0E0A               	movlw	10
   955   001912  5C49               	subwf	time2String@h^0,w,c
   956   001914  B0D8               	btfsc	status,0,c
   957   001916  EF8F  F00C         	goto	u1641
   958   00191A  EF91  F00C         	goto	u1640
   959   00191E                     u1641:
   960   00191E  EFA5  F00C         	goto	l2307
   961   001922                     u1640:
   962   001922                     
   963                           ;LCD.c: 154:         sprintf(buf,"h=0%d %d %d",h,day,year);
   964   001922  C048  F033         	movff	time2String@buf,sprintf@s
   965   001926  0E13               	movlw	low STR_2
   966   001928  6E34               	movwf	sprintf@fmt^0,c
   967   00192A  C049  F035         	movff	time2String@h,?_sprintf+2
   968   00192E  C04A  F036         	movff	time2String@h+1,?_sprintf+3
   969   001932  C04B  F037         	movff	time2String@day,?_sprintf+4
   970   001936  C04C  F038         	movff	time2String@day+1,?_sprintf+5
   971   00193A  C04D  F039         	movff	time2String@year,?_sprintf+6
   972   00193E  C04E  F03A         	movff	time2String@year+1,?_sprintf+7
   973   001942  EC3D  F00E         	call	_sprintf	;wreg free
   974                           
   975                           ;LCD.c: 155:     }
   976   001946  EFB7  F00C         	goto	l2309
   977   00194A                     l2307:
   978   00194A  C048  F033         	movff	time2String@buf,sprintf@s
   979   00194E  0E1F               	movlw	low STR_3
   980   001950  6E34               	movwf	sprintf@fmt^0,c
   981   001952  C049  F035         	movff	time2String@h,?_sprintf+2
   982   001956  C04A  F036         	movff	time2String@h+1,?_sprintf+3
   983   00195A  C04B  F037         	movff	time2String@day,?_sprintf+4
   984   00195E  C04C  F038         	movff	time2String@day+1,?_sprintf+5
   985   001962  C04D  F039         	movff	time2String@year,?_sprintf+6
   986   001966  C04E  F03A         	movff	time2String@year+1,?_sprintf+7
   987   00196A  EC3D  F00E         	call	_sprintf	;wreg free
   988   00196E                     l2309:
   989                           
   990                           ;LCD.c: 157:     LCD_sendstring(buf);
   991   00196E  C048  F00A         	movff	time2String@buf,LCD_sendstring@string
   992   001972  EC71  F00E         	call	_LCD_sendstring	;wreg free
   993   001976                     
   994                           ;LCD.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
   995   001976  0E11               	movlw	17
   996   001978  6E50               	movwf	(??_time2String+1)^0,c
   997   00197A  0E3C               	movlw	60
   998   00197C  6E4F               	movwf	??_time2String^0,c
   999   00197E  0ECB               	movlw	203
  1000   001980                     u1827:
  1001   001980  2EE8               	decfsz	wreg,f,c
  1002   001982  D7FE               	bra	u1827
  1003   001984  2E4F               	decfsz	??_time2String^0,f,c
  1004   001986  D7FC               	bra	u1827
  1005   001988  2E50               	decfsz	(??_time2String+1)^0,f,c
  1006   00198A  D7FA               	bra	u1827
  1007   00198C  0000               	nop	
  1008   00198E  0012               	return		;funcret
  1009   001990                     __end_of_time2String:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _sprintf *****************
  1013 ;; Defined at:
  1014 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  s               1   50[COMRAM] PTR unsigned char 
  1017 ;;		 -> main@buf(32), 
  1018 ;;  fmt             1   51[COMRAM] PTR const unsigned char 
  1019 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  f              12   59[COMRAM] struct _IO_FILE
  1022 ;;  ret             2    0        int 
  1023 ;;  ap              1   58[COMRAM] PTR void [1]
  1024 ;;		 -> ?_sprintf(2), 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  2   50[COMRAM] int 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1037 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1038 ;;Total ram usage:       21 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 9
  1041 ;; This function calls:
  1042 ;;		_vfprintf
  1043 ;; This function is called by:
  1044 ;;		_time2String
  1045 ;;		_ADC2String
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text2
  1050   001C7A                     __ptext2:
  1051                           	callstack 0
  1052   001C7A                     _sprintf:
  1053                           	callstack 20
  1054   001C7A  0E35               	movlw	low (?_sprintf+2)
  1055   001C7C  6E3B               	movwf	sprintf@ap^0,c
  1056   001C7E  C033  F03C         	movff	sprintf@s,sprintf@f
  1057   001C82  0E00               	movlw	0
  1058   001C84  6E40               	movwf	(sprintf@f+4)^0,c
  1059   001C86  0E00               	movlw	0
  1060   001C88  6E3F               	movwf	(sprintf@f+3)^0,c
  1061   001C8A  0E00               	movlw	0
  1062   001C8C  6E47               	movwf	(sprintf@f+11)^0,c
  1063   001C8E  0E00               	movlw	0
  1064   001C90  6E46               	movwf	(sprintf@f+10)^0,c
  1065   001C92  0E3C               	movlw	low sprintf@f
  1066   001C94  6E2F               	movwf	vfprintf@fp^0,c
  1067   001C96  C034  F030         	movff	sprintf@fmt,vfprintf@fmt
  1068   001C9A  0E3B               	movlw	low sprintf@ap
  1069   001C9C  6E31               	movwf	vfprintf@ap^0,c
  1070   001C9E  ECA5  F00D         	call	_vfprintf	;wreg free
  1071   001CA2  5033               	movf	sprintf@s^0,w,c
  1072   001CA4  243F               	addwf	(sprintf@f+3)^0,w,c
  1073   001CA6  6ED9               	movwf	fsr2l,c
  1074   001CA8  6ADA               	clrf	fsr2h,c
  1075   001CAA  6ADF               	clrf	indf2,c
  1076   001CAC  0012               	return		;funcret
  1077   001CAE                     __end_of_sprintf:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _vfprintf *****************
  1081 ;; Defined at:
  1082 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  fp              1   46[COMRAM] PTR struct _IO_FILE
  1085 ;;		 -> sprintf@f(12), 
  1086 ;;  fmt             1   47[COMRAM] PTR const unsigned char 
  1087 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1088 ;;  ap              1   48[COMRAM] PTR PTR void 
  1089 ;;		 -> sprintf@ap(1), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  cfmt            1   49[COMRAM] PTR unsigned char 
  1092 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2   46[COMRAM] int 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;Total ram usage:        4 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 8
  1109 ;; This function calls:
  1110 ;;		_vfpfcnvrt
  1111 ;; This function is called by:
  1112 ;;		_sprintf
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text3
  1117   001B4A                     __ptext3:
  1118                           	callstack 0
  1119   001B4A                     _vfprintf:
  1120                           	callstack 20
  1121   001B4A                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1123   001B4A  C030  F032         	movff	vfprintf@fmt,vfprintf@cfmt
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1126   001B4E  EFB1  F00D         	goto	l2113
  1127   001B52                     l2111:
  1128                           
  1129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1130   001B52  C02F  F024         	movff	vfprintf@fp,vfpfcnvrt@fp
  1131   001B56  0E32               	movlw	low vfprintf@cfmt
  1132   001B58  6E25               	movwf	vfpfcnvrt@fmt^0,c
  1133   001B5A  C031  F026         	movff	vfprintf@ap,vfpfcnvrt@ap
  1134   001B5E  EC06  F008         	call	_vfpfcnvrt	;wreg free
  1135   001B62                     l2113:
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1138   001B62  C032  FFF6         	movff	vfprintf@cfmt,tblptrl
  1139   001B66                     	if	1	;There is more than 1 active tblptr byte
  1140   001B66  0E0E               	movlw	high __smallconst
  1141   001B68  6EF7               	movwf	tblptrh,c
  1142   001B6A                     	endif
  1143   001B6A                     	if	0	;tblptru may be non-zero
  1144   001B6A                     	endif
  1145   001B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1146   001B6A  0E00               	movlw	low (__smallconst shr (0+16))
  1147   001B6C  6EF8               	movwf	tblptru,c
  1148   001B6E                     	endif
  1149   001B6E  0008               	tblrd		*
  1150   001B70  50F5               	movf	tablat,w,c
  1151   001B72  0900               	iorlw	0
  1152   001B74  A4D8               	btfss	status,2,c
  1153   001B76  EFBF  F00D         	goto	u1451
  1154   001B7A  EFC1  F00D         	goto	u1450
  1155   001B7E                     u1451:
  1156   001B7E  EFA9  F00D         	goto	l2111
  1157   001B82                     u1450:
  1158   001B82                     
  1159                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1160   001B82  0E00               	movlw	0
  1161   001B84  6E30               	movwf	(?_vfprintf+1)^0,c
  1162   001B86  0E00               	movlw	0
  1163   001B88  6E2F               	movwf	?_vfprintf^0,c
  1164   001B8A  0012               	return		;funcret
  1165   001B8C                     __end_of_vfprintf:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _vfpfcnvrt *****************
  1169 ;; Defined at:
  1170 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  fp              1   35[COMRAM] PTR struct _IO_FILE
  1173 ;;		 -> sprintf@f(12), 
  1174 ;;  fmt             1   36[COMRAM] PTR PTR unsigned char 
  1175 ;;		 -> vfprintf@cfmt(1), 
  1176 ;;  ap              1   37[COMRAM] PTR PTR void 
  1177 ;;		 -> sprintf@ap(1), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  convarg         4   40[COMRAM] struct .
  1180 ;;  cp              1   45[COMRAM] PTR unsigned char 
  1181 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1182 ;;  done            1   44[COMRAM] _Bool 
  1183 ;;  c               1    0        unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1193 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;Total ram usage:       11 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 7
  1200 ;; This function calls:
  1201 ;;		_dtoa
  1202 ;;		_fputc
  1203 ;;		_read_prec_or_width
  1204 ;; This function is called by:
  1205 ;;		_vfprintf
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text4
  1210   00100C                     __ptext4:
  1211                           	callstack 0
  1212   00100C                     _vfpfcnvrt:
  1213                           	callstack 20
  1214   00100C                     
  1215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1216   00100C  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1217   00100E  6ED9               	movwf	fsr2l,c
  1218   001010  6ADA               	clrf	fsr2h,c
  1219   001012  CFDF FFF6          	movff	indf2,tblptrl
  1220   001016                     	if	1	;There is more than 1 active tblptr byte
  1221   001016  0E0E               	movlw	high __smallconst
  1222   001018  6EF7               	movwf	tblptrh,c
  1223   00101A                     	endif
  1224   00101A                     	if	0	;tblptru may be non-zero
  1225   00101A                     	endif
  1226   00101A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1227   00101A  0E00               	movlw	low (__smallconst shr (0+16))
  1228   00101C  6EF8               	movwf	tblptru,c
  1229   00101E                     	endif
  1230   00101E  0008               	tblrd		*
  1231   001020  50F5               	movf	tablat,w,c
  1232   001022  0A25               	xorlw	37
  1233   001024  A4D8               	btfss	status,2,c
  1234   001026  EF17  F008         	goto	u1361
  1235   00102A  EF19  F008         	goto	u1360
  1236   00102E                     u1361:
  1237   00102E  EFB3  F008         	goto	l2071
  1238   001032                     u1360:
  1239   001032                     
  1240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1241   001032  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1242   001034  6ED9               	movwf	fsr2l,c
  1243   001036  6ADA               	clrf	fsr2h,c
  1244   001038  2ADF               	incf	indf2,f,c
  1245   00103A                     
  1246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1247   00103A  0E00               	movlw	0
  1248   00103C  6E56               	movwf	(_width+1)^0,c
  1249   00103E  0E00               	movlw	0
  1250   001040  6E55               	movwf	_width^0,c
  1251   001042  C055  F059         	movff	_width,_flags
  1252   001046                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1254   001046  6857               	setf	_prec^0,c
  1255   001048  6858               	setf	(_prec+1)^0,c
  1256   00104A                     
  1257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1258   00104A  0E00               	movlw	0
  1259   00104C  6E2D               	movwf	vfpfcnvrt@done^0,c
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1262   00104E  EF4F  F008         	goto	l2045
  1263   001052                     l2035:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1266   001052  8259               	bsf	_flags^0,1,c
  1267   001054                     
  1268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1269   001054  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1270   001056  6ED9               	movwf	fsr2l,c
  1271   001058  6ADA               	clrf	fsr2h,c
  1272   00105A  2ADF               	incf	indf2,f,c
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1275   00105C  EF4F  F008         	goto	l2045
  1276   001060                     l2039:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1279   001060  0E01               	movlw	1
  1280   001062  6E2D               	movwf	vfpfcnvrt@done^0,c
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1283   001064  EF4F  F008         	goto	l2045
  1284   001068                     l2043:
  1285   001068  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1286   00106A  6ED9               	movwf	fsr2l,c
  1287   00106C  6ADA               	clrf	fsr2h,c
  1288   00106E  CFDF FFF6          	movff	indf2,tblptrl
  1289   001072                     	if	1	;There is more than 1 active tblptr byte
  1290   001072  0E0E               	movlw	high __smallconst
  1291   001074  6EF7               	movwf	tblptrh,c
  1292   001076                     	endif
  1293   001076                     	if	0	;tblptru may be non-zero
  1294   001076                     	endif
  1295   001076                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1296   001076  0E00               	movlw	low (__smallconst shr (0+16))
  1297   001078  6EF8               	movwf	tblptru,c
  1298   00107A                     	endif
  1299   00107A  0008               	tblrd		*
  1300   00107C  50F5               	movf	tablat,w,c
  1301   00107E  6E27               	movwf	??_vfpfcnvrt^0,c
  1302   001080  6A28               	clrf	(??_vfpfcnvrt+1)^0,c
  1303                           
  1304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 0 to 0
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ;	Chosen strategy is simple_byte
  1311   001082  5028               	movf	(??_vfpfcnvrt+1)^0,w,c
  1312   001084  0A00               	xorlw	0	; case 0
  1313   001086  B4D8               	btfsc	status,2,c
  1314   001088  EF48  F008         	goto	l2459
  1315   00108C  EF30  F008         	goto	l2039
  1316   001090                     l2459:
  1317                           
  1318                           ; Switch size 1, requested type "simple"
  1319                           ; Number of cases is 1, Range of values is 48 to 48
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte            4     3 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324   001090  5027               	movf	??_vfpfcnvrt^0,w,c
  1325   001092  0A30               	xorlw	48	; case 48
  1326   001094  B4D8               	btfsc	status,2,c
  1327   001096  EF29  F008         	goto	l2035
  1328   00109A  EF30  F008         	goto	l2039
  1329   00109E                     l2045:
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1332   00109E  502D               	movf	vfpfcnvrt@done^0,w,c
  1333   0010A0  B4D8               	btfsc	status,2,c
  1334   0010A2  EF55  F008         	goto	u1371
  1335   0010A6  EF57  F008         	goto	u1370
  1336   0010AA                     u1371:
  1337   0010AA  EF34  F008         	goto	l2043
  1338   0010AE                     u1370:
  1339   0010AE                     
  1340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1341   0010AE  C025  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1342   0010B2  C026  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1343   0010B6  EC52  F00B         	call	_read_prec_or_width	;wreg free
  1344   0010BA  C00B  F055         	movff	?_read_prec_or_width,_width
  1345   0010BE  C00C  F056         	movff	?_read_prec_or_width+1,_width+1
  1346   0010C2                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1348   0010C2  BE56               	btfsc	(_width+1)^0,7,c
  1349   0010C4  EF68  F008         	goto	u1380
  1350   0010C8  EF66  F008         	goto	u1381
  1351   0010CC                     u1381:
  1352   0010CC  EF6D  F008         	goto	l2053
  1353   0010D0                     u1380:
  1354   0010D0                     
  1355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1356   0010D0  8059               	bsf	_flags^0,0,c
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1359   0010D2  6C55               	negf	_width^0,c
  1360   0010D4  1E56               	comf	(_width+1)^0,f,c
  1361   0010D6  B0D8               	btfsc	status,0,c
  1362   0010D8  2A56               	incf	(_width+1)^0,f,c
  1363   0010DA                     l2053:
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1366   0010DA  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1367   0010DC  6ED9               	movwf	fsr2l,c
  1368   0010DE  6ADA               	clrf	fsr2h,c
  1369   0010E0  50DF               	movf	indf2,w,c
  1370   0010E2  6E2E               	movwf	vfpfcnvrt@cp^0,c
  1371   0010E4                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1373   0010E4  C02E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1374   0010E8                     	if	1	;There is more than 1 active tblptr byte
  1375   0010E8  0E0E               	movlw	high __smallconst
  1376   0010EA  6EF7               	movwf	tblptrh,c
  1377   0010EC                     	endif
  1378   0010EC                     	if	0	;tblptru may be non-zero
  1379   0010EC                     	endif
  1380   0010EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1381   0010EC  0E00               	movlw	low (__smallconst shr (0+16))
  1382   0010EE  6EF8               	movwf	tblptru,c
  1383   0010F0                     	endif
  1384   0010F0  0008               	tblrd		*
  1385   0010F2  50F5               	movf	tablat,w,c
  1386   0010F4  0A64               	xorlw	100
  1387   0010F6  B4D8               	btfsc	status,2,c
  1388   0010F8  EF80  F008         	goto	u1391
  1389   0010FC  EF82  F008         	goto	u1390
  1390   001100                     u1391:
  1391   001100  EF92  F008         	goto	l2059
  1392   001104                     u1390:
  1393   001104  C02E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1394   001108                     	if	1	;There is more than 1 active tblptr byte
  1395   001108  0E0E               	movlw	high __smallconst
  1396   00110A  6EF7               	movwf	tblptrh,c
  1397   00110C                     	endif
  1398   00110C                     	if	0	;tblptru may be non-zero
  1399   00110C                     	endif
  1400   00110C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1401   00110C  0E00               	movlw	low (__smallconst shr (0+16))
  1402   00110E  6EF8               	movwf	tblptru,c
  1403   001110                     	endif
  1404   001110  0008               	tblrd		*
  1405   001112  50F5               	movf	tablat,w,c
  1406   001114  0A69               	xorlw	105
  1407   001116  A4D8               	btfss	status,2,c
  1408   001118  EF90  F008         	goto	u1401
  1409   00111C  EF92  F008         	goto	u1400
  1410   001120                     u1401:
  1411   001120  EFAD  F008         	goto	l2067
  1412   001124                     u1400:
  1413   001124                     l2059:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1416   001124  5026               	movf	vfpfcnvrt@ap^0,w,c
  1417   001126  6ED9               	movwf	fsr2l,c
  1418   001128  6ADA               	clrf	fsr2h,c
  1419   00112A  0E02               	movlw	2
  1420   00112C  26DF               	addwf	indf2,f,c
  1421   00112E  5CDF               	subwf	indf2,w,c
  1422   001130  6ED9               	movwf	fsr2l,c
  1423   001132  6ADA               	clrf	fsr2h,c
  1424   001134  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg
  1425   001138  CFDE F02A          	movff	postinc2,vfpfcnvrt@convarg+1
  1426   00113C                     
  1427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1428   00113C  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1429   00113E  6ED9               	movwf	fsr2l,c
  1430   001140  6ADA               	clrf	fsr2h,c
  1431   001142  282E               	incf	vfpfcnvrt@cp^0,w,c
  1432   001144  6EDF               	movwf	indf2,c
  1433   001146                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1435   001146  C024  F019         	movff	vfpfcnvrt@fp,dtoa@fp
  1436   00114A  C029  F01A         	movff	vfpfcnvrt@convarg,dtoa@d
  1437   00114E  C02A  F01B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1438   001152  EC80  F009         	call	_dtoa	;wreg free
  1439   001156  EFC6  F008         	goto	l1035
  1440   00115A                     l2067:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1443   00115A  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1444   00115C  6ED9               	movwf	fsr2l,c
  1445   00115E  6ADA               	clrf	fsr2h,c
  1446   001160  2ADF               	incf	indf2,f,c
  1447   001162  EFC6  F008         	goto	l1035
  1448   001166                     l2071:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1451   001166  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1452   001168  6ED9               	movwf	fsr2l,c
  1453   00116A  6ADA               	clrf	fsr2h,c
  1454   00116C  CFDF FFF6          	movff	indf2,tblptrl
  1455   001170                     	if	1	;There is more than 1 active tblptr byte
  1456   001170  0E0E               	movlw	high __smallconst
  1457   001172  6EF7               	movwf	tblptrh,c
  1458   001174                     	endif
  1459   001174                     	if	0	;tblptru may be non-zero
  1460   001174                     	endif
  1461   001174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1462   001174  0E00               	movlw	low (__smallconst shr (0+16))
  1463   001176  6EF8               	movwf	tblptru,c
  1464   001178                     	endif
  1465   001178  0008               	tblrd		*
  1466   00117A  50F5               	movf	tablat,w,c
  1467   00117C  6E05               	movwf	fputc@c^0,c
  1468   00117E  6A06               	clrf	(fputc@c+1)^0,c
  1469   001180  C024  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1470   001184  ECA9  F00B         	call	_fputc	;wreg free
  1471   001188  EFAD  F008         	goto	l2067
  1472   00118C                     l1035:
  1473   00118C  0012               	return		;funcret
  1474   00118E                     __end_of_vfpfcnvrt:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _read_prec_or_width *****************
  1478 ;; Defined at:
  1479 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  fmt             1   10[COMRAM] PTR PTR const unsigned c
  1482 ;;		 -> vfprintf@cfmt(1), 
  1483 ;;  ap              1   11[COMRAM] PTR PTR void [1]
  1484 ;;		 -> sprintf@ap(1), 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  c               1   12[COMRAM] unsigned char 
  1487 ;;  n               2   13[COMRAM] int 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2   10[COMRAM] int 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;Total ram usage:        5 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 3
  1504 ;; This function calls:
  1505 ;;		___wmul
  1506 ;; This function is called by:
  1507 ;;		_vfpfcnvrt
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text5
  1512   0016A4                     __ptext5:
  1513                           	callstack 0
  1514   0016A4                     _read_prec_or_width:
  1515                           	callstack 23
  1516   0016A4                     
  1517                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1518   0016A4  0E00               	movlw	0
  1519   0016A6  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1520   0016A8  0E00               	movlw	0
  1521   0016AA  6E0E               	movwf	read_prec_or_width@n^0,c
  1522   0016AC                     
  1523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1524   0016AC  500B               	movf	read_prec_or_width@fmt^0,w,c
  1525   0016AE  6ED9               	movwf	fsr2l,c
  1526   0016B0  6ADA               	clrf	fsr2h,c
  1527   0016B2  CFDF FFF6          	movff	indf2,tblptrl
  1528   0016B6                     	if	1	;There is more than 1 active tblptr byte
  1529   0016B6  0E0E               	movlw	high __smallconst
  1530   0016B8  6EF7               	movwf	tblptrh,c
  1531   0016BA                     	endif
  1532   0016BA                     	if	0	;tblptru may be non-zero
  1533   0016BA                     	endif
  1534   0016BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1535   0016BA  0E00               	movlw	low (__smallconst shr (0+16))
  1536   0016BC  6EF8               	movwf	tblptru,c
  1537   0016BE                     	endif
  1538   0016BE  0008               	tblrd		*
  1539   0016C0  50F5               	movf	tablat,w,c
  1540   0016C2  0A2A               	xorlw	42
  1541   0016C4  A4D8               	btfss	status,2,c
  1542   0016C6  EF67  F00B         	goto	u1301
  1543   0016CA  EF69  F00B         	goto	u1300
  1544   0016CE                     u1301:
  1545   0016CE  EF8F  F00B         	goto	l2003
  1546   0016D2                     u1300:
  1547   0016D2                     
  1548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1549   0016D2  500B               	movf	read_prec_or_width@fmt^0,w,c
  1550   0016D4  6ED9               	movwf	fsr2l,c
  1551   0016D6  6ADA               	clrf	fsr2h,c
  1552   0016D8  2ADF               	incf	indf2,f,c
  1553   0016DA                     
  1554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1555   0016DA  500C               	movf	read_prec_or_width@ap^0,w,c
  1556   0016DC  6ED9               	movwf	fsr2l,c
  1557   0016DE  6ADA               	clrf	fsr2h,c
  1558   0016E0  0E02               	movlw	2
  1559   0016E2  26DF               	addwf	indf2,f,c
  1560   0016E4  5CDF               	subwf	indf2,w,c
  1561   0016E6  6ED9               	movwf	fsr2l,c
  1562   0016E8  6ADA               	clrf	fsr2h,c
  1563   0016EA  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1564   0016EE  CFDE F00F          	movff	postinc2,read_prec_or_width@n+1
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1567   0016F2  EFA4  F00B         	goto	l1016
  1568   0016F6                     l1999:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1571   0016F6  C00E  F005         	movff	read_prec_or_width@n,___wmul@multiplier
  1572   0016FA  C00F  F006         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1573   0016FE  0E00               	movlw	0
  1574   001700  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1575   001702  0E0A               	movlw	10
  1576   001704  6E07               	movwf	___wmul@multiplicand^0,c
  1577   001706  ECB5  F00E         	call	___wmul	;wreg free
  1578   00170A  500D               	movf	read_prec_or_width@c^0,w,c
  1579   00170C  2405               	addwf	?___wmul^0,w,c
  1580   00170E  6E0E               	movwf	read_prec_or_width@n^0,c
  1581   001710  0E00               	movlw	0
  1582   001712  2006               	addwfc	(?___wmul+1)^0,w,c
  1583   001714  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1584   001716                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1586   001716  500B               	movf	read_prec_or_width@fmt^0,w,c
  1587   001718  6ED9               	movwf	fsr2l,c
  1588   00171A  6ADA               	clrf	fsr2h,c
  1589   00171C  2ADF               	incf	indf2,f,c
  1590   00171E                     l2003:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1593   00171E  500B               	movf	read_prec_or_width@fmt^0,w,c
  1594   001720  6ED9               	movwf	fsr2l,c
  1595   001722  6ADA               	clrf	fsr2h,c
  1596   001724  CFDF FFF6          	movff	indf2,tblptrl
  1597   001728                     	if	1	;There is more than 1 active tblptr byte
  1598   001728  0E0E               	movlw	high __smallconst
  1599   00172A  6EF7               	movwf	tblptrh,c
  1600   00172C                     	endif
  1601   00172C                     	if	0	;tblptru may be non-zero
  1602   00172C                     	endif
  1603   00172C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1604   00172C  0E00               	movlw	low (__smallconst shr (0+16))
  1605   00172E  6EF8               	movwf	tblptru,c
  1606   001730                     	endif
  1607   001730  0008               	tblrd		*
  1608   001732  50F5               	movf	tablat,w,c
  1609   001734  0FD0               	addlw	208
  1610   001736  6E0D               	movwf	read_prec_or_width@c^0,c
  1611   001738  0E09               	movlw	9
  1612   00173A  640D               	cpfsgt	read_prec_or_width@c^0,c
  1613   00173C  EFA2  F00B         	goto	u1311
  1614   001740  EFA4  F00B         	goto	u1310
  1615   001744                     u1311:
  1616   001744  EF7B  F00B         	goto	l1999
  1617   001748                     u1310:
  1618   001748                     l1016:
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1621   001748  C00E  F00B         	movff	read_prec_or_width@n,?_read_prec_or_width
  1622   00174C  C00F  F00C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1623   001750  0012               	return		;funcret
  1624   001752                     __end_of_read_prec_or_width:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function ___wmul *****************
  1628 ;; Defined at:
  1629 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  multiplier      2    4[COMRAM] unsigned int 
  1632 ;;  multiplicand    2    6[COMRAM] unsigned int 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  product         2    8[COMRAM] unsigned int 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    4[COMRAM] unsigned int 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, prodl, prodh
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1648 ;;Total ram usage:        6 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 2
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_read_prec_or_width
  1655 ;;		_LED_Light_Meter
  1656 ;;		_ADC2String
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text6
  1661   001D6A                     __ptext6:
  1662                           	callstack 0
  1663   001D6A                     ___wmul:
  1664                           	callstack 23
  1665   001D6A  5005               	movf	___wmul@multiplier^0,w,c
  1666   001D6C  0207               	mulwf	___wmul@multiplicand^0,c
  1667   001D6E  CFF3 F009          	movff	prodl,___wmul@product
  1668   001D72  CFF4 F00A          	movff	prodh,___wmul@product+1
  1669   001D76  5005               	movf	___wmul@multiplier^0,w,c
  1670   001D78  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  1671   001D7A  50F3               	movf	243,w,c
  1672   001D7C  260A               	addwf	(___wmul@product+1)^0,f,c
  1673   001D7E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  1674   001D80  0207               	mulwf	___wmul@multiplicand^0,c
  1675   001D82  50F3               	movf	243,w,c
  1676   001D84  260A               	addwf	(___wmul@product+1)^0,f,c
  1677   001D86  C009  F005         	movff	___wmul@product,?___wmul
  1678   001D8A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  1679   001D8E  0012               	return		;funcret
  1680   001D90                     __end_of___wmul:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _dtoa *****************
  1684 ;; Defined at:
  1685 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1688 ;;		 -> sprintf@f(12), 
  1689 ;;  d               2   25[COMRAM] int 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  i               2   33[COMRAM] int 
  1692 ;;  w               2   30[COMRAM] int 
  1693 ;;  s               1   32[COMRAM] unsigned char 
  1694 ;;  p               1   29[COMRAM] _Bool 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1704 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1708 ;;Total ram usage:       11 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 6
  1711 ;; This function calls:
  1712 ;;		___awdiv
  1713 ;;		___awmod
  1714 ;;		_abs
  1715 ;;		_pad
  1716 ;; This function is called by:
  1717 ;;		_vfpfcnvrt
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text7
  1722   001300                     __ptext7:
  1723                           	callstack 0
  1724   001300                     _dtoa:
  1725                           	callstack 20
  1726   001300                     
  1727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1728   001300  0E01               	movlw	1
  1729   001302  6E1E               	movwf	dtoa@p^0,c
  1730   001304                     
  1731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1732   001304  BE1B               	btfsc	(dtoa@d+1)^0,7,c
  1733   001306  EF87  F009         	goto	u1201
  1734   00130A  EF8A  F009         	goto	u1200
  1735   00130E                     u1201:
  1736   00130E  0E01               	movlw	1
  1737   001310  EF8B  F009         	goto	u1210
  1738   001314                     u1200:
  1739   001314  0E00               	movlw	0
  1740   001316                     u1210:
  1741   001316  6E21               	movwf	dtoa@s^0,c
  1742   001318                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1744   001318  C055  F01F         	movff	_width,dtoa@w
  1745   00131C  C056  F020         	movff	_width+1,dtoa@w+1
  1746   001320                     
  1747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1748   001320  5021               	movf	dtoa@s^0,w,c
  1749   001322  B4D8               	btfsc	status,2,c
  1750   001324  EF96  F009         	goto	u1221
  1751   001328  EF98  F009         	goto	u1220
  1752   00132C                     u1221:
  1753   00132C  EFAF  F009         	goto	l999
  1754   001330                     u1220:
  1755   001330                     
  1756                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1757   001330  061F               	decf	dtoa@w^0,f,c
  1758   001332  A0D8               	btfss	status,0,c
  1759   001334  0620               	decf	(dtoa@w+1)^0,f,c
  1760   001336                     
  1761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1762   001336  5021               	movf	dtoa@s^0,w,c
  1763   001338  A4D8               	btfss	status,2,c
  1764   00133A  EFA1  F009         	goto	u1231
  1765   00133E  EFA3  F009         	goto	u1230
  1766   001342                     u1231:
  1767   001342  EFA9  F009         	goto	l1955
  1768   001346                     u1230:
  1769   001346  0E00               	movlw	0
  1770   001348  6E1D               	movwf	(_dtoa$1861+1)^0,c
  1771   00134A  0E2B               	movlw	43
  1772   00134C  6E1C               	movwf	_dtoa$1861^0,c
  1773   00134E  EFAD  F009         	goto	l1957
  1774   001352                     l1955:
  1775   001352  0E00               	movlw	0
  1776   001354  6E1D               	movwf	(_dtoa$1861+1)^0,c
  1777   001356  0E2D               	movlw	45
  1778   001358  6E1C               	movwf	_dtoa$1861^0,c
  1779   00135A                     l1957:
  1780   00135A  C01C  F021         	movff	_dtoa$1861,dtoa@s
  1781   00135E                     l999:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1784   00135E  0E00               	movlw	0
  1785   001360  6E23               	movwf	(dtoa@i+1)^0,c
  1786   001362  0E1F               	movlw	31
  1787   001364  6E22               	movwf	dtoa@i^0,c
  1788   001366                     
  1789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1790   001366  0E00               	movlw	0
  1791   001368  0100               	movlb	0	; () banked
  1792   00136A  6FA9               	movwf	(_dbuf+31)& (0+255),b
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1795   00136C  EFE5  F009         	goto	l1971
  1796   001370                     l1961:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1799   001370  0622               	decf	dtoa@i^0,f,c
  1800   001372  A0D8               	btfss	status,0,c
  1801   001374  0623               	decf	(dtoa@i+1)^0,f,c
  1802   001376                     
  1803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1804   001376  5022               	movf	dtoa@i^0,w,c
  1805   001378  0F8A               	addlw	low _dbuf
  1806   00137A  6ED9               	movwf	fsr2l,c
  1807   00137C  6ADA               	clrf	fsr2h,c
  1808   00137E  C01A  F005         	movff	dtoa@d,___awmod@dividend
  1809   001382  C01B  F006         	movff	dtoa@d+1,___awmod@dividend+1
  1810   001386  0E00               	movlw	0
  1811   001388  6E08               	movwf	(___awmod@divisor+1)^0,c
  1812   00138A  0E0A               	movlw	10
  1813   00138C  6E07               	movwf	___awmod@divisor^0,c
  1814   00138E  ECFA  F00A         	call	___awmod	;wreg free
  1815   001392  C005  F00B         	movff	?___awmod,abs@a
  1816   001396  C006  F00C         	movff	?___awmod+1,abs@a+1
  1817   00139A  EC57  F00E         	call	_abs	;wreg free
  1818   00139E  500B               	movf	?_abs^0,w,c
  1819   0013A0  0F30               	addlw	48
  1820   0013A2  6EDF               	movwf	indf2,c
  1821   0013A4                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1823   0013A4  0E00               	movlw	0
  1824   0013A6  6E1E               	movwf	dtoa@p^0,c
  1825   0013A8                     
  1826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1827   0013A8  061F               	decf	dtoa@w^0,f,c
  1828   0013AA  A0D8               	btfss	status,0,c
  1829   0013AC  0620               	decf	(dtoa@w+1)^0,f,c
  1830   0013AE                     
  1831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1832   0013AE  C01A  F005         	movff	dtoa@d,___awdiv@dividend
  1833   0013B2  C01B  F006         	movff	dtoa@d+1,___awdiv@dividend+1
  1834   0013B6  0E00               	movlw	0
  1835   0013B8  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1836   0013BA  0E0A               	movlw	10
  1837   0013BC  6E07               	movwf	___awdiv@divisor^0,c
  1838   0013BE  EC98  F00A         	call	___awdiv	;wreg free
  1839   0013C2  C005  F01A         	movff	?___awdiv,dtoa@d
  1840   0013C6  C006  F01B         	movff	?___awdiv+1,dtoa@d+1
  1841   0013CA                     l1971:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1844   0013CA  BE23               	btfsc	(dtoa@i+1)^0,7,c
  1845   0013CC  EFF0  F009         	goto	u1241
  1846   0013D0  5023               	movf	(dtoa@i+1)^0,w,c
  1847   0013D2  E108               	bnz	u1240
  1848   0013D4  0422               	decf	dtoa@i^0,w,c
  1849   0013D6  A0D8               	btfss	status,0,c
  1850   0013D8  EFF0  F009         	goto	u1241
  1851   0013DC  EFF2  F009         	goto	u1240
  1852   0013E0                     u1241:
  1853   0013E0  EF17  F00A         	goto	l1981
  1854   0013E4                     u1240:
  1855   0013E4  501A               	movf	dtoa@d^0,w,c
  1856   0013E6  101B               	iorwf	(dtoa@d+1)^0,w,c
  1857   0013E8  A4D8               	btfss	status,2,c
  1858   0013EA  EFF9  F009         	goto	u1251
  1859   0013EE  EFFB  F009         	goto	u1250
  1860   0013F2                     u1251:
  1861   0013F2  EFB8  F009         	goto	l1961
  1862   0013F6                     u1250:
  1863   0013F6  501E               	movf	dtoa@p^0,w,c
  1864   0013F8  A4D8               	btfss	status,2,c
  1865   0013FA  EF01  F00A         	goto	u1261
  1866   0013FE  EF03  F00A         	goto	u1260
  1867   001402                     u1261:
  1868   001402  EFB8  F009         	goto	l1961
  1869   001406                     u1260:
  1870   001406  BE20               	btfsc	(dtoa@w+1)^0,7,c
  1871   001408  EF0E  F00A         	goto	u1271
  1872   00140C  5020               	movf	(dtoa@w+1)^0,w,c
  1873   00140E  E108               	bnz	u1270
  1874   001410  041F               	decf	dtoa@w^0,w,c
  1875   001412  A0D8               	btfss	status,0,c
  1876   001414  EF0E  F00A         	goto	u1271
  1877   001418  EF10  F00A         	goto	u1270
  1878   00141C                     u1271:
  1879   00141C  EF17  F00A         	goto	l1981
  1880   001420                     u1270:
  1881   001420  B259               	btfsc	_flags^0,1,c
  1882   001422  EF15  F00A         	goto	u1281
  1883   001426  EF17  F00A         	goto	u1280
  1884   00142A                     u1281:
  1885   00142A  EFB8  F009         	goto	l1961
  1886   00142E                     u1280:
  1887   00142E                     l1981:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1890   00142E  5021               	movf	dtoa@s^0,w,c
  1891   001430  B4D8               	btfsc	status,2,c
  1892   001432  EF1D  F00A         	goto	u1291
  1893   001436  EF1F  F00A         	goto	u1290
  1894   00143A                     u1291:
  1895   00143A  EF28  F00A         	goto	l1987
  1896   00143E                     u1290:
  1897   00143E                     
  1898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1899   00143E  0622               	decf	dtoa@i^0,f,c
  1900   001440  A0D8               	btfss	status,0,c
  1901   001442  0623               	decf	(dtoa@i+1)^0,f,c
  1902   001444                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1904   001444  5022               	movf	dtoa@i^0,w,c
  1905   001446  0F8A               	addlw	low _dbuf
  1906   001448  6ED9               	movwf	fsr2l,c
  1907   00144A  6ADA               	clrf	fsr2h,c
  1908   00144C  C021  FFDF         	movff	dtoa@s,indf2
  1909   001450                     l1987:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1912   001450  C019  F012         	movff	dtoa@fp,pad@fp
  1913   001454  5022               	movf	dtoa@i^0,w,c
  1914   001456  0F8A               	addlw	low _dbuf
  1915   001458  6E13               	movwf	pad@buf^0,c
  1916   00145A  C01F  F014         	movff	dtoa@w,pad@p
  1917   00145E  C020  F015         	movff	dtoa@w+1,pad@p+1
  1918   001462  ECFE  F00B         	call	_pad	;wreg free
  1919   001466  0012               	return		;funcret
  1920   001468                     __end_of_dtoa:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _pad *****************
  1924 ;; Defined at:
  1925 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  fp              1   17[COMRAM] PTR struct _IO_FILE
  1928 ;;		 -> sprintf@f(12), 
  1929 ;;  buf             1   18[COMRAM] PTR unsigned char 
  1930 ;;		 -> dbuf(32), 
  1931 ;;  p               2   19[COMRAM] int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  i               2   22[COMRAM] int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;Total ram usage:        7 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 5
  1950 ;; This function calls:
  1951 ;;		_fputc
  1952 ;;		_fputs
  1953 ;; This function is called by:
  1954 ;;		_dtoa
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text8
  1959   0017FC                     __ptext8:
  1960                           	callstack 0
  1961   0017FC                     _pad:
  1962                           	callstack 20
  1963   0017FC                     
  1964                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1965   0017FC  A059               	btfss	_flags^0,0,c
  1966   0017FE  EF03  F00C         	goto	u1151
  1967   001802  EF05  F00C         	goto	u1150
  1968   001806                     u1151:
  1969   001806  EF0B  F00C         	goto	l1919
  1970   00180A                     u1150:
  1971   00180A                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1973   00180A  C013  F00D         	movff	pad@buf,fputs@s
  1974   00180E  C012  F00E         	movff	pad@fp,fputs@fp
  1975   001812  ECC6  F00D         	call	_fputs	;wreg free
  1976   001816                     l1919:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1979   001816  BE15               	btfsc	(pad@p+1)^0,7,c
  1980   001818  EF12  F00C         	goto	u1160
  1981   00181C  EF10  F00C         	goto	u1161
  1982   001820                     u1161:
  1983   001820  EF16  F00C         	goto	l991
  1984   001824                     u1160:
  1985   001824                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1987   001824  0E00               	movlw	0
  1988   001826  6E15               	movwf	(pad@p+1)^0,c
  1989   001828  0E00               	movlw	0
  1990   00182A  6E14               	movwf	pad@p^0,c
  1991   00182C                     l991:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1994   00182C  0E00               	movlw	0
  1995   00182E  6E18               	movwf	(pad@i+1)^0,c
  1996   001830  0E00               	movlw	0
  1997   001832  6E17               	movwf	pad@i^0,c
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2000   001834  EF26  F00C         	goto	l1927
  2001   001838                     l1923:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2004   001838  0E00               	movlw	0
  2005   00183A  6E06               	movwf	(fputc@c+1)^0,c
  2006   00183C  0E20               	movlw	32
  2007   00183E  6E05               	movwf	fputc@c^0,c
  2008   001840  C012  F007         	movff	pad@fp,fputc@fp
  2009   001844  ECA9  F00B         	call	_fputc	;wreg free
  2010   001848                     
  2011                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2012   001848  4A17               	infsnz	pad@i^0,f,c
  2013   00184A  2A18               	incf	(pad@i+1)^0,f,c
  2014   00184C                     l1927:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2017   00184C  5014               	movf	pad@p^0,w,c
  2018   00184E  5C17               	subwf	pad@i^0,w,c
  2019   001850  5018               	movf	(pad@i+1)^0,w,c
  2020   001852  0A80               	xorlw	128
  2021   001854  6E16               	movwf	??_pad^0,c
  2022   001856  5015               	movf	(pad@p+1)^0,w,c
  2023   001858  0A80               	xorlw	128
  2024   00185A  5816               	subwfb	??_pad^0,w,c
  2025   00185C  A0D8               	btfss	status,0,c
  2026   00185E  EF33  F00C         	goto	u1171
  2027   001862  EF35  F00C         	goto	u1170
  2028   001866                     u1171:
  2029   001866  EF1C  F00C         	goto	l1923
  2030   00186A                     u1170:
  2031   00186A                     
  2032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2033   00186A  B059               	btfsc	_flags^0,0,c
  2034   00186C  EF3A  F00C         	goto	u1181
  2035   001870  EF3C  F00C         	goto	u1180
  2036   001874                     u1181:
  2037   001874  EF42  F00C         	goto	l996
  2038   001878                     u1180:
  2039   001878                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2041   001878  C013  F00D         	movff	pad@buf,fputs@s
  2042   00187C  C012  F00E         	movff	pad@fp,fputs@fp
  2043   001880  ECC6  F00D         	call	_fputs	;wreg free
  2044   001884                     l996:
  2045   001884  0012               	return		;funcret
  2046   001886                     __end_of_pad:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _fputs *****************
  2050 ;; Defined at:
  2051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  s               1   12[COMRAM] PTR const unsigned char 
  2054 ;;		 -> dbuf(32), 
  2055 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2056 ;;		 -> sprintf@f(12), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  i               2   15[COMRAM] int 
  2059 ;;  c               1   14[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2   12[COMRAM] int 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;Total ram usage:        5 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 4
  2076 ;; This function calls:
  2077 ;;		_fputc
  2078 ;; This function is called by:
  2079 ;;		_pad
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text9
  2084   001B8C                     __ptext9:
  2085                           	callstack 0
  2086   001B8C                     _fputs:
  2087                           	callstack 20
  2088   001B8C  0E00               	movlw	0
  2089   001B8E  6E11               	movwf	(fputs@i+1)^0,c
  2090   001B90  0E00               	movlw	0
  2091   001B92  6E10               	movwf	fputs@i^0,c
  2092   001B94  EFD5  F00D         	goto	l1827
  2093   001B98                     l1823:
  2094   001B98  C00F  F005         	movff	fputs@c,fputc@c
  2095   001B9C  6A06               	clrf	(fputc@c+1)^0,c
  2096   001B9E  C00E  F007         	movff	fputs@fp,fputc@fp
  2097   001BA2  ECA9  F00B         	call	_fputc	;wreg free
  2098   001BA6  4A10               	infsnz	fputs@i^0,f,c
  2099   001BA8  2A11               	incf	(fputs@i+1)^0,f,c
  2100   001BAA                     l1827:
  2101   001BAA  500D               	movf	fputs@s^0,w,c
  2102   001BAC  2410               	addwf	fputs@i^0,w,c
  2103   001BAE  6ED9               	movwf	fsr2l,c
  2104   001BB0  6ADA               	clrf	fsr2h,c
  2105   001BB2  50DF               	movf	indf2,w,c
  2106   001BB4  6E0F               	movwf	fputs@c^0,c
  2107   001BB6  500F               	movf	fputs@c^0,w,c
  2108   001BB8  A4D8               	btfss	status,2,c
  2109   001BBA  EFE1  F00D         	goto	u1021
  2110   001BBE  EFE3  F00D         	goto	u1020
  2111   001BC2                     u1021:
  2112   001BC2  EFCC  F00D         	goto	l1823
  2113   001BC6                     u1020:
  2114   001BC6  0012               	return		;funcret
  2115   001BC8                     __end_of_fputs:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _fputc *****************
  2119 ;; Defined at:
  2120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  c               2    4[COMRAM] int 
  2123 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  2124 ;;		 -> sprintf@f(12), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    4[COMRAM] int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2136 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;Total ram usage:        8 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 3
  2143 ;; This function calls:
  2144 ;;		_putch
  2145 ;; This function is called by:
  2146 ;;		_pad
  2147 ;;		_vfpfcnvrt
  2148 ;;		_fputs
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text10
  2153   001752                     __ptext10:
  2154                           	callstack 0
  2155   001752                     _fputc:
  2156                           	callstack 23
  2157   001752  5007               	movf	fputc@fp^0,w,c
  2158   001754  B4D8               	btfsc	status,2,c
  2159   001756  EFAF  F00B         	goto	u981
  2160   00175A  EFB1  F00B         	goto	u980
  2161   00175E                     u981:
  2162   00175E  EFB9  F00B         	goto	l1811
  2163   001762                     u980:
  2164   001762  5007               	movf	fputc@fp^0,w,c
  2165   001764  A4D8               	btfss	status,2,c
  2166   001766  EFB7  F00B         	goto	u991
  2167   00176A  EFB9  F00B         	goto	u990
  2168   00176E                     u991:
  2169   00176E  EFBE  F00B         	goto	l1813
  2170   001772                     u990:
  2171   001772                     l1811:
  2172   001772  5005               	movf	fputc@c^0,w,c
  2173   001774  EC17  F00F         	call	_putch
  2174   001778  EFFD  F00B         	goto	l1060
  2175   00177C                     l1813:
  2176   00177C  5007               	movf	fputc@fp^0,w,c
  2177   00177E  6ED9               	movwf	fsr2l,c
  2178   001780  6ADA               	clrf	fsr2h,c
  2179   001782  0E0A               	movlw	10
  2180   001784  26D9               	addwf	fsr2l,f,c
  2181   001786  50DE               	movf	postinc2,w,c
  2182   001788  10DE               	iorwf	postinc2,w,c
  2183   00178A  B4D8               	btfsc	status,2,c
  2184   00178C  EFCA  F00B         	goto	u1001
  2185   001790  EFCC  F00B         	goto	u1000
  2186   001794                     u1001:
  2187   001794  EFE5  F00B         	goto	l1817
  2188   001798                     u1000:
  2189   001798  5007               	movf	fputc@fp^0,w,c
  2190   00179A  6ED9               	movwf	fsr2l,c
  2191   00179C  6ADA               	clrf	fsr2h,c
  2192   00179E  0E0A               	movlw	10
  2193   0017A0  26D9               	addwf	fsr2l,f,c
  2194   0017A2  5007               	movf	fputc@fp^0,w,c
  2195   0017A4  6EE1               	movwf	fsr1l,c
  2196   0017A6  6AE2               	clrf	fsr1h,c
  2197   0017A8  0E03               	movlw	3
  2198   0017AA  26E1               	addwf	fsr1l,f,c
  2199   0017AC  50DE               	movf	postinc2,w,c
  2200   0017AE  5CE6               	subwf	postinc1,w,c
  2201   0017B0  50E6               	movf	postinc1,w,c
  2202   0017B2  0A80               	xorlw	128
  2203   0017B4  6E0C               	movwf	(??_fputc+4)^0,c
  2204   0017B6  50DE               	movf	postinc2,w,c
  2205   0017B8  0A80               	xorlw	128
  2206   0017BA  580C               	subwfb	(??_fputc+4)^0,w,c
  2207   0017BC  B0D8               	btfsc	status,0,c
  2208   0017BE  EFE3  F00B         	goto	u1011
  2209   0017C2  EFE5  F00B         	goto	u1010
  2210   0017C6                     u1011:
  2211   0017C6  EFFD  F00B         	goto	l1060
  2212   0017CA                     u1010:
  2213   0017CA                     l1817:
  2214   0017CA  5007               	movf	fputc@fp^0,w,c
  2215   0017CC  6ED9               	movwf	fsr2l,c
  2216   0017CE  6ADA               	clrf	fsr2h,c
  2217   0017D0  0E03               	movlw	3
  2218   0017D2  26D9               	addwf	fsr2l,f,c
  2219   0017D4  50DF               	movf	indf2,w,c
  2220   0017D6  6E08               	movwf	??_fputc^0,c
  2221   0017D8  5007               	movf	fputc@fp^0,w,c
  2222   0017DA  6ED9               	movwf	fsr2l,c
  2223   0017DC  6ADA               	clrf	fsr2h,c
  2224   0017DE  50DF               	movf	indf2,w,c
  2225   0017E0  2408               	addwf	??_fputc^0,w,c
  2226   0017E2  6ED9               	movwf	fsr2l,c
  2227   0017E4  6ADA               	clrf	fsr2h,c
  2228   0017E6  C005  FFDF         	movff	fputc@c,indf2
  2229   0017EA  5007               	movf	fputc@fp^0,w,c
  2230   0017EC  6ED9               	movwf	fsr2l,c
  2231   0017EE  6ADA               	clrf	fsr2h,c
  2232   0017F0  0E03               	movlw	3
  2233   0017F2  26D9               	addwf	fsr2l,f,c
  2234   0017F4  2ADE               	incf	postinc2,f,c
  2235   0017F6  0E00               	movlw	0
  2236   0017F8  22DD               	addwfc	postdec2,f,c
  2237   0017FA                     l1060:
  2238   0017FA  0012               	return		;funcret
  2239   0017FC                     __end_of_fputc:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _putch *****************
  2243 ;; Defined at:
  2244 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  c               1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  c               1    0[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 2
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_fputc
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text11
  2273   001E2E                     __ptext11:
  2274                           	callstack 0
  2275   001E2E                     _putch:
  2276                           	callstack 23
  2277   001E2E  0012               	return		;funcret
  2278   001E30                     __end_of_putch:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _abs *****************
  2282 ;; Defined at:
  2283 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  a               2   10[COMRAM] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  2   10[COMRAM] int 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 2
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_dtoa
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text12
  2312   001CAE                     __ptext12:
  2313                           	callstack 0
  2314   001CAE                     _abs:
  2315                           	callstack 23
  2316   001CAE  BE0C               	btfsc	(abs@a+1)^0,7,c
  2317   001CB0  EF5C  F00E         	goto	u1191
  2318   001CB4  EF5E  F00E         	goto	u1190
  2319   001CB8                     u1191:
  2320   001CB8  EF64  F00E         	goto	l1045
  2321   001CBC                     u1190:
  2322   001CBC  C00B  F00B         	movff	abs@a,?_abs
  2323   001CC0  C00C  F00C         	movff	abs@a+1,?_abs+1
  2324   001CC4  EF70  F00E         	goto	l1048
  2325   001CC8                     l1045:
  2326   001CC8  C00B  F00D         	movff	abs@a,??_abs
  2327   001CCC  C00C  F00E         	movff	abs@a+1,??_abs+1
  2328   001CD0  1E0D               	comf	??_abs^0,f,c
  2329   001CD2  1E0E               	comf	(??_abs+1)^0,f,c
  2330   001CD4  4A0D               	infsnz	??_abs^0,f,c
  2331   001CD6  2A0E               	incf	(??_abs+1)^0,f,c
  2332   001CD8  C00D  F00B         	movff	??_abs,?_abs
  2333   001CDC  C00E  F00C         	movff	??_abs+1,?_abs+1
  2334   001CE0                     l1048:
  2335   001CE0  0012               	return		;funcret
  2336   001CE2                     __end_of_abs:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function ___awmod *****************
  2340 ;; Defined at:
  2341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  dividend        2    4[COMRAM] int 
  2344 ;;  divisor         2    6[COMRAM] int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  sign            1    9[COMRAM] unsigned char 
  2347 ;;  counter         1    8[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2    4[COMRAM] int 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;Total ram usage:        6 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 2
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_dtoa
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text13
  2372   0015F4                     __ptext13:
  2373                           	callstack 0
  2374   0015F4                     ___awmod:
  2375                           	callstack 23
  2376   0015F4  0E00               	movlw	0
  2377   0015F6  6E0A               	movwf	___awmod@sign^0,c
  2378   0015F8  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  2379   0015FA  EF03  F00B         	goto	u1090
  2380   0015FE  EF01  F00B         	goto	u1091
  2381   001602                     u1091:
  2382   001602  EF09  F00B         	goto	l1887
  2383   001606                     u1090:
  2384   001606  6C05               	negf	___awmod@dividend^0,c
  2385   001608  1E06               	comf	(___awmod@dividend+1)^0,f,c
  2386   00160A  B0D8               	btfsc	status,0,c
  2387   00160C  2A06               	incf	(___awmod@dividend+1)^0,f,c
  2388   00160E  0E01               	movlw	1
  2389   001610  6E0A               	movwf	___awmod@sign^0,c
  2390   001612                     l1887:
  2391   001612  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  2392   001614  EF10  F00B         	goto	u1100
  2393   001618  EF0E  F00B         	goto	u1101
  2394   00161C                     u1101:
  2395   00161C  EF14  F00B         	goto	l1891
  2396   001620                     u1100:
  2397   001620  6C07               	negf	___awmod@divisor^0,c
  2398   001622  1E08               	comf	(___awmod@divisor+1)^0,f,c
  2399   001624  B0D8               	btfsc	status,0,c
  2400   001626  2A08               	incf	(___awmod@divisor+1)^0,f,c
  2401   001628                     l1891:
  2402   001628  5007               	movf	___awmod@divisor^0,w,c
  2403   00162A  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  2404   00162C  B4D8               	btfsc	status,2,c
  2405   00162E  EF1B  F00B         	goto	u1111
  2406   001632  EF1D  F00B         	goto	u1110
  2407   001636                     u1111:
  2408   001636  EF41  F00B         	goto	l1907
  2409   00163A                     u1110:
  2410   00163A  0E01               	movlw	1
  2411   00163C  6E09               	movwf	___awmod@counter^0,c
  2412   00163E  EF25  F00B         	goto	l1897
  2413   001642                     l1895:
  2414   001642  90D8               	bcf	status,0,c
  2415   001644  3607               	rlcf	___awmod@divisor^0,f,c
  2416   001646  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  2417   001648  2A09               	incf	___awmod@counter^0,f,c
  2418   00164A                     l1897:
  2419   00164A  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  2420   00164C  EF2A  F00B         	goto	u1121
  2421   001650  EF2C  F00B         	goto	u1120
  2422   001654                     u1121:
  2423   001654  EF21  F00B         	goto	l1895
  2424   001658                     u1120:
  2425   001658                     l1899:
  2426   001658  5007               	movf	___awmod@divisor^0,w,c
  2427   00165A  5C05               	subwf	___awmod@dividend^0,w,c
  2428   00165C  5008               	movf	(___awmod@divisor+1)^0,w,c
  2429   00165E  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  2430   001660  A0D8               	btfss	status,0,c
  2431   001662  EF35  F00B         	goto	u1131
  2432   001666  EF37  F00B         	goto	u1130
  2433   00166A                     u1131:
  2434   00166A  EF3B  F00B         	goto	l1903
  2435   00166E                     u1130:
  2436   00166E  5007               	movf	___awmod@divisor^0,w,c
  2437   001670  5E05               	subwf	___awmod@dividend^0,f,c
  2438   001672  5008               	movf	(___awmod@divisor+1)^0,w,c
  2439   001674  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  2440   001676                     l1903:
  2441   001676  90D8               	bcf	status,0,c
  2442   001678  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  2443   00167A  3207               	rrcf	___awmod@divisor^0,f,c
  2444   00167C  2E09               	decfsz	___awmod@counter^0,f,c
  2445   00167E  EF2C  F00B         	goto	l1899
  2446   001682                     l1907:
  2447   001682  500A               	movf	___awmod@sign^0,w,c
  2448   001684  B4D8               	btfsc	status,2,c
  2449   001686  EF47  F00B         	goto	u1141
  2450   00168A  EF49  F00B         	goto	u1140
  2451   00168E                     u1141:
  2452   00168E  EF4D  F00B         	goto	l1911
  2453   001692                     u1140:
  2454   001692  6C05               	negf	___awmod@dividend^0,c
  2455   001694  1E06               	comf	(___awmod@dividend+1)^0,f,c
  2456   001696  B0D8               	btfsc	status,0,c
  2457   001698  2A06               	incf	(___awmod@dividend+1)^0,f,c
  2458   00169A                     l1911:
  2459   00169A  C005  F005         	movff	___awmod@dividend,?___awmod
  2460   00169E  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  2461   0016A2  0012               	return		;funcret
  2462   0016A4                     __end_of___awmod:
  2463                           	callstack 0
  2464                           
  2465 ;; *************** function ___awdiv *****************
  2466 ;; Defined at:
  2467 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  dividend        2    4[COMRAM] int 
  2470 ;;  divisor         2    6[COMRAM] int 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  quotient        2   10[COMRAM] int 
  2473 ;;  sign            1    9[COMRAM] unsigned char 
  2474 ;;  counter         1    8[COMRAM] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2    4[COMRAM] int 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;Total ram usage:        8 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 2
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_dtoa
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text14
  2499   001530                     __ptext14:
  2500                           	callstack 0
  2501   001530                     ___awdiv:
  2502                           	callstack 23
  2503   001530  0E00               	movlw	0
  2504   001532  6E0A               	movwf	___awdiv@sign^0,c
  2505   001534  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  2506   001536  EFA1  F00A         	goto	u1030
  2507   00153A  EF9F  F00A         	goto	u1031
  2508   00153E                     u1031:
  2509   00153E  EFA7  F00A         	goto	l1843
  2510   001542                     u1030:
  2511   001542  6C07               	negf	___awdiv@divisor^0,c
  2512   001544  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  2513   001546  B0D8               	btfsc	status,0,c
  2514   001548  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  2515   00154A  0E01               	movlw	1
  2516   00154C  6E0A               	movwf	___awdiv@sign^0,c
  2517   00154E                     l1843:
  2518   00154E  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  2519   001550  EFAE  F00A         	goto	u1040
  2520   001554  EFAC  F00A         	goto	u1041
  2521   001558                     u1041:
  2522   001558  EFB4  F00A         	goto	l1849
  2523   00155C                     u1040:
  2524   00155C  6C05               	negf	___awdiv@dividend^0,c
  2525   00155E  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  2526   001560  B0D8               	btfsc	status,0,c
  2527   001562  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  2528   001564  0E01               	movlw	1
  2529   001566  1A0A               	xorwf	___awdiv@sign^0,f,c
  2530   001568                     l1849:
  2531   001568  0E00               	movlw	0
  2532   00156A  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  2533   00156C  0E00               	movlw	0
  2534   00156E  6E0B               	movwf	___awdiv@quotient^0,c
  2535   001570  5007               	movf	___awdiv@divisor^0,w,c
  2536   001572  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  2537   001574  B4D8               	btfsc	status,2,c
  2538   001576  EFBF  F00A         	goto	u1051
  2539   00157A  EFC1  F00A         	goto	u1050
  2540   00157E                     u1051:
  2541   00157E  EFE9  F00A         	goto	l1871
  2542   001582                     u1050:
  2543   001582  0E01               	movlw	1
  2544   001584  6E09               	movwf	___awdiv@counter^0,c
  2545   001586  EFC9  F00A         	goto	l1857
  2546   00158A                     l1855:
  2547   00158A  90D8               	bcf	status,0,c
  2548   00158C  3607               	rlcf	___awdiv@divisor^0,f,c
  2549   00158E  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  2550   001590  2A09               	incf	___awdiv@counter^0,f,c
  2551   001592                     l1857:
  2552   001592  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  2553   001594  EFCE  F00A         	goto	u1061
  2554   001598  EFD0  F00A         	goto	u1060
  2555   00159C                     u1061:
  2556   00159C  EFC5  F00A         	goto	l1855
  2557   0015A0                     u1060:
  2558   0015A0                     l1859:
  2559   0015A0  90D8               	bcf	status,0,c
  2560   0015A2  360B               	rlcf	___awdiv@quotient^0,f,c
  2561   0015A4  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  2562   0015A6  5007               	movf	___awdiv@divisor^0,w,c
  2563   0015A8  5C05               	subwf	___awdiv@dividend^0,w,c
  2564   0015AA  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2565   0015AC  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  2566   0015AE  A0D8               	btfss	status,0,c
  2567   0015B0  EFDC  F00A         	goto	u1071
  2568   0015B4  EFDE  F00A         	goto	u1070
  2569   0015B8                     u1071:
  2570   0015B8  EFE3  F00A         	goto	l1867
  2571   0015BC                     u1070:
  2572   0015BC  5007               	movf	___awdiv@divisor^0,w,c
  2573   0015BE  5E05               	subwf	___awdiv@dividend^0,f,c
  2574   0015C0  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2575   0015C2  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  2576   0015C4  800B               	bsf	___awdiv@quotient^0,0,c
  2577   0015C6                     l1867:
  2578   0015C6  90D8               	bcf	status,0,c
  2579   0015C8  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  2580   0015CA  3207               	rrcf	___awdiv@divisor^0,f,c
  2581   0015CC  2E09               	decfsz	___awdiv@counter^0,f,c
  2582   0015CE  EFD0  F00A         	goto	l1859
  2583   0015D2                     l1871:
  2584   0015D2  500A               	movf	___awdiv@sign^0,w,c
  2585   0015D4  B4D8               	btfsc	status,2,c
  2586   0015D6  EFEF  F00A         	goto	u1081
  2587   0015DA  EFF1  F00A         	goto	u1080
  2588   0015DE                     u1081:
  2589   0015DE  EFF5  F00A         	goto	l1875
  2590   0015E2                     u1080:
  2591   0015E2  6C0B               	negf	___awdiv@quotient^0,c
  2592   0015E4  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2593   0015E6  B0D8               	btfsc	status,0,c
  2594   0015E8  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2595   0015EA                     l1875:
  2596   0015EA  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2597   0015EE  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2598   0015F2  0012               	return		;funcret
  2599   0015F4                     __end_of___awdiv:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _LCD_sendstring *****************
  2603 ;; Defined at:
  2604 ;;		line 117 in file "LCD.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  string          1    9[COMRAM] PTR unsigned char 
  2607 ;;		 -> main@buf(32), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2619 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;Total ram usage:        1 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 5
  2626 ;; This function calls:
  2627 ;;		_LCD_sendbyte
  2628 ;; This function is called by:
  2629 ;;		_time2String
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text15
  2634   001CE2                     __ptext15:
  2635                           	callstack 0
  2636   001CE2                     _LCD_sendstring:
  2637                           	callstack 24
  2638   001CE2                     
  2639                           ;LCD.c: 117: void LCD_sendstring(char *string);LCD.c: 118: {;LCD.c: 120:     while(*stri
      +                          ng != 0){
  2640   001CE2  EF7C  F00E         	goto	l2145
  2641   001CE6                     l2141:
  2642                           
  2643                           ;LCD.c: 121:   LCD_sendbyte(*string++,1);
  2644   001CE6  0E01               	movlw	1
  2645   001CE8  6E06               	movwf	LCD_sendbyte@type^0,c
  2646   001CEA  500A               	movf	LCD_sendstring@string^0,w,c
  2647   001CEC  6ED9               	movwf	fsr2l,c
  2648   001CEE  6ADA               	clrf	fsr2h,c
  2649   001CF0  50DF               	movf	indf2,w,c
  2650   001CF2  ECE4  F00D         	call	_LCD_sendbyte
  2651   001CF6  2A0A               	incf	LCD_sendstring@string^0,f,c
  2652   001CF8                     l2145:
  2653                           
  2654                           ;LCD.c: 120:     while(*string != 0){
  2655   001CF8  500A               	movf	LCD_sendstring@string^0,w,c
  2656   001CFA  6ED9               	movwf	fsr2l,c
  2657   001CFC  6ADA               	clrf	fsr2h,c
  2658   001CFE  50DF               	movf	indf2,w,c
  2659   001D00  A4D8               	btfss	status,2,c
  2660   001D02  EF85  F00E         	goto	u1491
  2661   001D06  EF87  F00E         	goto	u1490
  2662   001D0A                     u1491:
  2663   001D0A  EF73  F00E         	goto	l2141
  2664   001D0E                     u1490:
  2665   001D0E  0012               	return		;funcret
  2666   001D10                     __end_of_LCD_sendstring:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _lastSunday *****************
  2670 ;; Defined at:
  2671 ;;		line 10 in file "functions.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  year            2   21[COMRAM] unsigned int 
  2674 ;;  month           2   23[COMRAM] unsigned int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  dayOfYearFor    2   45[COMRAM] unsigned int 
  2677 ;;  daysBeforeOc    2   43[COMRAM] unsigned int 
  2678 ;;  dayOfYearFor    2   41[COMRAM] unsigned int 
  2679 ;;  daysBeforeMa    2   39[COMRAM] unsigned int 
  2680 ;;  lastSundayDa    2   55[COMRAM] unsigned int 
  2681 ;;  leapYear        2   53[COMRAM] unsigned int 
  2682 ;;  dayOfWeekMon    2   37[COMRAM] unsigned int 
  2683 ;;  dayOfWeekMon    2   35[COMRAM] unsigned int 
  2684 ;;  h               2   33[COMRAM] unsigned int 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2   21[COMRAM] unsigned int 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;Total ram usage:       36 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 4
  2701 ;; This function calls:
  2702 ;;		___lwdiv
  2703 ;;		___lwmod
  2704 ;;		_isLeapYear
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text16
  2711   000E2C                     __ptext16:
  2712                           	callstack 0
  2713   000E2C                     _lastSunday:
  2714                           	callstack 26
  2715   000E2C                     
  2716                           ;functions.c: 11:     unsigned int leapYear = isLeapYear(year);
  2717   000E2C  C016  F011         	movff	lastSunday@year,isLeapYear@year
  2718   000E30  C017  F012         	movff	lastSunday@year+1,isLeapYear@year+1
  2719   000E34  ECC8  F00C         	call	_isLeapYear	;wreg free
  2720   000E38  C011  F036         	movff	?_isLeapYear,lastSunday@leapYear
  2721   000E3C  C012  F037         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  2722                           
  2723                           ;functions.c: 15:     unsigned int h = (1 + ((13 * (3 + 1)) / 5) + (year % 100) + ((year
      +                           % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  2724   000E40  0E00               	movlw	0
  2725   000E42  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2726   000E44  0E64               	movlw	100
  2727   000E46  6E0E               	movwf	___lwmod@divisor^0,c
  2728   000E48  C016  F00C         	movff	lastSunday@year,___lwmod@dividend
  2729   000E4C  C017  F00D         	movff	lastSunday@year+1,___lwmod@dividend+1
  2730   000E50  EC73  F00D         	call	___lwmod	;wreg free
  2731   000E54  C00C  F01A         	movff	?___lwmod,??_lastSunday
  2732   000E58  C00D  F01B         	movff	?___lwmod+1,??_lastSunday+1
  2733   000E5C  0E00               	movlw	0
  2734   000E5E  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2735   000E60  0E64               	movlw	100
  2736   000E62  6E0E               	movwf	___lwmod@divisor^0,c
  2737   000E64  C016  F00C         	movff	lastSunday@year,___lwmod@dividend
  2738   000E68  C017  F00D         	movff	lastSunday@year+1,___lwmod@dividend+1
  2739   000E6C  EC73  F00D         	call	___lwmod	;wreg free
  2740   000E70  90D8               	bcf	status,0,c
  2741   000E72  320D               	rrcf	(?___lwmod+1)^0,f,c
  2742   000E74  320C               	rrcf	?___lwmod^0,f,c
  2743   000E76  90D8               	bcf	status,0,c
  2744   000E78  320D               	rrcf	(?___lwmod+1)^0,f,c
  2745   000E7A  320C               	rrcf	?___lwmod^0,f,c
  2746   000E7C  500C               	movf	?___lwmod^0,w,c
  2747   000E7E  241A               	addwf	??_lastSunday^0,w,c
  2748   000E80  6E1C               	movwf	(??_lastSunday+2)^0,c
  2749   000E82  500D               	movf	(?___lwmod+1)^0,w,c
  2750   000E84  201B               	addwfc	(??_lastSunday+1)^0,w,c
  2751   000E86  6E1D               	movwf	(??_lastSunday+3)^0,c
  2752   000E88  0E00               	movlw	0
  2753   000E8A  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  2754   000E8C  0E64               	movlw	100
  2755   000E8E  6E07               	movwf	___lwdiv@divisor^0,c
  2756   000E90  C016  F005         	movff	lastSunday@year,___lwdiv@dividend
  2757   000E94  C017  F006         	movff	lastSunday@year+1,___lwdiv@dividend+1
  2758   000E98  EC05  F00D         	call	___lwdiv	;wreg free
  2759   000E9C  90D8               	bcf	status,0,c
  2760   000E9E  3206               	rrcf	(?___lwdiv+1)^0,f,c
  2761   000EA0  3205               	rrcf	?___lwdiv^0,f,c
  2762   000EA2  90D8               	bcf	status,0,c
  2763   000EA4  3206               	rrcf	(?___lwdiv+1)^0,f,c
  2764   000EA6  3205               	rrcf	?___lwdiv^0,f,c
  2765   000EA8  5005               	movf	?___lwdiv^0,w,c
  2766   000EAA  241C               	addwf	(??_lastSunday+2)^0,w,c
  2767   000EAC  6E1E               	movwf	(??_lastSunday+4)^0,c
  2768   000EAE  5006               	movf	(?___lwdiv+1)^0,w,c
  2769   000EB0  201D               	addwfc	(??_lastSunday+3)^0,w,c
  2770   000EB2  6E1F               	movwf	(??_lastSunday+5)^0,c
  2771   000EB4  0E00               	movlw	0
  2772   000EB6  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  2773   000EB8  0E64               	movlw	100
  2774   000EBA  6E07               	movwf	___lwdiv@divisor^0,c
  2775   000EBC  C016  F005         	movff	lastSunday@year,___lwdiv@dividend
  2776   000EC0  C017  F006         	movff	lastSunday@year+1,___lwdiv@dividend+1
  2777   000EC4  EC05  F00D         	call	___lwdiv	;wreg free
  2778   000EC8  90D8               	bcf	status,0,c
  2779   000ECA  3605               	rlcf	?___lwdiv^0,f,c
  2780   000ECC  3606               	rlcf	(?___lwdiv+1)^0,f,c
  2781   000ECE  5005               	movf	?___lwdiv^0,w,c
  2782   000ED0  5C1E               	subwf	(??_lastSunday+4)^0,w,c
  2783   000ED2  6E20               	movwf	(??_lastSunday+6)^0,c
  2784   000ED4  5006               	movf	(?___lwdiv+1)^0,w,c
  2785   000ED6  581F               	subwfb	(??_lastSunday+5)^0,w,c
  2786   000ED8  6E21               	movwf	(??_lastSunday+7)^0,c
  2787   000EDA  0E0B               	movlw	11
  2788   000EDC  2420               	addwf	(??_lastSunday+6)^0,w,c
  2789   000EDE  6E30               	movwf	_lastSunday$2147^0,c
  2790   000EE0  0E00               	movlw	0
  2791   000EE2  2021               	addwfc	(??_lastSunday+7)^0,w,c
  2792   000EE4  6E31               	movwf	(_lastSunday$2147+1)^0,c
  2793                           
  2794                           ;functions.c: 15:     unsigned int h = (1 + ((13 * (3 + 1)) / 5) + (year % 100) + ((year
      +                           % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  2795   000EE6  C030  F00C         	movff	_lastSunday$2147,___lwmod@dividend
  2796   000EEA  C031  F00D         	movff	_lastSunday$2147+1,___lwmod@dividend+1
  2797   000EEE  0E00               	movlw	0
  2798   000EF0  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2799   000EF2  0E07               	movlw	7
  2800   000EF4  6E0E               	movwf	___lwmod@divisor^0,c
  2801   000EF6  EC73  F00D         	call	___lwmod	;wreg free
  2802   000EFA  C00C  F022         	movff	?___lwmod,lastSunday@h
  2803   000EFE  C00D  F023         	movff	?___lwmod+1,lastSunday@h+1
  2804                           
  2805                           ;functions.c: 16:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  2806   000F02  0E06               	movlw	6
  2807   000F04  2422               	addwf	lastSunday@h^0,w,c
  2808   000F06  6E0C               	movwf	___lwmod@dividend^0,c
  2809   000F08  0E00               	movlw	0
  2810   000F0A  2023               	addwfc	(lastSunday@h+1)^0,w,c
  2811   000F0C  6E0D               	movwf	(___lwmod@dividend+1)^0,c
  2812   000F0E  0E00               	movlw	0
  2813   000F10  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2814   000F12  0E07               	movlw	7
  2815   000F14  6E0E               	movwf	___lwmod@divisor^0,c
  2816   000F16  EC73  F00D         	call	___lwmod	;wreg free
  2817   000F1A  C00C  F024         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  2818   000F1E  C00D  F025         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  2819                           
  2820                           ;functions.c: 19:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  2821   000F22  0E1E               	movlw	30
  2822   000F24  2424               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  2823   000F26  6E0C               	movwf	___lwmod@dividend^0,c
  2824   000F28  0E00               	movlw	0
  2825   000F2A  2025               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  2826   000F2C  6E0D               	movwf	(___lwmod@dividend+1)^0,c
  2827   000F2E  0E00               	movlw	0
  2828   000F30  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  2829   000F32  0E07               	movlw	7
  2830   000F34  6E0E               	movwf	___lwmod@divisor^0,c
  2831   000F36  EC73  F00D         	call	___lwmod	;wreg free
  2832   000F3A  C00C  F026         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  2833   000F3E  C00D  F027         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  2834   000F42                     
  2835                           ;functions.c: 22:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  2836   000F42  5026               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  2837   000F44  081F               	sublw	31
  2838   000F46  6E38               	movwf	lastSunday@lastSundayDateMonth^0,c
  2839   000F48  5027               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  2840   000F4A  A0D8               	btfss	status,0,c
  2841   000F4C  2AE8               	incf	wreg,f,c
  2842   000F4E  0800               	sublw	0
  2843   000F50  6E39               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  2844   000F52                     
  2845                           ;functions.c: 25:     if (month == 3){
  2846   000F52  0E03               	movlw	3
  2847   000F54  1818               	xorwf	lastSunday@month^0,w,c
  2848   000F56  1019               	iorwf	(lastSunday@month+1)^0,w,c
  2849   000F58  A4D8               	btfss	status,2,c
  2850   000F5A  EFB1  F007         	goto	u1651
  2851   000F5E  EFB3  F007         	goto	u1650
  2852   000F62                     u1651:
  2853   000F62  EFD8  F007         	goto	l2333
  2854   000F66                     u1650:
  2855   000F66                     
  2856                           ;functions.c: 26:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  2857   000F66  5036               	movf	lastSunday@leapYear^0,w,c
  2858   000F68  1037               	iorwf	(lastSunday@leapYear+1)^0,w,c
  2859   000F6A  A4D8               	btfss	status,2,c
  2860   000F6C  EFBA  F007         	goto	u1661
  2861   000F70  EFBC  F007         	goto	u1660
  2862   000F74                     u1661:
  2863   000F74  EFC2  F007         	goto	l2323
  2864   000F78                     u1660:
  2865   000F78  0E00               	movlw	0
  2866   000F7A  6E33               	movwf	(_lastSunday$1090+1)^0,c
  2867   000F7C  0E1C               	movlw	28
  2868   000F7E  6E32               	movwf	_lastSunday$1090^0,c
  2869   000F80  EFC6  F007         	goto	l2325
  2870   000F84                     l2323:
  2871   000F84  0E00               	movlw	0
  2872   000F86  6E33               	movwf	(_lastSunday$1090+1)^0,c
  2873   000F88  0E1D               	movlw	29
  2874   000F8A  6E32               	movwf	_lastSunday$1090^0,c
  2875   000F8C                     l2325:
  2876   000F8C  0E1F               	movlw	31
  2877   000F8E  2432               	addwf	_lastSunday$1090^0,w,c
  2878   000F90  6E28               	movwf	lastSunday@daysBeforeMarch^0,c
  2879   000F92  0E00               	movlw	0
  2880   000F94  2033               	addwfc	(_lastSunday$1090+1)^0,w,c
  2881   000F96  6E29               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  2882   000F98                     
  2883                           ;functions.c: 27:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  2884   000F98  5038               	movf	lastSunday@lastSundayDateMonth^0,w,c
  2885   000F9A  2428               	addwf	lastSunday@daysBeforeMarch^0,w,c
  2886   000F9C  6E2A               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  2887   000F9E  5039               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  2888   000FA0  2029               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  2889   000FA2  6E2B               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  2890   000FA4                     
  2891                           ;functions.c: 28:     return dayOfYearForDSTStart;
  2892   000FA4  C02A  F016         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  2893   000FA8  C02B  F017         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  2894   000FAC  EF05  F008         	goto	l220
  2895   000FB0                     l2333:
  2896                           
  2897                           ;functions.c: 33:     if (month == 10){
  2898   000FB0  0E0A               	movlw	10
  2899   000FB2  1818               	xorwf	lastSunday@month^0,w,c
  2900   000FB4  1019               	iorwf	(lastSunday@month+1)^0,w,c
  2901   000FB6  A4D8               	btfss	status,2,c
  2902   000FB8  EFE0  F007         	goto	u1671
  2903   000FBC  EFE2  F007         	goto	u1670
  2904   000FC0                     u1671:
  2905   000FC0  EF05  F008         	goto	l220
  2906   000FC4                     u1670:
  2907   000FC4                     
  2908                           ;functions.c: 34:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  2909   000FC4  5036               	movf	lastSunday@leapYear^0,w,c
  2910   000FC6  1037               	iorwf	(lastSunday@leapYear+1)^0,w,c
  2911   000FC8  A4D8               	btfss	status,2,c
  2912   000FCA  EFE9  F007         	goto	u1681
  2913   000FCE  EFEB  F007         	goto	u1680
  2914   000FD2                     u1681:
  2915   000FD2  EFF1  F007         	goto	l2339
  2916   000FD6                     u1680:
  2917   000FD6  0E00               	movlw	0
  2918   000FD8  6E35               	movwf	(_lastSunday$1093+1)^0,c
  2919   000FDA  0E1C               	movlw	28
  2920   000FDC  6E34               	movwf	_lastSunday$1093^0,c
  2921   000FDE  EFF5  F007         	goto	l2341
  2922   000FE2                     l2339:
  2923   000FE2  0E00               	movlw	0
  2924   000FE4  6E35               	movwf	(_lastSunday$1093+1)^0,c
  2925   000FE6  0E1D               	movlw	29
  2926   000FE8  6E34               	movwf	_lastSunday$1093^0,c
  2927   000FEA                     l2341:
  2928   000FEA  0EF5               	movlw	245
  2929   000FEC  2434               	addwf	_lastSunday$1093^0,w,c
  2930   000FEE  6E2C               	movwf	lastSunday@daysBeforeOctober^0,c
  2931   000FF0  0E00               	movlw	0
  2932   000FF2  2035               	addwfc	(_lastSunday$1093+1)^0,w,c
  2933   000FF4  6E2D               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  2934   000FF6                     
  2935                           ;functions.c: 36:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  2936   000FF6  5038               	movf	lastSunday@lastSundayDateMonth^0,w,c
  2937   000FF8  242C               	addwf	lastSunday@daysBeforeOctober^0,w,c
  2938   000FFA  6E2E               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  2939   000FFC  5039               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  2940   000FFE  202D               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  2941   001000  6E2F               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  2942   001002                     
  2943                           ;functions.c: 38:     return dayOfYearForDSTEnd;
  2944   001002  C02E  F016         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  2945   001006  C02F  F017         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  2946   00100A                     l220:
  2947   00100A  0012               	return		;funcret
  2948   00100C                     __end_of_lastSunday:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _isLeapYear *****************
  2952 ;; Defined at:
  2953 ;;		line 6 in file "functions.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  year            2   16[COMRAM] unsigned int 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   16[COMRAM] unsigned int 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;Total ram usage:        5 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 3
  2974 ;; This function calls:
  2975 ;;		___lwmod
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;;		_lastSunday
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text17
  2983   001990                     __ptext17:
  2984                           	callstack 0
  2985   001990                     _isLeapYear:
  2986                           	callstack 26
  2987   001990                     
  2988                           ;functions.c: 7:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  2989   001990  0E01               	movlw	1
  2990   001992  6E15               	movwf	_isLeapYear$1080^0,c
  2991   001994  0E03               	movlw	3
  2992   001996  1411               	andwf	isLeapYear@year^0,w,c
  2993   001998  6E13               	movwf	??_isLeapYear^0,c
  2994   00199A  0E00               	movlw	0
  2995   00199C  1412               	andwf	(isLeapYear@year+1)^0,w,c
  2996   00199E  6E14               	movwf	(??_isLeapYear+1)^0,c
  2997   0019A0  5013               	movf	??_isLeapYear^0,w,c
  2998   0019A2  1014               	iorwf	(??_isLeapYear+1)^0,w,c
  2999   0019A4  A4D8               	btfss	status,2,c
  3000   0019A6  EFD7  F00C         	goto	u1461
  3001   0019AA  EFD9  F00C         	goto	u1460
  3002   0019AE                     u1461:
  3003   0019AE  EFEC  F00C         	goto	l2125
  3004   0019B2                     u1460:
  3005   0019B2  C011  F00C         	movff	isLeapYear@year,___lwmod@dividend
  3006   0019B6  C012  F00D         	movff	isLeapYear@year+1,___lwmod@dividend+1
  3007   0019BA  0E00               	movlw	0
  3008   0019BC  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  3009   0019BE  0E64               	movlw	100
  3010   0019C0  6E0E               	movwf	___lwmod@divisor^0,c
  3011   0019C2  EC73  F00D         	call	___lwmod	;wreg free
  3012   0019C6  500C               	movf	?___lwmod^0,w,c
  3013   0019C8  100D               	iorwf	(?___lwmod+1)^0,w,c
  3014   0019CA  A4D8               	btfss	status,2,c
  3015   0019CC  EFEA  F00C         	goto	u1471
  3016   0019D0  EFEC  F00C         	goto	u1470
  3017   0019D4                     u1471:
  3018   0019D4  EF01  F00D         	goto	l2129
  3019   0019D8                     u1470:
  3020   0019D8                     l2125:
  3021   0019D8  C011  F00C         	movff	isLeapYear@year,___lwmod@dividend
  3022   0019DC  C012  F00D         	movff	isLeapYear@year+1,___lwmod@dividend+1
  3023   0019E0  0E01               	movlw	1
  3024   0019E2  6E0F               	movwf	(___lwmod@divisor+1)^0,c
  3025   0019E4  0E90               	movlw	144
  3026   0019E6  6E0E               	movwf	___lwmod@divisor^0,c
  3027   0019E8  EC73  F00D         	call	___lwmod	;wreg free
  3028   0019EC  500C               	movf	?___lwmod^0,w,c
  3029   0019EE  100D               	iorwf	(?___lwmod+1)^0,w,c
  3030   0019F0  B4D8               	btfsc	status,2,c
  3031   0019F2  EFFD  F00C         	goto	u1481
  3032   0019F6  EFFF  F00C         	goto	u1480
  3033   0019FA                     u1481:
  3034   0019FA  EF01  F00D         	goto	l2129
  3035   0019FE                     u1480:
  3036   0019FE  0E00               	movlw	0
  3037   001A00  6E15               	movwf	_isLeapYear$1080^0,c
  3038   001A02                     l2129:
  3039   001A02  C015  F011         	movff	_isLeapYear$1080,?_isLeapYear
  3040   001A06  6A12               	clrf	(?_isLeapYear+1)^0,c
  3041   001A08  0012               	return		;funcret
  3042   001A0A                     __end_of_isLeapYear:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function ___lwmod *****************
  3046 ;; Defined at:
  3047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  dividend        2   11[COMRAM] unsigned int 
  3050 ;;  divisor         2   13[COMRAM] unsigned int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  counter         1   15[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  2   11[COMRAM] unsigned int 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;Total ram usage:        5 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_isLeapYear
  3073 ;;		_lastSunday
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text18
  3078   001AE6                     __ptext18:
  3079                           	callstack 0
  3080   001AE6                     ___lwmod:
  3081                           	callstack 26
  3082   001AE6  500E               	movf	___lwmod@divisor^0,w,c
  3083   001AE8  100F               	iorwf	(___lwmod@divisor+1)^0,w,c
  3084   001AEA  B4D8               	btfsc	status,2,c
  3085   001AEC  EF7A  F00D         	goto	u1421
  3086   001AF0  EF7C  F00D         	goto	u1420
  3087   001AF4                     u1421:
  3088   001AF4  EFA0  F00D         	goto	l794
  3089   001AF8                     u1420:
  3090   001AF8  0E01               	movlw	1
  3091   001AFA  6E10               	movwf	___lwmod@counter^0,c
  3092   001AFC  EF84  F00D         	goto	l2099
  3093   001B00                     l2097:
  3094   001B00  90D8               	bcf	status,0,c
  3095   001B02  360E               	rlcf	___lwmod@divisor^0,f,c
  3096   001B04  360F               	rlcf	(___lwmod@divisor+1)^0,f,c
  3097   001B06  2A10               	incf	___lwmod@counter^0,f,c
  3098   001B08                     l2099:
  3099   001B08  AE0F               	btfss	(___lwmod@divisor+1)^0,7,c
  3100   001B0A  EF89  F00D         	goto	u1431
  3101   001B0E  EF8B  F00D         	goto	u1430
  3102   001B12                     u1431:
  3103   001B12  EF80  F00D         	goto	l2097
  3104   001B16                     u1430:
  3105   001B16                     l2101:
  3106   001B16  500E               	movf	___lwmod@divisor^0,w,c
  3107   001B18  5C0C               	subwf	___lwmod@dividend^0,w,c
  3108   001B1A  500F               	movf	(___lwmod@divisor+1)^0,w,c
  3109   001B1C  580D               	subwfb	(___lwmod@dividend+1)^0,w,c
  3110   001B1E  A0D8               	btfss	status,0,c
  3111   001B20  EF94  F00D         	goto	u1441
  3112   001B24  EF96  F00D         	goto	u1440
  3113   001B28                     u1441:
  3114   001B28  EF9A  F00D         	goto	l2105
  3115   001B2C                     u1440:
  3116   001B2C  500E               	movf	___lwmod@divisor^0,w,c
  3117   001B2E  5E0C               	subwf	___lwmod@dividend^0,f,c
  3118   001B30  500F               	movf	(___lwmod@divisor+1)^0,w,c
  3119   001B32  5A0D               	subwfb	(___lwmod@dividend+1)^0,f,c
  3120   001B34                     l2105:
  3121   001B34  90D8               	bcf	status,0,c
  3122   001B36  320F               	rrcf	(___lwmod@divisor+1)^0,f,c
  3123   001B38  320E               	rrcf	___lwmod@divisor^0,f,c
  3124   001B3A  2E10               	decfsz	___lwmod@counter^0,f,c
  3125   001B3C  EF8B  F00D         	goto	l2101
  3126   001B40                     l794:
  3127   001B40  C00C  F00C         	movff	___lwmod@dividend,?___lwmod
  3128   001B44  C00D  F00D         	movff	___lwmod@dividend+1,?___lwmod+1
  3129   001B48  0012               	return		;funcret
  3130   001B4A                     __end_of___lwmod:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function ___lwdiv *****************
  3134 ;; Defined at:
  3135 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  dividend        2    4[COMRAM] unsigned int 
  3138 ;;  divisor         2    6[COMRAM] unsigned int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  quotient        2    8[COMRAM] unsigned int 
  3141 ;;  counter         1   10[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    4[COMRAM] unsigned int 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;Total ram usage:        7 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 2
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_lastSunday
  3162 ;;		_LED_Light_Meter
  3163 ;;		_ADC2String
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text19
  3168   001A0A                     __ptext19:
  3169                           	callstack 0
  3170   001A0A                     ___lwdiv:
  3171                           	callstack 27
  3172   001A0A  0E00               	movlw	0
  3173   001A0C  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  3174   001A0E  0E00               	movlw	0
  3175   001A10  6E09               	movwf	___lwdiv@quotient^0,c
  3176   001A12  5007               	movf	___lwdiv@divisor^0,w,c
  3177   001A14  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3178   001A16  B4D8               	btfsc	status,2,c
  3179   001A18  EF10  F00D         	goto	u1501
  3180   001A1C  EF12  F00D         	goto	u1500
  3181   001A20                     u1501:
  3182   001A20  EF3A  F00D         	goto	l784
  3183   001A24                     u1500:
  3184   001A24  0E01               	movlw	1
  3185   001A26  6E0B               	movwf	___lwdiv@counter^0,c
  3186   001A28  EF1A  F00D         	goto	l2167
  3187   001A2C                     l2165:
  3188   001A2C  90D8               	bcf	status,0,c
  3189   001A2E  3607               	rlcf	___lwdiv@divisor^0,f,c
  3190   001A30  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3191   001A32  2A0B               	incf	___lwdiv@counter^0,f,c
  3192   001A34                     l2167:
  3193   001A34  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  3194   001A36  EF1F  F00D         	goto	u1511
  3195   001A3A  EF21  F00D         	goto	u1510
  3196   001A3E                     u1511:
  3197   001A3E  EF16  F00D         	goto	l2165
  3198   001A42                     u1510:
  3199   001A42                     l2169:
  3200   001A42  90D8               	bcf	status,0,c
  3201   001A44  3609               	rlcf	___lwdiv@quotient^0,f,c
  3202   001A46  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3203   001A48  5007               	movf	___lwdiv@divisor^0,w,c
  3204   001A4A  5C05               	subwf	___lwdiv@dividend^0,w,c
  3205   001A4C  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  3206   001A4E  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3207   001A50  A0D8               	btfss	status,0,c
  3208   001A52  EF2D  F00D         	goto	u1521
  3209   001A56  EF2F  F00D         	goto	u1520
  3210   001A5A                     u1521:
  3211   001A5A  EF34  F00D         	goto	l2177
  3212   001A5E                     u1520:
  3213   001A5E  5007               	movf	___lwdiv@divisor^0,w,c
  3214   001A60  5E05               	subwf	___lwdiv@dividend^0,f,c
  3215   001A62  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  3216   001A64  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3217   001A66  8009               	bsf	___lwdiv@quotient^0,0,c
  3218   001A68                     l2177:
  3219   001A68  90D8               	bcf	status,0,c
  3220   001A6A  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3221   001A6C  3207               	rrcf	___lwdiv@divisor^0,f,c
  3222   001A6E  2E0B               	decfsz	___lwdiv@counter^0,f,c
  3223   001A70  EF21  F00D         	goto	l2169
  3224   001A74                     l784:
  3225   001A74  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
  3226   001A78  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3227   001A7C  0012               	return		;funcret
  3228   001A7E                     __end_of___lwdiv:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _Timer0_init *****************
  3232 ;; Defined at:
  3233 ;;		line 9 in file "timers.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 2
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text20
  3262   001D10                     __ptext20:
  3263                           	callstack 0
  3264   001D10                     _Timer0_init:
  3265                           	callstack 28
  3266   001D10                     
  3267                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
  3268   001D10  50D6               	movf	214,w,c	;volatile
  3269   001D12  0B1F               	andlw	-225
  3270   001D14  0940               	iorlw	64
  3271   001D16  6ED6               	movwf	214,c	;volatile
  3272   001D18                     
  3273                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
  3274   001D18  88D6               	bsf	214,4,c	;volatile
  3275                           
  3276                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  3277   001D1A  50D6               	movf	214,w,c	;volatile
  3278   001D1C  0BF0               	andlw	-16
  3279   001D1E  0908               	iorlw	8
  3280   001D20  6ED6               	movwf	214,c	;volatile
  3281   001D22                     
  3282                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  3283   001D22  88D5               	bsf	213,4,c	;volatile
  3284   001D24                     
  3285                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  3286   001D24  010E               	movlb	14	; () banked
  3287   001D26  8B29               	bsf	41,5,b	;volatile
  3288   001D28                     
  3289                           ; BSR set to: 14
  3290                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  3291   001D28  9B33               	bcf	51,5,b	;volatile
  3292   001D2A                     
  3293                           ; BSR set to: 14
  3294                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  3295   001D2A  9B1F               	bcf	31,5,b	;volatile
  3296   001D2C                     
  3297                           ; BSR set to: 14
  3298                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  3299   001D2C  8AF2               	bsf	242,5,c	;volatile
  3300   001D2E                     
  3301                           ; BSR set to: 14
  3302                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  3303   001D2E  8CF2               	bsf	242,6,c	;volatile
  3304   001D30                     
  3305                           ; BSR set to: 14
  3306                           ;timers.c: 21:     INTCONbits.GIE = 1;
  3307   001D30  8EF2               	bsf	242,7,c	;volatile
  3308                           
  3309                           ;timers.c: 24:     TMR0H=00001011;
  3310   001D32  0E09               	movlw	9
  3311   001D34  6ED4               	movwf	212,c	;volatile
  3312                           
  3313                           ;timers.c: 25:     TMR0L=110011011;
  3314   001D36  0E83               	movlw	131
  3315   001D38  6ED3               	movwf	211,c	;volatile
  3316   001D3A                     
  3317                           ; BSR set to: 14
  3318                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  3319   001D3A  8ED5               	bsf	213,7,c	;volatile
  3320   001D3C                     
  3321                           ; BSR set to: 14
  3322   001D3C  0012               	return		;funcret
  3323   001D3E                     __end_of_Timer0_init:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _LEDarray_init *****************
  3327 ;; Defined at:
  3328 ;;		line 8 in file "LEDarray.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 2
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text21
  3357   001D3E                     __ptext21:
  3358                           	callstack 0
  3359   001D3E                     _LEDarray_init:
  3360                           	callstack 28
  3361   001D3E                     
  3362                           ;LEDarray.c: 10:     LATA = 0;
  3363   001D3E  0E00               	movlw	0
  3364   001D40  6E79               	movwf	121,c	;volatile
  3365                           
  3366                           ;LEDarray.c: 11:     LATB = 0;
  3367   001D42  0E00               	movlw	0
  3368   001D44  6E7A               	movwf	122,c	;volatile
  3369   001D46                     
  3370                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  3371   001D46  907E               	bcf	126,0,c	;volatile
  3372   001D48                     
  3373                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  3374   001D48  9C7E               	bcf	126,6,c	;volatile
  3375                           
  3376                           ;LEDarray.c: 14:     LATG = 0;
  3377   001D4A  0E00               	movlw	0
  3378   001D4C  6E7F               	movwf	127,c	;volatile
  3379   001D4E                     
  3380                           ;LEDarray.c: 15:  LATHbits.LATH3 = 0;
  3381   001D4E  9680               	bcf	128,3,c	;volatile
  3382                           
  3383                           ;LEDarray.c: 18:     TRISA = 0;
  3384   001D50  0E00               	movlw	0
  3385   001D52  6E81               	movwf	129,c	;volatile
  3386                           
  3387                           ;LEDarray.c: 19:  TRISB = 0;
  3388   001D54  0E00               	movlw	0
  3389   001D56  6E82               	movwf	130,c	;volatile
  3390   001D58                     
  3391                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  3392   001D58  9086               	bcf	134,0,c	;volatile
  3393   001D5A                     
  3394                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  3395   001D5A  9C86               	bcf	134,6,c	;volatile
  3396                           
  3397                           ;LEDarray.c: 22:     TRISG = 0;
  3398   001D5C  0E00               	movlw	0
  3399   001D5E  6E87               	movwf	135,c	;volatile
  3400   001D60                     
  3401                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  3402   001D60  9688               	bcf	136,3,c	;volatile
  3403   001D62                     
  3404                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  3405   001D62  8486               	bsf	134,2,c	;volatile
  3406   001D64                     
  3407                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  3408   001D64  010E               	movlb	14	; () banked
  3409   001D66  95B4               	bcf	180,2,b	;volatile
  3410   001D68                     
  3411                           ; BSR set to: 14
  3412   001D68  0012               	return		;funcret
  3413   001D6A                     __end_of_LEDarray_init:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _LEDarray_disp_bin *****************
  3417 ;; Defined at:
  3418 ;;		line 33 in file "LEDarray.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  number          2    4[COMRAM] unsigned int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		None
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;Total ram usage:        2 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 2
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;;		_LEDarray_disp_PPM
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text22
  3448   001468                     __ptext22:
  3449                           	callstack 0
  3450   001468                     _LEDarray_disp_bin:
  3451                           	callstack 28
  3452   001468                     
  3453                           ;LEDarray.c: 33: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 34: {;LEDarray.
      +                          c: 36:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  3454   001468  A005               	btfss	LEDarray_disp_bin@number^0,0,c
  3455   00146A  EF39  F00A         	goto	u1531
  3456   00146E  EF3B  F00A         	goto	u1530
  3457   001472                     u1531:
  3458   001472  EF3E  F00A         	goto	l100
  3459   001476                     u1530:
  3460   001476  807F               	bsf	127,0,c	;volatile
  3461   001478  EF3F  F00A         	goto	l101
  3462   00147C                     l100:
  3463   00147C  907F               	bcf	127,0,c	;volatile
  3464   00147E                     l101:
  3465                           
  3466                           ;LEDarray.c: 37:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  3467   00147E  A205               	btfss	LEDarray_disp_bin@number^0,1,c
  3468   001480  EF44  F00A         	goto	u1541
  3469   001484  EF46  F00A         	goto	u1540
  3470   001488                     u1541:
  3471   001488  EF49  F00A         	goto	l102
  3472   00148C                     u1540:
  3473   00148C  827F               	bsf	127,1,c	;volatile
  3474   00148E  EF4A  F00A         	goto	l103
  3475   001492                     l102:
  3476   001492  927F               	bcf	127,1,c	;volatile
  3477   001494                     l103:
  3478                           
  3479                           ;LEDarray.c: 38:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  3480   001494  A405               	btfss	LEDarray_disp_bin@number^0,2,c
  3481   001496  EF4F  F00A         	goto	u1551
  3482   00149A  EF51  F00A         	goto	u1550
  3483   00149E                     u1551:
  3484   00149E  EF54  F00A         	goto	l104
  3485   0014A2                     u1550:
  3486   0014A2  8479               	bsf	121,2,c	;volatile
  3487   0014A4  EF55  F00A         	goto	l105
  3488   0014A8                     l104:
  3489   0014A8  9479               	bcf	121,2,c	;volatile
  3490   0014AA                     l105:
  3491                           
  3492                           ;LEDarray.c: 39:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  3493   0014AA  A605               	btfss	LEDarray_disp_bin@number^0,3,c
  3494   0014AC  EF5A  F00A         	goto	u1561
  3495   0014B0  EF5C  F00A         	goto	u1560
  3496   0014B4                     u1561:
  3497   0014B4  EF5F  F00A         	goto	l106
  3498   0014B8                     u1560:
  3499   0014B8  8C7E               	bsf	126,6,c	;volatile
  3500   0014BA  EF60  F00A         	goto	l107
  3501   0014BE                     l106:
  3502   0014BE  9C7E               	bcf	126,6,c	;volatile
  3503   0014C0                     l107:
  3504                           
  3505                           ;LEDarray.c: 40:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  3506   0014C0  A805               	btfss	LEDarray_disp_bin@number^0,4,c
  3507   0014C2  EF65  F00A         	goto	u1571
  3508   0014C6  EF67  F00A         	goto	u1570
  3509   0014CA                     u1571:
  3510   0014CA  EF6A  F00A         	goto	l108
  3511   0014CE                     u1570:
  3512   0014CE  8879               	bsf	121,4,c	;volatile
  3513   0014D0  EF6B  F00A         	goto	l109
  3514   0014D4                     l108:
  3515   0014D4  9879               	bcf	121,4,c	;volatile
  3516   0014D6                     l109:
  3517                           
  3518                           ;LEDarray.c: 41:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  3519   0014D6  AA05               	btfss	LEDarray_disp_bin@number^0,5,c
  3520   0014D8  EF70  F00A         	goto	u1581
  3521   0014DC  EF72  F00A         	goto	u1580
  3522   0014E0                     u1581:
  3523   0014E0  EF75  F00A         	goto	l110
  3524   0014E4                     u1580:
  3525   0014E4  8A79               	bsf	121,5,c	;volatile
  3526   0014E6  EF76  F00A         	goto	l111
  3527   0014EA                     l110:
  3528   0014EA  9A79               	bcf	121,5,c	;volatile
  3529   0014EC                     l111:
  3530                           
  3531                           ;LEDarray.c: 42:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  3532   0014EC  AC05               	btfss	LEDarray_disp_bin@number^0,6,c
  3533   0014EE  EF7B  F00A         	goto	u1591
  3534   0014F2  EF7D  F00A         	goto	u1590
  3535   0014F6                     u1591:
  3536   0014F6  EF80  F00A         	goto	l112
  3537   0014FA                     u1590:
  3538   0014FA  807E               	bsf	126,0,c	;volatile
  3539   0014FC  EF81  F00A         	goto	l113
  3540   001500                     l112:
  3541   001500  907E               	bcf	126,0,c	;volatile
  3542   001502                     l113:
  3543                           
  3544                           ;LEDarray.c: 43:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  3545   001502  AE05               	btfss	LEDarray_disp_bin@number^0,7,c
  3546   001504  EF86  F00A         	goto	u1601
  3547   001508  EF88  F00A         	goto	u1600
  3548   00150C                     u1601:
  3549   00150C  EF8B  F00A         	goto	l114
  3550   001510                     u1600:
  3551   001510  807A               	bsf	122,0,c	;volatile
  3552   001512  EF8C  F00A         	goto	l115
  3553   001516                     l114:
  3554   001516  907A               	bcf	122,0,c	;volatile
  3555   001518                     l115:
  3556                           
  3557                           ;LEDarray.c: 44:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  3558   001518  A006               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  3559   00151A  EF91  F00A         	goto	u1611
  3560   00151E  EF93  F00A         	goto	u1610
  3561   001522                     u1611:
  3562   001522  EF96  F00A         	goto	l116
  3563   001526                     u1610:
  3564   001526  827A               	bsf	122,1,c	;volatile
  3565   001528  EF97  F00A         	goto	l118
  3566   00152C                     l116:
  3567   00152C  927A               	bcf	122,1,c	;volatile
  3568   00152E                     l118:
  3569   00152E  0012               	return		;funcret
  3570   001530                     __end_of_LEDarray_disp_bin:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _LCD_setline *****************
  3574 ;; Defined at:
  3575 ;;		line 106 in file "LCD.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  line            1    wreg     unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  line            1    9[COMRAM] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        1 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 5
  3596 ;; This function calls:
  3597 ;;		_LCD_sendbyte
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text23
  3604   001C40                     __ptext23:
  3605                           	callstack 0
  3606   001C40                     _LCD_setline:
  3607                           	callstack 25
  3608                           
  3609                           ;incstack = 0
  3610                           ;LCD_setline@line stored from wreg
  3611   001C40  6E0A               	movwf	LCD_setline@line^0,c
  3612   001C42                     
  3613                           ;LCD.c: 106: void LCD_setline (char line);LCD.c: 107: {;LCD.c: 109:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  3614   001C42  040A               	decf	LCD_setline@line^0,w,c
  3615   001C44  A4D8               	btfss	status,2,c
  3616   001C46  EF27  F00E         	goto	u1621
  3617   001C4A  EF29  F00E         	goto	u1620
  3618   001C4E                     u1621:
  3619   001C4E  EF2E  F00E         	goto	l2299
  3620   001C52                     u1620:
  3621   001C52  0E00               	movlw	0
  3622   001C54  6E06               	movwf	LCD_sendbyte@type^0,c
  3623   001C56  0E80               	movlw	128
  3624   001C58  ECE4  F00D         	call	_LCD_sendbyte
  3625   001C5C                     l2299:
  3626                           
  3627                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  3628   001C5C  0E02               	movlw	2
  3629   001C5E  180A               	xorwf	LCD_setline@line^0,w,c
  3630   001C60  A4D8               	btfss	status,2,c
  3631   001C62  EF35  F00E         	goto	u1631
  3632   001C66  EF37  F00E         	goto	u1630
  3633   001C6A                     u1631:
  3634   001C6A  EF3C  F00E         	goto	l273
  3635   001C6E                     u1630:
  3636   001C6E  0E00               	movlw	0
  3637   001C70  6E06               	movwf	LCD_sendbyte@type^0,c
  3638   001C72  0EC0               	movlw	192
  3639   001C74  ECE4  F00D         	call	_LCD_sendbyte
  3640   001C78                     l273:
  3641   001C78  0012               	return		;funcret
  3642   001C7A                     __end_of_LCD_setline:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _LCD_init *****************
  3646 ;; Defined at:
  3647 ;;		line 63 in file "LCD.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;Total ram usage:        1 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 5
  3668 ;; This function calls:
  3669 ;;		_LCD_sendbyte
  3670 ;;		_LCD_sendnibble
  3671 ;; This function is called by:
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text24
  3677   001886                     __ptext24:
  3678                           	callstack 0
  3679   001886                     _LCD_init:
  3680                           	callstack 25
  3681   001886                     
  3682                           ;LCD.c: 67:     TRISCbits.TRISC6=0;
  3683   001886  9C83               	bcf	131,6,c	;volatile
  3684                           
  3685                           ;LCD.c: 68:     TRISCbits.TRISC2=0;
  3686   001888  9483               	bcf	131,2,c	;volatile
  3687                           
  3688                           ;LCD.c: 69:     TRISBbits.TRISB3=0;
  3689   00188A  9682               	bcf	130,3,c	;volatile
  3690                           
  3691                           ;LCD.c: 70:     TRISBbits.TRISB2=0;
  3692   00188C  9482               	bcf	130,2,c	;volatile
  3693                           
  3694                           ;LCD.c: 71:     TRISEbits.TRISE3=0;
  3695   00188E  9685               	bcf	133,3,c	;volatile
  3696                           
  3697                           ;LCD.c: 72:     TRISEbits.TRISE1=0;
  3698   001890  9285               	bcf	133,1,c	;volatile
  3699                           
  3700                           ;LCD.c: 75:     LATCbits.LATC6=0;
  3701   001892  9C7B               	bcf	123,6,c	;volatile
  3702                           
  3703                           ;LCD.c: 76:     LATCbits.LATC2=0;
  3704   001894  947B               	bcf	123,2,c	;volatile
  3705                           
  3706                           ;LCD.c: 77:     LATBbits.LATB4 = 0;
  3707   001896  987A               	bcf	122,4,c	;volatile
  3708                           
  3709                           ;LCD.c: 78:     LATBbits.LATB5 = 0;
  3710   001898  9A7A               	bcf	122,5,c	;volatile
  3711                           
  3712                           ;LCD.c: 79:     LATBbits.LATB6 = 0;
  3713   00189A  9C7A               	bcf	122,6,c	;volatile
  3714                           
  3715                           ;LCD.c: 80:     LATBbits.LATB7 = 0;
  3716   00189C  9E7A               	bcf	122,7,c	;volatile
  3717   00189E                     
  3718                           ;LCD.c: 85:     LCD_sendnibble(0b0011);
  3719   00189E  0E03               	movlw	3
  3720   0018A0  EC3F  F00D         	call	_LCD_sendnibble
  3721   0018A4                     
  3722                           ;LCD.c: 86:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3723   0018A4  0ED0               	movlw	208
  3724   0018A6                     u1837:
  3725   0018A6  2EE8               	decfsz	wreg,f,c
  3726   0018A8  D7FE               	bra	u1837
  3727   0018AA                     
  3728                           ;LCD.c: 88:     LCD_sendbyte(0b00101000,0);
  3729   0018AA  0E00               	movlw	0
  3730   0018AC  6E06               	movwf	LCD_sendbyte@type^0,c
  3731   0018AE  0E28               	movlw	40
  3732   0018B0  ECE4  F00D         	call	_LCD_sendbyte
  3733   0018B4                     
  3734                           ;LCD.c: 89:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3735   0018B4  0ED0               	movlw	208
  3736   0018B6                     u1847:
  3737   0018B6  2EE8               	decfsz	wreg,f,c
  3738   0018B8  D7FE               	bra	u1847
  3739   0018BA                     
  3740                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  3741   0018BA  0E00               	movlw	0
  3742   0018BC  6E06               	movwf	LCD_sendbyte@type^0,c
  3743   0018BE  0E28               	movlw	40
  3744   0018C0  ECE4  F00D         	call	_LCD_sendbyte
  3745   0018C4                     
  3746                           ;LCD.c: 91:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3747   0018C4  0EC5               	movlw	197
  3748   0018C6                     u1857:
  3749   0018C6  2EE8               	decfsz	wreg,f,c
  3750   0018C8  D7FE               	bra	u1857
  3751   0018CA  0000               	nop	
  3752   0018CC                     
  3753                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  3754   0018CC  0E00               	movlw	0
  3755   0018CE  6E06               	movwf	LCD_sendbyte@type^0,c
  3756   0018D0  0E0C               	movlw	12
  3757   0018D2  ECE4  F00D         	call	_LCD_sendbyte
  3758   0018D6                     
  3759                           ;LCD.c: 93:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3760   0018D6  0EC5               	movlw	197
  3761   0018D8                     u1867:
  3762   0018D8  2EE8               	decfsz	wreg,f,c
  3763   0018DA  D7FE               	bra	u1867
  3764   0018DC  0000               	nop	
  3765   0018DE                     
  3766                           ;LCD.c: 94:     LCD_sendbyte(0b00000001,0);
  3767   0018DE  0E00               	movlw	0
  3768   0018E0  6E06               	movwf	LCD_sendbyte@type^0,c
  3769   0018E2  0E01               	movlw	1
  3770   0018E4  ECE4  F00D         	call	_LCD_sendbyte
  3771   0018E8                     
  3772                           ;LCD.c: 95:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  3773   0018E8  0E20               	movlw	32
  3774   0018EA  6E0A               	movwf	??_LCD_init^0,c
  3775   0018EC  0ECA               	movlw	202
  3776   0018EE                     u1877:
  3777   0018EE  2EE8               	decfsz	wreg,f,c
  3778   0018F0  D7FE               	bra	u1877
  3779   0018F2  2E0A               	decfsz	??_LCD_init^0,f,c
  3780   0018F4  D7FC               	bra	u1877
  3781   0018F6                     
  3782                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  3783   0018F6  0E00               	movlw	0
  3784   0018F8  6E06               	movwf	LCD_sendbyte@type^0,c
  3785   0018FA  0E06               	movlw	6
  3786   0018FC  ECE4  F00D         	call	_LCD_sendbyte
  3787   001900                     
  3788                           ;LCD.c: 100:     LCD_sendbyte(0b1111,0);
  3789   001900  0E00               	movlw	0
  3790   001902  6E06               	movwf	LCD_sendbyte@type^0,c
  3791   001904  0E0F               	movlw	15
  3792   001906  ECE4  F00D         	call	_LCD_sendbyte
  3793   00190A  0012               	return		;funcret
  3794   00190C                     __end_of_LCD_init:
  3795                           	callstack 0
  3796                           
  3797 ;; *************** function _LCD_sendbyte *****************
  3798 ;; Defined at:
  3799 ;;		line 43 in file "LCD.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  Byte            1    wreg     unsigned char 
  3802 ;;  type            1    5[COMRAM] unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  Byte            1    8[COMRAM] unsigned char 
  3805 ;;  lowNibble       1    7[COMRAM] unsigned char 
  3806 ;;  highNibble      1    6[COMRAM] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3816 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;Total ram usage:        4 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 4
  3823 ;; This function calls:
  3824 ;;		_LCD_sendnibble
  3825 ;; This function is called by:
  3826 ;;		_LCD_init
  3827 ;;		_LCD_setline
  3828 ;;		_LCD_sendstring
  3829 ;;		_LCD_scroll
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text25
  3834   001BC8                     __ptext25:
  3835                           	callstack 0
  3836   001BC8                     _LCD_sendbyte:
  3837                           	callstack 24
  3838                           
  3839                           ;incstack = 0
  3840                           ;LCD_sendbyte@Byte stored from wreg
  3841   001BC8  6E09               	movwf	LCD_sendbyte@Byte^0,c
  3842   001BCA                     
  3843                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  3844   001BCA  0406               	decf	LCD_sendbyte@type^0,w,c
  3845   001BCC  A4D8               	btfss	status,2,c
  3846   001BCE  EFEB  F00D         	goto	u1411
  3847   001BD2  EFED  F00D         	goto	u1410
  3848   001BD6                     u1411:
  3849   001BD6  EFF0  F00D         	goto	l263
  3850   001BDA                     u1410:
  3851   001BDA  8C7B               	bsf	123,6,c	;volatile
  3852   001BDC  EFF1  F00D         	goto	l2085
  3853   001BE0                     l263:
  3854   001BE0  9C7B               	bcf	123,6,c	;volatile
  3855   001BE2                     l2085:
  3856                           
  3857                           ;LCD.c: 50:     unsigned char highNibble = (Byte >> 4) ;
  3858   001BE2  3809               	swapf	LCD_sendbyte@Byte^0,w,c
  3859   001BE4  0B0F               	andlw	15
  3860   001BE6  6E07               	movwf	LCD_sendbyte@highNibble^0,c
  3861   001BE8                     
  3862                           ;LCD.c: 51:     LCD_sendnibble(highNibble);
  3863   001BE8  5007               	movf	LCD_sendbyte@highNibble^0,w,c
  3864   001BEA  EC3F  F00D         	call	_LCD_sendnibble
  3865   001BEE                     
  3866                           ;LCD.c: 54:     unsigned char lowNibble = Byte & 0b1111;
  3867   001BEE  5009               	movf	LCD_sendbyte@Byte^0,w,c
  3868   001BF0  0B0F               	andlw	15
  3869   001BF2  6E08               	movwf	LCD_sendbyte@lowNibble^0,c
  3870                           
  3871                           ;LCD.c: 55:     LCD_sendnibble(lowNibble);
  3872   001BF4  5008               	movf	LCD_sendbyte@lowNibble^0,w,c
  3873   001BF6  EC3F  F00D         	call	_LCD_sendnibble
  3874   001BFA                     
  3875                           ;LCD.c: 57:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3876   001BFA  0EA0               	movlw	160
  3877   001BFC                     u1887:
  3878   001BFC  D000               	nop2	
  3879   001BFE  2EE8               	decfsz	wreg,f,c
  3880   001C00  D7FD               	bra	u1887
  3881   001C02  0012               	return		;funcret
  3882   001C04                     __end_of_LCD_sendbyte:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _LCD_sendnibble *****************
  3886 ;; Defined at:
  3887 ;;		line 21 in file "LCD.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  number          1    wreg     unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  number          1    4[COMRAM] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;Total ram usage:        1 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 3
  3908 ;; This function calls:
  3909 ;;		_LCD_E_TOG
  3910 ;; This function is called by:
  3911 ;;		_LCD_sendbyte
  3912 ;;		_LCD_init
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text26
  3917   001A7E                     __ptext26:
  3918                           	callstack 0
  3919   001A7E                     _LCD_sendnibble:
  3920                           	callstack 24
  3921                           
  3922                           ;incstack = 0
  3923                           ;LCD_sendnibble@number stored from wreg
  3924   001A7E  6E05               	movwf	LCD_sendnibble@number^0,c
  3925   001A80                     
  3926                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  3927   001A80  A005               	btfss	LCD_sendnibble@number^0,0,c
  3928   001A82  EF45  F00D         	goto	u1321
  3929   001A86  EF47  F00D         	goto	u1320
  3930   001A8A                     u1321:
  3931   001A8A  EF4A  F00D         	goto	l252
  3932   001A8E                     u1320:
  3933   001A8E  867A               	bsf	122,3,c	;volatile
  3934   001A90  EF4B  F00D         	goto	l2009
  3935   001A94                     l252:
  3936   001A94  967A               	bcf	122,3,c	;volatile
  3937   001A96                     l2009:
  3938                           
  3939                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  3940   001A96  A205               	btfss	LCD_sendnibble@number^0,1,c
  3941   001A98  EF50  F00D         	goto	u1331
  3942   001A9C  EF52  F00D         	goto	u1330
  3943   001AA0                     u1331:
  3944   001AA0  EF55  F00D         	goto	l254
  3945   001AA4                     u1330:
  3946   001AA4  847A               	bsf	122,2,c	;volatile
  3947   001AA6  EF56  F00D         	goto	l2013
  3948   001AAA                     l254:
  3949   001AAA  947A               	bcf	122,2,c	;volatile
  3950   001AAC                     l2013:
  3951                           
  3952                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  3953   001AAC  A405               	btfss	LCD_sendnibble@number^0,2,c
  3954   001AAE  EF5B  F00D         	goto	u1341
  3955   001AB2  EF5D  F00D         	goto	u1340
  3956   001AB6                     u1341:
  3957   001AB6  EF60  F00D         	goto	l256
  3958   001ABA                     u1340:
  3959   001ABA  867D               	bsf	125,3,c	;volatile
  3960   001ABC  EF61  F00D         	goto	l2017
  3961   001AC0                     l256:
  3962   001AC0  967D               	bcf	125,3,c	;volatile
  3963   001AC2                     l2017:
  3964                           
  3965                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  3966   001AC2  A605               	btfss	LCD_sendnibble@number^0,3,c
  3967   001AC4  EF66  F00D         	goto	u1351
  3968   001AC8  EF68  F00D         	goto	u1350
  3969   001ACC                     u1351:
  3970   001ACC  EF6B  F00D         	goto	l258
  3971   001AD0                     u1350:
  3972   001AD0  827D               	bsf	125,1,c	;volatile
  3973   001AD2  EF6C  F00D         	goto	l2021
  3974   001AD6                     l258:
  3975   001AD6  927D               	bcf	125,1,c	;volatile
  3976   001AD8                     l2021:
  3977                           
  3978                           ;LCD.c: 34:     LCD_E_TOG();
  3979   001AD8  EC10  F00F         	call	_LCD_E_TOG	;wreg free
  3980   001ADC                     
  3981                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3982   001ADC  0E1A               	movlw	26
  3983   001ADE                     u1897:
  3984   001ADE  2EE8               	decfsz	wreg,f,c
  3985   001AE0  D7FE               	bra	u1897
  3986   001AE2  D000               	nop2	
  3987   001AE4  0012               	return		;funcret
  3988   001AE6                     __end_of_LCD_sendnibble:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _LCD_E_TOG *****************
  3992 ;; Defined at:
  3993 ;;		line 9 in file "LCD.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 2
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_LCD_sendnibble
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text27
  4022   001E20                     __ptext27:
  4023                           	callstack 0
  4024   001E20                     _LCD_E_TOG:
  4025                           	callstack 24
  4026   001E20                     
  4027                           ;LCD.c: 12:     LATCbits.LATC2=1;
  4028   001E20  847B               	bsf	123,2,c	;volatile
  4029   001E22                     
  4030                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4031   001E22  0E0A               	movlw	10
  4032   001E24                     u1907:
  4033   001E24  2EE8               	decfsz	wreg,f,c
  4034   001E26  D7FE               	bra	u1907
  4035   001E28  D000               	nop2	
  4036   001E2A                     
  4037                           ;LCD.c: 15:     LATCbits.LATC2=0;
  4038   001E2A  947B               	bcf	123,2,c	;volatile
  4039   001E2C  0012               	return		;funcret
  4040   001E2E                     __end_of_LCD_E_TOG:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _Interrupts_init *****************
  4044 ;; Defined at:
  4045 ;;		line 11 in file "interrupts.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		None
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 2
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_main
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text28
  4074   001E0E                     __ptext28:
  4075                           	callstack 0
  4076   001E0E                     _Interrupts_init:
  4077                           	callstack 28
  4078   001E0E                     
  4079                           ;interrupts.c: 15:     PIE2bits.C1IE=1;
  4080   001E0E  010E               	movlb	14	; () banked
  4081   001E10  812B               	bsf	43,0,b	;volatile
  4082                           
  4083                           ;interrupts.c: 16:     PIE0bits.TMR0IE=1;
  4084   001E12  8B29               	bsf	41,5,b	;volatile
  4085                           
  4086                           ;interrupts.c: 17:     IPR2bits.C1IP = 1;
  4087   001E14  8121               	bsf	33,0,b	;volatile
  4088                           
  4089                           ;interrupts.c: 18:     IPR0bits.TMR0IP = 0;
  4090   001E16  9B1F               	bcf	31,5,b	;volatile
  4091                           
  4092                           ;interrupts.c: 19:     INTCONbits.IPEN=1;
  4093   001E18  8AF2               	bsf	242,5,c	;volatile
  4094                           
  4095                           ;interrupts.c: 20:     INTCONbits.PEIE=1;
  4096   001E1A  8CF2               	bsf	242,6,c	;volatile
  4097                           
  4098                           ;interrupts.c: 21:     INTCONbits.GIE=1;
  4099   001E1C  8EF2               	bsf	242,7,c	;volatile
  4100   001E1E                     
  4101                           ; BSR set to: 14
  4102   001E1E  0012               	return		;funcret
  4103   001E20                     __end_of_Interrupts_init:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _Comp1_init_re *****************
  4107 ;; Defined at:
  4108 ;;		line 23 in file "comparator.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 3
  4129 ;; This function calls:
  4130 ;;		_DAC_init
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text29
  4137   001D90                     __ptext29:
  4138                           	callstack 0
  4139   001D90                     _Comp1_init_re:
  4140                           	callstack 27
  4141   001D90                     
  4142                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  4143   001D90  8E86               	bsf	134,7,c	;volatile
  4144   001D92                     
  4145                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  4146   001D92  010E               	movlb	14	; () banked
  4147   001D94  51D2               	movf	210,w,b	;volatile
  4148   001D96  0BF8               	andlw	-8
  4149   001D98  0903               	iorlw	3
  4150   001D9A  6FD2               	movwf	210,b	;volatile
  4151                           
  4152                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  4153   001D9C  51D3               	movf	211,w,b	;volatile
  4154   001D9E  0BF8               	andlw	-8
  4155   001DA0  0905               	iorlw	5
  4156   001DA2  6FD3               	movwf	211,b	;volatile
  4157   001DA4                     
  4158                           ; BSR set to: 14
  4159                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  4160   001DA4  83D0               	bsf	208,1,b	;volatile
  4161   001DA6                     
  4162                           ; BSR set to: 14
  4163                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  4164   001DA6  89D0               	bsf	208,4,b	;volatile
  4165   001DA8                     
  4166                           ; BSR set to: 14
  4167                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  4168   001DA8  83D1               	bsf	209,1,b	;volatile
  4169   001DAA                     
  4170                           ; BSR set to: 14
  4171                           ;comparator.c: 31:     DAC_init();
  4172   001DAA  ECFD  F00E         	call	_DAC_init	;wreg free
  4173   001DAE                     
  4174                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  4175   001DAE  010E               	movlb	14	; () banked
  4176   001DB0  8FD0               	bsf	208,7,b	;volatile
  4177   001DB2                     
  4178                           ; BSR set to: 14
  4179   001DB2  0012               	return		;funcret
  4180   001DB4                     __end_of_Comp1_init_re:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _Comp1_init_fe *****************
  4184 ;; Defined at:
  4185 ;;		line 36 in file "comparator.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;		None
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;Total ram usage:        0 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 3
  4206 ;; This function calls:
  4207 ;;		_DAC_init
  4208 ;; This function is called by:
  4209 ;;		_main
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text30
  4214   001DB4                     __ptext30:
  4215                           	callstack 0
  4216   001DB4                     _Comp1_init_fe:
  4217                           	callstack 27
  4218   001DB4                     
  4219                           ;comparator.c: 38:     TRISFbits.TRISF7=1;
  4220   001DB4  8E86               	bsf	134,7,c	;volatile
  4221   001DB6                     
  4222                           ;comparator.c: 39:     CM1NCHbits.NCH=0b011;
  4223   001DB6  010E               	movlb	14	; () banked
  4224   001DB8  51D2               	movf	210,w,b	;volatile
  4225   001DBA  0BF8               	andlw	-8
  4226   001DBC  0903               	iorlw	3
  4227   001DBE  6FD2               	movwf	210,b	;volatile
  4228                           
  4229                           ;comparator.c: 40:     CM1PCHbits.PCH=0b101;
  4230   001DC0  51D3               	movf	211,w,b	;volatile
  4231   001DC2  0BF8               	andlw	-8
  4232   001DC4  0905               	iorlw	5
  4233   001DC6  6FD3               	movwf	211,b	;volatile
  4234   001DC8                     
  4235                           ; BSR set to: 14
  4236                           ;comparator.c: 41:     CM1CON0bits.HYS=1;
  4237   001DC8  83D0               	bsf	208,1,b	;volatile
  4238   001DCA                     
  4239                           ; BSR set to: 14
  4240                           ;comparator.c: 42:     CM1CON0bits.POL=1;
  4241   001DCA  89D0               	bsf	208,4,b	;volatile
  4242   001DCC                     
  4243                           ; BSR set to: 14
  4244                           ;comparator.c: 43:     CM1CON1bits.INTN=1;
  4245   001DCC  81D1               	bsf	209,0,b	;volatile
  4246   001DCE                     
  4247                           ; BSR set to: 14
  4248                           ;comparator.c: 44:     DAC_init();
  4249   001DCE  ECFD  F00E         	call	_DAC_init	;wreg free
  4250   001DD2                     
  4251                           ;comparator.c: 45:     CM1CON0bits.EN=1;
  4252   001DD2  010E               	movlb	14	; () banked
  4253   001DD4  8FD0               	bsf	208,7,b	;volatile
  4254   001DD6                     
  4255                           ; BSR set to: 14
  4256   001DD6  0012               	return		;funcret
  4257   001DD8                     __end_of_Comp1_init_fe:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _DAC_init *****************
  4261 ;; Defined at:
  4262 ;;		line 6 in file "comparator.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;Total ram usage:        0 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; Hardware stack levels required when called: 2
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_Comp1_init_re
  4287 ;;		_Comp1_init_fe
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text31
  4292   001DFA                     __ptext31:
  4293                           	callstack 0
  4294   001DFA                     _DAC_init:
  4295                           	callstack 27
  4296   001DFA                     
  4297                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  4298   001DFA  0EF3               	movlw	-13
  4299   001DFC  010E               	movlb	14	; () banked
  4300   001DFE  17C6               	andwf	198,f,b	;volatile
  4301   001E00                     
  4302                           ; BSR set to: 14
  4303                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  4304   001E00  91C6               	bcf	198,0,b	;volatile
  4305                           
  4306                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  4307   001E02  51C7               	movf	199,w,b	;volatile
  4308   001E04  0BE0               	andlw	-32
  4309   001E06  0914               	iorlw	20
  4310   001E08  6FC7               	movwf	199,b	;volatile
  4311   001E0A                     
  4312                           ; BSR set to: 14
  4313                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  4314   001E0A  8FC6               	bsf	198,7,b	;volatile
  4315   001E0C                     
  4316                           ; BSR set to: 14
  4317   001E0C  0012               	return		;funcret
  4318   001E0E                     __end_of_DAC_init:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _LowISR *****************
  4322 ;; Defined at:
  4323 ;;		line 44 in file "interrupts.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;Total ram usage:        3 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		Interrupt level 1
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	intcodelo
  4352   000018                     __pintcodelo:
  4353                           	callstack 0
  4354   000018                     _LowISR:
  4355                           	callstack 20
  4356                           
  4357                           ; BSR set to: 14
  4358                           ;incstack = 0
  4359   000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4360   00001A  CFD8 F002          	movff	status,??_LowISR
  4361   00001E  CFE8 F003          	movff	wreg,??_LowISR+1
  4362   000022  CFE0 F004          	movff	bsr,??_LowISR+2
  4363   000026                     
  4364                           ;interrupts.c: 47:     if (PIR0bits.TMR0IF == 1) {
  4365   000026  010E               	movlb	14	; () banked
  4366   000028  AB33               	btfss	51,5,b	;volatile
  4367   00002A  EF19  F000         	goto	i1u181_21
  4368   00002E  EF1B  F000         	goto	i1u181_20
  4369   000032                     i1u181_21:
  4370   000032  EF24  F000         	goto	i1l184
  4371   000036                     i1u181_20:
  4372   000036                     
  4373                           ; BSR set to: 14
  4374                           ;interrupts.c: 50:         hour++;
  4375   000036  0100               	movlb	0	; () banked
  4376   000038  4B88               	infsnz	_hour& (0+255),f,b
  4377   00003A  2B89               	incf	(_hour+1)& (0+255),f,b
  4378   00003C                     
  4379                           ; BSR set to: 0
  4380                           ;interrupts.c: 51:         TMR0H=00001011;
  4381   00003C  0E09               	movlw	9
  4382   00003E  6ED4               	movwf	212,c	;volatile
  4383   000040                     
  4384                           ; BSR set to: 0
  4385                           ;interrupts.c: 52:         TMR0L=110011011;
  4386   000040  0E83               	movlw	131
  4387   000042  6ED3               	movwf	211,c	;volatile
  4388   000044                     
  4389                           ; BSR set to: 0
  4390                           ;interrupts.c: 53:         PIR0bits.TMR0IF = 0;
  4391   000044  010E               	movlb	14	; () banked
  4392   000046  9B33               	bcf	51,5,b	;volatile
  4393   000048                     i1l184:
  4394                           
  4395                           ; BSR set to: 14
  4396   000048  C004  FFE0         	movff	??_LowISR+2,bsr
  4397   00004C  C003  FFE8         	movff	??_LowISR+1,wreg
  4398   000050  C002  FFD8         	movff	??_LowISR,status
  4399   000054  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4400   000056  0010               	retfie	
  4401   000058                     __end_of_LowISR:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function _HighISR *****************
  4405 ;; Defined at:
  4406 ;;		line 30 in file "interrupts.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;Total ram usage:        1 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		Interrupt level 2
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	intcode
  4434   000008                     __pintcode:
  4435                           	callstack 0
  4436   000008                     _HighISR:
  4437                           	callstack 20
  4438                           
  4439                           ; BSR set to: 14
  4440                           ;incstack = 0
  4441   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4442   00000A  EF02  F00E         	goto	int_func
  4443                           
  4444                           	psect	intcode_body
  4445   001C04                     __pintcode_body:
  4446                           	callstack 20
  4447   001C04                     int_func:
  4448                           	callstack 20
  4449   001C04                     
  4450                           ;interrupts.c: 33:     if (PIR2bits.C1IF == 1) {
  4451   001C04  010E               	movlb	14	; () banked
  4452   001C06  A135               	btfss	53,0,b	;volatile
  4453   001C08  EF08  F00E         	goto	i2u89_41
  4454   001C0C  EF0A  F00E         	goto	i2u89_40
  4455   001C10                     i2u89_41:
  4456   001C10  EF1E  F00E         	goto	i2l178
  4457   001C14                     i2u89_40:
  4458   001C14                     
  4459                           ; BSR set to: 14
  4460                           ;interrupts.c: 34:         LATHbits.LATH3 = !LATHbits.LATH3;
  4461   001C14  A680               	btfss	128,3,c	;volatile
  4462   001C16  EF0F  F00E         	goto	i2u90_41
  4463   001C1A  EF13  F00E         	goto	i2u90_40
  4464   001C1E                     i2u90_41:
  4465   001C1E  6A01               	clrf	??_HighISR^0,c
  4466   001C20  2A01               	incf	??_HighISR^0,f,c
  4467   001C22  EF14  F00E         	goto	i2u91_48
  4468   001C26                     i2u90_40:
  4469   001C26  6A01               	clrf	??_HighISR^0,c
  4470   001C28                     i2u91_48:
  4471   001C28  4601               	rlncf	??_HighISR^0,f,c
  4472   001C2A  4601               	rlncf	??_HighISR^0,f,c
  4473   001C2C  4601               	rlncf	??_HighISR^0,f,c
  4474   001C2E  5080               	movf	128,w,c	;volatile
  4475   001C30  1801               	xorwf	??_HighISR^0,w,c
  4476   001C32  0BF7               	andlw	-9
  4477   001C34  1801               	xorwf	??_HighISR^0,w,c
  4478   001C36  6E80               	movwf	128,c	;volatile
  4479   001C38                     
  4480                           ;interrupts.c: 35:         PIR2bits.C1IF = 0;
  4481   001C38  010E               	movlb	14	; () banked
  4482   001C3A  9135               	bcf	53,0,b	;volatile
  4483   001C3C                     i2l178:
  4484                           
  4485                           ; BSR set to: 14
  4486   001C3C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4487   001C3E  0011               	retfie		f
  4488   001C40                     __end_of_HighISR:
  4489                           	callstack 0
  4490                           
  4491                           	psect	rparam
  4492   000000                     
  4493                           	psect	temp
  4494   00005A                     btemp:
  4495                           	callstack 0
  4496   00005A                     	ds	1
  4497   000000                     int$flags	set	btemp
  4498   000000                     wtemp8	set	btemp+1
  4499   000000                     ttemp5	set	btemp+1
  4500   000000                     ttemp6	set	btemp+4
  4501   000000                     ttemp7	set	btemp+8
  4502                           
  4503                           	psect	config
  4504                           
  4505                           ;Config register CONFIG1L @ 0x300000
  4506                           ;	External Oscillator mode Selection bits
  4507                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4508                           ;	Power-up default value for COSC bits
  4509                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4510   300000                     	org	3145728
  4511   300000  AA                 	db	170
  4512                           
  4513                           ;Config register CONFIG1H @ 0x300001
  4514                           ;	unspecified, using default values
  4515                           ;	Clock Out Enable bit
  4516                           ;	CLKOUTEN = 0x1, unprogrammed default
  4517                           ;	Clock Switch Enable bit
  4518                           ;	CSWEN = 0x1, unprogrammed default
  4519                           ;	Fail-Safe Clock Monitor Enable bit
  4520                           ;	FCMEN = 0x1, unprogrammed default
  4521   300001                     	org	3145729
  4522   300001  FF                 	db	255
  4523                           
  4524                           ;Config register CONFIG3L @ 0x300004
  4525                           ;	WDT Period Select bits
  4526                           ;	WDTCPS = 0x1F, unprogrammed default
  4527                           ;	WDT operating mode
  4528                           ;	WDTE = OFF, WDT Disabled
  4529   300004                     	org	3145732
  4530   300004  9F                 	db	159
  4531                           
  4532                           ;Config register CONFIG3H @ 0x300005
  4533                           ;	unspecified, using default values
  4534                           ;	WDT Window Select bits
  4535                           ;	WDTCWS = 0x7, unprogrammed default
  4536                           ;	WDT input clock selector
  4537                           ;	WDTCCS = 0x7, unprogrammed default
  4538   300005                     	org	3145733
  4539   300005  FF                 	db	255
  4540                           tosu	equ	0xFFF
  4541                           tosh	equ	0xFFE
  4542                           tosl	equ	0xFFD
  4543                           stkptr	equ	0xFFC
  4544                           pclatu	equ	0xFFB
  4545                           pclath	equ	0xFFA
  4546                           pcl	equ	0xFF9
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           indf0	equ	0xFEF
  4554                           postinc0	equ	0xFEE
  4555                           postdec0	equ	0xFED
  4556                           preinc0	equ	0xFEC
  4557                           plusw0	equ	0xFEB
  4558                           fsr0h	equ	0xFEA
  4559                           fsr0l	equ	0xFE9
  4560                           wreg	equ	0xFE8
  4561                           indf1	equ	0xFE7
  4562                           postinc1	equ	0xFE6
  4563                           postdec1	equ	0xFE5
  4564                           preinc1	equ	0xFE4
  4565                           plusw1	equ	0xFE3
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           bsr	equ	0xFE0
  4569                           indf2	equ	0xFDF
  4570                           postinc2	equ	0xFDE
  4571                           postdec2	equ	0xFDD
  4572                           preinc2	equ	0xFDC
  4573                           plusw2	equ	0xFDB
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      89
    BANK0           160     40      74
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1782$buffer	PTR unsigned char  size(2) Largest target is 0

    S1782$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_sendstring->_LCD_sendbyte
    _lastSunday->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   17322
                                              0 BANK0     40    40      0
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                         _isLeapYear
                         _lastSunday
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                          9     2      7    8827
                                             71 COMRAM     9     2      7
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    7222
                                             50 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6565
                                             46 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6206
                                             35 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1099
                                             10 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     767
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             24 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             17 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             12 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1081
                                              9 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _lastSunday                                          36    32      4    4390
                                             21 COMRAM    36    32      4
                            ___lwdiv
                            ___lwmod
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (2) _isLeapYear                                           5     3      2    1465
                                             16 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1223
                                             11 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     350
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1004
                                              9 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0    1048
                                              9 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     960
                                              5 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init_fe
     _DAC_init
   _Comp1_init_re
     _DAC_init
   _Interrupts_init
   _LCD_init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _isLeapYear
     ___lwmod
       ___lwdiv (ARG)
   _lastSunday
     ___lwdiv
     ___lwmod
     _isLeapYear
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      4A       5       46.2%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      59       1       94.7%
BITBIGSFRhlh        4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhhl        1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlhhlhh      8      0       0      38        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BITBIGSFRhll         1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      47        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 08 15:32:36 2024

                            l59 1D3C                              l97 1D68                    ___awdiv@sign 000A  
                            bsr 0FE0             ___wmul@multiplicand 0007               ??_Interrupts_init 0005  
                           l100 147C                             l101 147E                             l110 14EA  
                           l102 1492                             l111 14EC                             l103 1494  
                           l112 1500                             l104 14A8                             l201 1E0C  
                           l113 1502                             l105 14AA                             l114 1516  
                           l106 14BE                             l115 1518                             l107 14C0  
                           l204 1DB2                             l116 152C                             l108 14D4  
                           l212 1A08                             l220 100A                             l109 14D6  
                           l118 152E                             l207 1DD6                             l172 1E1E  
                           l260 1AE4                             l252 1A94                             l254 1AAA  
                           l263 1BE0                             l256 1AC0                             l249 1E2C  
                           l265 1C02                             l273 1C78                             l258 1AD6  
                           l290 198E                             l268 190A                             l524 15F2  
                           l293 1D8E                             l279 1D0E                             l801 1B48  
                           l537 16A2                             l791 1A7C                             l784 1A74  
                           l794 1B40                             l971 1CAC                             l991 182C  
                           l994 186A                             l996 1884                             l999 135E  
                           u980 1762                             u981 175E                             u990 1772  
                           u991 176E                             _abs 1CAE                             _pad 17FC  
                  ___awmod@sign 000A                             wreg 0FE8               main@backward_zone 0080  
                          l1012 1466                            l1020 1750                            l1016 1748  
                          l2001 1716                            l1041 1B8A                            l2011 1AA4  
                          l2003 171E                            l1035 118C                            ?_abs 000B  
                          l1060 17FA                            l2021 1AD8                            l2013 1AAC  
                          l2005 1A80                            l2101 1B16                            l1045 1CC8  
                          l2023 1ADC                            l2015 1ABA                            l2007 1A8E  
                          l2103 1B2C                            l1071 1E2E                            l2031 1046  
                          l2111 1B52                            l1048 1CE0                            l2201 1DC8  
                          l2017 1AC2                            l2009 1A96                            l2105 1B34  
                          l2121 1994                            l2033 104A                            l2025 100C  
                          l2113 1B62                            l2203 1DCA                            l2019 1AD0  
                          l2211 1D10                            l2107 1B3A                            l2123 19B2  
                          l2051 10D0                            l2043 1068                            l2035 1052  
                          l2027 1032                            l2115 1B82                            l1068 1BC6  
                          l2133 1DFA                            l2205 1DCC                            l2301 1C6E  
                          l2221 1D2A                            l2213 1D18                            l2125 19D8  
                          l2141 1CE6                            l2061 113C                            l2053 10DA  
                          l2037 1054                            l2045 109E                            l2029 103A  
                          l2109 1B4A                            l2135 1E00                            l2207 1DCE  
                          l2231 1D3E                            l2223 1D2C                            l2215 1D22  
                          l2127 19FE                            l2119 1990                            l2143 1CF6  
                          l2063 1146                            l2055 10E4                            l2047 10AE  
                          l2039 1060                            l2071 1166                            l2151 1C8A  
                          l2311 1976                            l2303 190C                            l2137 1E0A  
                          l2209 1DD2                            l2081 1BCA                            l2241 1D5A  
                          l2233 1D46                            l2225 1D2E                            l2217 1D24  
                          l2161 1A12                            l2129 1A02                            l2321 0F78  
                          l2313 0E2C                            l2145 1CF8                            l2057 1104  
                          l2049 10C2                            l2153 1C92                            l2305 1922  
                          l2091 1BFA                            l2083 1BDA                            l2251 189E  
                          l2243 1D60                            l2235 1D48                            l2227 1D30  
                          l2219 1D28                            l2171 1A48                            l2163 1A24  
                          l2323 0F84                            l2315 0F42                            l2139 1CE2  
                          l2067 115A                            l2059 1124                            l2155 1CA2  
                          l2147 1C7A                            l2307 194A                            l2181 1E0E  
                          l2085 1BE2                            l2261 18C4                            l2253 18A4  
                          l2245 1D62                            l2237 1D4E                            l2229 1D3A  
                          l2173 1A5E                            l2165 1A2C                            l2093 1AE6  
                          l2341 0FEA                            l2325 0F8C                            l2333 0FB0  
                          l2317 0F52                            l2149 1C82                            l2309 196E  
                          l2191 1DA8                            l2183 1D90                            l2087 1BE8  
                          l2271 18F6                            l2263 18CC                            l2255 18AA  
                          l2247 1D64                            l2239 1D58                            l2175 1A66  
                          l2167 1A34                            l2159 1A0A                            l2095 1AF8  
                          l2343 0FF6                            l2335 0FC4                            l2327 0F98  
                          l2319 0F66                            l2351 11A8                            l2193 1DAA  
                          l2185 1D92                            l2089 1BEE                            l2273 1900  
                          l2265 18D6                            l2257 18B4                            l2249 1886  
                          l2281 14A2                            l2177 1A68                            l2169 1A42  
                          l2097 1B00                            l2345 1002                            l2337 0FD6  
                          l2329 0FA4                            l2361 11F2                            l2353 11BC  
                          l2195 1DAE                            l2187 1DA4                            l2267 18DE  
                          l2259 18BA                            l2291 1510                            l2283 14B8  
                          l2275 1468                            l2179 1A6E                            l2099 1B08  
                          l2339 0FE2                            l1811 1772                            l2371 126A  
                          l2363 1206                            l2355 11C0                            l2197 1DB4  
                          l2189 1DA6                            l2269 18E8                            l2293 1526  
                          l2285 14CE                            l2277 1476                            l1901 166E  
                          l1813 177C                            l1821 1B8C                            l2381 12A2  
                          l2373 126C                            l2365 1218                            l2357 11CC  
                          l2349 118E                            l2199 1DB6                            l2295 1C42  
                          l2287 14E4                            l2279 148C                            l1911 169A  
                          l1903 1676                            l1815 1798                            l1807 1752  
                          l1823 1B98                            l1831 1D86                            l2391 12EC  
                          l2383 12B6                            l2375 1280                            l2367 1240  
                          l2359 11D2                            l2297 1C52                            l2289 14FA  
                          l1841 154A                            l1905 167C                            l1817 17CA  
                          l1809 1762                            l1825 1BA6                            l1921 1824  
                          l2393 12F4                            l2385 12CA                            l2377 1288  
                          l2369 1254                            l2299 1C5C                            l1851 1570  
                          l1843 154E                            l1835 1530                            l1907 1682  
                          l1931 1CAE                            l1827 1BAA                            l1923 1838  
                          l1915 17FC                            l2459 1090                            l2387 12D2  
                          l2379 128C                            l1861 15A6                            l1853 1582  
                          l1845 155C                            l1837 1534                            l1909 1692  
                          l1933 1CBC                            l1925 1848                            l1917 180A  
                          l1941 1300                            l1829 1D6A                            l2389 12D6  
                          l1935 1E20                            l1863 15BC                            l1855 158A  
                          l1871 15D2                            l1847 1564                            l1839 1542  
                          l1927 184C                            l1919 1816                            l1951 1336  
                          l1943 1304                            l1937 1E22                            l1873 15E2  
                          l1865 15C4                            l1857 1592                            l1849 1568  
                          l1881 15F8                            l1929 1878                            l1961 1370  
                          l1953 1346                            l1945 1318                            l1939 1E2A  
                          l1875 15EA                            l1867 15C6                            l1859 15A0  
                          l1891 1628                            l1883 1606                            l1963 1376  
                          l1971 13CA                            l1955 1352                            l1947 1320  
                          l1869 15CC                            l1893 163A                            l1885 160E  
                          l1973 13E4                            l1981 142E                            l1965 13A4  
                          l1957 135A                            l1949 1330                            ?_pad 0012  
                          l1895 1642                            l1887 1612                            l1879 15F4  
                          l1983 143E                            l1975 13F6                            l1967 13A8  
                          l1959 1366                            l1991 16A4                            l1897 164A  
                          l1889 1620                            l1985 1444                            l1977 1406  
                          l1969 13AE                            l1993 16AC                            l1899 1658  
                          l1987 1450                            l1979 1420                            l1995 16D2  
                          l1997 16DA                            l1999 16F6    lastSunday@dayOfWeekMonth31st 0026  
                          STR_1 0E01                            STR_2 0E13                            STR_3 0E1F  
                          u1000 1798                            u1001 1794                            u1010 17CA  
                          u1011 17C6                            u1100 1620                            u1020 1BC6  
                          u1101 161C                            u1021 1BC2                            u1030 1542  
                          u1110 163A                            u1031 153E                            u1111 1636  
                          u1040 155C                            u1120 1658                            u1200 1314  
                          u1041 1558                            u1121 1654                            u1201 130E  
                          u1050 1582                            u1130 166E                            u1210 1316  
                          u1051 157E                            u1131 166A                            u1060 15A0  
                          u1140 1692                            u1220 1330                            u1300 16D2  
                          u1061 159C                            u1141 168E                            u1221 132C  
                          u1301 16CE                            u1070 15BC                            u1150 180A  
                          u1230 1346                            u1310 1748                            u1071 15B8  
                          u1151 1806                            u1231 1342                            u1311 1744  
                          u1320 1A8E                            u1080 15E2                            u1160 1824  
                          u1240 13E4                            u1400 1124                            u1321 1A8A  
                          u1081 15DE                            u1161 1820                            u1241 13E0  
                          u1401 1120                            u1330 1AA4                            u1410 1BDA  
                          u1090 1606                            u1170 186A                            u1250 13F6  
                          u1331 1AA0                            u1411 1BD6                            u1091 1602  
                          u1171 1866                            u1251 13F2                            u1340 1ABA  
                          u1500 1A24                            u1420 1AF8                            u1180 1878  
                          u1260 1406                            u1341 1AB6                            u1501 1A20  
                          u1421 1AF4                            u1181 1874                            u1261 1402  
                          _LATA 0F79                            u1350 1AD0                            u1510 1A42  
                          u1430 1B16                            u1190 1CBC                            u1270 1420  
                          _LATB 0F7A                            u1351 1ACC                            u1511 1A3E  
                          u1431 1B12                            u1191 1CB8                            u1271 141C  
                          u1600 1510                            u1520 1A5E                            u1440 1B2C  
                          u1280 142E                            u1360 1032                            u1601 150C  
                          u1521 1A5A                            u1441 1B28                            u1281 142A  
                          u1361 102E                            u1610 1526                            u1530 1476  
                          u1290 143E                            u1370 10AE                            u1450 1B82  
                          u1611 1522                            u1531 1472                            u1291 143A  
                          u1371 10AA                            u1451 1B7E                            _LATG 0F7F  
                          u1620 1C52                            u1540 148C                            u1460 19B2  
                          u1380 10D0                            u1700 1218                            u1621 1C4E  
                          u1541 1488                            u1461 19AE                            u1381 10CC  
                          u1701 1214                            u1630 1C6E                            u1550 14A2  
                          u1470 19D8                            u1390 1104                            u1710 1254  
                          u1631 1C6A                            u1551 149E                            u1471 19D4  
                          u1391 1100                            u1711 1250                            u1560 14B8  
                          u1480 19FE                            u1640 1922                            u1720 126A  
                          u1561 14B4                            u1481 19FA                            u1641 191E  
                          u1721 1266                            u1570 14CE                            u1650 0F66  
                          u1490 1D0E                            u1730 1280                            u1571 14CA  
                          u1651 0F62                            u1491 1D0A                            u1731 127C  
                          u1580 14E4                            u1660 0F78                            u1740 12A2  
                          u1581 14E0                            u1661 0F74                            u1741 129E  
                          u1590 14FA                            u1670 0FC4                            u1750 12CA  
                          u1591 14F6                            u1671 0FC0                            u1751 12C6  
                          u1680 0FD6                            u1760 12EC                            u1681 0FD2  
                          u1761 12E8                            u1690 1206                            u1907 1E24  
                          u1827 1980                            u1691 1202                            u1837 18A6  
                          u1847 18B6                            u1857 18C6                            u1867 18D8  
                          u1877 18EE                            u1887 1BFC                            u1897 1ADE  
                          abs@a 000B                            _dbuf 008A                            _main 118E  
                          _dtoa 1300                            _hour 0088                            _prec 0057  
                          pad@i 0017                            pad@p 0014                            fsr1h 0FE2  
                          fsr2h 0FDA                            indf2 0FDF                            fsr1l 0FE1  
                          fsr2l 0FD9                            btemp 005A                    ?_LCD_setline 0001  
                          prodh 0FF4                            prodl 0FF3                            start 0058  
              __end_of_DAC_init 1E0E                 __end_of_HighISR 1C40                    ___param_bank 0000  
                         ??_abs 000D                           ??_pad 0016                __end_of_LCD_init 190C  
                         ?_main 0001                           ?_dtoa 0019                 __end_of___awdiv 15F4  
               __end_of___awmod 16A4                 ___awdiv@divisor 0007                 __end_of___lwdiv 1A7E  
                         i1l184 0048                 __end_of___lwmod 1B4A                           i2l178 1C3C  
               ___awdiv@counter 0009                    vfpfcnvrt@fmt 0025                           _TMR0H 0FD4  
                         _TMR0L 0FD3                           _TRISA 0F81                           _TRISB 0F82  
                         _TRISG 0F87                           _flags 0059             read_prec_or_width@c 000D  
           read_prec_or_width@n 000E                           _fputc 1752                           _fputs 1B8C  
                         pad@fp 0012                           _width 0055                           _putch 1E2E  
                         dtoa@d 001A                           dtoa@i 0022                           dtoa@p 001E  
                         dtoa@s 0021                           dtoa@w 001F                   ?_LCD_sendbyte 0006  
                         tablat 0FF5           __end_of_Comp1_init_fe 1DD8           __end_of_Comp1_init_re 1DB4  
                         ttemp5 005B                           ttemp6 005E                           ttemp7 0062  
                         status 0FD8    lastSunday@dayOfYearForDSTEnd 002E                           wtemp8 005B  
               __end_of_sprintf 1CAE                 __initialization 1DD8                    __end_of_main 1300  
                  __end_of_dtoa 1468              lastSunday@leapYear 0036               __end_of_LCD_E_TOG 1E2E  
                        ??_main 0051                          ??_dtoa 001C                   __activetblptr 0003  
    __end_of_read_prec_or_width 1752                    ?_time2String 0048                     lastSunday@h 0022  
                        ?_fputc 0005                          ?_fputs 000D                  ??_LCD_sendbyte 0007  
              ___awdiv@dividend 0005                          ?_putch 0001                          i1l2421 0026  
                        i1l2423 0036                          i1l2425 003C                          i1l2427 0040  
                        i1l2429 0044                          i2l1745 1C04                          i2l1747 1C14  
                        i2l1749 1C38                   vfpfcnvrt@done 002D                       ??_HighISR 0001  
             _LEDarray_disp_bin 1468                          _LowISR 0018              ?_LEDarray_disp_bin 0005  
                 ??_Timer0_init 0005                    vfprintf@cfmt 0032                          ___wmul 1D6A  
                     ??___awdiv 0009                       ??___awmod 0009                       ??___lwdiv 0009  
                     ??___lwmod 0010            read_prec_or_width@ap 000C             ??_LEDarray_disp_bin 0007  
                        clear_0 1DDE                          clear_1 1DEA                ___awdiv@quotient 000B  
               ___awmod@divisor 0007                          isa$std 0001                 ___awmod@counter 0009  
                        pad@buf 0013                          dtoa@fp 0019                          fputc@c 0005  
                        fputs@c 000F                          fputs@i 0010                          fputs@s 000D  
   lastSunday@dayOfWeekMonth1st 0024                    __mediumconst 0000                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                          putch@c 0001  
                     ?_DAC_init 0001                __end_of_vfprintf 1B8C                       ??_sprintf 003B  
     __end_of_LEDarray_disp_bin 1530                      __accesstop 0060         __end_of__initialization 1DF0  
                     ?_LCD_init 0001                   ___rparam_used 0001                   _LEDarray_init 1D3E  
               _Interrupts_init 1E0E                  __pcstackCOMRAM 0001                   __end_of_fputc 17FC  
                 __end_of_fputs 1BC8                   __end_of_putch 1E30             __end_of_Timer0_init 1D3E  
   lastSunday@daysBeforeOctober 002C                      ??_DAC_init 0005                         ??_fputc 0008  
                       ??_fputs 000F                         ??_putch 0005                      __pbssBANK0 0088  
                _LCD_sendnibble 1A7E                      ??_LCD_init 000A                  ?_LEDarray_init 0001  
                _LCD_sendstring 1CE2                         ?_LowISR 0001                         ?___wmul 0005  
          __end_of_LCD_sendbyte 1C04                      _isLeapYear 1990                         i2u90_40 1C26  
                       i2u90_41 1C1E                         i2u91_48 1C28                         i2u89_40 1C14  
                       i2u89_41 1C10          __end_of_LCD_sendnibble 1AE6         __end_of_Interrupts_init 1E20  
                       _HighISR 0008                  lastSunday@year 0016          __end_of_LCD_sendstring 1D10  
                       __Hparam 0000                         __Lparam 0000                     _Timer0_init 1D10  
                    _lastSunday 0E2C                 _isLeapYear$1080 0015                         ___awdiv 1530  
                       ___awmod 15F4                         ___lwdiv 1A0A                         ___lwmod 1AE6  
                     ?_vfprintf 002F                    __psmallconst 0E00                         __pcinit 1DD8  
                       __ramtop 0E00                         __ptext0 118E                         __ptext1 190C  
                       __ptext2 1C7A                         __ptext3 1B4A                         __ptext4 100C  
                       __ptext5 16A4                         __ptext6 1D6A                         __ptext7 1300  
                       __ptext8 17FC                         __ptext9 1B8C           read_prec_or_width@fmt 000B  
              ___awmod@dividend 0005                       _LCD_E_TOG 1E20                 LCD_setline@line 000A  
                       main@day 0086                         main@buf 0060                         _sprintf 1C7A  
                __pintcode_body 1C04            end_of_initialization 1DF0                 ?_LCD_sendnibble 0001  
                       fputc@fp 0007                 ??_LEDarray_init 0005                         int_func 1C04  
                       fputs@fp 000E                 ?_LCD_sendstring 000A              _read_prec_or_width 16A4  
             __end_of_vfpfcnvrt 118E                         postdec2 0FDD             ?_read_prec_or_width 000B  
                       postinc0 0FEE                         postinc1 0FE6                         postinc2 0FDE  
              vfpfcnvrt@convarg 0029                      ??_vfprintf 0032  lastSunday@dayOfYearForDSTStart 002A  
                   ?_isLeapYear 0011                      ?_LCD_E_TOG 0001                       _TRISBbits 0F82  
                     _TRISCbits 0F83                       _TRISEbits 0F85                       _TRISFbits 0F86  
                     _TRISHbits 0F88            ??_read_prec_or_width 000D                     _CM1CON0bits 0ED0  
                   _CM1CON1bits 0ED1                ?_Interrupts_init 0001                     ?_lastSunday 0016  
                __end_of_LowISR 0058                     vfpfcnvrt@ap 0026                     vfpfcnvrt@cp 002E  
                   vfpfcnvrt@fp 0024                  __end_of___wmul 1D90            LCD_sendnibble@number 0005  
           start_initialization 1DD8                     __end_of_abs 1CE2                     __end_of_pad 1886  
                  _LCD_sendbyte 1BC8                   _Comp1_init_fe 1DB4                   _Comp1_init_re 1D90  
                 ??_LCD_setline 000A                        ??_LowISR 0002                     vfprintf@fmt 0030  
          LCD_sendstring@string 000A                        ??___wmul 0009                     __pbssCOMRAM 0051  
                   ??_LCD_E_TOG 0005                   __pcstackBANK0 0060                  ?_Comp1_init_fe 0001  
                ?_Comp1_init_re 0001                        ?_HighISR 0001                ___lwdiv@dividend 0005  
                     _dtoa$1861 001C                    ?_Timer0_init 0001                       __pintcode 0008  
                      ?___awdiv 0005                        ?___awmod 0005             __end_of_LCD_setline 1C7A  
                      ?___lwdiv 0005                        ?___lwmod 000C                     __pintcodelo 0018  
                   __smallconst 0E00                   ??_time2String 004F                ??_LCD_sendnibble 0005  
                      _DAC_init 1DFA                ___lwdiv@quotient 0009                ??_LCD_sendstring 000B  
                      ?_sprintf 0033                LCD_sendbyte@Byte 0009                LCD_sendbyte@type 0006  
                ___wmul@product 0009                        _LATAbits 0F79                        _LATBbits 0F7A  
                      _LATCbits 0F7B                        _LATEbits 0F7D                        _LATFbits 0F7E  
                      _LATGbits 0F7F                        _LATHbits 0F80                        _LCD_init 1886  
                      _IPR0bits 0E1F                        _IPR2bits 0E21                        _PIE0bits 0E29  
                      _PIE2bits 0E2B                        i1u181_20 0036                        i1u181_21 0032  
                      _PIR0bits 0E33                        _PIR2bits 0E35                    time2String@h 0049  
                     _vfpfcnvrt 100C               ___wmul@multiplier 0005                    ??_isLeapYear 0013  
                    _CM1NCHbits 0ED2                 lastSunday@month 0018                      _CM1PCHbits 0ED3  
     lastSunday@daysBeforeMarch 0028                 ??_Comp1_init_fe 0005                 ??_Comp1_init_re 0005  
           __end_of_time2String 1990           __end_of_LEDarray_init 1D6A                     _LCD_setline 1C40  
                      __Hrparam 0000   lastSunday@lastSundayDateMonth 0038              __end_of_isLeapYear 1A0A  
                  ??_lastSunday 001A                      vfprintf@ap 0031                        __Lrparam 0000  
                    vfprintf@fp 002F                      ?_vfpfcnvrt 0024                 _lastSunday$1090 0032  
               _lastSunday$1093 0034                      _ANSELFbits 0EB4                 _lastSunday$2147 0030  
                    sprintf@fmt 0034                      _T0CON0bits 0FD5                      _T0CON1bits 0FD6  
               ___lwdiv@divisor 0007                 ___lwdiv@counter 000B                        __ptext10 1752  
                      __ptext11 1E2E                        __ptext20 1D10                        __ptext12 1CAE  
                      __ptext21 1D3E                        __ptext13 15F4                        __ptext30 1DB4  
                      __ptext22 1468                        __ptext14 1530                        __ptext31 1DFA  
                      __ptext23 1C40                        __ptext15 1CE2                        __ptext24 1886  
                      __ptext16 0E2C                        __ptext25 1BC8                        __ptext17 1990  
                      __ptext26 1A7E                        __ptext18 1AE6                        __ptext27 1E20  
                      __ptext19 1A0A                        __ptext28 1E0E                        __ptext29 1D90  
        LCD_sendbyte@highNibble 0007              __end_of_lastSunday 100C         LEDarray_disp_bin@number 0005  
                      isa$xinst 0000                        int$flags 005A                 time2String@year 004D  
                      _vfprintf 1B4A                        main@leap 0082                        main@year 0084  
                    _INTCONbits 0FF2                     _time2String 190C                        intlevel1 0000  
                      intlevel2 0000                       sprintf@ap 003B                    _DAC1CON0bits 0EC6  
                  _DAC1CON1bits 0EC7                ___lwmod@dividend 000C                  time2String@day 004B  
                time2String@buf 0048                     ??_vfpfcnvrt 0027                        sprintf@f 003C  
                      sprintf@s 0033           LCD_sendbyte@lowNibble 0008                 ___lwmod@divisor 000E  
               ___lwmod@counter 0010                  isLeapYear@year 0011         calc_max_PPM@loopCounter 0051  
