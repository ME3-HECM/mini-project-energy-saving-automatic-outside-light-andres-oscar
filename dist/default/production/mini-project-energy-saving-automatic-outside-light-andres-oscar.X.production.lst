

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 12:23:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _CM2CON1bits	set	3789
    89   000000                     _CM2PCHbits	set	3791
    90   000000                     _CM1CON1bits	set	3793
    91   000000                     _TRISBbits	set	3970
    92   000000                     _LATBbits	set	3962
    93   000000                     _LATAbits	set	3961
    94   000000                     _LATGbits	set	3967
    95   000000                     _IPR0bits	set	3615
    96   000000                     _PIE0bits	set	3625
    97   000000                     _T0CON0bits	set	4053
    98   000000                     _T0CON1bits	set	4054
    99   000000                     _INTCONbits	set	4082
   100   000000                     _PIE2bits	set	3627
   101   000000                     _PIR0bits	set	3635
   102   000000                     _PIR2bits	set	3637
   103   000000                     _ANSELFbits	set	3764
   104   000000                     _LATA	set	3961
   105   000000                     _TMR0L	set	4051
   106   000000                     _TMR0H	set	4052
   107   000000                     _IPR2bits	set	3617
   108   000000                     _LATEbits	set	3965
   109   000000                     _LATCbits	set	3963
   110   000000                     _LATFbits	set	3966
   111   000000                     _LATB	set	3962
   112   000000                     _TRISEbits	set	3973
   113   000000                     _TRISCbits	set	3971
   114   000000                     _TRISFbits	set	3974
   115   000000                     _TRISB	set	3970
   116   000000                     _TRISA	set	3969
   117   000000                     _LATHbits	set	3968
   118   000000                     _LATG	set	3967
   119   000000                     _TRISHbits	set	3976
   120   000000                     _TRISG	set	3975
   121   000000                     _DAC1CON0bits	set	3782
   122   000000                     _CM2CON0bits	set	3788
   123   000000                     _CM2NCHbits	set	3790
   124   000000                     _CM1CON0bits	set	3792
   125   000000                     _CM1NCHbits	set	3794
   126   000000                     _DAC1CON1bits	set	3783
   127   000000                     _CM1PCHbits	set	3795
   128                           
   129                           	psect	smallconst
   130   000E00                     __psmallconst:
   131                           	callstack 0
   132   000E00  00                 	db	0
   133   000E01                     STR_1:
   134                           
   135                           ; BSR set to: 14
   136   000E01  48                 	db	72	;'H'
   137   000E02  3A                 	db	58	;':'
   138   000E03  25                 	db	37
   139   000E04  30                 	db	48	;'0'
   140   000E05  32                 	db	50	;'2'
   141   000E06  64                 	db	100	;'d'
   142   000E07  20                 	db	32
   143   000E08  44                 	db	68	;'D'
   144   000E09  3A                 	db	58	;':'
   145   000E0A  25                 	db	37
   146   000E0B  30                 	db	48	;'0'
   147   000E0C  33                 	db	51	;'3'
   148   000E0D  64                 	db	100	;'d'
   149   000E0E  00                 	db	0
   150   000E0F                     STR_3:
   151                           
   152                           ; BSR set to: 14
   153   000E0F  59                 	db	89	;'Y'
   154   000E10  3A                 	db	58	;':'
   155   000E11  25                 	db	37
   156   000E12  64                 	db	100	;'d'
   157   000E13  20                 	db	32
   158   000E14  4E                 	db	78	;'N'
   159   000E15  6F                 	db	111	;'o'
   160   000E16  72                 	db	114	;'r'
   161   000E17  6D                 	db	109	;'m'
   162   000E18  61                 	db	97	;'a'
   163   000E19  6C                 	db	108	;'l'
   164   000E1A  00                 	db	0
   165   000E1B                     STR_2:
   166                           
   167                           ; BSR set to: 14
   168   000E1B  59                 	db	89	;'Y'
   169   000E1C  3A                 	db	58	;':'
   170   000E1D  25                 	db	37
   171   000E1E  64                 	db	100	;'d'
   172   000E1F  20                 	db	32
   173   000E20  4C                 	db	76	;'L'
   174   000E21  65                 	db	101	;'e'
   175   000E22  61                 	db	97	;'a'
   176   000E23  70                 	db	112	;'p'
   177   000E24  00                 	db	0
   178   000E25  00                 	db	0	; dummy byte at the end
   179   000000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   001FC4                     __pcinit:
   184                           	callstack 0
   185   001FC4                     start_initialization:
   186                           	callstack 0
   187   001FC4                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Clear objects allocated to BANK0 (34 bytes)
   191   001FC4  EE00  F08E         	lfsr	0,__pbssBANK0
   192   001FC8  0E22               	movlw	34
   193   001FCA                     clear_0:
   194   001FCA  6AEE               	clrf	postinc0,c
   195   001FCC  06E8               	decf	wreg,f,c
   196   001FCE  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to COMRAM (5 bytes)
   199   001FD0  6A54               	clrf	(__pbssCOMRAM+4)& (0+255),c
   200   001FD2  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   201   001FD4  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   202   001FD6  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203   001FD8  6A50               	clrf	__pbssCOMRAM& (0+255),c
   204   001FDA                     end_of_initialization:
   205                           	callstack 0
   206   001FDA                     __end_of__initialization:
   207                           	callstack 0
   208   001FDA  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   001FDC  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   001FDE  0100               	movlb	0
   211   001FE0  EF94  F009         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214   000050                     __pbssCOMRAM:
   215                           	callstack 0
   216   000050                     _width:
   217                           	callstack 0
   218   000050                     	ds	2
   219   000052                     _prec:
   220                           	callstack 0
   221   000052                     	ds	2
   222   000054                     _flags:
   223                           	callstack 0
   224   000054                     	ds	1
   225                           
   226                           	psect	bssBANK0
   227   00008E                     __pbssBANK0:
   228                           	callstack 0
   229   00008E                     _dbuf:
   230                           	callstack 0
   231   00008E                     	ds	32
   232   0000AE                     _hour:
   233                           	callstack 0
   234   0000AE                     	ds	2
   235                           
   236                           	psect	cstackBANK0
   237   000060                     __pcstackBANK0:
   238                           	callstack 0
   239   000060                     main@buf:
   240                           	callstack 0
   241                           
   242                           ; 32 bytes @ 0x0
   243   000060                     	ds	32
   244   000080                     main@leap:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x20
   248   000080                     	ds	2
   249   000082                     main@fwd_daylight_savings_day:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x22
   253   000082                     	ds	2
   254   000084                     main@bkwd_daylight_savings_day:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x24
   258   000084                     	ds	2
   259   000086                     main@backward_zone:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x26
   263   000086                     	ds	2
   264   000088                     main@synced:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x28
   268   000088                     	ds	2
   269   00008A                     main@year:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x2A
   273   00008A                     	ds	2
   274   00008C                     main@day:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2C
   278   00008C                     	ds	2
   279                           
   280                           	psect	cstackCOMRAM
   281   000001                     __pcstackCOMRAM:
   282                           	callstack 0
   283   000001                     ??_LowISR:
   284   000001                     
   285                           ; 1 bytes @ 0x0
   286   000001                     	ds	3
   287   000004                     ?___wmul:
   288                           	callstack 0
   289   000004                     ?___awdiv:
   290                           	callstack 0
   291   000004                     ?___awmod:
   292                           	callstack 0
   293   000004                     changeHourDayYear@hour:
   294                           	callstack 0
   295   000004                     sunSync@hour:
   296                           	callstack 0
   297   000004                     LCD_sendnibble@number:
   298                           	callstack 0
   299   000004                     LEDarray_disp_bin@number:
   300                           	callstack 0
   301   000004                     hourChangeDST@day:
   302                           	callstack 0
   303   000004                     ___wmul@multiplier:
   304                           	callstack 0
   305   000004                     ___awdiv@dividend:
   306                           	callstack 0
   307   000004                     ___awmod@dividend:
   308                           	callstack 0
   309   000004                     fputc@c:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x3
   313   000004                     	ds	1
   314   000005                     changeHourDayYear@day:
   315                           	callstack 0
   316   000005                     LCD_sendbyte@type:
   317                           	callstack 0
   318   000005                     sunSync@day:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x4
   322   000005                     	ds	1
   323   000006                     changeHourDayYear@year:
   324                           	callstack 0
   325   000006                     LCD_sendbyte@highNibble:
   326                           	callstack 0
   327   000006                     fputc@fp:
   328                           	callstack 0
   329   000006                     hourChangeDST@fwd_daylight_savings_day:
   330                           	callstack 0
   331   000006                     ___wmul@multiplicand:
   332                           	callstack 0
   333   000006                     ___awdiv@divisor:
   334                           	callstack 0
   335   000006                     ___awmod@divisor:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x5
   339   000006                     	ds	1
   340   000007                     ??_fputc:
   341   000007                     sunSync@synced:
   342                           	callstack 0
   343   000007                     LCD_sendbyte@lowNibble:
   344                           	callstack 0
   345   000007                     changeHourDayYear@leap:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349   000007                     	ds	1
   350   000008                     LCD_sendbyte@Byte:
   351                           	callstack 0
   352   000008                     ___awdiv@counter:
   353                           	callstack 0
   354   000008                     ___awmod@counter:
   355                           	callstack 0
   356   000008                     hourChangeDST@bkwd_daylight_savings_day:
   357                           	callstack 0
   358   000008                     ___wmul@product:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x7
   362   000008                     	ds	1
   363   000009                     ??_LCD_init:
   364   000009                     changeHourDayYear@synced:
   365                           	callstack 0
   366   000009                     LCD_setline@line:
   367                           	callstack 0
   368   000009                     LCD_sendstring@string:
   369                           	callstack 0
   370   000009                     ___awdiv@sign:
   371                           	callstack 0
   372   000009                     ___awmod@sign:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x8
   376   000009                     	ds	1
   377   00000A                     ?_abs:
   378                           	callstack 0
   379   00000A                     ?___lwdiv:
   380                           	callstack 0
   381   00000A                     ?_read_prec_or_width:
   382                           	callstack 0
   383   00000A                     hourChangeDST@hour:
   384                           	callstack 0
   385   00000A                     read_prec_or_width@fmt:
   386                           	callstack 0
   387   00000A                     ___awdiv@quotient:
   388                           	callstack 0
   389   00000A                     ___lwdiv@dividend:
   390                           	callstack 0
   391   00000A                     abs@a:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x9
   395   00000A                     	ds	1
   396   00000B                     hourChangeDST@backward_zone:
   397                           	callstack 0
   398   00000B                     read_prec_or_width@ap:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xA
   402   00000B                     	ds	1
   403   00000C                     ??_abs:
   404   00000C                     read_prec_or_width@c:
   405                           	callstack 0
   406   00000C                     fputs@s:
   407                           	callstack 0
   408   00000C                     ___lwdiv@divisor:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0xB
   412   00000C                     	ds	1
   413   00000D                     fputs@fp:
   414                           	callstack 0
   415   00000D                     read_prec_or_width@n:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xC
   419   00000D                     	ds	1
   420   00000E                     fputs@c:
   421                           	callstack 0
   422   00000E                     ___lwdiv@quotient:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xD
   426   00000E                     	ds	1
   427   00000F                     fputs@i:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xE
   431   00000F                     	ds	1
   432   000010                     ___lwdiv@counter:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xF
   436   000010                     	ds	1
   437   000011                     ?___lwmod:
   438                           	callstack 0
   439   000011                     pad@fp:
   440                           	callstack 0
   441   000011                     ___lwmod@dividend:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445   000011                     	ds	1
   446   000012                     pad@buf:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x11
   450   000012                     	ds	1
   451   000013                     ___lwmod@divisor:
   452                           	callstack 0
   453   000013                     pad@p:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x12
   457   000013                     	ds	2
   458   000015                     ??_pad:
   459   000015                     ___lwmod@counter:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x14
   463   000015                     	ds	1
   464   000016                     ?_isLeapYear:
   465                           	callstack 0
   466   000016                     isLeapYear@year:
   467                           	callstack 0
   468   000016                     pad@i:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472   000016                     	ds	2
   473   000018                     ??_isLeapYear:
   474   000018                     dtoa@fp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x17
   478   000018                     	ds	1
   479   000019                     dtoa@d:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x18
   483   000019                     	ds	1
   484   00001A                     _isLeapYear$1178:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x19
   488   00001A                     	ds	1
   489   00001B                     ?_lastSunday:
   490                           	callstack 0
   491   00001B                     lastSunday@year:
   492                           	callstack 0
   493   00001B                     _dtoa$1981:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x1A
   497   00001B                     	ds	2
   498   00001D                     dtoa@p:
   499                           	callstack 0
   500   00001D                     lastSunday@month:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1C
   504   00001D                     	ds	1
   505   00001E                     dtoa@w:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x1D
   509   00001E                     	ds	1
   510   00001F                     ??_lastSunday:
   511                           
   512                           ; 1 bytes @ 0x1E
   513   00001F                     	ds	1
   514   000020                     dtoa@s:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x1F
   518   000020                     	ds	1
   519   000021                     dtoa@i:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523   000021                     	ds	2
   524   000023                     vfpfcnvrt@fp:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x22
   528   000023                     	ds	1
   529   000024                     vfpfcnvrt@fmt:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x23
   533   000024                     	ds	1
   534   000025                     vfpfcnvrt@ap:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x24
   538   000025                     	ds	1
   539   000026                     ??_vfpfcnvrt:
   540                           
   541                           ; 1 bytes @ 0x25
   542   000026                     	ds	2
   543   000028                     vfpfcnvrt@convarg:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x27
   547   000028                     	ds	1
   548   000029                     lastSunday@h:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x28
   552   000029                     	ds	2
   553   00002B                     lastSunday@dayOfWeekMonth1st:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x2A
   557   00002B                     	ds	1
   558   00002C                     vfpfcnvrt@done:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x2B
   562   00002C                     	ds	1
   563   00002D                     vfpfcnvrt@cp:
   564                           	callstack 0
   565   00002D                     lastSunday@dayOfWeekMonth31st:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x2C
   569   00002D                     	ds	1
   570   00002E                     ?_vfprintf:
   571                           	callstack 0
   572   00002E                     vfprintf@fp:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x2D
   576   00002E                     	ds	1
   577   00002F                     vfprintf@fmt:
   578                           	callstack 0
   579   00002F                     lastSunday@daysBeforeMarch:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2E
   583   00002F                     	ds	1
   584   000030                     vfprintf@ap:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x2F
   588   000030                     	ds	1
   589   000031                     vfprintf@cfmt:
   590                           	callstack 0
   591   000031                     lastSunday@dayOfYearForDSTStart:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x30
   595   000031                     	ds	1
   596   000032                     ?_sprintf:
   597                           	callstack 0
   598   000032                     sprintf@s:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x31
   602   000032                     	ds	1
   603   000033                     sprintf@fmt:
   604                           	callstack 0
   605   000033                     lastSunday@daysBeforeOctober:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x32
   609   000033                     	ds	2
   610   000035                     lastSunday@dayOfYearForDSTEnd:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x34
   614   000035                     	ds	2
   615   000037                     _lastSunday$2258:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x36
   619   000037                     	ds	1
   620   000038                     sprintf@ap:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x37
   624   000038                     	ds	1
   625   000039                     _lastSunday$1188:
   626                           	callstack 0
   627   000039                     sprintf@f:
   628                           	callstack 0
   629                           
   630                           ; 12 bytes @ 0x38
   631   000039                     	ds	2
   632   00003B                     _lastSunday$1191:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x3A
   636   00003B                     	ds	2
   637   00003D                     lastSunday@leapYear:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x3C
   641   00003D                     	ds	2
   642   00003F                     lastSunday@lastSundayDateMonth:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x3E
   646   00003F                     	ds	2
   647   000041                     findDSTdates@hour:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x40
   651   000041                     	ds	2
   652   000043                     findDSTdates@day:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x42
   656   000043                     	ds	2
   657   000045                     time2String@buf:
   658                           	callstack 0
   659   000045                     findDSTdates@year:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x44
   663   000045                     	ds	1
   664   000046                     time2String@h:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x45
   668   000046                     	ds	1
   669   000047                     findDSTdates@fwd_daylight_savings_day:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x46
   673   000047                     	ds	1
   674   000048                     findDSTdates@bkwd_daylight_savings_day:
   675                           	callstack 0
   676   000048                     time2String@day:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x47
   680   000048                     	ds	1
   681   000049                     
   682                           ; 1 bytes @ 0x48
   683   000049                     	ds	1
   684   00004A                     time2String@year:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x49
   688   00004A                     	ds	2
   689   00004C                     time2String@leap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4B
   693   00004C                     	ds	2
   694   00004E                     ??_time2String:
   695                           
   696                           ; 1 bytes @ 0x4D
   697   00004E                     	ds	2
   698   000050                     
   699                           ; 1 bytes @ 0x4F
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 20 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  buf            32    0[BANK0 ] unsigned char [32]
   710 ;;  day             2   44[BANK0 ] unsigned int 
   711 ;;  year            2   42[BANK0 ] unsigned int 
   712 ;;  synced          2   40[BANK0 ] unsigned int 
   713 ;;  backward_zon    2   38[BANK0 ] unsigned int 
   714 ;;  bkwd_dayligh    2   36[BANK0 ] unsigned int 
   715 ;;  fwd_daylight    2   34[BANK0 ] unsigned int 
   716 ;;  leap            2   32[BANK0 ] unsigned int 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   727 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   729 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   730 ;;Total ram usage:       46 bytes
   731 ;; Hardware stack levels required when called: 10
   732 ;; This function calls:
   733 ;;		_LCD_setline
   734 ;;		_LEDarray_disp_bin
   735 ;;		_changeHourDayYear
   736 ;;		_findDSTdates
   737 ;;		_hourChangeDST
   738 ;;		_initialise
   739 ;;		_isLeapYear
   740 ;;		_sunSync
   741 ;;		_time2String
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text0
   748   001328                     __ptext0:
   749                           	callstack 0
   750   001328                     _main:
   751                           	callstack 21
   752   001328                     
   753                           ;main.c: 22:     unsigned int synced = 0;
   754   001328  0E00               	movlw	0
   755   00132A  0100               	movlb	0	; () banked
   756   00132C  6F89               	movwf	(main@synced+1)& (0+255),b
   757   00132E  0E00               	movlw	0
   758   001330  6F88               	movwf	main@synced& (0+255),b
   759                           
   760                           ;main.c: 23:     unsigned int day = 1;
   761   001332  0E00               	movlw	0
   762   001334  6F8D               	movwf	(main@day+1)& (0+255),b
   763   001336  0E01               	movlw	1
   764   001338  6F8C               	movwf	main@day& (0+255),b
   765                           
   766                           ;main.c: 24:     unsigned int year = 2024;
   767   00133A  0E07               	movlw	7
   768   00133C  6F8B               	movwf	(main@year+1)& (0+255),b
   769   00133E  0EE8               	movlw	232
   770   001340  6F8A               	movwf	main@year& (0+255),b
   771                           
   772                           ;main.c: 25:     unsigned int leap;;main.c: 26:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 27:     unsigned int bkwd_daylight_savings_day;;main.c: 28:     unsigned int 
      +                          backward_zone = 0;
   773   001342  0E00               	movlw	0
   774   001344  6F87               	movwf	(main@backward_zone+1)& (0+255),b
   775   001346  0E00               	movlw	0
   776   001348  6F86               	movwf	main@backward_zone& (0+255),b
   777   00134A                     
   778                           ; BSR set to: 0
   779                           ;main.c: 29:     char buf[32];;main.c: 31:     initialise();
   780   00134A  ECF2  F00F         	call	_initialise	;wreg free
   781   00134E                     
   782                           ;main.c: 32:     hour = 0;
   783   00134E  0E00               	movlw	0
   784   001350  0100               	movlb	0	; () banked
   785   001352  6FAF               	movwf	(_hour+1)& (0+255),b
   786   001354  0E00               	movlw	0
   787   001356  6FAE               	movwf	_hour& (0+255),b
   788   001358                     l25:
   789                           
   790                           ;main.c: 34:         leap = isLeapYear(year);
   791   001358  C08A  F016         	movff	main@year,isLeapYear@year
   792   00135C  C08B  F017         	movff	main@year+1,isLeapYear@year+1
   793   001360  EC6C  F00D         	call	_isLeapYear	;wreg free
   794   001364  C016  F080         	movff	?_isLeapYear,main@leap
   795   001368  C017  F081         	movff	?_isLeapYear+1,main@leap+1
   796   00136C                     
   797                           ;main.c: 36:         LEDarray_disp_bin(hour);
   798   00136C  C0AE  F004         	movff	_hour,LEDarray_disp_bin@number
   799   001370  C0AF  F005         	movff	_hour+1,LEDarray_disp_bin@number+1
   800   001374  EC79  F00A         	call	_LEDarray_disp_bin	;wreg free
   801   001378                     
   802                           ;main.c: 38:         LCD_setline(1);
   803   001378  0E01               	movlw	1
   804   00137A  EC16  F00F         	call	_LCD_setline
   805   00137E                     
   806                           ;main.c: 40:         time2String(buf,hour,day,year,leap);
   807   00137E  0E60               	movlw	low main@buf
   808   001380  6E45               	movwf	time2String@buf^0,c
   809   001382  C0AE  F046         	movff	_hour,time2String@h
   810   001386  C0AF  F047         	movff	_hour+1,time2String@h+1
   811   00138A  C08C  F048         	movff	main@day,time2String@day
   812   00138E  C08D  F049         	movff	main@day+1,time2String@day+1
   813   001392  C08A  F04A         	movff	main@year,time2String@year
   814   001396  C08B  F04B         	movff	main@year+1,time2String@year+1
   815   00139A  C080  F04C         	movff	main@leap,time2String@leap
   816   00139E  C081  F04D         	movff	main@leap+1,time2String@leap+1
   817   0013A2  EC9A  F00C         	call	_time2String	;wreg free
   818   0013A6                     
   819                           ;main.c: 42:         findDSTdates(hour, day, year,&fwd_daylight_savings_day, &bkwd_dayli
      +                          ght_savings_day);
   820   0013A6  C0AE  F041         	movff	_hour,findDSTdates@hour
   821   0013AA  C0AF  F042         	movff	_hour+1,findDSTdates@hour+1
   822   0013AE  C08C  F043         	movff	main@day,findDSTdates@day
   823   0013B2  C08D  F044         	movff	main@day+1,findDSTdates@day+1
   824   0013B6  C08A  F045         	movff	main@year,findDSTdates@year
   825   0013BA  C08B  F046         	movff	main@year+1,findDSTdates@year+1
   826   0013BE  0E82               	movlw	low main@fwd_daylight_savings_day
   827   0013C0  6E47               	movwf	findDSTdates@fwd_daylight_savings_day^0,c
   828   0013C2  0E84               	movlw	low main@bkwd_daylight_savings_day
   829   0013C4  6E48               	movwf	findDSTdates@bkwd_daylight_savings_day^0,c
   830   0013C6  EC1E  F00E         	call	_findDSTdates	;wreg free
   831   0013CA                     
   832                           ;main.c: 44:         hourChangeDST(day, fwd_daylight_savings_day, bkwd_daylight_savings_
      +                          day, &hour, &backward_zone);
   833   0013CA  C08C  F004         	movff	main@day,hourChangeDST@day
   834   0013CE  C08D  F005         	movff	main@day+1,hourChangeDST@day+1
   835   0013D2  C082  F006         	movff	main@fwd_daylight_savings_day,hourChangeDST@fwd_daylight_savings_day
   836   0013D6  C083  F007         	movff	main@fwd_daylight_savings_day+1,hourChangeDST@fwd_daylight_savings_day+1
   837   0013DA  C084  F008         	movff	main@bkwd_daylight_savings_day,hourChangeDST@bkwd_daylight_savings_day
   838   0013DE  C085  F009         	movff	main@bkwd_daylight_savings_day+1,hourChangeDST@bkwd_daylight_savings_day+1
   839   0013E2  0EAE               	movlw	low _hour
   840   0013E4  6E0A               	movwf	hourChangeDST@hour^0,c
   841   0013E6  0E86               	movlw	low main@backward_zone
   842   0013E8  6E0B               	movwf	hourChangeDST@backward_zone^0,c
   843   0013EA  ECEE  F00B         	call	_hourChangeDST	;wreg free
   844   0013EE                     
   845                           ;main.c: 46:         changeHourDayYear(&hour, &day, &year, leap, &synced);
   846   0013EE  0EAE               	movlw	low _hour
   847   0013F0  6E04               	movwf	changeHourDayYear@hour^0,c
   848   0013F2  0E8C               	movlw	low main@day
   849   0013F4  6E05               	movwf	changeHourDayYear@day^0,c
   850   0013F6  0E8A               	movlw	low main@year
   851   0013F8  6E06               	movwf	changeHourDayYear@year^0,c
   852   0013FA  C080  F007         	movff	main@leap,changeHourDayYear@leap
   853   0013FE  C081  F008         	movff	main@leap+1,changeHourDayYear@leap+1
   854   001402  0E88               	movlw	low main@synced
   855   001404  6E09               	movwf	changeHourDayYear@synced^0,c
   856   001406  EC13  F00A         	call	_changeHourDayYear	;wreg free
   857   00140A                     
   858                           ;main.c: 48:         sunSync(&hour, day, &synced);
   859   00140A  0EAE               	movlw	low _hour
   860   00140C  6E04               	movwf	sunSync@hour^0,c
   861   00140E  C08C  F005         	movff	main@day,sunSync@day
   862   001412  C08D  F006         	movff	main@day+1,sunSync@day+1
   863   001416  0E88               	movlw	low main@synced
   864   001418  6E07               	movwf	sunSync@synced^0,c
   865   00141A  ECA9  F00D         	call	_sunSync	;wreg free
   866   00141E  EFAC  F009         	goto	l25
   867   001422  EF5E  F000         	goto	start
   868   001426                     __end_of_main:
   869                           	callstack 0
   870                           
   871 ;; *************** function _time2String *****************
   872 ;; Defined at:
   873 ;;		line 130 in file "LCD.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  buf             1   68[COMRAM] PTR unsigned char 
   876 ;;		 -> main@buf(32), 
   877 ;;  h               2   69[COMRAM] unsigned int 
   878 ;;  day             2   71[COMRAM] unsigned int 
   879 ;;  year            2   73[COMRAM] unsigned int 
   880 ;;  leap            2   75[COMRAM] unsigned int 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   892 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   896 ;;Total ram usage:       11 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 9
   899 ;; This function calls:
   900 ;;		_LCD_sendstring
   901 ;;		_LCD_setline
   902 ;;		_sprintf
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text1
   909   001934                     __ptext1:
   910                           	callstack 0
   911   001934                     _time2String:
   912                           	callstack 21
   913   001934                     
   914                           ;LCD.c: 133:     LCD_setline(1);
   915   001934  0E01               	movlw	1
   916   001936  EC16  F00F         	call	_LCD_setline
   917   00193A                     
   918                           ;LCD.c: 134:     sprintf(buf,"H:%02d D:%03d",h,day);
   919   00193A  C045  F032         	movff	time2String@buf,sprintf@s
   920   00193E  0E01               	movlw	low STR_1
   921   001940  6E33               	movwf	sprintf@fmt^0,c
   922   001942  C046  F034         	movff	time2String@h,?_sprintf+2
   923   001946  C047  F035         	movff	time2String@h+1,?_sprintf+3
   924   00194A  C048  F036         	movff	time2String@day,?_sprintf+4
   925   00194E  C049  F037         	movff	time2String@day+1,?_sprintf+5
   926   001952  EC33  F00F         	call	_sprintf	;wreg free
   927   001956                     
   928                           ;LCD.c: 135:     LCD_sendstring(buf);
   929   001956  C045  F009         	movff	time2String@buf,LCD_sendstring@string
   930   00195A  EC67  F00F         	call	_LCD_sendstring	;wreg free
   931   00195E                     
   932                           ;LCD.c: 138:     LCD_setline(2);
   933   00195E  0E02               	movlw	2
   934   001960  EC16  F00F         	call	_LCD_setline
   935   001964                     
   936                           ;LCD.c: 141:     if (leap == 1){
   937   001964  044C               	decf	time2String@leap^0,w,c
   938   001966  104D               	iorwf	(time2String@leap+1)^0,w,c
   939   001968  A4D8               	btfss	status,2,c
   940   00196A  EFB9  F00C         	goto	u1641
   941   00196E  EFBB  F00C         	goto	u1640
   942   001972                     u1641:
   943   001972  EFCB  F00C         	goto	l2345
   944   001976                     u1640:
   945   001976                     
   946                           ;LCD.c: 142:         sprintf(buf,"Y:%d Leap",year);
   947   001976  C045  F032         	movff	time2String@buf,sprintf@s
   948   00197A  0E1B               	movlw	low STR_2
   949   00197C  6E33               	movwf	sprintf@fmt^0,c
   950   00197E  C04A  F034         	movff	time2String@year,?_sprintf+2
   951   001982  C04B  F035         	movff	time2String@year+1,?_sprintf+3
   952   001986  EC33  F00F         	call	_sprintf	;wreg free
   953   00198A                     l2343:
   954                           
   955                           ;LCD.c: 143:         LCD_sendstring(buf);
   956   00198A  C045  F009         	movff	time2String@buf,LCD_sendstring@string
   957   00198E  EC67  F00F         	call	_LCD_sendstring	;wreg free
   958                           
   959                           ;LCD.c: 144:     }
   960   001992  EFD7  F00C         	goto	l2349
   961   001996                     l2345:
   962                           
   963                           ;LCD.c: 148:         sprintf(buf,"Y:%d Normal",year);
   964   001996  C045  F032         	movff	time2String@buf,sprintf@s
   965   00199A  0E0F               	movlw	low STR_3
   966   00199C  6E33               	movwf	sprintf@fmt^0,c
   967   00199E  C04A  F034         	movff	time2String@year,?_sprintf+2
   968   0019A2  C04B  F035         	movff	time2String@year+1,?_sprintf+3
   969   0019A6  EC33  F00F         	call	_sprintf	;wreg free
   970   0019AA  EFC5  F00C         	goto	l2343
   971   0019AE                     l2349:
   972                           
   973                           ;LCD.c: 153:     _delay((unsigned long)((200)*(64000000/4000.0)));
   974   0019AE  0E11               	movlw	17
   975   0019B0  6E4F               	movwf	(??_time2String+1)^0,c
   976   0019B2  0E3C               	movlw	60
   977   0019B4  6E4E               	movwf	??_time2String^0,c
   978   0019B6  0ECB               	movlw	203
   979   0019B8                     u1877:
   980   0019B8  2EE8               	decfsz	wreg,f,c
   981   0019BA  D7FE               	bra	u1877
   982   0019BC  2E4E               	decfsz	??_time2String^0,f,c
   983   0019BE  D7FC               	bra	u1877
   984   0019C0  2E4F               	decfsz	(??_time2String+1)^0,f,c
   985   0019C2  D7FA               	bra	u1877
   986   0019C4  0000               	nop	
   987   0019C6  0012               	return		;funcret
   988   0019C8                     __end_of_time2String:
   989                           	callstack 0
   990                           
   991 ;; *************** function _sprintf *****************
   992 ;; Defined at:
   993 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  s               1   49[COMRAM] PTR unsigned char 
   996 ;;		 -> main@buf(32), 
   997 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
   998 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  f              12   56[COMRAM] struct _IO_FILE
  1001 ;;  ret             2    0        int 
  1002 ;;  ap              1   55[COMRAM] PTR void [1]
  1003 ;;		 -> ?_sprintf(2), 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  2   49[COMRAM] int 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1013 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1014 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;Total ram usage:       19 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 8
  1020 ;; This function calls:
  1021 ;;		_vfprintf
  1022 ;; This function is called by:
  1023 ;;		_time2String
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text2
  1028   001E66                     __ptext2:
  1029                           	callstack 0
  1030   001E66                     _sprintf:
  1031                           	callstack 21
  1032   001E66  0E34               	movlw	low (?_sprintf+2)
  1033   001E68  6E38               	movwf	sprintf@ap^0,c
  1034   001E6A  C032  F039         	movff	sprintf@s,sprintf@f
  1035   001E6E  0E00               	movlw	0
  1036   001E70  6E3D               	movwf	(sprintf@f+4)^0,c
  1037   001E72  0E00               	movlw	0
  1038   001E74  6E3C               	movwf	(sprintf@f+3)^0,c
  1039   001E76  0E00               	movlw	0
  1040   001E78  6E44               	movwf	(sprintf@f+11)^0,c
  1041   001E7A  0E00               	movlw	0
  1042   001E7C  6E43               	movwf	(sprintf@f+10)^0,c
  1043   001E7E  0E39               	movlw	low sprintf@f
  1044   001E80  6E2E               	movwf	vfprintf@fp^0,c
  1045   001E82  C033  F02F         	movff	sprintf@fmt,vfprintf@fmt
  1046   001E86  0E38               	movlw	low sprintf@ap
  1047   001E88  6E30               	movwf	vfprintf@ap^0,c
  1048   001E8A  ECB9  F00E         	call	_vfprintf	;wreg free
  1049   001E8E  5032               	movf	sprintf@s^0,w,c
  1050   001E90  243C               	addwf	(sprintf@f+3)^0,w,c
  1051   001E92  6ED9               	movwf	fsr2l,c
  1052   001E94  6ADA               	clrf	fsr2h,c
  1053   001E96  6ADF               	clrf	indf2,c
  1054   001E98  0012               	return		;funcret
  1055   001E9A                     __end_of_sprintf:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _vfprintf *****************
  1059 ;; Defined at:
  1060 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  1063 ;;		 -> sprintf@f(12), 
  1064 ;;  fmt             1   46[COMRAM] PTR const unsigned char 
  1065 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
  1066 ;;  ap              1   47[COMRAM] PTR PTR void 
  1067 ;;		 -> sprintf@ap(1), 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  cfmt            1   48[COMRAM] PTR unsigned char 
  1070 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2   45[COMRAM] int 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1080 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;Total ram usage:        4 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 7
  1087 ;; This function calls:
  1088 ;;		_vfpfcnvrt
  1089 ;; This function is called by:
  1090 ;;		_sprintf
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text3
  1095   001D72                     __ptext3:
  1096                           	callstack 0
  1097   001D72                     _vfprintf:
  1098                           	callstack 21
  1099   001D72                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1101   001D72  C02F  F031         	movff	vfprintf@fmt,vfprintf@cfmt
  1102                           
  1103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1104   001D76  EFC5  F00E         	goto	l2127
  1105   001D7A                     l2125:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1108   001D7A  C02E  F023         	movff	vfprintf@fp,vfpfcnvrt@fp
  1109   001D7E  0E31               	movlw	low vfprintf@cfmt
  1110   001D80  6E24               	movwf	vfpfcnvrt@fmt^0,c
  1111   001D82  C030  F025         	movff	vfprintf@ap,vfpfcnvrt@ap
  1112   001D86  EC1F  F008         	call	_vfpfcnvrt	;wreg free
  1113   001D8A                     l2127:
  1114                           
  1115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1116   001D8A  C031  FFF6         	movff	vfprintf@cfmt,tblptrl
  1117   001D8E                     	if	1	;There is more than 1 active tblptr byte
  1118   001D8E  0E0E               	movlw	high __smallconst
  1119   001D90  6EF7               	movwf	tblptrh,c
  1120   001D92                     	endif
  1121   001D92                     	if	0	;tblptru may be non-zero
  1122   001D92                     	endif
  1123   001D92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1124   001D92  0E00               	movlw	low (__smallconst shr (0+16))
  1125   001D94  6EF8               	movwf	tblptru,c
  1126   001D96                     	endif
  1127   001D96  0008               	tblrd		*
  1128   001D98  50F5               	movf	tablat,w,c
  1129   001D9A  0900               	iorlw	0
  1130   001D9C  A4D8               	btfss	status,2,c
  1131   001D9E  EFD3  F00E         	goto	u1471
  1132   001DA2  EFD5  F00E         	goto	u1470
  1133   001DA6                     u1471:
  1134   001DA6  EFBD  F00E         	goto	l2125
  1135   001DAA                     u1470:
  1136   001DAA                     
  1137                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1138   001DAA  0E00               	movlw	0
  1139   001DAC  6E2F               	movwf	(?_vfprintf+1)^0,c
  1140   001DAE  0E00               	movlw	0
  1141   001DB0  6E2E               	movwf	?_vfprintf^0,c
  1142   001DB2  0012               	return		;funcret
  1143   001DB4                     __end_of_vfprintf:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _vfpfcnvrt *****************
  1147 ;; Defined at:
  1148 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  fp              1   34[COMRAM] PTR struct _IO_FILE
  1151 ;;		 -> sprintf@f(12), 
  1152 ;;  fmt             1   35[COMRAM] PTR PTR unsigned char 
  1153 ;;		 -> vfprintf@cfmt(1), 
  1154 ;;  ap              1   36[COMRAM] PTR PTR void 
  1155 ;;		 -> sprintf@ap(1), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  convarg         4   39[COMRAM] struct .
  1158 ;;  cp              1   44[COMRAM] PTR unsigned char 
  1159 ;;		 -> STR_3(12), STR_2(10), STR_1(14), 
  1160 ;;  done            1   43[COMRAM] _Bool 
  1161 ;;  c               1    0        unsigned char 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1171 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1174 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;Total ram usage:       11 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 6
  1178 ;; This function calls:
  1179 ;;		_dtoa
  1180 ;;		_fputc
  1181 ;;		_read_prec_or_width
  1182 ;; This function is called by:
  1183 ;;		_vfprintf
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text4
  1188   00103E                     __ptext4:
  1189                           	callstack 0
  1190   00103E                     _vfpfcnvrt:
  1191                           	callstack 21
  1192   00103E                     
  1193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1194   00103E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1195   001040  6ED9               	movwf	fsr2l,c
  1196   001042  6ADA               	clrf	fsr2h,c
  1197   001044  CFDF FFF6          	movff	indf2,tblptrl
  1198   001048                     	if	1	;There is more than 1 active tblptr byte
  1199   001048  0E0E               	movlw	high __smallconst
  1200   00104A  6EF7               	movwf	tblptrh,c
  1201   00104C                     	endif
  1202   00104C                     	if	0	;tblptru may be non-zero
  1203   00104C                     	endif
  1204   00104C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1205   00104C  0E00               	movlw	low (__smallconst shr (0+16))
  1206   00104E  6EF8               	movwf	tblptru,c
  1207   001050                     	endif
  1208   001050  0008               	tblrd		*
  1209   001052  50F5               	movf	tablat,w,c
  1210   001054  0A25               	xorlw	37
  1211   001056  A4D8               	btfss	status,2,c
  1212   001058  EF30  F008         	goto	u1351
  1213   00105C  EF32  F008         	goto	u1350
  1214   001060                     u1351:
  1215   001060  EFCC  F008         	goto	l2059
  1216   001064                     u1350:
  1217   001064                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1219   001064  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1220   001066  6ED9               	movwf	fsr2l,c
  1221   001068  6ADA               	clrf	fsr2h,c
  1222   00106A  2ADF               	incf	indf2,f,c
  1223   00106C                     
  1224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1225   00106C  0E00               	movlw	0
  1226   00106E  6E51               	movwf	(_width+1)^0,c
  1227   001070  0E00               	movlw	0
  1228   001072  6E50               	movwf	_width^0,c
  1229   001074  C050  F054         	movff	_width,_flags
  1230   001078                     
  1231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1232   001078  6852               	setf	_prec^0,c
  1233   00107A  6853               	setf	(_prec+1)^0,c
  1234   00107C                     
  1235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1236   00107C  0E00               	movlw	0
  1237   00107E  6E2C               	movwf	vfpfcnvrt@done^0,c
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1240   001080  EF68  F008         	goto	l2033
  1241   001084                     l2023:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1244   001084  8254               	bsf	_flags^0,1,c
  1245   001086                     
  1246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1247   001086  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1248   001088  6ED9               	movwf	fsr2l,c
  1249   00108A  6ADA               	clrf	fsr2h,c
  1250   00108C  2ADF               	incf	indf2,f,c
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1253   00108E  EF68  F008         	goto	l2033
  1254   001092                     l2027:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1257   001092  0E01               	movlw	1
  1258   001094  6E2C               	movwf	vfpfcnvrt@done^0,c
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1261   001096  EF68  F008         	goto	l2033
  1262   00109A                     l2031:
  1263   00109A  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1264   00109C  6ED9               	movwf	fsr2l,c
  1265   00109E  6ADA               	clrf	fsr2h,c
  1266   0010A0  CFDF FFF6          	movff	indf2,tblptrl
  1267   0010A4                     	if	1	;There is more than 1 active tblptr byte
  1268   0010A4  0E0E               	movlw	high __smallconst
  1269   0010A6  6EF7               	movwf	tblptrh,c
  1270   0010A8                     	endif
  1271   0010A8                     	if	0	;tblptru may be non-zero
  1272   0010A8                     	endif
  1273   0010A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1274   0010A8  0E00               	movlw	low (__smallconst shr (0+16))
  1275   0010AA  6EF8               	movwf	tblptru,c
  1276   0010AC                     	endif
  1277   0010AC  0008               	tblrd		*
  1278   0010AE  50F5               	movf	tablat,w,c
  1279   0010B0  6E26               	movwf	??_vfpfcnvrt^0,c
  1280   0010B2  6A27               	clrf	(??_vfpfcnvrt+1)^0,c
  1281                           
  1282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 1, Range of values is 0 to 0
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte            4     3 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289   0010B4  5027               	movf	(??_vfpfcnvrt+1)^0,w,c
  1290   0010B6  0A00               	xorlw	0	; case 0
  1291   0010B8  B4D8               	btfsc	status,2,c
  1292   0010BA  EF61  F008         	goto	l2471
  1293   0010BE  EF49  F008         	goto	l2027
  1294   0010C2                     l2471:
  1295                           
  1296                           ; Switch size 1, requested type "simple"
  1297                           ; Number of cases is 1, Range of values is 48 to 48
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte            4     3 (average)
  1301                           ;	Chosen strategy is simple_byte
  1302   0010C2  5026               	movf	??_vfpfcnvrt^0,w,c
  1303   0010C4  0A30               	xorlw	48	; case 48
  1304   0010C6  B4D8               	btfsc	status,2,c
  1305   0010C8  EF42  F008         	goto	l2023
  1306   0010CC  EF49  F008         	goto	l2027
  1307   0010D0                     l2033:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1310   0010D0  502C               	movf	vfpfcnvrt@done^0,w,c
  1311   0010D2  B4D8               	btfsc	status,2,c
  1312   0010D4  EF6E  F008         	goto	u1361
  1313   0010D8  EF70  F008         	goto	u1360
  1314   0010DC                     u1361:
  1315   0010DC  EF4D  F008         	goto	l2031
  1316   0010E0                     u1360:
  1317   0010E0                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1319   0010E0  C024  F00A         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1320   0010E4  C025  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1321   0010E8  EC97  F00B         	call	_read_prec_or_width	;wreg free
  1322   0010EC  C00A  F050         	movff	?_read_prec_or_width,_width
  1323   0010F0  C00B  F051         	movff	?_read_prec_or_width+1,_width+1
  1324   0010F4                     
  1325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1326   0010F4  BE51               	btfsc	(_width+1)^0,7,c
  1327   0010F6  EF81  F008         	goto	u1370
  1328   0010FA  EF7F  F008         	goto	u1371
  1329   0010FE                     u1371:
  1330   0010FE  EF86  F008         	goto	l2041
  1331   001102                     u1370:
  1332   001102                     
  1333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1334   001102  8054               	bsf	_flags^0,0,c
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1337   001104  6C50               	negf	_width^0,c
  1338   001106  1E51               	comf	(_width+1)^0,f,c
  1339   001108  B0D8               	btfsc	status,0,c
  1340   00110A  2A51               	incf	(_width+1)^0,f,c
  1341   00110C                     l2041:
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1344   00110C  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1345   00110E  6ED9               	movwf	fsr2l,c
  1346   001110  6ADA               	clrf	fsr2h,c
  1347   001112  50DF               	movf	indf2,w,c
  1348   001114  6E2D               	movwf	vfpfcnvrt@cp^0,c
  1349   001116                     
  1350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1351   001116  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1352   00111A                     	if	1	;There is more than 1 active tblptr byte
  1353   00111A  0E0E               	movlw	high __smallconst
  1354   00111C  6EF7               	movwf	tblptrh,c
  1355   00111E                     	endif
  1356   00111E                     	if	0	;tblptru may be non-zero
  1357   00111E                     	endif
  1358   00111E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1359   00111E  0E00               	movlw	low (__smallconst shr (0+16))
  1360   001120  6EF8               	movwf	tblptru,c
  1361   001122                     	endif
  1362   001122  0008               	tblrd		*
  1363   001124  50F5               	movf	tablat,w,c
  1364   001126  0A64               	xorlw	100
  1365   001128  B4D8               	btfsc	status,2,c
  1366   00112A  EF99  F008         	goto	u1381
  1367   00112E  EF9B  F008         	goto	u1380
  1368   001132                     u1381:
  1369   001132  EFAB  F008         	goto	l2047
  1370   001136                     u1380:
  1371   001136  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1372   00113A                     	if	1	;There is more than 1 active tblptr byte
  1373   00113A  0E0E               	movlw	high __smallconst
  1374   00113C  6EF7               	movwf	tblptrh,c
  1375   00113E                     	endif
  1376   00113E                     	if	0	;tblptru may be non-zero
  1377   00113E                     	endif
  1378   00113E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1379   00113E  0E00               	movlw	low (__smallconst shr (0+16))
  1380   001140  6EF8               	movwf	tblptru,c
  1381   001142                     	endif
  1382   001142  0008               	tblrd		*
  1383   001144  50F5               	movf	tablat,w,c
  1384   001146  0A69               	xorlw	105
  1385   001148  A4D8               	btfss	status,2,c
  1386   00114A  EFA9  F008         	goto	u1391
  1387   00114E  EFAB  F008         	goto	u1390
  1388   001152                     u1391:
  1389   001152  EFC6  F008         	goto	l2055
  1390   001156                     u1390:
  1391   001156                     l2047:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1394   001156  5025               	movf	vfpfcnvrt@ap^0,w,c
  1395   001158  6ED9               	movwf	fsr2l,c
  1396   00115A  6ADA               	clrf	fsr2h,c
  1397   00115C  0E02               	movlw	2
  1398   00115E  26DF               	addwf	indf2,f,c
  1399   001160  5CDF               	subwf	indf2,w,c
  1400   001162  6ED9               	movwf	fsr2l,c
  1401   001164  6ADA               	clrf	fsr2h,c
  1402   001166  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg
  1403   00116A  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg+1
  1404   00116E                     
  1405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1406   00116E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1407   001170  6ED9               	movwf	fsr2l,c
  1408   001172  6ADA               	clrf	fsr2h,c
  1409   001174  282D               	incf	vfpfcnvrt@cp^0,w,c
  1410   001176  6EDF               	movwf	indf2,c
  1411   001178                     
  1412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1413   001178  C023  F018         	movff	vfpfcnvrt@fp,dtoa@fp
  1414   00117C  C028  F019         	movff	vfpfcnvrt@convarg,dtoa@d
  1415   001180  C029  F01A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1416   001184  ECE0  F008         	call	_dtoa	;wreg free
  1417   001188  EFDF  F008         	goto	l1023
  1418   00118C                     l2055:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1421   00118C  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1422   00118E  6ED9               	movwf	fsr2l,c
  1423   001190  6ADA               	clrf	fsr2h,c
  1424   001192  2ADF               	incf	indf2,f,c
  1425   001194  EFDF  F008         	goto	l1023
  1426   001198                     l2059:
  1427                           
  1428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1429   001198  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1430   00119A  6ED9               	movwf	fsr2l,c
  1431   00119C  6ADA               	clrf	fsr2h,c
  1432   00119E  CFDF FFF6          	movff	indf2,tblptrl
  1433   0011A2                     	if	1	;There is more than 1 active tblptr byte
  1434   0011A2  0E0E               	movlw	high __smallconst
  1435   0011A4  6EF7               	movwf	tblptrh,c
  1436   0011A6                     	endif
  1437   0011A6                     	if	0	;tblptru may be non-zero
  1438   0011A6                     	endif
  1439   0011A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1440   0011A6  0E00               	movlw	low (__smallconst shr (0+16))
  1441   0011A8  6EF8               	movwf	tblptru,c
  1442   0011AA                     	endif
  1443   0011AA  0008               	tblrd		*
  1444   0011AC  50F5               	movf	tablat,w,c
  1445   0011AE  6E04               	movwf	fputc@c^0,c
  1446   0011B0  6A05               	clrf	(fputc@c+1)^0,c
  1447   0011B2  C023  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1448   0011B6  EC45  F00C         	call	_fputc	;wreg free
  1449   0011BA  EFC6  F008         	goto	l2055
  1450   0011BE                     l1023:
  1451   0011BE  0012               	return		;funcret
  1452   0011C0                     __end_of_vfpfcnvrt:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _read_prec_or_width *****************
  1456 ;; Defined at:
  1457 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  fmt             1    9[COMRAM] PTR PTR const unsigned c
  1460 ;;		 -> vfprintf@cfmt(1), 
  1461 ;;  ap              1   10[COMRAM] PTR PTR void [1]
  1462 ;;		 -> sprintf@ap(1), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  c               1   11[COMRAM] unsigned char 
  1465 ;;  n               2   12[COMRAM] int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    9[COMRAM] int 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1479 ;;Total ram usage:        5 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 2
  1482 ;; This function calls:
  1483 ;;		___wmul
  1484 ;; This function is called by:
  1485 ;;		_vfpfcnvrt
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text5
  1490   00172E                     __ptext5:
  1491                           	callstack 0
  1492   00172E                     _read_prec_or_width:
  1493                           	callstack 24
  1494   00172E                     
  1495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1496   00172E  0E00               	movlw	0
  1497   001730  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1498   001732  0E00               	movlw	0
  1499   001734  6E0D               	movwf	read_prec_or_width@n^0,c
  1500   001736                     
  1501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1502   001736  500A               	movf	read_prec_or_width@fmt^0,w,c
  1503   001738  6ED9               	movwf	fsr2l,c
  1504   00173A  6ADA               	clrf	fsr2h,c
  1505   00173C  CFDF FFF6          	movff	indf2,tblptrl
  1506   001740                     	if	1	;There is more than 1 active tblptr byte
  1507   001740  0E0E               	movlw	high __smallconst
  1508   001742  6EF7               	movwf	tblptrh,c
  1509   001744                     	endif
  1510   001744                     	if	0	;tblptru may be non-zero
  1511   001744                     	endif
  1512   001744                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1513   001744  0E00               	movlw	low (__smallconst shr (0+16))
  1514   001746  6EF8               	movwf	tblptru,c
  1515   001748                     	endif
  1516   001748  0008               	tblrd		*
  1517   00174A  50F5               	movf	tablat,w,c
  1518   00174C  0A2A               	xorlw	42
  1519   00174E  A4D8               	btfss	status,2,c
  1520   001750  EFAC  F00B         	goto	u1261
  1521   001754  EFAE  F00B         	goto	u1260
  1522   001758                     u1261:
  1523   001758  EFD4  F00B         	goto	l1975
  1524   00175C                     u1260:
  1525   00175C                     
  1526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1527   00175C  500A               	movf	read_prec_or_width@fmt^0,w,c
  1528   00175E  6ED9               	movwf	fsr2l,c
  1529   001760  6ADA               	clrf	fsr2h,c
  1530   001762  2ADF               	incf	indf2,f,c
  1531   001764                     
  1532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1533   001764  500B               	movf	read_prec_or_width@ap^0,w,c
  1534   001766  6ED9               	movwf	fsr2l,c
  1535   001768  6ADA               	clrf	fsr2h,c
  1536   00176A  0E02               	movlw	2
  1537   00176C  26DF               	addwf	indf2,f,c
  1538   00176E  5CDF               	subwf	indf2,w,c
  1539   001770  6ED9               	movwf	fsr2l,c
  1540   001772  6ADA               	clrf	fsr2h,c
  1541   001774  CFDE F00D          	movff	postinc2,read_prec_or_width@n
  1542   001778  CFDE F00E          	movff	postinc2,read_prec_or_width@n+1
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1545   00177C  EFE9  F00B         	goto	l1004
  1546   001780                     l1971:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1549   001780  C00D  F004         	movff	read_prec_or_width@n,___wmul@multiplier
  1550   001784  C00E  F005         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1551   001788  0E00               	movlw	0
  1552   00178A  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  1553   00178C  0E0A               	movlw	10
  1554   00178E  6E06               	movwf	___wmul@multiplicand^0,c
  1555   001790  ECAB  F00F         	call	___wmul	;wreg free
  1556   001794  500C               	movf	read_prec_or_width@c^0,w,c
  1557   001796  2404               	addwf	?___wmul^0,w,c
  1558   001798  6E0D               	movwf	read_prec_or_width@n^0,c
  1559   00179A  0E00               	movlw	0
  1560   00179C  2005               	addwfc	(?___wmul+1)^0,w,c
  1561   00179E  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1562   0017A0                     
  1563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1564   0017A0  500A               	movf	read_prec_or_width@fmt^0,w,c
  1565   0017A2  6ED9               	movwf	fsr2l,c
  1566   0017A4  6ADA               	clrf	fsr2h,c
  1567   0017A6  2ADF               	incf	indf2,f,c
  1568   0017A8                     l1975:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1571   0017A8  500A               	movf	read_prec_or_width@fmt^0,w,c
  1572   0017AA  6ED9               	movwf	fsr2l,c
  1573   0017AC  6ADA               	clrf	fsr2h,c
  1574   0017AE  CFDF FFF6          	movff	indf2,tblptrl
  1575   0017B2                     	if	1	;There is more than 1 active tblptr byte
  1576   0017B2  0E0E               	movlw	high __smallconst
  1577   0017B4  6EF7               	movwf	tblptrh,c
  1578   0017B6                     	endif
  1579   0017B6                     	if	0	;tblptru may be non-zero
  1580   0017B6                     	endif
  1581   0017B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1582   0017B6  0E00               	movlw	low (__smallconst shr (0+16))
  1583   0017B8  6EF8               	movwf	tblptru,c
  1584   0017BA                     	endif
  1585   0017BA  0008               	tblrd		*
  1586   0017BC  50F5               	movf	tablat,w,c
  1587   0017BE  0FD0               	addlw	208
  1588   0017C0  6E0C               	movwf	read_prec_or_width@c^0,c
  1589   0017C2  0E09               	movlw	9
  1590   0017C4  640C               	cpfsgt	read_prec_or_width@c^0,c
  1591   0017C6  EFE7  F00B         	goto	u1271
  1592   0017CA  EFE9  F00B         	goto	u1270
  1593   0017CE                     u1271:
  1594   0017CE  EFC0  F00B         	goto	l1971
  1595   0017D2                     u1270:
  1596   0017D2                     l1004:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1599   0017D2  C00D  F00A         	movff	read_prec_or_width@n,?_read_prec_or_width
  1600   0017D6  C00E  F00B         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1601   0017DA  0012               	return		;funcret
  1602   0017DC                     __end_of_read_prec_or_width:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _dtoa *****************
  1606 ;; Defined at:
  1607 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1610 ;;		 -> sprintf@f(12), 
  1611 ;;  d               2   24[COMRAM] int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  i               2   32[COMRAM] int 
  1614 ;;  w               2   29[COMRAM] int 
  1615 ;;  s               1   31[COMRAM] unsigned char 
  1616 ;;  p               1   28[COMRAM] _Bool 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1626 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;Total ram usage:       11 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 5
  1633 ;; This function calls:
  1634 ;;		___awdiv
  1635 ;;		___awmod
  1636 ;;		_abs
  1637 ;;		_pad
  1638 ;; This function is called by:
  1639 ;;		_vfpfcnvrt
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text6
  1644   0011C0                     __ptext6:
  1645                           	callstack 0
  1646   0011C0                     _dtoa:
  1647                           	callstack 21
  1648   0011C0                     
  1649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1650   0011C0  0E01               	movlw	1
  1651   0011C2  6E1D               	movwf	dtoa@p^0,c
  1652   0011C4                     
  1653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1654   0011C4  BE1A               	btfsc	(dtoa@d+1)^0,7,c
  1655   0011C6  EFE7  F008         	goto	u1161
  1656   0011CA  EFEA  F008         	goto	u1160
  1657   0011CE                     u1161:
  1658   0011CE  0E01               	movlw	1
  1659   0011D0  EFEB  F008         	goto	u1170
  1660   0011D4                     u1160:
  1661   0011D4  0E00               	movlw	0
  1662   0011D6                     u1170:
  1663   0011D6  6E20               	movwf	dtoa@s^0,c
  1664   0011D8                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1666   0011D8  C050  F01E         	movff	_width,dtoa@w
  1667   0011DC  C051  F01F         	movff	_width+1,dtoa@w+1
  1668   0011E0                     
  1669                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1670   0011E0  5020               	movf	dtoa@s^0,w,c
  1671   0011E2  B4D8               	btfsc	status,2,c
  1672   0011E4  EFF6  F008         	goto	u1181
  1673   0011E8  EFF8  F008         	goto	u1180
  1674   0011EC                     u1181:
  1675   0011EC  EF0F  F009         	goto	l987
  1676   0011F0                     u1180:
  1677   0011F0                     
  1678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1679   0011F0  061E               	decf	dtoa@w^0,f,c
  1680   0011F2  A0D8               	btfss	status,0,c
  1681   0011F4  061F               	decf	(dtoa@w+1)^0,f,c
  1682   0011F6                     
  1683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1684   0011F6  5020               	movf	dtoa@s^0,w,c
  1685   0011F8  A4D8               	btfss	status,2,c
  1686   0011FA  EF01  F009         	goto	u1191
  1687   0011FE  EF03  F009         	goto	u1190
  1688   001202                     u1191:
  1689   001202  EF09  F009         	goto	l1927
  1690   001206                     u1190:
  1691   001206  0E00               	movlw	0
  1692   001208  6E1C               	movwf	(_dtoa$1981+1)^0,c
  1693   00120A  0E2B               	movlw	43
  1694   00120C  6E1B               	movwf	_dtoa$1981^0,c
  1695   00120E  EF0D  F009         	goto	l1929
  1696   001212                     l1927:
  1697   001212  0E00               	movlw	0
  1698   001214  6E1C               	movwf	(_dtoa$1981+1)^0,c
  1699   001216  0E2D               	movlw	45
  1700   001218  6E1B               	movwf	_dtoa$1981^0,c
  1701   00121A                     l1929:
  1702   00121A  C01B  F020         	movff	_dtoa$1981,dtoa@s
  1703   00121E                     l987:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1706   00121E  0E00               	movlw	0
  1707   001220  6E22               	movwf	(dtoa@i+1)^0,c
  1708   001222  0E1F               	movlw	31
  1709   001224  6E21               	movwf	dtoa@i^0,c
  1710   001226                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1712   001226  0E00               	movlw	0
  1713   001228  0100               	movlb	0	; () banked
  1714   00122A  6FAD               	movwf	(_dbuf+31)& (0+255),b
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1717   00122C  EF45  F009         	goto	l1943
  1718   001230                     l1933:
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1721   001230  0621               	decf	dtoa@i^0,f,c
  1722   001232  A0D8               	btfss	status,0,c
  1723   001234  0622               	decf	(dtoa@i+1)^0,f,c
  1724   001236                     
  1725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1726   001236  5021               	movf	dtoa@i^0,w,c
  1727   001238  0F8E               	addlw	low _dbuf
  1728   00123A  6ED9               	movwf	fsr2l,c
  1729   00123C  6ADA               	clrf	fsr2h,c
  1730   00123E  C019  F004         	movff	dtoa@d,___awmod@dividend
  1731   001242  C01A  F005         	movff	dtoa@d+1,___awmod@dividend+1
  1732   001246  0E00               	movlw	0
  1733   001248  6E07               	movwf	(___awmod@divisor+1)^0,c
  1734   00124A  0E0A               	movlw	10
  1735   00124C  6E06               	movwf	___awmod@divisor^0,c
  1736   00124E  EC3F  F00B         	call	___awmod	;wreg free
  1737   001252  C004  F00A         	movff	?___awmod,abs@a
  1738   001256  C005  F00B         	movff	?___awmod+1,abs@a+1
  1739   00125A  EC4D  F00F         	call	_abs	;wreg free
  1740   00125E  500A               	movf	?_abs^0,w,c
  1741   001260  0F30               	addlw	48
  1742   001262  6EDF               	movwf	indf2,c
  1743   001264                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1745   001264  0E00               	movlw	0
  1746   001266  6E1D               	movwf	dtoa@p^0,c
  1747   001268                     
  1748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1749   001268  061E               	decf	dtoa@w^0,f,c
  1750   00126A  A0D8               	btfss	status,0,c
  1751   00126C  061F               	decf	(dtoa@w+1)^0,f,c
  1752   00126E                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1754   00126E  C019  F004         	movff	dtoa@d,___awdiv@dividend
  1755   001272  C01A  F005         	movff	dtoa@d+1,___awdiv@dividend+1
  1756   001276  0E00               	movlw	0
  1757   001278  6E07               	movwf	(___awdiv@divisor+1)^0,c
  1758   00127A  0E0A               	movlw	10
  1759   00127C  6E06               	movwf	___awdiv@divisor^0,c
  1760   00127E  ECDD  F00A         	call	___awdiv	;wreg free
  1761   001282  C004  F019         	movff	?___awdiv,dtoa@d
  1762   001286  C005  F01A         	movff	?___awdiv+1,dtoa@d+1
  1763   00128A                     l1943:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1766   00128A  BE22               	btfsc	(dtoa@i+1)^0,7,c
  1767   00128C  EF50  F009         	goto	u1201
  1768   001290  5022               	movf	(dtoa@i+1)^0,w,c
  1769   001292  E108               	bnz	u1200
  1770   001294  0421               	decf	dtoa@i^0,w,c
  1771   001296  A0D8               	btfss	status,0,c
  1772   001298  EF50  F009         	goto	u1201
  1773   00129C  EF52  F009         	goto	u1200
  1774   0012A0                     u1201:
  1775   0012A0  EF77  F009         	goto	l1953
  1776   0012A4                     u1200:
  1777   0012A4  5019               	movf	dtoa@d^0,w,c
  1778   0012A6  101A               	iorwf	(dtoa@d+1)^0,w,c
  1779   0012A8  A4D8               	btfss	status,2,c
  1780   0012AA  EF59  F009         	goto	u1211
  1781   0012AE  EF5B  F009         	goto	u1210
  1782   0012B2                     u1211:
  1783   0012B2  EF18  F009         	goto	l1933
  1784   0012B6                     u1210:
  1785   0012B6  501D               	movf	dtoa@p^0,w,c
  1786   0012B8  A4D8               	btfss	status,2,c
  1787   0012BA  EF61  F009         	goto	u1221
  1788   0012BE  EF63  F009         	goto	u1220
  1789   0012C2                     u1221:
  1790   0012C2  EF18  F009         	goto	l1933
  1791   0012C6                     u1220:
  1792   0012C6  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  1793   0012C8  EF6E  F009         	goto	u1231
  1794   0012CC  501F               	movf	(dtoa@w+1)^0,w,c
  1795   0012CE  E108               	bnz	u1230
  1796   0012D0  041E               	decf	dtoa@w^0,w,c
  1797   0012D2  A0D8               	btfss	status,0,c
  1798   0012D4  EF6E  F009         	goto	u1231
  1799   0012D8  EF70  F009         	goto	u1230
  1800   0012DC                     u1231:
  1801   0012DC  EF77  F009         	goto	l1953
  1802   0012E0                     u1230:
  1803   0012E0  B254               	btfsc	_flags^0,1,c
  1804   0012E2  EF75  F009         	goto	u1241
  1805   0012E6  EF77  F009         	goto	u1240
  1806   0012EA                     u1241:
  1807   0012EA  EF18  F009         	goto	l1933
  1808   0012EE                     u1240:
  1809   0012EE                     l1953:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1812   0012EE  5020               	movf	dtoa@s^0,w,c
  1813   0012F0  B4D8               	btfsc	status,2,c
  1814   0012F2  EF7D  F009         	goto	u1251
  1815   0012F6  EF7F  F009         	goto	u1250
  1816   0012FA                     u1251:
  1817   0012FA  EF88  F009         	goto	l1959
  1818   0012FE                     u1250:
  1819   0012FE                     
  1820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1821   0012FE  0621               	decf	dtoa@i^0,f,c
  1822   001300  A0D8               	btfss	status,0,c
  1823   001302  0622               	decf	(dtoa@i+1)^0,f,c
  1824   001304                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1826   001304  5021               	movf	dtoa@i^0,w,c
  1827   001306  0F8E               	addlw	low _dbuf
  1828   001308  6ED9               	movwf	fsr2l,c
  1829   00130A  6ADA               	clrf	fsr2h,c
  1830   00130C  C020  FFDF         	movff	dtoa@s,indf2
  1831   001310                     l1959:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1834   001310  C018  F011         	movff	dtoa@fp,pad@fp
  1835   001314  5021               	movf	dtoa@i^0,w,c
  1836   001316  0F8E               	addlw	low _dbuf
  1837   001318  6E12               	movwf	pad@buf^0,c
  1838   00131A  C01E  F013         	movff	dtoa@w,pad@p
  1839   00131E  C01F  F014         	movff	dtoa@w+1,pad@p+1
  1840   001322  ECE4  F00C         	call	_pad	;wreg free
  1841   001326  0012               	return		;funcret
  1842   001328                     __end_of_dtoa:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _pad *****************
  1846 ;; Defined at:
  1847 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  1850 ;;		 -> sprintf@f(12), 
  1851 ;;  buf             1   17[COMRAM] PTR unsigned char 
  1852 ;;		 -> dbuf(32), 
  1853 ;;  p               2   18[COMRAM] int 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  i               2   21[COMRAM] int 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;Total ram usage:        7 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 4
  1872 ;; This function calls:
  1873 ;;		_fputc
  1874 ;;		_fputs
  1875 ;; This function is called by:
  1876 ;;		_dtoa
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text7
  1881   0019C8                     __ptext7:
  1882                           	callstack 0
  1883   0019C8                     _pad:
  1884                           	callstack 21
  1885   0019C8                     
  1886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1887   0019C8  A054               	btfss	_flags^0,0,c
  1888   0019CA  EFE9  F00C         	goto	u1111
  1889   0019CE  EFEB  F00C         	goto	u1110
  1890   0019D2                     u1111:
  1891   0019D2  EFF1  F00C         	goto	l1891
  1892   0019D6                     u1110:
  1893   0019D6                     
  1894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1895   0019D6  C012  F00C         	movff	pad@buf,fputs@s
  1896   0019DA  C011  F00D         	movff	pad@fp,fputs@fp
  1897   0019DE  ECDA  F00E         	call	_fputs	;wreg free
  1898   0019E2                     l1891:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1901   0019E2  BE14               	btfsc	(pad@p+1)^0,7,c
  1902   0019E4  EFF8  F00C         	goto	u1120
  1903   0019E8  EFF6  F00C         	goto	u1121
  1904   0019EC                     u1121:
  1905   0019EC  EFFC  F00C         	goto	l979
  1906   0019F0                     u1120:
  1907   0019F0                     
  1908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1909   0019F0  0E00               	movlw	0
  1910   0019F2  6E14               	movwf	(pad@p+1)^0,c
  1911   0019F4  0E00               	movlw	0
  1912   0019F6  6E13               	movwf	pad@p^0,c
  1913   0019F8                     l979:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1916   0019F8  0E00               	movlw	0
  1917   0019FA  6E17               	movwf	(pad@i+1)^0,c
  1918   0019FC  0E00               	movlw	0
  1919   0019FE  6E16               	movwf	pad@i^0,c
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1922   001A00  EF0C  F00D         	goto	l1899
  1923   001A04                     l1895:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1926   001A04  0E00               	movlw	0
  1927   001A06  6E05               	movwf	(fputc@c+1)^0,c
  1928   001A08  0E20               	movlw	32
  1929   001A0A  6E04               	movwf	fputc@c^0,c
  1930   001A0C  C011  F006         	movff	pad@fp,fputc@fp
  1931   001A10  EC45  F00C         	call	_fputc	;wreg free
  1932   001A14                     
  1933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1934   001A14  4A16               	infsnz	pad@i^0,f,c
  1935   001A16  2A17               	incf	(pad@i+1)^0,f,c
  1936   001A18                     l1899:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1939   001A18  5013               	movf	pad@p^0,w,c
  1940   001A1A  5C16               	subwf	pad@i^0,w,c
  1941   001A1C  5017               	movf	(pad@i+1)^0,w,c
  1942   001A1E  0A80               	xorlw	128
  1943   001A20  6E15               	movwf	??_pad^0,c
  1944   001A22  5014               	movf	(pad@p+1)^0,w,c
  1945   001A24  0A80               	xorlw	128
  1946   001A26  5815               	subwfb	??_pad^0,w,c
  1947   001A28  A0D8               	btfss	status,0,c
  1948   001A2A  EF19  F00D         	goto	u1131
  1949   001A2E  EF1B  F00D         	goto	u1130
  1950   001A32                     u1131:
  1951   001A32  EF02  F00D         	goto	l1895
  1952   001A36                     u1130:
  1953   001A36                     
  1954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1955   001A36  B054               	btfsc	_flags^0,0,c
  1956   001A38  EF20  F00D         	goto	u1141
  1957   001A3C  EF22  F00D         	goto	u1140
  1958   001A40                     u1141:
  1959   001A40  EF28  F00D         	goto	l984
  1960   001A44                     u1140:
  1961   001A44                     
  1962                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1963   001A44  C012  F00C         	movff	pad@buf,fputs@s
  1964   001A48  C011  F00D         	movff	pad@fp,fputs@fp
  1965   001A4C  ECDA  F00E         	call	_fputs	;wreg free
  1966   001A50                     l984:
  1967   001A50  0012               	return		;funcret
  1968   001A52                     __end_of_pad:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _fputs *****************
  1972 ;; Defined at:
  1973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1976 ;;		 -> dbuf(32), 
  1977 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1978 ;;		 -> sprintf@f(12), 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  i               2   14[COMRAM] int 
  1981 ;;  c               1   13[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2   11[COMRAM] int 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;Total ram usage:        5 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 3
  1998 ;; This function calls:
  1999 ;;		_fputc
  2000 ;; This function is called by:
  2001 ;;		_pad
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text8
  2006   001DB4                     __ptext8:
  2007                           	callstack 0
  2008   001DB4                     _fputs:
  2009                           	callstack 21
  2010   001DB4  0E00               	movlw	0
  2011   001DB6  6E10               	movwf	(fputs@i+1)^0,c
  2012   001DB8  0E00               	movlw	0
  2013   001DBA  6E0F               	movwf	fputs@i^0,c
  2014   001DBC  EFE9  F00E         	goto	l1799
  2015   001DC0                     l1795:
  2016   001DC0  C00E  F004         	movff	fputs@c,fputc@c
  2017   001DC4  6A05               	clrf	(fputc@c+1)^0,c
  2018   001DC6  C00D  F006         	movff	fputs@fp,fputc@fp
  2019   001DCA  EC45  F00C         	call	_fputc	;wreg free
  2020   001DCE  4A0F               	infsnz	fputs@i^0,f,c
  2021   001DD0  2A10               	incf	(fputs@i+1)^0,f,c
  2022   001DD2                     l1799:
  2023   001DD2  500C               	movf	fputs@s^0,w,c
  2024   001DD4  240F               	addwf	fputs@i^0,w,c
  2025   001DD6  6ED9               	movwf	fsr2l,c
  2026   001DD8  6ADA               	clrf	fsr2h,c
  2027   001DDA  50DF               	movf	indf2,w,c
  2028   001DDC  6E0E               	movwf	fputs@c^0,c
  2029   001DDE  500E               	movf	fputs@c^0,w,c
  2030   001DE0  A4D8               	btfss	status,2,c
  2031   001DE2  EFF5  F00E         	goto	u981
  2032   001DE6  EFF7  F00E         	goto	u980
  2033   001DEA                     u981:
  2034   001DEA  EFE0  F00E         	goto	l1795
  2035   001DEE                     u980:
  2036   001DEE  0012               	return		;funcret
  2037   001DF0                     __end_of_fputs:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _fputc *****************
  2041 ;; Defined at:
  2042 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  c               2    3[COMRAM] int 
  2045 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  2046 ;;		 -> sprintf@f(12), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    3[COMRAM] int 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2058 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;Total ram usage:        8 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		_putch
  2067 ;; This function is called by:
  2068 ;;		_pad
  2069 ;;		_vfpfcnvrt
  2070 ;;		_fputs
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text9
  2075   00188A                     __ptext9:
  2076                           	callstack 0
  2077   00188A                     _fputc:
  2078                           	callstack 24
  2079   00188A  5006               	movf	fputc@fp^0,w,c
  2080   00188C  B4D8               	btfsc	status,2,c
  2081   00188E  EF4B  F00C         	goto	u941
  2082   001892  EF4D  F00C         	goto	u940
  2083   001896                     u941:
  2084   001896  EF55  F00C         	goto	l1783
  2085   00189A                     u940:
  2086   00189A  5006               	movf	fputc@fp^0,w,c
  2087   00189C  A4D8               	btfss	status,2,c
  2088   00189E  EF53  F00C         	goto	u951
  2089   0018A2  EF55  F00C         	goto	u950
  2090   0018A6                     u951:
  2091   0018A6  EF5A  F00C         	goto	l1785
  2092   0018AA                     u950:
  2093   0018AA                     l1783:
  2094   0018AA  5004               	movf	fputc@c^0,w,c
  2095   0018AC  EC1D  F010         	call	_putch
  2096   0018B0  EF99  F00C         	goto	l1048
  2097   0018B4                     l1785:
  2098   0018B4  5006               	movf	fputc@fp^0,w,c
  2099   0018B6  6ED9               	movwf	fsr2l,c
  2100   0018B8  6ADA               	clrf	fsr2h,c
  2101   0018BA  0E0A               	movlw	10
  2102   0018BC  26D9               	addwf	fsr2l,f,c
  2103   0018BE  50DE               	movf	postinc2,w,c
  2104   0018C0  10DE               	iorwf	postinc2,w,c
  2105   0018C2  B4D8               	btfsc	status,2,c
  2106   0018C4  EF66  F00C         	goto	u961
  2107   0018C8  EF68  F00C         	goto	u960
  2108   0018CC                     u961:
  2109   0018CC  EF81  F00C         	goto	l1789
  2110   0018D0                     u960:
  2111   0018D0  5006               	movf	fputc@fp^0,w,c
  2112   0018D2  6ED9               	movwf	fsr2l,c
  2113   0018D4  6ADA               	clrf	fsr2h,c
  2114   0018D6  0E0A               	movlw	10
  2115   0018D8  26D9               	addwf	fsr2l,f,c
  2116   0018DA  5006               	movf	fputc@fp^0,w,c
  2117   0018DC  6EE1               	movwf	fsr1l,c
  2118   0018DE  6AE2               	clrf	fsr1h,c
  2119   0018E0  0E03               	movlw	3
  2120   0018E2  26E1               	addwf	fsr1l,f,c
  2121   0018E4  50DE               	movf	postinc2,w,c
  2122   0018E6  5CE6               	subwf	postinc1,w,c
  2123   0018E8  50E6               	movf	postinc1,w,c
  2124   0018EA  0A80               	xorlw	128
  2125   0018EC  6E0B               	movwf	(??_fputc+4)^0,c
  2126   0018EE  50DE               	movf	postinc2,w,c
  2127   0018F0  0A80               	xorlw	128
  2128   0018F2  580B               	subwfb	(??_fputc+4)^0,w,c
  2129   0018F4  B0D8               	btfsc	status,0,c
  2130   0018F6  EF7F  F00C         	goto	u971
  2131   0018FA  EF81  F00C         	goto	u970
  2132   0018FE                     u971:
  2133   0018FE  EF99  F00C         	goto	l1048
  2134   001902                     u970:
  2135   001902                     l1789:
  2136   001902  5006               	movf	fputc@fp^0,w,c
  2137   001904  6ED9               	movwf	fsr2l,c
  2138   001906  6ADA               	clrf	fsr2h,c
  2139   001908  0E03               	movlw	3
  2140   00190A  26D9               	addwf	fsr2l,f,c
  2141   00190C  50DF               	movf	indf2,w,c
  2142   00190E  6E07               	movwf	??_fputc^0,c
  2143   001910  5006               	movf	fputc@fp^0,w,c
  2144   001912  6ED9               	movwf	fsr2l,c
  2145   001914  6ADA               	clrf	fsr2h,c
  2146   001916  50DF               	movf	indf2,w,c
  2147   001918  2407               	addwf	??_fputc^0,w,c
  2148   00191A  6ED9               	movwf	fsr2l,c
  2149   00191C  6ADA               	clrf	fsr2h,c
  2150   00191E  C004  FFDF         	movff	fputc@c,indf2
  2151   001922  5006               	movf	fputc@fp^0,w,c
  2152   001924  6ED9               	movwf	fsr2l,c
  2153   001926  6ADA               	clrf	fsr2h,c
  2154   001928  0E03               	movlw	3
  2155   00192A  26D9               	addwf	fsr2l,f,c
  2156   00192C  2ADE               	incf	postinc2,f,c
  2157   00192E  0E00               	movlw	0
  2158   001930  22DD               	addwfc	postdec2,f,c
  2159   001932                     l1048:
  2160   001932  0012               	return		;funcret
  2161   001934                     __end_of_fputc:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _putch *****************
  2165 ;; Defined at:
  2166 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  c               1    wreg     unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  c               1    0[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_fputc
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text10
  2195   00203A                     __ptext10:
  2196                           	callstack 0
  2197   00203A                     _putch:
  2198                           	callstack 24
  2199   00203A  0012               	return		;funcret
  2200   00203C                     __end_of_putch:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _abs *****************
  2204 ;; Defined at:
  2205 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  a               2    9[COMRAM] int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    9[COMRAM] int 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;Total ram usage:        4 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_dtoa
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text11
  2234   001E9A                     __ptext11:
  2235                           	callstack 0
  2236   001E9A                     _abs:
  2237                           	callstack 24
  2238   001E9A  BE0B               	btfsc	(abs@a+1)^0,7,c
  2239   001E9C  EF52  F00F         	goto	u1151
  2240   001EA0  EF54  F00F         	goto	u1150
  2241   001EA4                     u1151:
  2242   001EA4  EF5A  F00F         	goto	l1033
  2243   001EA8                     u1150:
  2244   001EA8  C00A  F00A         	movff	abs@a,?_abs
  2245   001EAC  C00B  F00B         	movff	abs@a+1,?_abs+1
  2246   001EB0  EF66  F00F         	goto	l1036
  2247   001EB4                     l1033:
  2248   001EB4  C00A  F00C         	movff	abs@a,??_abs
  2249   001EB8  C00B  F00D         	movff	abs@a+1,??_abs+1
  2250   001EBC  1E0C               	comf	??_abs^0,f,c
  2251   001EBE  1E0D               	comf	(??_abs+1)^0,f,c
  2252   001EC0  4A0C               	infsnz	??_abs^0,f,c
  2253   001EC2  2A0D               	incf	(??_abs+1)^0,f,c
  2254   001EC4  C00C  F00A         	movff	??_abs,?_abs
  2255   001EC8  C00D  F00B         	movff	??_abs+1,?_abs+1
  2256   001ECC                     l1036:
  2257   001ECC  0012               	return		;funcret
  2258   001ECE                     __end_of_abs:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function ___awmod *****************
  2262 ;; Defined at:
  2263 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  dividend        2    3[COMRAM] int 
  2266 ;;  divisor         2    5[COMRAM] int 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  sign            1    8[COMRAM] unsigned char 
  2269 ;;  counter         1    7[COMRAM] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    3[COMRAM] int 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;Total ram usage:        6 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 1
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_dtoa
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text12
  2294   00167E                     __ptext12:
  2295                           	callstack 0
  2296   00167E                     ___awmod:
  2297                           	callstack 24
  2298   00167E  0E00               	movlw	0
  2299   001680  6E09               	movwf	___awmod@sign^0,c
  2300   001682  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  2301   001684  EF48  F00B         	goto	u1050
  2302   001688  EF46  F00B         	goto	u1051
  2303   00168C                     u1051:
  2304   00168C  EF4E  F00B         	goto	l1859
  2305   001690                     u1050:
  2306   001690  6C04               	negf	___awmod@dividend^0,c
  2307   001692  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2308   001694  B0D8               	btfsc	status,0,c
  2309   001696  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2310   001698  0E01               	movlw	1
  2311   00169A  6E09               	movwf	___awmod@sign^0,c
  2312   00169C                     l1859:
  2313   00169C  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  2314   00169E  EF55  F00B         	goto	u1060
  2315   0016A2  EF53  F00B         	goto	u1061
  2316   0016A6                     u1061:
  2317   0016A6  EF59  F00B         	goto	l1863
  2318   0016AA                     u1060:
  2319   0016AA  6C06               	negf	___awmod@divisor^0,c
  2320   0016AC  1E07               	comf	(___awmod@divisor+1)^0,f,c
  2321   0016AE  B0D8               	btfsc	status,0,c
  2322   0016B0  2A07               	incf	(___awmod@divisor+1)^0,f,c
  2323   0016B2                     l1863:
  2324   0016B2  5006               	movf	___awmod@divisor^0,w,c
  2325   0016B4  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  2326   0016B6  B4D8               	btfsc	status,2,c
  2327   0016B8  EF60  F00B         	goto	u1071
  2328   0016BC  EF62  F00B         	goto	u1070
  2329   0016C0                     u1071:
  2330   0016C0  EF86  F00B         	goto	l1879
  2331   0016C4                     u1070:
  2332   0016C4  0E01               	movlw	1
  2333   0016C6  6E08               	movwf	___awmod@counter^0,c
  2334   0016C8  EF6A  F00B         	goto	l1869
  2335   0016CC                     l1867:
  2336   0016CC  90D8               	bcf	status,0,c
  2337   0016CE  3606               	rlcf	___awmod@divisor^0,f,c
  2338   0016D0  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  2339   0016D2  2A08               	incf	___awmod@counter^0,f,c
  2340   0016D4                     l1869:
  2341   0016D4  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  2342   0016D6  EF6F  F00B         	goto	u1081
  2343   0016DA  EF71  F00B         	goto	u1080
  2344   0016DE                     u1081:
  2345   0016DE  EF66  F00B         	goto	l1867
  2346   0016E2                     u1080:
  2347   0016E2                     l1871:
  2348   0016E2  5006               	movf	___awmod@divisor^0,w,c
  2349   0016E4  5C04               	subwf	___awmod@dividend^0,w,c
  2350   0016E6  5007               	movf	(___awmod@divisor+1)^0,w,c
  2351   0016E8  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  2352   0016EA  A0D8               	btfss	status,0,c
  2353   0016EC  EF7A  F00B         	goto	u1091
  2354   0016F0  EF7C  F00B         	goto	u1090
  2355   0016F4                     u1091:
  2356   0016F4  EF80  F00B         	goto	l1875
  2357   0016F8                     u1090:
  2358   0016F8  5006               	movf	___awmod@divisor^0,w,c
  2359   0016FA  5E04               	subwf	___awmod@dividend^0,f,c
  2360   0016FC  5007               	movf	(___awmod@divisor+1)^0,w,c
  2361   0016FE  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  2362   001700                     l1875:
  2363   001700  90D8               	bcf	status,0,c
  2364   001702  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  2365   001704  3206               	rrcf	___awmod@divisor^0,f,c
  2366   001706  2E08               	decfsz	___awmod@counter^0,f,c
  2367   001708  EF71  F00B         	goto	l1871
  2368   00170C                     l1879:
  2369   00170C  5009               	movf	___awmod@sign^0,w,c
  2370   00170E  B4D8               	btfsc	status,2,c
  2371   001710  EF8C  F00B         	goto	u1101
  2372   001714  EF8E  F00B         	goto	u1100
  2373   001718                     u1101:
  2374   001718  EF92  F00B         	goto	l1883
  2375   00171C                     u1100:
  2376   00171C  6C04               	negf	___awmod@dividend^0,c
  2377   00171E  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2378   001720  B0D8               	btfsc	status,0,c
  2379   001722  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2380   001724                     l1883:
  2381   001724  C004  F004         	movff	___awmod@dividend,?___awmod
  2382   001728  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  2383   00172C  0012               	return		;funcret
  2384   00172E                     __end_of___awmod:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function ___awdiv *****************
  2388 ;; Defined at:
  2389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  dividend        2    3[COMRAM] int 
  2392 ;;  divisor         2    5[COMRAM] int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  quotient        2    9[COMRAM] int 
  2395 ;;  sign            1    8[COMRAM] unsigned char 
  2396 ;;  counter         1    7[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  2    3[COMRAM] int 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;Total ram usage:        8 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_dtoa
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text13
  2421   0015BA                     __ptext13:
  2422                           	callstack 0
  2423   0015BA                     ___awdiv:
  2424                           	callstack 24
  2425   0015BA  0E00               	movlw	0
  2426   0015BC  6E09               	movwf	___awdiv@sign^0,c
  2427   0015BE  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  2428   0015C0  EFE6  F00A         	goto	u990
  2429   0015C4  EFE4  F00A         	goto	u991
  2430   0015C8                     u991:
  2431   0015C8  EFEC  F00A         	goto	l1815
  2432   0015CC                     u990:
  2433   0015CC  6C06               	negf	___awdiv@divisor^0,c
  2434   0015CE  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  2435   0015D0  B0D8               	btfsc	status,0,c
  2436   0015D2  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  2437   0015D4  0E01               	movlw	1
  2438   0015D6  6E09               	movwf	___awdiv@sign^0,c
  2439   0015D8                     l1815:
  2440   0015D8  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  2441   0015DA  EFF3  F00A         	goto	u1000
  2442   0015DE  EFF1  F00A         	goto	u1001
  2443   0015E2                     u1001:
  2444   0015E2  EFF9  F00A         	goto	l1821
  2445   0015E6                     u1000:
  2446   0015E6  6C04               	negf	___awdiv@dividend^0,c
  2447   0015E8  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  2448   0015EA  B0D8               	btfsc	status,0,c
  2449   0015EC  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  2450   0015EE  0E01               	movlw	1
  2451   0015F0  1A09               	xorwf	___awdiv@sign^0,f,c
  2452   0015F2                     l1821:
  2453   0015F2  0E00               	movlw	0
  2454   0015F4  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  2455   0015F6  0E00               	movlw	0
  2456   0015F8  6E0A               	movwf	___awdiv@quotient^0,c
  2457   0015FA  5006               	movf	___awdiv@divisor^0,w,c
  2458   0015FC  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  2459   0015FE  B4D8               	btfsc	status,2,c
  2460   001600  EF04  F00B         	goto	u1011
  2461   001604  EF06  F00B         	goto	u1010
  2462   001608                     u1011:
  2463   001608  EF2E  F00B         	goto	l1843
  2464   00160C                     u1010:
  2465   00160C  0E01               	movlw	1
  2466   00160E  6E08               	movwf	___awdiv@counter^0,c
  2467   001610  EF0E  F00B         	goto	l1829
  2468   001614                     l1827:
  2469   001614  90D8               	bcf	status,0,c
  2470   001616  3606               	rlcf	___awdiv@divisor^0,f,c
  2471   001618  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  2472   00161A  2A08               	incf	___awdiv@counter^0,f,c
  2473   00161C                     l1829:
  2474   00161C  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  2475   00161E  EF13  F00B         	goto	u1021
  2476   001622  EF15  F00B         	goto	u1020
  2477   001626                     u1021:
  2478   001626  EF0A  F00B         	goto	l1827
  2479   00162A                     u1020:
  2480   00162A                     l1831:
  2481   00162A  90D8               	bcf	status,0,c
  2482   00162C  360A               	rlcf	___awdiv@quotient^0,f,c
  2483   00162E  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2484   001630  5006               	movf	___awdiv@divisor^0,w,c
  2485   001632  5C04               	subwf	___awdiv@dividend^0,w,c
  2486   001634  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2487   001636  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  2488   001638  A0D8               	btfss	status,0,c
  2489   00163A  EF21  F00B         	goto	u1031
  2490   00163E  EF23  F00B         	goto	u1030
  2491   001642                     u1031:
  2492   001642  EF28  F00B         	goto	l1839
  2493   001646                     u1030:
  2494   001646  5006               	movf	___awdiv@divisor^0,w,c
  2495   001648  5E04               	subwf	___awdiv@dividend^0,f,c
  2496   00164A  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2497   00164C  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  2498   00164E  800A               	bsf	___awdiv@quotient^0,0,c
  2499   001650                     l1839:
  2500   001650  90D8               	bcf	status,0,c
  2501   001652  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  2502   001654  3206               	rrcf	___awdiv@divisor^0,f,c
  2503   001656  2E08               	decfsz	___awdiv@counter^0,f,c
  2504   001658  EF15  F00B         	goto	l1831
  2505   00165C                     l1843:
  2506   00165C  5009               	movf	___awdiv@sign^0,w,c
  2507   00165E  B4D8               	btfsc	status,2,c
  2508   001660  EF34  F00B         	goto	u1041
  2509   001664  EF36  F00B         	goto	u1040
  2510   001668                     u1041:
  2511   001668  EF3A  F00B         	goto	l1847
  2512   00166C                     u1040:
  2513   00166C  6C0A               	negf	___awdiv@quotient^0,c
  2514   00166E  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  2515   001670  B0D8               	btfsc	status,0,c
  2516   001672  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  2517   001674                     l1847:
  2518   001674  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  2519   001678  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  2520   00167C  0012               	return		;funcret
  2521   00167E                     __end_of___awdiv:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _LCD_setline *****************
  2525 ;; Defined at:
  2526 ;;		line 105 in file "LCD.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  line            1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  line            1    8[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 4
  2547 ;; This function calls:
  2548 ;;		_LCD_sendbyte
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;;		_time2String
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text14
  2556   001E2C                     __ptext14:
  2557                           	callstack 0
  2558   001E2C                     _LCD_setline:
  2559                           	callstack 25
  2560                           
  2561                           ;incstack = 0
  2562                           ;LCD_setline@line stored from wreg
  2563   001E2C  6E09               	movwf	LCD_setline@line^0,c
  2564   001E2E                     
  2565                           ;LCD.c: 105: void LCD_setline (char line);LCD.c: 106: {;LCD.c: 108:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  2566   001E2E  0409               	decf	LCD_setline@line^0,w,c
  2567   001E30  A4D8               	btfss	status,2,c
  2568   001E32  EF1D  F00F         	goto	u1481
  2569   001E36  EF1F  F00F         	goto	u1480
  2570   001E3A                     u1481:
  2571   001E3A  EF24  F00F         	goto	l2137
  2572   001E3E                     u1480:
  2573   001E3E  0E00               	movlw	0
  2574   001E40  6E05               	movwf	LCD_sendbyte@type^0,c
  2575   001E42  0E80               	movlw	128
  2576   001E44  ECF8  F00E         	call	_LCD_sendbyte
  2577   001E48                     l2137:
  2578                           
  2579                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  2580   001E48  0E02               	movlw	2
  2581   001E4A  1809               	xorwf	LCD_setline@line^0,w,c
  2582   001E4C  A4D8               	btfss	status,2,c
  2583   001E4E  EF2B  F00F         	goto	u1491
  2584   001E52  EF2D  F00F         	goto	u1490
  2585   001E56                     u1491:
  2586   001E56  EF32  F00F         	goto	l267
  2587   001E5A                     u1490:
  2588   001E5A  0E00               	movlw	0
  2589   001E5C  6E05               	movwf	LCD_sendbyte@type^0,c
  2590   001E5E  0EC0               	movlw	192
  2591   001E60  ECF8  F00E         	call	_LCD_sendbyte
  2592   001E64                     l267:
  2593   001E64  0012               	return		;funcret
  2594   001E66                     __end_of_LCD_setline:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _LCD_sendstring *****************
  2598 ;; Defined at:
  2599 ;;		line 118 in file "LCD.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  string          1    8[COMRAM] PTR unsigned char 
  2602 ;;		 -> main@buf(32), 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2614 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;Total ram usage:        1 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 4
  2621 ;; This function calls:
  2622 ;;		_LCD_sendbyte
  2623 ;; This function is called by:
  2624 ;;		_time2String
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text15
  2629   001ECE                     __ptext15:
  2630                           	callstack 0
  2631   001ECE                     _LCD_sendstring:
  2632                           	callstack 25
  2633   001ECE                     
  2634                           ;LCD.c: 118: void LCD_sendstring(char *string);LCD.c: 119: {;LCD.c: 121:     while(*stri
      +                          ng != 0){
  2635   001ECE  EF72  F00F         	goto	l2285
  2636   001ED2                     l2281:
  2637                           
  2638                           ;LCD.c: 122:   LCD_sendbyte(*string++,1);
  2639   001ED2  0E01               	movlw	1
  2640   001ED4  6E05               	movwf	LCD_sendbyte@type^0,c
  2641   001ED6  5009               	movf	LCD_sendstring@string^0,w,c
  2642   001ED8  6ED9               	movwf	fsr2l,c
  2643   001EDA  6ADA               	clrf	fsr2h,c
  2644   001EDC  50DF               	movf	indf2,w,c
  2645   001EDE  ECF8  F00E         	call	_LCD_sendbyte
  2646   001EE2  2A09               	incf	LCD_sendstring@string^0,f,c
  2647   001EE4                     l2285:
  2648                           
  2649                           ;LCD.c: 121:     while(*string != 0){
  2650   001EE4  5009               	movf	LCD_sendstring@string^0,w,c
  2651   001EE6  6ED9               	movwf	fsr2l,c
  2652   001EE8  6ADA               	clrf	fsr2h,c
  2653   001EEA  50DF               	movf	indf2,w,c
  2654   001EEC  A4D8               	btfss	status,2,c
  2655   001EEE  EF7B  F00F         	goto	u1541
  2656   001EF2  EF7D  F00F         	goto	u1540
  2657   001EF6                     u1541:
  2658   001EF6  EF69  F00F         	goto	l2281
  2659   001EFA                     u1540:
  2660   001EFA  0012               	return		;funcret
  2661   001EFC                     __end_of_LCD_sendstring:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _sunSync *****************
  2665 ;; Defined at:
  2666 ;;		line 127 in file "functions.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  hour            1    3[COMRAM] PTR unsigned int 
  2669 ;;		 -> hour(2), 
  2670 ;;  day             2    4[COMRAM] unsigned int 
  2671 ;;  synced          1    6[COMRAM] PTR unsigned int 
  2672 ;;		 -> main@synced(2), 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;Total ram usage:        6 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text16
  2699   001B52                     __ptext16:
  2700                           	callstack 0
  2701   001B52                     _sunSync:
  2702                           	callstack 29
  2703   001B52                     
  2704                           ;functions.c: 128:     if (LATHbits.LATH3 == 0 && day==11 && *hour>=6 && *synced == 0){
  2705   001B52  B680               	btfsc	128,3,c	;volatile
  2706   001B54  EFAE  F00D         	goto	u1771
  2707   001B58  EFB0  F00D         	goto	u1770
  2708   001B5C                     u1771:
  2709   001B5C  EFE3  F00D         	goto	l221
  2710   001B60                     u1770:
  2711   001B60  0E0B               	movlw	11
  2712   001B62  1805               	xorwf	sunSync@day^0,w,c
  2713   001B64  1006               	iorwf	(sunSync@day+1)^0,w,c
  2714   001B66  A4D8               	btfss	status,2,c
  2715   001B68  EFB8  F00D         	goto	u1781
  2716   001B6C  EFBA  F00D         	goto	u1780
  2717   001B70                     u1781:
  2718   001B70  EFE3  F00D         	goto	l221
  2719   001B74                     u1780:
  2720   001B74  5004               	movf	sunSync@hour^0,w,c
  2721   001B76  6ED9               	movwf	fsr2l,c
  2722   001B78  6ADA               	clrf	fsr2h,c
  2723   001B7A  0E01               	movlw	1
  2724   001B7C  50DB               	movf	plusw2,w,c
  2725   001B7E  E109               	bnz	u1790
  2726   001B80  0E06               	movlw	6
  2727   001B82  5CDE               	subwf	postinc2,w,c
  2728   001B84  A0D8               	btfss	status,0,c
  2729   001B86  EFC7  F00D         	goto	u1791
  2730   001B8A  EFC9  F00D         	goto	u1790
  2731   001B8E                     u1791:
  2732   001B8E  EFE3  F00D         	goto	l221
  2733   001B92                     u1790:
  2734   001B92  5007               	movf	sunSync@synced^0,w,c
  2735   001B94  6ED9               	movwf	fsr2l,c
  2736   001B96  6ADA               	clrf	fsr2h,c
  2737   001B98  50DE               	movf	postinc2,w,c
  2738   001B9A  10DE               	iorwf	postinc2,w,c
  2739   001B9C  A4D8               	btfss	status,2,c
  2740   001B9E  EFD3  F00D         	goto	u1801
  2741   001BA2  EFD5  F00D         	goto	u1800
  2742   001BA6                     u1801:
  2743   001BA6  EFE3  F00D         	goto	l221
  2744   001BAA                     u1800:
  2745   001BAA                     
  2746                           ;functions.c: 129:         *hour = 8;
  2747   001BAA  5004               	movf	sunSync@hour^0,w,c
  2748   001BAC  6ED9               	movwf	fsr2l,c
  2749   001BAE  6ADA               	clrf	fsr2h,c
  2750   001BB0  0E08               	movlw	8
  2751   001BB2  6EDE               	movwf	postinc2,c
  2752   001BB4  0E00               	movlw	0
  2753   001BB6  6EDD               	movwf	postdec2,c
  2754                           
  2755                           ;functions.c: 130:         *synced = 1;
  2756   001BB8  5007               	movf	sunSync@synced^0,w,c
  2757   001BBA  6ED9               	movwf	fsr2l,c
  2758   001BBC  6ADA               	clrf	fsr2h,c
  2759   001BBE  0E01               	movlw	1
  2760   001BC0  6EDE               	movwf	postinc2,c
  2761   001BC2  0E00               	movlw	0
  2762   001BC4  6EDD               	movwf	postdec2,c
  2763   001BC6                     l221:
  2764   001BC6  0012               	return		;funcret
  2765   001BC8                     __end_of_sunSync:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _initialise *****************
  2769 ;; Defined at:
  2770 ;;		line 138 in file "functions.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 5
  2791 ;; This function calls:
  2792 ;;		_Comp1_init_fe
  2793 ;;		_Comp1_init_re
  2794 ;;		_Interrupts_init
  2795 ;;		_LCD_init
  2796 ;;		_LEDarray_init
  2797 ;;		_Timer0_init
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text17
  2804   001FE4                     __ptext17:
  2805                           	callstack 0
  2806   001FE4                     _initialise:
  2807                           	callstack 25
  2808   001FE4                     
  2809                           ;functions.c: 140:     Interrupts_init();
  2810   001FE4  ECFF  F00F         	call	_Interrupts_init	;wreg free
  2811   001FE8                     
  2812                           ;functions.c: 141:     Comp1_init_re();
  2813   001FE8  ECBE  F00F         	call	_Comp1_init_re	;wreg free
  2814   001FEC                     
  2815                           ;functions.c: 142:     Comp1_init_fe();
  2816   001FEC  ECD0  F00F         	call	_Comp1_init_fe	;wreg free
  2817   001FF0                     
  2818                           ;functions.c: 143:     Timer0_init();
  2819   001FF0  EC7E  F00F         	call	_Timer0_init	;wreg free
  2820   001FF4                     
  2821                           ;functions.c: 144:     LEDarray_init();
  2822   001FF4  EC95  F00F         	call	_LEDarray_init	;wreg free
  2823   001FF8                     
  2824                           ;functions.c: 145:     LCD_init();
  2825   001FF8  EC29  F00D         	call	_LCD_init	;wreg free
  2826   001FFC  0012               	return		;funcret
  2827   001FFE                     __end_of_initialise:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _Timer0_init *****************
  2831 ;; Defined at:
  2832 ;;		line 9 in file "timers.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_initialise
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text18
  2861   001EFC                     __ptext18:
  2862                           	callstack 0
  2863   001EFC                     _Timer0_init:
  2864                           	callstack 28
  2865   001EFC                     
  2866                           ;timers.c: 11:     T0CON1bits.T0CS = 0b010;
  2867   001EFC  50D6               	movf	214,w,c	;volatile
  2868   001EFE  0B1F               	andlw	-225
  2869   001F00  0940               	iorlw	64
  2870   001F02  6ED6               	movwf	214,c	;volatile
  2871   001F04                     
  2872                           ;timers.c: 12:     T0CON1bits.T0ASYNC = 1;
  2873   001F04  88D6               	bsf	214,4,c	;volatile
  2874                           
  2875                           ;timers.c: 13:     T0CON1bits.T0CKPS = 0b1000;
  2876   001F06  50D6               	movf	214,w,c	;volatile
  2877   001F08  0BF0               	andlw	-16
  2878   001F0A  0908               	iorlw	8
  2879   001F0C  6ED6               	movwf	214,c	;volatile
  2880   001F0E                     
  2881                           ;timers.c: 14:     T0CON0bits.T016BIT = 1;
  2882   001F0E  88D5               	bsf	213,4,c	;volatile
  2883   001F10                     
  2884                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  2885   001F10  010E               	movlb	14	; () banked
  2886   001F12  8B29               	bsf	41,5,b	;volatile
  2887   001F14                     
  2888                           ; BSR set to: 14
  2889                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  2890   001F14  9B33               	bcf	51,5,b	;volatile
  2891   001F16                     
  2892                           ; BSR set to: 14
  2893                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  2894   001F16  9B1F               	bcf	31,5,b	;volatile
  2895   001F18                     
  2896                           ; BSR set to: 14
  2897                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  2898   001F18  8AF2               	bsf	242,5,c	;volatile
  2899   001F1A                     
  2900                           ; BSR set to: 14
  2901                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  2902   001F1A  8CF2               	bsf	242,6,c	;volatile
  2903   001F1C                     
  2904                           ; BSR set to: 14
  2905                           ;timers.c: 21:     INTCONbits.GIE = 1;
  2906   001F1C  8EF2               	bsf	242,7,c	;volatile
  2907                           
  2908                           ;timers.c: 24:     TMR0H=00001011;
  2909   001F1E  0E09               	movlw	9
  2910   001F20  6ED4               	movwf	212,c	;volatile
  2911                           
  2912                           ;timers.c: 25:     TMR0L=110011011;
  2913   001F22  0E83               	movlw	131
  2914   001F24  6ED3               	movwf	211,c	;volatile
  2915   001F26                     
  2916                           ; BSR set to: 14
  2917                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  2918   001F26  8ED5               	bsf	213,7,c	;volatile
  2919   001F28                     
  2920                           ; BSR set to: 14
  2921   001F28  0012               	return		;funcret
  2922   001F2A                     __end_of_Timer0_init:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _LEDarray_init *****************
  2926 ;; Defined at:
  2927 ;;		line 8 in file "LEDarray.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_initialise
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text19
  2956   001F2A                     __ptext19:
  2957                           	callstack 0
  2958   001F2A                     _LEDarray_init:
  2959                           	callstack 28
  2960   001F2A                     
  2961                           ;LEDarray.c: 10:     LATA = 0;
  2962   001F2A  0E00               	movlw	0
  2963   001F2C  6E79               	movwf	121,c	;volatile
  2964                           
  2965                           ;LEDarray.c: 11:     LATB = 0;
  2966   001F2E  0E00               	movlw	0
  2967   001F30  6E7A               	movwf	122,c	;volatile
  2968   001F32                     
  2969                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  2970   001F32  907E               	bcf	126,0,c	;volatile
  2971   001F34                     
  2972                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  2973   001F34  9C7E               	bcf	126,6,c	;volatile
  2974                           
  2975                           ;LEDarray.c: 14:     LATG = 0;
  2976   001F36  0E00               	movlw	0
  2977   001F38  6E7F               	movwf	127,c	;volatile
  2978   001F3A                     
  2979                           ;LEDarray.c: 15:  LATHbits.LATH3 = 1;
  2980   001F3A  8680               	bsf	128,3,c	;volatile
  2981                           
  2982                           ;LEDarray.c: 18:     TRISA = 0;
  2983   001F3C  0E00               	movlw	0
  2984   001F3E  6E81               	movwf	129,c	;volatile
  2985                           
  2986                           ;LEDarray.c: 19:  TRISB = 0;
  2987   001F40  0E00               	movlw	0
  2988   001F42  6E82               	movwf	130,c	;volatile
  2989   001F44                     
  2990                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2991   001F44  9086               	bcf	134,0,c	;volatile
  2992   001F46                     
  2993                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  2994   001F46  9C86               	bcf	134,6,c	;volatile
  2995                           
  2996                           ;LEDarray.c: 22:     TRISG = 0;
  2997   001F48  0E00               	movlw	0
  2998   001F4A  6E87               	movwf	135,c	;volatile
  2999   001F4C                     
  3000                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  3001   001F4C  9688               	bcf	136,3,c	;volatile
  3002   001F4E                     
  3003                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  3004   001F4E  8486               	bsf	134,2,c	;volatile
  3005   001F50                     
  3006                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  3007   001F50  010E               	movlb	14	; () banked
  3008   001F52  95B4               	bcf	180,2,b	;volatile
  3009   001F54                     
  3010                           ; BSR set to: 14
  3011   001F54  0012               	return		;funcret
  3012   001F56                     __end_of_LEDarray_init:
  3013                           	callstack 0
  3014                           
  3015 ;; *************** function _LCD_init *****************
  3016 ;; Defined at:
  3017 ;;		line 62 in file "LCD.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;Total ram usage:        1 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 4
  3038 ;; This function calls:
  3039 ;;		_LCD_sendbyte
  3040 ;;		_LCD_sendnibble
  3041 ;; This function is called by:
  3042 ;;		_initialise
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text20
  3047   001A52                     __ptext20:
  3048                           	callstack 0
  3049   001A52                     _LCD_init:
  3050                           	callstack 25
  3051   001A52                     
  3052                           ;LCD.c: 66:     TRISCbits.TRISC6=0;
  3053   001A52  9C83               	bcf	131,6,c	;volatile
  3054                           
  3055                           ;LCD.c: 67:     TRISCbits.TRISC2=0;
  3056   001A54  9483               	bcf	131,2,c	;volatile
  3057                           
  3058                           ;LCD.c: 68:     TRISBbits.TRISB3=0;
  3059   001A56  9682               	bcf	130,3,c	;volatile
  3060                           
  3061                           ;LCD.c: 69:     TRISBbits.TRISB2=0;
  3062   001A58  9482               	bcf	130,2,c	;volatile
  3063                           
  3064                           ;LCD.c: 70:     TRISEbits.TRISE3=0;
  3065   001A5A  9685               	bcf	133,3,c	;volatile
  3066                           
  3067                           ;LCD.c: 71:     TRISEbits.TRISE1=0;
  3068   001A5C  9285               	bcf	133,1,c	;volatile
  3069                           
  3070                           ;LCD.c: 74:     LATCbits.LATC6=0;
  3071   001A5E  9C7B               	bcf	123,6,c	;volatile
  3072                           
  3073                           ;LCD.c: 75:     LATCbits.LATC2=0;
  3074   001A60  947B               	bcf	123,2,c	;volatile
  3075                           
  3076                           ;LCD.c: 76:     LATBbits.LATB4 = 0;
  3077   001A62  987A               	bcf	122,4,c	;volatile
  3078                           
  3079                           ;LCD.c: 77:     LATBbits.LATB5 = 0;
  3080   001A64  9A7A               	bcf	122,5,c	;volatile
  3081                           
  3082                           ;LCD.c: 78:     LATBbits.LATB6 = 0;
  3083   001A66  9C7A               	bcf	122,6,c	;volatile
  3084                           
  3085                           ;LCD.c: 79:     LATBbits.LATB7 = 0;
  3086   001A68  9E7A               	bcf	122,7,c	;volatile
  3087   001A6A                     
  3088                           ;LCD.c: 84:     LCD_sendnibble(0b0011);
  3089   001A6A  0E03               	movlw	3
  3090   001A6C  EC53  F00E         	call	_LCD_sendnibble
  3091   001A70                     
  3092                           ;LCD.c: 85:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3093   001A70  0ED0               	movlw	208
  3094   001A72                     u1887:
  3095   001A72  2EE8               	decfsz	wreg,f,c
  3096   001A74  D7FE               	bra	u1887
  3097   001A76                     
  3098                           ;LCD.c: 87:     LCD_sendbyte(0b00101000,0);
  3099   001A76  0E00               	movlw	0
  3100   001A78  6E05               	movwf	LCD_sendbyte@type^0,c
  3101   001A7A  0E28               	movlw	40
  3102   001A7C  ECF8  F00E         	call	_LCD_sendbyte
  3103   001A80                     
  3104                           ;LCD.c: 88:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3105   001A80  0ED0               	movlw	208
  3106   001A82                     u1897:
  3107   001A82  2EE8               	decfsz	wreg,f,c
  3108   001A84  D7FE               	bra	u1897
  3109   001A86                     
  3110                           ;LCD.c: 89:     LCD_sendbyte(0b00101000,0);
  3111   001A86  0E00               	movlw	0
  3112   001A88  6E05               	movwf	LCD_sendbyte@type^0,c
  3113   001A8A  0E28               	movlw	40
  3114   001A8C  ECF8  F00E         	call	_LCD_sendbyte
  3115   001A90                     
  3116                           ;LCD.c: 90:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3117   001A90  0EC5               	movlw	197
  3118   001A92                     u1907:
  3119   001A92  2EE8               	decfsz	wreg,f,c
  3120   001A94  D7FE               	bra	u1907
  3121   001A96  0000               	nop	
  3122   001A98                     
  3123                           ;LCD.c: 91:     LCD_sendbyte(0b00001100,0);
  3124   001A98  0E00               	movlw	0
  3125   001A9A  6E05               	movwf	LCD_sendbyte@type^0,c
  3126   001A9C  0E0C               	movlw	12
  3127   001A9E  ECF8  F00E         	call	_LCD_sendbyte
  3128   001AA2                     
  3129                           ;LCD.c: 92:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3130   001AA2  0EC5               	movlw	197
  3131   001AA4                     u1917:
  3132   001AA4  2EE8               	decfsz	wreg,f,c
  3133   001AA6  D7FE               	bra	u1917
  3134   001AA8  0000               	nop	
  3135   001AAA                     
  3136                           ;LCD.c: 93:     LCD_sendbyte(0b00000001,0);
  3137   001AAA  0E00               	movlw	0
  3138   001AAC  6E05               	movwf	LCD_sendbyte@type^0,c
  3139   001AAE  0E01               	movlw	1
  3140   001AB0  ECF8  F00E         	call	_LCD_sendbyte
  3141   001AB4                     
  3142                           ;LCD.c: 94:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  3143   001AB4  0E20               	movlw	32
  3144   001AB6  6E09               	movwf	??_LCD_init^0,c
  3145   001AB8  0ECA               	movlw	202
  3146   001ABA                     u1927:
  3147   001ABA  2EE8               	decfsz	wreg,f,c
  3148   001ABC  D7FE               	bra	u1927
  3149   001ABE  2E09               	decfsz	??_LCD_init^0,f,c
  3150   001AC0  D7FC               	bra	u1927
  3151   001AC2                     
  3152                           ;LCD.c: 95:     LCD_sendbyte(0b00000110,0);
  3153   001AC2  0E00               	movlw	0
  3154   001AC4  6E05               	movwf	LCD_sendbyte@type^0,c
  3155   001AC6  0E06               	movlw	6
  3156   001AC8  ECF8  F00E         	call	_LCD_sendbyte
  3157   001ACC                     
  3158                           ;LCD.c: 99:     LCD_sendbyte(0b1111,0);
  3159   001ACC  0E00               	movlw	0
  3160   001ACE  6E05               	movwf	LCD_sendbyte@type^0,c
  3161   001AD0  0E0F               	movlw	15
  3162   001AD2  ECF8  F00E         	call	_LCD_sendbyte
  3163   001AD6  0012               	return		;funcret
  3164   001AD8                     __end_of_LCD_init:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _LCD_sendbyte *****************
  3168 ;; Defined at:
  3169 ;;		line 43 in file "LCD.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  Byte            1    wreg     unsigned char 
  3172 ;;  type            1    4[COMRAM] unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  Byte            1    7[COMRAM] unsigned char 
  3175 ;;  lowNibble       1    6[COMRAM] unsigned char 
  3176 ;;  highNibble      1    5[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;Total ram usage:        4 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 3
  3193 ;; This function calls:
  3194 ;;		_LCD_sendnibble
  3195 ;; This function is called by:
  3196 ;;		_LCD_init
  3197 ;;		_LCD_setline
  3198 ;;		_LCD_sendstring
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text21
  3203   001DF0                     __ptext21:
  3204                           	callstack 0
  3205   001DF0                     _LCD_sendbyte:
  3206                           	callstack 25
  3207                           
  3208                           ;incstack = 0
  3209                           ;LCD_sendbyte@Byte stored from wreg
  3210   001DF0  6E08               	movwf	LCD_sendbyte@Byte^0,c
  3211   001DF2                     
  3212                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  3213   001DF2  0405               	decf	LCD_sendbyte@type^0,w,c
  3214   001DF4  A4D8               	btfss	status,2,c
  3215   001DF6  EFFF  F00E         	goto	u1431
  3216   001DFA  EF01  F00F         	goto	u1430
  3217   001DFE                     u1431:
  3218   001DFE  EF04  F00F         	goto	l257
  3219   001E02                     u1430:
  3220   001E02  8C7B               	bsf	123,6,c	;volatile
  3221   001E04  EF05  F00F         	goto	l2093
  3222   001E08                     l257:
  3223   001E08  9C7B               	bcf	123,6,c	;volatile
  3224   001E0A                     l2093:
  3225                           
  3226                           ;LCD.c: 49:     unsigned char highNibble = (Byte >> 4) ;
  3227   001E0A  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  3228   001E0C  0B0F               	andlw	15
  3229   001E0E  6E06               	movwf	LCD_sendbyte@highNibble^0,c
  3230   001E10                     
  3231                           ;LCD.c: 50:     LCD_sendnibble(highNibble);
  3232   001E10  5006               	movf	LCD_sendbyte@highNibble^0,w,c
  3233   001E12  EC53  F00E         	call	_LCD_sendnibble
  3234   001E16                     
  3235                           ;LCD.c: 53:     unsigned char lowNibble = Byte & 0b1111;
  3236   001E16  5008               	movf	LCD_sendbyte@Byte^0,w,c
  3237   001E18  0B0F               	andlw	15
  3238   001E1A  6E07               	movwf	LCD_sendbyte@lowNibble^0,c
  3239                           
  3240                           ;LCD.c: 54:     LCD_sendnibble(lowNibble);
  3241   001E1C  5007               	movf	LCD_sendbyte@lowNibble^0,w,c
  3242   001E1E  EC53  F00E         	call	_LCD_sendnibble
  3243   001E22                     
  3244                           ;LCD.c: 56:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3245   001E22  0EA0               	movlw	160
  3246   001E24                     u1937:
  3247   001E24  D000               	nop2	
  3248   001E26  2EE8               	decfsz	wreg,f,c
  3249   001E28  D7FD               	bra	u1937
  3250   001E2A  0012               	return		;funcret
  3251   001E2C                     __end_of_LCD_sendbyte:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _LCD_sendnibble *****************
  3255 ;; Defined at:
  3256 ;;		line 21 in file "LCD.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  number          1    wreg     unsigned char 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  number          1    3[COMRAM] unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;Total ram usage:        1 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 2
  3277 ;; This function calls:
  3278 ;;		_LCD_E_TOG
  3279 ;; This function is called by:
  3280 ;;		_LCD_sendbyte
  3281 ;;		_LCD_init
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text22
  3286   001CA6                     __ptext22:
  3287                           	callstack 0
  3288   001CA6                     _LCD_sendnibble:
  3289                           	callstack 25
  3290                           
  3291                           ;incstack = 0
  3292                           ;LCD_sendnibble@number stored from wreg
  3293   001CA6  6E04               	movwf	LCD_sendnibble@number^0,c
  3294   001CA8                     
  3295                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  3296   001CA8  A004               	btfss	LCD_sendnibble@number^0,0,c
  3297   001CAA  EF59  F00E         	goto	u1281
  3298   001CAE  EF5B  F00E         	goto	u1280
  3299   001CB2                     u1281:
  3300   001CB2  EF5E  F00E         	goto	l246
  3301   001CB6                     u1280:
  3302   001CB6  867A               	bsf	122,3,c	;volatile
  3303   001CB8  EF5F  F00E         	goto	l1981
  3304   001CBC                     l246:
  3305   001CBC  967A               	bcf	122,3,c	;volatile
  3306   001CBE                     l1981:
  3307                           
  3308                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  3309   001CBE  A204               	btfss	LCD_sendnibble@number^0,1,c
  3310   001CC0  EF64  F00E         	goto	u1291
  3311   001CC4  EF66  F00E         	goto	u1290
  3312   001CC8                     u1291:
  3313   001CC8  EF69  F00E         	goto	l248
  3314   001CCC                     u1290:
  3315   001CCC  847A               	bsf	122,2,c	;volatile
  3316   001CCE  EF6A  F00E         	goto	l1985
  3317   001CD2                     l248:
  3318   001CD2  947A               	bcf	122,2,c	;volatile
  3319   001CD4                     l1985:
  3320                           
  3321                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  3322   001CD4  A404               	btfss	LCD_sendnibble@number^0,2,c
  3323   001CD6  EF6F  F00E         	goto	u1301
  3324   001CDA  EF71  F00E         	goto	u1300
  3325   001CDE                     u1301:
  3326   001CDE  EF74  F00E         	goto	l250
  3327   001CE2                     u1300:
  3328   001CE2  867D               	bsf	125,3,c	;volatile
  3329   001CE4  EF75  F00E         	goto	l1989
  3330   001CE8                     l250:
  3331   001CE8  967D               	bcf	125,3,c	;volatile
  3332   001CEA                     l1989:
  3333                           
  3334                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  3335   001CEA  A604               	btfss	LCD_sendnibble@number^0,3,c
  3336   001CEC  EF7A  F00E         	goto	u1311
  3337   001CF0  EF7C  F00E         	goto	u1310
  3338   001CF4                     u1311:
  3339   001CF4  EF7F  F00E         	goto	l252
  3340   001CF8                     u1310:
  3341   001CF8  827D               	bsf	125,1,c	;volatile
  3342   001CFA  EF80  F00E         	goto	l1993
  3343   001CFE                     l252:
  3344   001CFE  927D               	bcf	125,1,c	;volatile
  3345   001D00                     l1993:
  3346                           
  3347                           ;LCD.c: 34:     LCD_E_TOG();
  3348   001D00  EC16  F010         	call	_LCD_E_TOG	;wreg free
  3349   001D04                     
  3350                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3351   001D04  0E1A               	movlw	26
  3352   001D06                     u1947:
  3353   001D06  2EE8               	decfsz	wreg,f,c
  3354   001D08  D7FE               	bra	u1947
  3355   001D0A  D000               	nop2	
  3356   001D0C  0012               	return		;funcret
  3357   001D0E                     __end_of_LCD_sendnibble:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _LCD_E_TOG *****************
  3361 ;; Defined at:
  3362 ;;		line 9 in file "LCD.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_LCD_sendnibble
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text23
  3391   00202C                     __ptext23:
  3392                           	callstack 0
  3393   00202C                     _LCD_E_TOG:
  3394                           	callstack 25
  3395   00202C                     
  3396                           ;LCD.c: 12:     LATCbits.LATC2=1;
  3397   00202C  847B               	bsf	123,2,c	;volatile
  3398   00202E                     
  3399                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3400   00202E  0E0A               	movlw	10
  3401   002030                     u1957:
  3402   002030  2EE8               	decfsz	wreg,f,c
  3403   002032  D7FE               	bra	u1957
  3404   002034  D000               	nop2	
  3405   002036                     
  3406                           ;LCD.c: 15:     LATCbits.LATC2=0;
  3407   002036  947B               	bcf	123,2,c	;volatile
  3408   002038  0012               	return		;funcret
  3409   00203A                     __end_of_LCD_E_TOG:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _Interrupts_init *****************
  3413 ;; Defined at:
  3414 ;;		line 11 in file "interrupts.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		None
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_initialise
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text24
  3443   001FFE                     __ptext24:
  3444                           	callstack 0
  3445   001FFE                     _Interrupts_init:
  3446                           	callstack 28
  3447   001FFE                     
  3448                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  3449   001FFE  010E               	movlb	14	; () banked
  3450   002000  812B               	bsf	43,0,b	;volatile
  3451                           
  3452                           ;interrupts.c: 14:     IPR2bits.C1IP = 0;
  3453   002002  9121               	bcf	33,0,b	;volatile
  3454                           
  3455                           ;interrupts.c: 17:     PIE2bits.C2IE = 1;
  3456   002004  832B               	bsf	43,1,b	;volatile
  3457                           
  3458                           ;interrupts.c: 18:     IPR2bits.C2IP = 0;
  3459   002006  9321               	bcf	33,1,b	;volatile
  3460                           
  3461                           ;interrupts.c: 21:     PIE2bits.C3IE = 1;
  3462   002008  852B               	bsf	43,2,b	;volatile
  3463                           
  3464                           ;interrupts.c: 22:     IPR2bits.C3IP = 1;
  3465   00200A  8521               	bsf	33,2,b	;volatile
  3466                           
  3467                           ;interrupts.c: 26:     PIE0bits.TMR0IE = 1;
  3468   00200C  8B29               	bsf	41,5,b	;volatile
  3469                           
  3470                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  3471   00200E  9B1F               	bcf	31,5,b	;volatile
  3472                           
  3473                           ;interrupts.c: 30:     INTCONbits.IPEN = 1;
  3474   002010  8AF2               	bsf	242,5,c	;volatile
  3475                           
  3476                           ;interrupts.c: 33:     INTCONbits.PEIE = 1;
  3477   002012  8CF2               	bsf	242,6,c	;volatile
  3478                           
  3479                           ;interrupts.c: 36:     INTCONbits.GIE = 1;
  3480   002014  8EF2               	bsf	242,7,c	;volatile
  3481   002016                     
  3482                           ; BSR set to: 14
  3483   002016  0012               	return		;funcret
  3484   002018                     __end_of_Interrupts_init:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _Comp1_init_re *****************
  3488 ;; Defined at:
  3489 ;;		line 23 in file "comparator.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 2
  3510 ;; This function calls:
  3511 ;;		_DAC_init
  3512 ;; This function is called by:
  3513 ;;		_initialise
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text25
  3518   001F7C                     __ptext25:
  3519                           	callstack 0
  3520   001F7C                     _Comp1_init_re:
  3521                           	callstack 27
  3522   001F7C                     
  3523                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  3524   001F7C  8E86               	bsf	134,7,c	;volatile
  3525   001F7E                     
  3526                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  3527   001F7E  010E               	movlb	14	; () banked
  3528   001F80  51D2               	movf	210,w,b	;volatile
  3529   001F82  0BF8               	andlw	-8
  3530   001F84  0903               	iorlw	3
  3531   001F86  6FD2               	movwf	210,b	;volatile
  3532                           
  3533                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  3534   001F88  51D3               	movf	211,w,b	;volatile
  3535   001F8A  0BF8               	andlw	-8
  3536   001F8C  0905               	iorlw	5
  3537   001F8E  6FD3               	movwf	211,b	;volatile
  3538   001F90                     
  3539                           ; BSR set to: 14
  3540                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  3541   001F90  83D0               	bsf	208,1,b	;volatile
  3542   001F92                     
  3543                           ; BSR set to: 14
  3544                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  3545   001F92  89D0               	bsf	208,4,b	;volatile
  3546   001F94                     
  3547                           ; BSR set to: 14
  3548                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  3549   001F94  83D1               	bsf	209,1,b	;volatile
  3550   001F96                     
  3551                           ; BSR set to: 14
  3552                           ;comparator.c: 31:     DAC_init();
  3553   001F96  EC0C  F010         	call	_DAC_init	;wreg free
  3554   001F9A                     
  3555                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  3556   001F9A  010E               	movlb	14	; () banked
  3557   001F9C  8FD0               	bsf	208,7,b	;volatile
  3558   001F9E                     
  3559                           ; BSR set to: 14
  3560   001F9E  0012               	return		;funcret
  3561   001FA0                     __end_of_Comp1_init_re:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function _Comp1_init_fe *****************
  3565 ;; Defined at:
  3566 ;;		line 39 in file "comparator.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 2
  3587 ;; This function calls:
  3588 ;;		_DAC_init
  3589 ;; This function is called by:
  3590 ;;		_initialise
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text26
  3595   001FA0                     __ptext26:
  3596                           	callstack 0
  3597   001FA0                     _Comp1_init_fe:
  3598                           	callstack 27
  3599   001FA0                     
  3600                           ;comparator.c: 41:     TRISFbits.TRISF7=1;
  3601   001FA0  8E86               	bsf	134,7,c	;volatile
  3602   001FA2                     
  3603                           ;comparator.c: 42:     CM2NCHbits.NCH=0b011;
  3604   001FA2  010E               	movlb	14	; () banked
  3605   001FA4  51CE               	movf	206,w,b	;volatile
  3606   001FA6  0BF8               	andlw	-8
  3607   001FA8  0903               	iorlw	3
  3608   001FAA  6FCE               	movwf	206,b	;volatile
  3609                           
  3610                           ;comparator.c: 43:     CM2PCHbits.PCH=0b101;
  3611   001FAC  51CF               	movf	207,w,b	;volatile
  3612   001FAE  0BF8               	andlw	-8
  3613   001FB0  0905               	iorlw	5
  3614   001FB2  6FCF               	movwf	207,b	;volatile
  3615   001FB4                     
  3616                           ; BSR set to: 14
  3617                           ;comparator.c: 44:     CM2CON0bits.HYS=1;
  3618   001FB4  83CC               	bsf	204,1,b	;volatile
  3619   001FB6                     
  3620                           ; BSR set to: 14
  3621                           ;comparator.c: 45:     CM2CON0bits.POL=1;
  3622   001FB6  89CC               	bsf	204,4,b	;volatile
  3623   001FB8                     
  3624                           ; BSR set to: 14
  3625                           ;comparator.c: 46:     CM2CON1bits.INTN=1;
  3626   001FB8  81CD               	bsf	205,0,b	;volatile
  3627   001FBA                     
  3628                           ; BSR set to: 14
  3629                           ;comparator.c: 47:     DAC_init();
  3630   001FBA  EC0C  F010         	call	_DAC_init	;wreg free
  3631   001FBE                     
  3632                           ;comparator.c: 48:     CM2CON0bits.EN=1;
  3633   001FBE  010E               	movlb	14	; () banked
  3634   001FC0  8FCC               	bsf	204,7,b	;volatile
  3635   001FC2                     
  3636                           ; BSR set to: 14
  3637   001FC2  0012               	return		;funcret
  3638   001FC4                     __end_of_Comp1_init_fe:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _DAC_init *****************
  3642 ;; Defined at:
  3643 ;;		line 6 in file "comparator.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_Comp1_init_re
  3668 ;;		_Comp1_init_fe
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text27
  3673   002018                     __ptext27:
  3674                           	callstack 0
  3675   002018                     _DAC_init:
  3676                           	callstack 27
  3677   002018                     
  3678                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  3679   002018  0EF3               	movlw	-13
  3680   00201A  010E               	movlb	14	; () banked
  3681   00201C  17C6               	andwf	198,f,b	;volatile
  3682   00201E                     
  3683                           ; BSR set to: 14
  3684                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  3685   00201E  91C6               	bcf	198,0,b	;volatile
  3686                           
  3687                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  3688   002020  51C7               	movf	199,w,b	;volatile
  3689   002022  0BE0               	andlw	-32
  3690   002024  0914               	iorlw	20
  3691   002026  6FC7               	movwf	199,b	;volatile
  3692   002028                     
  3693                           ; BSR set to: 14
  3694                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  3695   002028  8FC6               	bsf	198,7,b	;volatile
  3696   00202A                     
  3697                           ; BSR set to: 14
  3698   00202A  0012               	return		;funcret
  3699   00202C                     __end_of_DAC_init:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _hourChangeDST *****************
  3703 ;; Defined at:
  3704 ;;		line 68 in file "functions.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  day             2    3[COMRAM] unsigned int 
  3707 ;;  fwd_daylight    2    5[COMRAM] unsigned int 
  3708 ;;  bkwd_dayligh    2    7[COMRAM] unsigned int 
  3709 ;;  hour            1    9[COMRAM] PTR unsigned int 
  3710 ;;		 -> hour(2), 
  3711 ;;  backward_zon    1   10[COMRAM] PTR unsigned int 
  3712 ;;		 -> main@backward_zone(2), 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;Total ram usage:       10 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text28
  3739   0017DC                     __ptext28:
  3740                           	callstack 0
  3741   0017DC                     _hourChangeDST:
  3742                           	callstack 29
  3743   0017DC                     
  3744                           ;functions.c: 70:     if (day == fwd_daylight_savings_day && *hour == 2) {
  3745   0017DC  5006               	movf	hourChangeDST@fwd_daylight_savings_day^0,w,c
  3746   0017DE  1804               	xorwf	hourChangeDST@day^0,w,c
  3747   0017E0  E107               	bnz	u1671
  3748   0017E2  5007               	movf	(hourChangeDST@fwd_daylight_savings_day+1)^0,w,c
  3749   0017E4  1805               	xorwf	(hourChangeDST@day+1)^0,w,c
  3750   0017E6  A4D8               	btfss	status,2,c
  3751   0017E8  EFF8  F00B         	goto	u1671
  3752   0017EC  EFFA  F00B         	goto	u1670
  3753   0017F0                     u1671:
  3754   0017F0  EF12  F00C         	goto	l2365
  3755   0017F4                     u1670:
  3756   0017F4  500A               	movf	hourChangeDST@hour^0,w,c
  3757   0017F6  6ED9               	movwf	fsr2l,c
  3758   0017F8  6ADA               	clrf	fsr2h,c
  3759   0017FA  0E02               	movlw	2
  3760   0017FC  18DE               	xorwf	postinc2,w,c
  3761   0017FE  10DE               	iorwf	postinc2,w,c
  3762   001800  A4D8               	btfss	status,2,c
  3763   001802  EF05  F00C         	goto	u1681
  3764   001806  EF07  F00C         	goto	u1680
  3765   00180A                     u1681:
  3766   00180A  EF12  F00C         	goto	l2365
  3767   00180E                     u1680:
  3768   00180E                     
  3769                           ;functions.c: 71:         (*hour)++;
  3770   00180E  500A               	movf	hourChangeDST@hour^0,w,c
  3771   001810  6ED9               	movwf	fsr2l,c
  3772   001812  6ADA               	clrf	fsr2h,c
  3773   001814  2ADE               	incf	postinc2,f,c
  3774   001816  0E00               	movlw	0
  3775   001818  22DD               	addwfc	postdec2,f,c
  3776   00181A                     
  3777                           ;functions.c: 72:         *backward_zone = 0;
  3778   00181A  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3779   00181C  6ED9               	movwf	fsr2l,c
  3780   00181E  6ADA               	clrf	fsr2h,c
  3781   001820  6ADE               	clrf	postinc2,c
  3782   001822  6ADD               	clrf	postdec2,c
  3783   001824                     l2365:
  3784                           
  3785                           ;functions.c: 75:     if (day == bkwd_daylight_savings_day && *hour == 2 && *backward_zo
      +                          ne == 0) {
  3786   001824  5008               	movf	hourChangeDST@bkwd_daylight_savings_day^0,w,c
  3787   001826  1804               	xorwf	hourChangeDST@day^0,w,c
  3788   001828  E107               	bnz	u1691
  3789   00182A  5009               	movf	(hourChangeDST@bkwd_daylight_savings_day+1)^0,w,c
  3790   00182C  1805               	xorwf	(hourChangeDST@day+1)^0,w,c
  3791   00182E  A4D8               	btfss	status,2,c
  3792   001830  EF1C  F00C         	goto	u1691
  3793   001834  EF1E  F00C         	goto	u1690
  3794   001838                     u1691:
  3795   001838  EF44  F00C         	goto	l207
  3796   00183C                     u1690:
  3797   00183C  500A               	movf	hourChangeDST@hour^0,w,c
  3798   00183E  6ED9               	movwf	fsr2l,c
  3799   001840  6ADA               	clrf	fsr2h,c
  3800   001842  0E02               	movlw	2
  3801   001844  18DE               	xorwf	postinc2,w,c
  3802   001846  10DE               	iorwf	postinc2,w,c
  3803   001848  A4D8               	btfss	status,2,c
  3804   00184A  EF29  F00C         	goto	u1701
  3805   00184E  EF2B  F00C         	goto	u1700
  3806   001852                     u1701:
  3807   001852  EF44  F00C         	goto	l207
  3808   001856                     u1700:
  3809   001856  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3810   001858  6ED9               	movwf	fsr2l,c
  3811   00185A  6ADA               	clrf	fsr2h,c
  3812   00185C  50DE               	movf	postinc2,w,c
  3813   00185E  10DE               	iorwf	postinc2,w,c
  3814   001860  A4D8               	btfss	status,2,c
  3815   001862  EF35  F00C         	goto	u1711
  3816   001866  EF37  F00C         	goto	u1710
  3817   00186A                     u1711:
  3818   00186A  EF44  F00C         	goto	l207
  3819   00186E                     u1710:
  3820   00186E                     
  3821                           ;functions.c: 76:         (*hour)--;
  3822   00186E  500A               	movf	hourChangeDST@hour^0,w,c
  3823   001870  6ED9               	movwf	fsr2l,c
  3824   001872  6ADA               	clrf	fsr2h,c
  3825   001874  06DE               	decf	postinc2,f,c
  3826   001876  0E00               	movlw	0
  3827   001878  5ADD               	subwfb	postdec2,f,c
  3828   00187A                     
  3829                           ;functions.c: 77:         *backward_zone = 1;
  3830   00187A  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3831   00187C  6ED9               	movwf	fsr2l,c
  3832   00187E  6ADA               	clrf	fsr2h,c
  3833   001880  0E01               	movlw	1
  3834   001882  6EDE               	movwf	postinc2,c
  3835   001884  0E00               	movlw	0
  3836   001886  6EDD               	movwf	postdec2,c
  3837   001888                     l207:
  3838   001888  0012               	return		;funcret
  3839   00188A                     __end_of_hourChangeDST:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function _findDSTdates *****************
  3843 ;; Defined at:
  3844 ;;		line 86 in file "functions.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  hour            2   64[COMRAM] unsigned int 
  3847 ;;  day             2   66[COMRAM] unsigned int 
  3848 ;;  year            2   68[COMRAM] unsigned int 
  3849 ;;  fwd_daylight    1   70[COMRAM] PTR unsigned int 
  3850 ;;		 -> main@fwd_daylight_savings_day(2), 
  3851 ;;  bkwd_dayligh    1   71[COMRAM] PTR unsigned int 
  3852 ;;		 -> main@bkwd_daylight_savings_day(2), 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3864 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;Total ram usage:        8 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; Hardware stack levels required when called: 4
  3871 ;; This function calls:
  3872 ;;		_lastSunday
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text29
  3879   001C3C                     __ptext29:
  3880                           	callstack 0
  3881   001C3C                     _findDSTdates:
  3882                           	callstack 26
  3883   001C3C                     
  3884                           ;functions.c: 88:     if (day==1 && hour == 0){
  3885   001C3C  0443               	decf	findDSTdates@day^0,w,c
  3886   001C3E  1044               	iorwf	(findDSTdates@day+1)^0,w,c
  3887   001C40  A4D8               	btfss	status,2,c
  3888   001C42  EF25  F00E         	goto	u1651
  3889   001C46  EF27  F00E         	goto	u1650
  3890   001C4A                     u1651:
  3891   001C4A  EF52  F00E         	goto	l211
  3892   001C4E                     u1650:
  3893   001C4E  5041               	movf	findDSTdates@hour^0,w,c
  3894   001C50  1042               	iorwf	(findDSTdates@hour+1)^0,w,c
  3895   001C52  A4D8               	btfss	status,2,c
  3896   001C54  EF2E  F00E         	goto	u1661
  3897   001C58  EF30  F00E         	goto	u1660
  3898   001C5C                     u1661:
  3899   001C5C  EF52  F00E         	goto	l211
  3900   001C60                     u1660:
  3901   001C60                     
  3902                           ;functions.c: 89:         *fwd_daylight_savings_day = lastSunday(year, 3);
  3903   001C60  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3904   001C64  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3905   001C68  0E00               	movlw	0
  3906   001C6A  6E1E               	movwf	(lastSunday@month+1)^0,c
  3907   001C6C  0E03               	movlw	3
  3908   001C6E  6E1D               	movwf	lastSunday@month^0,c
  3909   001C70  EC13  F007         	call	_lastSunday	;wreg free
  3910   001C74  5047               	movf	findDSTdates@fwd_daylight_savings_day^0,w,c
  3911   001C76  6ED9               	movwf	fsr2l,c
  3912   001C78  6ADA               	clrf	fsr2h,c
  3913   001C7A  C01B  FFDE         	movff	?_lastSunday,postinc2
  3914   001C7E  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3915                           
  3916                           ;functions.c: 90:         *bkwd_daylight_savings_day = lastSunday(year, 10);
  3917   001C82  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3918   001C86  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3919   001C8A  0E00               	movlw	0
  3920   001C8C  6E1E               	movwf	(lastSunday@month+1)^0,c
  3921   001C8E  0E0A               	movlw	10
  3922   001C90  6E1D               	movwf	lastSunday@month^0,c
  3923   001C92  EC13  F007         	call	_lastSunday	;wreg free
  3924   001C96  5048               	movf	findDSTdates@bkwd_daylight_savings_day^0,w,c
  3925   001C98  6ED9               	movwf	fsr2l,c
  3926   001C9A  6ADA               	clrf	fsr2h,c
  3927   001C9C  C01B  FFDE         	movff	?_lastSunday,postinc2
  3928   001CA0  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3929   001CA4                     l211:
  3930   001CA4  0012               	return		;funcret
  3931   001CA6                     __end_of_findDSTdates:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _lastSunday *****************
  3935 ;; Defined at:
  3936 ;;		line 27 in file "functions.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  year            2   26[COMRAM] unsigned int 
  3939 ;;  month           2   28[COMRAM] unsigned int 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  dayOfYearFor    2   52[COMRAM] unsigned int 
  3942 ;;  daysBeforeOc    2   50[COMRAM] unsigned int 
  3943 ;;  dayOfYearFor    2   48[COMRAM] unsigned int 
  3944 ;;  daysBeforeMa    2   46[COMRAM] unsigned int 
  3945 ;;  lastSundayDa    2   62[COMRAM] unsigned int 
  3946 ;;  leapYear        2   60[COMRAM] unsigned int 
  3947 ;;  dayOfWeekMon    2   44[COMRAM] unsigned int 
  3948 ;;  dayOfWeekMon    2   42[COMRAM] unsigned int 
  3949 ;;  h               2   40[COMRAM] unsigned int 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  2   26[COMRAM] unsigned int 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;Total ram usage:       38 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 3
  3966 ;; This function calls:
  3967 ;;		___lwdiv
  3968 ;;		___lwmod
  3969 ;;		___wmul
  3970 ;;		_isLeapYear
  3971 ;; This function is called by:
  3972 ;;		_findDSTdates
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text30
  3977   000E26                     __ptext30:
  3978                           	callstack 0
  3979   000E26                     _lastSunday:
  3980                           	callstack 26
  3981   000E26                     
  3982                           ;functions.c: 28:     unsigned int leapYear = isLeapYear(year);
  3983   000E26  C01B  F016         	movff	lastSunday@year,isLeapYear@year
  3984   000E2A  C01C  F017         	movff	lastSunday@year+1,isLeapYear@year+1
  3985   000E2E  EC6C  F00D         	call	_isLeapYear	;wreg free
  3986   000E32  C016  F03D         	movff	?_isLeapYear,lastSunday@leapYear
  3987   000E36  C017  F03E         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  3988   000E3A                     
  3989                           ;functions.c: 32:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3990   000E3A  0E00               	movlw	0
  3991   000E3C  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3992   000E3E  0E05               	movlw	5
  3993   000E40  6E0C               	movwf	___lwdiv@divisor^0,c
  3994   000E42  0E01               	movlw	1
  3995   000E44  241D               	addwf	lastSunday@month^0,w,c
  3996   000E46  6E04               	movwf	___wmul@multiplier^0,c
  3997   000E48  0E00               	movlw	0
  3998   000E4A  201E               	addwfc	(lastSunday@month+1)^0,w,c
  3999   000E4C  6E05               	movwf	(___wmul@multiplier+1)^0,c
  4000   000E4E  0E00               	movlw	0
  4001   000E50  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  4002   000E52  0E0D               	movlw	13
  4003   000E54  6E06               	movwf	___wmul@multiplicand^0,c
  4004   000E56  ECAB  F00F         	call	___wmul	;wreg free
  4005   000E5A  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  4006   000E5E  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  4007   000E62  ECE4  F00D         	call	___lwdiv	;wreg free
  4008   000E66  C00A  F01F         	movff	?___lwdiv,??_lastSunday
  4009   000E6A  C00B  F020         	movff	?___lwdiv+1,??_lastSunday+1
  4010   000E6E  0E00               	movlw	0
  4011   000E70  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4012   000E72  0E64               	movlw	100
  4013   000E74  6E13               	movwf	___lwmod@divisor^0,c
  4014   000E76  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  4015   000E7A  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  4016   000E7E  EC87  F00E         	call	___lwmod	;wreg free
  4017   000E82  5011               	movf	?___lwmod^0,w,c
  4018   000E84  241F               	addwf	??_lastSunday^0,w,c
  4019   000E86  6E21               	movwf	(??_lastSunday+2)^0,c
  4020   000E88  5012               	movf	(?___lwmod+1)^0,w,c
  4021   000E8A  2020               	addwfc	(??_lastSunday+1)^0,w,c
  4022   000E8C  6E22               	movwf	(??_lastSunday+3)^0,c
  4023   000E8E  0E00               	movlw	0
  4024   000E90  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4025   000E92  0E64               	movlw	100
  4026   000E94  6E13               	movwf	___lwmod@divisor^0,c
  4027   000E96  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  4028   000E9A  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  4029   000E9E  EC87  F00E         	call	___lwmod	;wreg free
  4030   000EA2  90D8               	bcf	status,0,c
  4031   000EA4  3212               	rrcf	(?___lwmod+1)^0,f,c
  4032   000EA6  3211               	rrcf	?___lwmod^0,f,c
  4033   000EA8  90D8               	bcf	status,0,c
  4034   000EAA  3212               	rrcf	(?___lwmod+1)^0,f,c
  4035   000EAC  3211               	rrcf	?___lwmod^0,f,c
  4036   000EAE  5011               	movf	?___lwmod^0,w,c
  4037   000EB0  2421               	addwf	(??_lastSunday+2)^0,w,c
  4038   000EB2  6E23               	movwf	(??_lastSunday+4)^0,c
  4039   000EB4  5012               	movf	(?___lwmod+1)^0,w,c
  4040   000EB6  2022               	addwfc	(??_lastSunday+3)^0,w,c
  4041   000EB8  6E24               	movwf	(??_lastSunday+5)^0,c
  4042   000EBA  0E00               	movlw	0
  4043   000EBC  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4044   000EBE  0E64               	movlw	100
  4045   000EC0  6E0C               	movwf	___lwdiv@divisor^0,c
  4046   000EC2  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  4047   000EC6  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  4048   000ECA  ECE4  F00D         	call	___lwdiv	;wreg free
  4049   000ECE  90D8               	bcf	status,0,c
  4050   000ED0  320B               	rrcf	(?___lwdiv+1)^0,f,c
  4051   000ED2  320A               	rrcf	?___lwdiv^0,f,c
  4052   000ED4  90D8               	bcf	status,0,c
  4053   000ED6  320B               	rrcf	(?___lwdiv+1)^0,f,c
  4054   000ED8  320A               	rrcf	?___lwdiv^0,f,c
  4055   000EDA  500A               	movf	?___lwdiv^0,w,c
  4056   000EDC  2423               	addwf	(??_lastSunday+4)^0,w,c
  4057   000EDE  6E25               	movwf	(??_lastSunday+6)^0,c
  4058   000EE0  500B               	movf	(?___lwdiv+1)^0,w,c
  4059   000EE2  2024               	addwfc	(??_lastSunday+5)^0,w,c
  4060   000EE4  6E26               	movwf	(??_lastSunday+7)^0,c
  4061   000EE6  0E00               	movlw	0
  4062   000EE8  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4063   000EEA  0E64               	movlw	100
  4064   000EEC  6E0C               	movwf	___lwdiv@divisor^0,c
  4065   000EEE  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  4066   000EF2  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  4067   000EF6  ECE4  F00D         	call	___lwdiv	;wreg free
  4068   000EFA  90D8               	bcf	status,0,c
  4069   000EFC  360A               	rlcf	?___lwdiv^0,f,c
  4070   000EFE  360B               	rlcf	(?___lwdiv+1)^0,f,c
  4071   000F00  500A               	movf	?___lwdiv^0,w,c
  4072   000F02  5C25               	subwf	(??_lastSunday+6)^0,w,c
  4073   000F04  6E27               	movwf	(??_lastSunday+8)^0,c
  4074   000F06  500B               	movf	(?___lwdiv+1)^0,w,c
  4075   000F08  5826               	subwfb	(??_lastSunday+7)^0,w,c
  4076   000F0A  6E28               	movwf	(??_lastSunday+9)^0,c
  4077   000F0C  0E01               	movlw	1
  4078   000F0E  2427               	addwf	(??_lastSunday+8)^0,w,c
  4079   000F10  6E37               	movwf	_lastSunday$2258^0,c
  4080   000F12  0E00               	movlw	0
  4081   000F14  2028               	addwfc	(??_lastSunday+9)^0,w,c
  4082   000F16  6E38               	movwf	(_lastSunday$2258+1)^0,c
  4083   000F18                     
  4084                           ;functions.c: 32:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  4085   000F18  C037  F011         	movff	_lastSunday$2258,___lwmod@dividend
  4086   000F1C  C038  F012         	movff	_lastSunday$2258+1,___lwmod@dividend+1
  4087   000F20  0E00               	movlw	0
  4088   000F22  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4089   000F24  0E07               	movlw	7
  4090   000F26  6E13               	movwf	___lwmod@divisor^0,c
  4091   000F28  EC87  F00E         	call	___lwmod	;wreg free
  4092   000F2C  C011  F029         	movff	?___lwmod,lastSunday@h
  4093   000F30  C012  F02A         	movff	?___lwmod+1,lastSunday@h+1
  4094   000F34                     
  4095                           ;functions.c: 34:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  4096   000F34  0E06               	movlw	6
  4097   000F36  2429               	addwf	lastSunday@h^0,w,c
  4098   000F38  6E11               	movwf	___lwmod@dividend^0,c
  4099   000F3A  0E00               	movlw	0
  4100   000F3C  202A               	addwfc	(lastSunday@h+1)^0,w,c
  4101   000F3E  6E12               	movwf	(___lwmod@dividend+1)^0,c
  4102   000F40  0E00               	movlw	0
  4103   000F42  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4104   000F44  0E07               	movlw	7
  4105   000F46  6E13               	movwf	___lwmod@divisor^0,c
  4106   000F48  EC87  F00E         	call	___lwmod	;wreg free
  4107   000F4C  C011  F02B         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  4108   000F50  C012  F02C         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  4109   000F54                     
  4110                           ;functions.c: 37:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  4111   000F54  0E1E               	movlw	30
  4112   000F56  242B               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  4113   000F58  6E11               	movwf	___lwmod@dividend^0,c
  4114   000F5A  0E00               	movlw	0
  4115   000F5C  202C               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  4116   000F5E  6E12               	movwf	(___lwmod@dividend+1)^0,c
  4117   000F60  0E00               	movlw	0
  4118   000F62  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4119   000F64  0E07               	movlw	7
  4120   000F66  6E13               	movwf	___lwmod@divisor^0,c
  4121   000F68  EC87  F00E         	call	___lwmod	;wreg free
  4122   000F6C  C011  F02D         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  4123   000F70  C012  F02E         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  4124   000F74                     
  4125                           ;functions.c: 40:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  4126   000F74  502D               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  4127   000F76  081F               	sublw	31
  4128   000F78  6E3F               	movwf	lastSunday@lastSundayDateMonth^0,c
  4129   000F7A  502E               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  4130   000F7C  A0D8               	btfss	status,0,c
  4131   000F7E  2AE8               	incf	wreg,f,c
  4132   000F80  0800               	sublw	0
  4133   000F82  6E40               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  4134   000F84                     
  4135                           ;functions.c: 43:     if (month == 3){
  4136   000F84  0E03               	movlw	3
  4137   000F86  181D               	xorwf	lastSunday@month^0,w,c
  4138   000F88  101E               	iorwf	(lastSunday@month+1)^0,w,c
  4139   000F8A  A4D8               	btfss	status,2,c
  4140   000F8C  EFCA  F007         	goto	u1501
  4141   000F90  EFCC  F007         	goto	u1500
  4142   000F94                     u1501:
  4143   000F94  EFF1  F007         	goto	l2237
  4144   000F98                     u1500:
  4145   000F98                     
  4146                           ;functions.c: 44:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  4147   000F98  503D               	movf	lastSunday@leapYear^0,w,c
  4148   000F9A  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  4149   000F9C  A4D8               	btfss	status,2,c
  4150   000F9E  EFD3  F007         	goto	u1511
  4151   000FA2  EFD5  F007         	goto	u1510
  4152   000FA6                     u1511:
  4153   000FA6  EFDB  F007         	goto	l2227
  4154   000FAA                     u1510:
  4155   000FAA  0E00               	movlw	0
  4156   000FAC  6E3A               	movwf	(_lastSunday$1188+1)^0,c
  4157   000FAE  0E1C               	movlw	28
  4158   000FB0  6E39               	movwf	_lastSunday$1188^0,c
  4159   000FB2  EFDF  F007         	goto	l2229
  4160   000FB6                     l2227:
  4161   000FB6  0E00               	movlw	0
  4162   000FB8  6E3A               	movwf	(_lastSunday$1188+1)^0,c
  4163   000FBA  0E1D               	movlw	29
  4164   000FBC  6E39               	movwf	_lastSunday$1188^0,c
  4165   000FBE                     l2229:
  4166   000FBE  0E1F               	movlw	31
  4167   000FC0  2439               	addwf	_lastSunday$1188^0,w,c
  4168   000FC2  6E2F               	movwf	lastSunday@daysBeforeMarch^0,c
  4169   000FC4  0E00               	movlw	0
  4170   000FC6  203A               	addwfc	(_lastSunday$1188+1)^0,w,c
  4171   000FC8  6E30               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  4172   000FCA                     
  4173                           ;functions.c: 46:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  4174   000FCA  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  4175   000FCC  242F               	addwf	lastSunday@daysBeforeMarch^0,w,c
  4176   000FCE  6E31               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  4177   000FD0  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  4178   000FD2  2030               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  4179   000FD4  6E32               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  4180   000FD6                     
  4181                           ;functions.c: 48:     return dayOfYearForDSTStart;
  4182   000FD6  C031  F01B         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  4183   000FDA  C032  F01C         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  4184   000FDE  EF1E  F008         	goto	l197
  4185   000FE2                     l2237:
  4186                           
  4187                           ;functions.c: 53:     if (month == 10){
  4188   000FE2  0E0A               	movlw	10
  4189   000FE4  181D               	xorwf	lastSunday@month^0,w,c
  4190   000FE6  101E               	iorwf	(lastSunday@month+1)^0,w,c
  4191   000FE8  A4D8               	btfss	status,2,c
  4192   000FEA  EFF9  F007         	goto	u1521
  4193   000FEE  EFFB  F007         	goto	u1520
  4194   000FF2                     u1521:
  4195   000FF2  EF1E  F008         	goto	l197
  4196   000FF6                     u1520:
  4197   000FF6                     
  4198                           ;functions.c: 54:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  4199   000FF6  503D               	movf	lastSunday@leapYear^0,w,c
  4200   000FF8  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  4201   000FFA  A4D8               	btfss	status,2,c
  4202   000FFC  EF02  F008         	goto	u1531
  4203   001000  EF04  F008         	goto	u1530
  4204   001004                     u1531:
  4205   001004  EF0A  F008         	goto	l2243
  4206   001008                     u1530:
  4207   001008  0E00               	movlw	0
  4208   00100A  6E3C               	movwf	(_lastSunday$1191+1)^0,c
  4209   00100C  0E1C               	movlw	28
  4210   00100E  6E3B               	movwf	_lastSunday$1191^0,c
  4211   001010  EF0E  F008         	goto	l2245
  4212   001014                     l2243:
  4213   001014  0E00               	movlw	0
  4214   001016  6E3C               	movwf	(_lastSunday$1191+1)^0,c
  4215   001018  0E1D               	movlw	29
  4216   00101A  6E3B               	movwf	_lastSunday$1191^0,c
  4217   00101C                     l2245:
  4218   00101C  0EF5               	movlw	245
  4219   00101E  243B               	addwf	_lastSunday$1191^0,w,c
  4220   001020  6E33               	movwf	lastSunday@daysBeforeOctober^0,c
  4221   001022  0E00               	movlw	0
  4222   001024  203C               	addwfc	(_lastSunday$1191+1)^0,w,c
  4223   001026  6E34               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  4224   001028                     
  4225                           ;functions.c: 56:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  4226   001028  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  4227   00102A  2433               	addwf	lastSunday@daysBeforeOctober^0,w,c
  4228   00102C  6E35               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  4229   00102E  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  4230   001030  2034               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  4231   001032  6E36               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  4232   001034                     
  4233                           ;functions.c: 58:     return dayOfYearForDSTEnd;
  4234   001034  C035  F01B         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  4235   001038  C036  F01C         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  4236   00103C                     l197:
  4237   00103C  0012               	return		;funcret
  4238   00103E                     __end_of_lastSunday:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _isLeapYear *****************
  4242 ;; Defined at:
  4243 ;;		line 17 in file "functions.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  year            2   21[COMRAM] unsigned int 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  2   21[COMRAM] unsigned int 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;Total ram usage:        5 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 2
  4264 ;; This function calls:
  4265 ;;		___lwmod
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;;		_lastSunday
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text31
  4273   001AD8                     __ptext31:
  4274                           	callstack 0
  4275   001AD8                     _isLeapYear:
  4276                           	callstack 28
  4277   001AD8                     
  4278                           ;functions.c: 18:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  4279   001AD8  0E01               	movlw	1
  4280   001ADA  6E1A               	movwf	_isLeapYear$1178^0,c
  4281   001ADC  0E03               	movlw	3
  4282   001ADE  1416               	andwf	isLeapYear@year^0,w,c
  4283   001AE0  6E18               	movwf	??_isLeapYear^0,c
  4284   001AE2  0E00               	movlw	0
  4285   001AE4  1417               	andwf	(isLeapYear@year+1)^0,w,c
  4286   001AE6  6E19               	movwf	(??_isLeapYear+1)^0,c
  4287   001AE8  5018               	movf	??_isLeapYear^0,w,c
  4288   001AEA  1019               	iorwf	(??_isLeapYear+1)^0,w,c
  4289   001AEC  A4D8               	btfss	status,2,c
  4290   001AEE  EF7B  F00D         	goto	u1401
  4291   001AF2  EF7D  F00D         	goto	u1400
  4292   001AF6                     u1401:
  4293   001AF6  EF90  F00D         	goto	l2075
  4294   001AFA                     u1400:
  4295   001AFA  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4296   001AFE  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4297   001B02  0E00               	movlw	0
  4298   001B04  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4299   001B06  0E64               	movlw	100
  4300   001B08  6E13               	movwf	___lwmod@divisor^0,c
  4301   001B0A  EC87  F00E         	call	___lwmod	;wreg free
  4302   001B0E  5011               	movf	?___lwmod^0,w,c
  4303   001B10  1012               	iorwf	(?___lwmod+1)^0,w,c
  4304   001B12  A4D8               	btfss	status,2,c
  4305   001B14  EF8E  F00D         	goto	u1411
  4306   001B18  EF90  F00D         	goto	u1410
  4307   001B1C                     u1411:
  4308   001B1C  EFA5  F00D         	goto	l2079
  4309   001B20                     u1410:
  4310   001B20                     l2075:
  4311   001B20  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4312   001B24  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4313   001B28  0E01               	movlw	1
  4314   001B2A  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4315   001B2C  0E90               	movlw	144
  4316   001B2E  6E13               	movwf	___lwmod@divisor^0,c
  4317   001B30  EC87  F00E         	call	___lwmod	;wreg free
  4318   001B34  5011               	movf	?___lwmod^0,w,c
  4319   001B36  1012               	iorwf	(?___lwmod+1)^0,w,c
  4320   001B38  B4D8               	btfsc	status,2,c
  4321   001B3A  EFA1  F00D         	goto	u1421
  4322   001B3E  EFA3  F00D         	goto	u1420
  4323   001B42                     u1421:
  4324   001B42  EFA5  F00D         	goto	l2079
  4325   001B46                     u1420:
  4326   001B46  0E00               	movlw	0
  4327   001B48  6E1A               	movwf	_isLeapYear$1178^0,c
  4328   001B4A                     l2079:
  4329   001B4A  C01A  F016         	movff	_isLeapYear$1178,?_isLeapYear
  4330   001B4E  6A17               	clrf	(?_isLeapYear+1)^0,c
  4331   001B50  0012               	return		;funcret
  4332   001B52                     __end_of_isLeapYear:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function ___lwmod *****************
  4336 ;; Defined at:
  4337 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  dividend        2   16[COMRAM] unsigned int 
  4340 ;;  divisor         2   18[COMRAM] unsigned int 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  counter         1   20[COMRAM] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2   16[COMRAM] unsigned int 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;Total ram usage:        5 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; Hardware stack levels required when called: 1
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_isLeapYear
  4363 ;;		_lastSunday
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text32
  4368   001D0E                     __ptext32:
  4369                           	callstack 0
  4370   001D0E                     ___lwmod:
  4371                           	callstack 28
  4372   001D0E  5013               	movf	___lwmod@divisor^0,w,c
  4373   001D10  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  4374   001D12  B4D8               	btfsc	status,2,c
  4375   001D14  EF8E  F00E         	goto	u1321
  4376   001D18  EF90  F00E         	goto	u1320
  4377   001D1C                     u1321:
  4378   001D1C  EFB4  F00E         	goto	l782
  4379   001D20                     u1320:
  4380   001D20  0E01               	movlw	1
  4381   001D22  6E15               	movwf	___lwmod@counter^0,c
  4382   001D24  EF98  F00E         	goto	l2003
  4383   001D28                     l2001:
  4384   001D28  90D8               	bcf	status,0,c
  4385   001D2A  3613               	rlcf	___lwmod@divisor^0,f,c
  4386   001D2C  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  4387   001D2E  2A15               	incf	___lwmod@counter^0,f,c
  4388   001D30                     l2003:
  4389   001D30  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  4390   001D32  EF9D  F00E         	goto	u1331
  4391   001D36  EF9F  F00E         	goto	u1330
  4392   001D3A                     u1331:
  4393   001D3A  EF94  F00E         	goto	l2001
  4394   001D3E                     u1330:
  4395   001D3E                     l2005:
  4396   001D3E  5013               	movf	___lwmod@divisor^0,w,c
  4397   001D40  5C11               	subwf	___lwmod@dividend^0,w,c
  4398   001D42  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4399   001D44  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  4400   001D46  A0D8               	btfss	status,0,c
  4401   001D48  EFA8  F00E         	goto	u1341
  4402   001D4C  EFAA  F00E         	goto	u1340
  4403   001D50                     u1341:
  4404   001D50  EFAE  F00E         	goto	l2009
  4405   001D54                     u1340:
  4406   001D54  5013               	movf	___lwmod@divisor^0,w,c
  4407   001D56  5E11               	subwf	___lwmod@dividend^0,f,c
  4408   001D58  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4409   001D5A  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  4410   001D5C                     l2009:
  4411   001D5C  90D8               	bcf	status,0,c
  4412   001D5E  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  4413   001D60  3213               	rrcf	___lwmod@divisor^0,f,c
  4414   001D62  2E15               	decfsz	___lwmod@counter^0,f,c
  4415   001D64  EF9F  F00E         	goto	l2005
  4416   001D68                     l782:
  4417   001D68  C011  F011         	movff	___lwmod@dividend,?___lwmod
  4418   001D6C  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  4419   001D70  0012               	return		;funcret
  4420   001D72                     __end_of___lwmod:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function ___wmul *****************
  4424 ;; Defined at:
  4425 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  multiplier      2    3[COMRAM] unsigned int 
  4428 ;;  multiplicand    2    5[COMRAM] unsigned int 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  product         2    7[COMRAM] unsigned int 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  2    3[COMRAM] unsigned int 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, prodl, prodh
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;Total ram usage:        6 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_lastSunday
  4451 ;;		_read_prec_or_width
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text33
  4456   001F56                     __ptext33:
  4457                           	callstack 0
  4458   001F56                     ___wmul:
  4459                           	callstack 24
  4460   001F56  5004               	movf	___wmul@multiplier^0,w,c
  4461   001F58  0206               	mulwf	___wmul@multiplicand^0,c
  4462   001F5A  CFF3 F008          	movff	prodl,___wmul@product
  4463   001F5E  CFF4 F009          	movff	prodh,___wmul@product+1
  4464   001F62  5004               	movf	___wmul@multiplier^0,w,c
  4465   001F64  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  4466   001F66  50F3               	movf	243,w,c
  4467   001F68  2609               	addwf	(___wmul@product+1)^0,f,c
  4468   001F6A  5005               	movf	(___wmul@multiplier+1)^0,w,c
  4469   001F6C  0206               	mulwf	___wmul@multiplicand^0,c
  4470   001F6E  50F3               	movf	243,w,c
  4471   001F70  2609               	addwf	(___wmul@product+1)^0,f,c
  4472   001F72  C008  F004         	movff	___wmul@product,?___wmul
  4473   001F76  C009  F005         	movff	___wmul@product+1,?___wmul+1
  4474   001F7A  0012               	return		;funcret
  4475   001F7C                     __end_of___wmul:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function ___lwdiv *****************
  4479 ;; Defined at:
  4480 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  dividend        2    9[COMRAM] unsigned int 
  4483 ;;  divisor         2   11[COMRAM] unsigned int 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  quotient        2   13[COMRAM] unsigned int 
  4486 ;;  counter         1   15[COMRAM] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2    9[COMRAM] unsigned int 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;Total ram usage:        7 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; Hardware stack levels required when called: 1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_lastSunday
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text34
  4511   001BC8                     __ptext34:
  4512                           	callstack 0
  4513   001BC8                     ___lwdiv:
  4514                           	callstack 27
  4515   001BC8  0E00               	movlw	0
  4516   001BCA  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  4517   001BCC  0E00               	movlw	0
  4518   001BCE  6E0E               	movwf	___lwdiv@quotient^0,c
  4519   001BD0  500C               	movf	___lwdiv@divisor^0,w,c
  4520   001BD2  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4521   001BD4  B4D8               	btfsc	status,2,c
  4522   001BD6  EFEF  F00D         	goto	u1441
  4523   001BDA  EFF1  F00D         	goto	u1440
  4524   001BDE                     u1441:
  4525   001BDE  EF19  F00E         	goto	l772
  4526   001BE2                     u1440:
  4527   001BE2  0E01               	movlw	1
  4528   001BE4  6E10               	movwf	___lwdiv@counter^0,c
  4529   001BE6  EFF9  F00D         	goto	l2109
  4530   001BEA                     l2107:
  4531   001BEA  90D8               	bcf	status,0,c
  4532   001BEC  360C               	rlcf	___lwdiv@divisor^0,f,c
  4533   001BEE  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4534   001BF0  2A10               	incf	___lwdiv@counter^0,f,c
  4535   001BF2                     l2109:
  4536   001BF2  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  4537   001BF4  EFFE  F00D         	goto	u1451
  4538   001BF8  EF00  F00E         	goto	u1450
  4539   001BFC                     u1451:
  4540   001BFC  EFF5  F00D         	goto	l2107
  4541   001C00                     u1450:
  4542   001C00                     l2111:
  4543   001C00  90D8               	bcf	status,0,c
  4544   001C02  360E               	rlcf	___lwdiv@quotient^0,f,c
  4545   001C04  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4546   001C06  500C               	movf	___lwdiv@divisor^0,w,c
  4547   001C08  5C0A               	subwf	___lwdiv@dividend^0,w,c
  4548   001C0A  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  4549   001C0C  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4550   001C0E  A0D8               	btfss	status,0,c
  4551   001C10  EF0C  F00E         	goto	u1461
  4552   001C14  EF0E  F00E         	goto	u1460
  4553   001C18                     u1461:
  4554   001C18  EF13  F00E         	goto	l2119
  4555   001C1C                     u1460:
  4556   001C1C  500C               	movf	___lwdiv@divisor^0,w,c
  4557   001C1E  5E0A               	subwf	___lwdiv@dividend^0,f,c
  4558   001C20  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  4559   001C22  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4560   001C24  800E               	bsf	___lwdiv@quotient^0,0,c
  4561   001C26                     l2119:
  4562   001C26  90D8               	bcf	status,0,c
  4563   001C28  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4564   001C2A  320C               	rrcf	___lwdiv@divisor^0,f,c
  4565   001C2C  2E10               	decfsz	___lwdiv@counter^0,f,c
  4566   001C2E  EF00  F00E         	goto	l2111
  4567   001C32                     l772:
  4568   001C32  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  4569   001C36  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4570   001C3A  0012               	return		;funcret
  4571   001C3C                     __end_of___lwdiv:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _changeHourDayYear *****************
  4575 ;; Defined at:
  4576 ;;		line 101 in file "functions.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  hour            1    3[COMRAM] PTR unsigned int 
  4579 ;;		 -> hour(2), 
  4580 ;;  day             1    4[COMRAM] PTR unsigned int 
  4581 ;;		 -> main@day(2), 
  4582 ;;  year            1    5[COMRAM] PTR unsigned int 
  4583 ;;		 -> main@year(2), 
  4584 ;;  leap            2    6[COMRAM] unsigned int 
  4585 ;;  synced          1    8[COMRAM] PTR unsigned int 
  4586 ;;		 -> main@synced(2), 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;Total ram usage:        8 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 1
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text35
  4613   001426                     __ptext35:
  4614                           	callstack 0
  4615   001426                     _changeHourDayYear:
  4616                           	callstack 29
  4617   001426                     
  4618                           ;functions.c: 103:     if (*hour == 24) {
  4619   001426  5004               	movf	changeHourDayYear@hour^0,w,c
  4620   001428  6ED9               	movwf	fsr2l,c
  4621   00142A  6ADA               	clrf	fsr2h,c
  4622   00142C  0E18               	movlw	24
  4623   00142E  18DE               	xorwf	postinc2,w,c
  4624   001430  10DE               	iorwf	postinc2,w,c
  4625   001432  A4D8               	btfss	status,2,c
  4626   001434  EF1E  F00A         	goto	u1721
  4627   001438  EF20  F00A         	goto	u1720
  4628   00143C                     u1721:
  4629   00143C  EF2B  F00A         	goto	l2381
  4630   001440                     u1720:
  4631   001440                     
  4632                           ;functions.c: 104:        *hour = 0;
  4633   001440  5004               	movf	changeHourDayYear@hour^0,w,c
  4634   001442  6ED9               	movwf	fsr2l,c
  4635   001444  6ADA               	clrf	fsr2h,c
  4636   001446  6ADE               	clrf	postinc2,c
  4637   001448  6ADD               	clrf	postdec2,c
  4638   00144A                     
  4639                           ;functions.c: 105:        (*day)++;
  4640   00144A  5005               	movf	changeHourDayYear@day^0,w,c
  4641   00144C  6ED9               	movwf	fsr2l,c
  4642   00144E  6ADA               	clrf	fsr2h,c
  4643   001450  2ADE               	incf	postinc2,f,c
  4644   001452  0E00               	movlw	0
  4645   001454  22DD               	addwfc	postdec2,f,c
  4646   001456                     l2381:
  4647                           
  4648                           ;functions.c: 109:     if (leap == 0 && *day > 365) {
  4649   001456  5007               	movf	changeHourDayYear@leap^0,w,c
  4650   001458  1008               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4651   00145A  A4D8               	btfss	status,2,c
  4652   00145C  EF32  F00A         	goto	u1731
  4653   001460  EF34  F00A         	goto	u1730
  4654   001464                     u1731:
  4655   001464  EF54  F00A         	goto	l2391
  4656   001468                     u1730:
  4657   001468  5005               	movf	changeHourDayYear@day^0,w,c
  4658   00146A  6ED9               	movwf	fsr2l,c
  4659   00146C  6ADA               	clrf	fsr2h,c
  4660   00146E  0E6E               	movlw	110
  4661   001470  5CDE               	subwf	postinc2,w,c
  4662   001472  0E01               	movlw	1
  4663   001474  58DE               	subwfb	postinc2,w,c
  4664   001476  A0D8               	btfss	status,0,c
  4665   001478  EF40  F00A         	goto	u1741
  4666   00147C  EF42  F00A         	goto	u1740
  4667   001480                     u1741:
  4668   001480  EF54  F00A         	goto	l2391
  4669   001484                     u1740:
  4670   001484                     
  4671                           ;functions.c: 110:         *day = 1;
  4672   001484  5005               	movf	changeHourDayYear@day^0,w,c
  4673   001486  6ED9               	movwf	fsr2l,c
  4674   001488  6ADA               	clrf	fsr2h,c
  4675   00148A  0E01               	movlw	1
  4676   00148C  6EDE               	movwf	postinc2,c
  4677   00148E  0E00               	movlw	0
  4678   001490  6EDD               	movwf	postdec2,c
  4679   001492                     
  4680                           ;functions.c: 111:         (*year)++;
  4681   001492  5006               	movf	changeHourDayYear@year^0,w,c
  4682   001494  6ED9               	movwf	fsr2l,c
  4683   001496  6ADA               	clrf	fsr2h,c
  4684   001498  2ADE               	incf	postinc2,f,c
  4685   00149A  0E00               	movlw	0
  4686   00149C  22DD               	addwfc	postdec2,f,c
  4687   00149E                     
  4688                           ;functions.c: 112:         *synced = 0;
  4689   00149E  5009               	movf	changeHourDayYear@synced^0,w,c
  4690   0014A0  6ED9               	movwf	fsr2l,c
  4691   0014A2  6ADA               	clrf	fsr2h,c
  4692   0014A4  6ADE               	clrf	postinc2,c
  4693   0014A6  6ADD               	clrf	postdec2,c
  4694   0014A8                     l2391:
  4695                           
  4696                           ;functions.c: 116:     if (leap == 1 && *day > 366) {
  4697   0014A8  0407               	decf	changeHourDayYear@leap^0,w,c
  4698   0014AA  1008               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4699   0014AC  A4D8               	btfss	status,2,c
  4700   0014AE  EF5B  F00A         	goto	u1751
  4701   0014B2  EF5D  F00A         	goto	u1750
  4702   0014B6                     u1751:
  4703   0014B6  EF78  F00A         	goto	l217
  4704   0014BA                     u1750:
  4705   0014BA  5005               	movf	changeHourDayYear@day^0,w,c
  4706   0014BC  6ED9               	movwf	fsr2l,c
  4707   0014BE  6ADA               	clrf	fsr2h,c
  4708   0014C0  0E6F               	movlw	111
  4709   0014C2  5CDE               	subwf	postinc2,w,c
  4710   0014C4  0E01               	movlw	1
  4711   0014C6  58DE               	subwfb	postinc2,w,c
  4712   0014C8  A0D8               	btfss	status,0,c
  4713   0014CA  EF69  F00A         	goto	u1761
  4714   0014CE  EF6B  F00A         	goto	u1760
  4715   0014D2                     u1761:
  4716   0014D2  EF78  F00A         	goto	l217
  4717   0014D6                     u1760:
  4718   0014D6                     
  4719                           ;functions.c: 117:         *day = 1;
  4720   0014D6  5005               	movf	changeHourDayYear@day^0,w,c
  4721   0014D8  6ED9               	movwf	fsr2l,c
  4722   0014DA  6ADA               	clrf	fsr2h,c
  4723   0014DC  0E01               	movlw	1
  4724   0014DE  6EDE               	movwf	postinc2,c
  4725   0014E0  0E00               	movlw	0
  4726   0014E2  6EDD               	movwf	postdec2,c
  4727   0014E4                     
  4728                           ;functions.c: 118:         (*year)++;
  4729   0014E4  5006               	movf	changeHourDayYear@year^0,w,c
  4730   0014E6  6ED9               	movwf	fsr2l,c
  4731   0014E8  6ADA               	clrf	fsr2h,c
  4732   0014EA  2ADE               	incf	postinc2,f,c
  4733   0014EC  0E00               	movlw	0
  4734   0014EE  22DD               	addwfc	postdec2,f,c
  4735   0014F0                     l217:
  4736   0014F0  0012               	return		;funcret
  4737   0014F2                     __end_of_changeHourDayYear:
  4738                           	callstack 0
  4739                           
  4740 ;; *************** function _LEDarray_disp_bin *****************
  4741 ;; Defined at:
  4742 ;;		line 34 in file "LEDarray.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  number          2    3[COMRAM] unsigned int 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		None
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4760 ;;Total ram usage:        2 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text36
  4771   0014F2                     __ptext36:
  4772                           	callstack 0
  4773   0014F2                     _LEDarray_disp_bin:
  4774                           	callstack 29
  4775   0014F2                     
  4776                           ;LEDarray.c: 34: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 35: {;LEDarray.
      +                          c: 37:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  4777   0014F2  A004               	btfss	LEDarray_disp_bin@number^0,0,c
  4778   0014F4  EF7E  F00A         	goto	u1551
  4779   0014F8  EF80  F00A         	goto	u1550
  4780   0014FC                     u1551:
  4781   0014FC  EF83  F00A         	goto	l84
  4782   001500                     u1550:
  4783   001500  807F               	bsf	127,0,c	;volatile
  4784   001502  EF84  F00A         	goto	l85
  4785   001506                     l84:
  4786   001506  907F               	bcf	127,0,c	;volatile
  4787   001508                     l85:
  4788                           
  4789                           ;LEDarray.c: 38:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  4790   001508  A204               	btfss	LEDarray_disp_bin@number^0,1,c
  4791   00150A  EF89  F00A         	goto	u1561
  4792   00150E  EF8B  F00A         	goto	u1560
  4793   001512                     u1561:
  4794   001512  EF8E  F00A         	goto	l86
  4795   001516                     u1560:
  4796   001516  827F               	bsf	127,1,c	;volatile
  4797   001518  EF8F  F00A         	goto	l87
  4798   00151C                     l86:
  4799   00151C  927F               	bcf	127,1,c	;volatile
  4800   00151E                     l87:
  4801                           
  4802                           ;LEDarray.c: 39:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  4803   00151E  A404               	btfss	LEDarray_disp_bin@number^0,2,c
  4804   001520  EF94  F00A         	goto	u1571
  4805   001524  EF96  F00A         	goto	u1570
  4806   001528                     u1571:
  4807   001528  EF99  F00A         	goto	l88
  4808   00152C                     u1570:
  4809   00152C  8479               	bsf	121,2,c	;volatile
  4810   00152E  EF9A  F00A         	goto	l89
  4811   001532                     l88:
  4812   001532  9479               	bcf	121,2,c	;volatile
  4813   001534                     l89:
  4814                           
  4815                           ;LEDarray.c: 40:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  4816   001534  A604               	btfss	LEDarray_disp_bin@number^0,3,c
  4817   001536  EF9F  F00A         	goto	u1581
  4818   00153A  EFA1  F00A         	goto	u1580
  4819   00153E                     u1581:
  4820   00153E  EFA4  F00A         	goto	l90
  4821   001542                     u1580:
  4822   001542  8C7E               	bsf	126,6,c	;volatile
  4823   001544  EFA5  F00A         	goto	l91
  4824   001548                     l90:
  4825   001548  9C7E               	bcf	126,6,c	;volatile
  4826   00154A                     l91:
  4827                           
  4828                           ;LEDarray.c: 41:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  4829   00154A  A804               	btfss	LEDarray_disp_bin@number^0,4,c
  4830   00154C  EFAA  F00A         	goto	u1591
  4831   001550  EFAC  F00A         	goto	u1590
  4832   001554                     u1591:
  4833   001554  EFAF  F00A         	goto	l92
  4834   001558                     u1590:
  4835   001558  8879               	bsf	121,4,c	;volatile
  4836   00155A  EFB0  F00A         	goto	l93
  4837   00155E                     l92:
  4838   00155E  9879               	bcf	121,4,c	;volatile
  4839   001560                     l93:
  4840                           
  4841                           ;LEDarray.c: 42:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  4842   001560  AA04               	btfss	LEDarray_disp_bin@number^0,5,c
  4843   001562  EFB5  F00A         	goto	u1601
  4844   001566  EFB7  F00A         	goto	u1600
  4845   00156A                     u1601:
  4846   00156A  EFBA  F00A         	goto	l94
  4847   00156E                     u1600:
  4848   00156E  8A79               	bsf	121,5,c	;volatile
  4849   001570  EFBB  F00A         	goto	l95
  4850   001574                     l94:
  4851   001574  9A79               	bcf	121,5,c	;volatile
  4852   001576                     l95:
  4853                           
  4854                           ;LEDarray.c: 43:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  4855   001576  AC04               	btfss	LEDarray_disp_bin@number^0,6,c
  4856   001578  EFC0  F00A         	goto	u1611
  4857   00157C  EFC2  F00A         	goto	u1610
  4858   001580                     u1611:
  4859   001580  EFC5  F00A         	goto	l96
  4860   001584                     u1610:
  4861   001584  807E               	bsf	126,0,c	;volatile
  4862   001586  EFC6  F00A         	goto	l97
  4863   00158A                     l96:
  4864   00158A  907E               	bcf	126,0,c	;volatile
  4865   00158C                     l97:
  4866                           
  4867                           ;LEDarray.c: 44:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  4868   00158C  AE04               	btfss	LEDarray_disp_bin@number^0,7,c
  4869   00158E  EFCB  F00A         	goto	u1621
  4870   001592  EFCD  F00A         	goto	u1620
  4871   001596                     u1621:
  4872   001596  EFD0  F00A         	goto	l98
  4873   00159A                     u1620:
  4874   00159A  807A               	bsf	122,0,c	;volatile
  4875   00159C  EFD1  F00A         	goto	l99
  4876   0015A0                     l98:
  4877   0015A0  907A               	bcf	122,0,c	;volatile
  4878   0015A2                     l99:
  4879                           
  4880                           ;LEDarray.c: 45:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  4881   0015A2  A005               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4882   0015A4  EFD6  F00A         	goto	u1631
  4883   0015A8  EFD8  F00A         	goto	u1630
  4884   0015AC                     u1631:
  4885   0015AC  EFDB  F00A         	goto	l100
  4886   0015B0                     u1630:
  4887   0015B0  827A               	bsf	122,1,c	;volatile
  4888   0015B2  EFDC  F00A         	goto	l102
  4889   0015B6                     l100:
  4890   0015B6  927A               	bcf	122,1,c	;volatile
  4891   0015B8                     l102:
  4892   0015B8  0012               	return		;funcret
  4893   0015BA                     __end_of_LEDarray_disp_bin:
  4894                           	callstack 0
  4895                           
  4896 ;; *************** function _LowISR *****************
  4897 ;; Defined at:
  4898 ;;		line 48 in file "interrupts.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;Total ram usage:        3 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		Interrupt level 1
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	intcodelo
  4926   000018                     __pintcodelo:
  4927                           	callstack 0
  4928   000018                     _LowISR:
  4929                           	callstack 21
  4930                           
  4931                           ;incstack = 0
  4932   000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4933   00001A  CFD8 F001          	movff	status,??_LowISR
  4934   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  4935   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  4936   000026                     
  4937                           ;interrupts.c: 51:     if (PIR0bits.TMR0IF == 1) {
  4938   000026  010E               	movlb	14	; () banked
  4939   000028  AB33               	btfss	51,5,b	;volatile
  4940   00002A  EF19  F000         	goto	i1u181_21
  4941   00002E  EF1B  F000         	goto	i1u181_20
  4942   000032                     i1u181_21:
  4943   000032  EF44  F000         	goto	i1l132
  4944   000036                     i1u181_20:
  4945   000036                     
  4946                           ; BSR set to: 14
  4947                           ;interrupts.c: 54:      hour++;
  4948   000036  0100               	movlb	0	; () banked
  4949   000038  4BAE               	infsnz	_hour& (0+255),f,b
  4950   00003A  2BAF               	incf	(_hour+1)& (0+255),f,b
  4951   00003C                     
  4952                           ; BSR set to: 0
  4953                           ;interrupts.c: 55:      TMR0H=00001011;
  4954   00003C  0E09               	movlw	9
  4955   00003E  6ED4               	movwf	212,c	;volatile
  4956   000040                     
  4957                           ; BSR set to: 0
  4958                           ;interrupts.c: 56:      TMR0L=110011011;
  4959   000040  0E83               	movlw	131
  4960   000042  6ED3               	movwf	211,c	;volatile
  4961   000044                     
  4962                           ; BSR set to: 0
  4963                           ;interrupts.c: 57:      if (hour >= 1 && hour < 5){
  4964   000044  51AE               	movf	_hour& (0+255),w,b
  4965   000046  11AF               	iorwf	(_hour+1)& (0+255),w,b
  4966   000048  B4D8               	btfsc	status,2,c
  4967   00004A  EF29  F000         	goto	i1u182_21
  4968   00004E  EF2B  F000         	goto	i1u182_20
  4969   000052                     i1u182_21:
  4970   000052  EF37  F000         	goto	i1l2443
  4971   000056                     i1u182_20:
  4972   000056                     
  4973                           ; BSR set to: 0
  4974   000056  51AF               	movf	(_hour+1)& (0+255),w,b
  4975   000058  E107               	bnz	i1u183_21
  4976   00005A  0E05               	movlw	5
  4977   00005C  5DAE               	subwf	_hour& (0+255),w,b
  4978   00005E  B0D8               	btfsc	status,0,c
  4979   000060  EF34  F000         	goto	i1u183_21
  4980   000064  EF36  F000         	goto	i1u183_20
  4981   000068                     i1u183_21:
  4982   000068  EF37  F000         	goto	i1l2443
  4983   00006C                     i1u183_20:
  4984   00006C                     
  4985                           ; BSR set to: 0
  4986                           ;interrupts.c: 58:          LATHbits.LATH3 = 0;
  4987   00006C  9680               	bcf	128,3,c	;volatile
  4988   00006E                     i1l2443:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;interrupts.c: 60:      if (hour == 6){
  4992   00006E  0E06               	movlw	6
  4993   000070  19AE               	xorwf	_hour& (0+255),w,b
  4994   000072  11AF               	iorwf	(_hour+1)& (0+255),w,b
  4995   000074  A4D8               	btfss	status,2,c
  4996   000076  EF3F  F000         	goto	i1u184_21
  4997   00007A  EF41  F000         	goto	i1u184_20
  4998   00007E                     i1u184_21:
  4999   00007E  EF42  F000         	goto	i1l134
  5000   000082                     i1u184_20:
  5001   000082                     
  5002                           ; BSR set to: 0
  5003                           ;interrupts.c: 61:          LATHbits.LATH3 = 1;
  5004   000082  8680               	bsf	128,3,c	;volatile
  5005   000084                     i1l134:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;interrupts.c: 64:      PIR0bits.TMR0IF = 0;
  5009   000084  010E               	movlb	14	; () banked
  5010   000086  9B33               	bcf	51,5,b	;volatile
  5011   000088                     i1l132:
  5012                           
  5013                           ; BSR set to: 14
  5014                           ;interrupts.c: 68:     if (PIR2bits.C1IF == 1) {
  5015   000088  A135               	btfss	53,0,b	;volatile
  5016   00008A  EF49  F000         	goto	i1u185_21
  5017   00008E  EF4B  F000         	goto	i1u185_20
  5018   000092                     i1u185_21:
  5019   000092  EF4D  F000         	goto	i1l135
  5020   000096                     i1u185_20:
  5021   000096                     
  5022                           ; BSR set to: 14
  5023                           ;interrupts.c: 70:             LATHbits.LATH3 = 1;
  5024   000096  8680               	bsf	128,3,c	;volatile
  5025                           
  5026                           ;interrupts.c: 72:         PIR2bits.C1IF = 0;
  5027   000098  9135               	bcf	53,0,b	;volatile
  5028   00009A                     i1l135:
  5029                           
  5030                           ; BSR set to: 14
  5031                           ;interrupts.c: 76:     if (PIR2bits.C2IF == 1) {
  5032   00009A  A335               	btfss	53,1,b	;volatile
  5033   00009C  EF52  F000         	goto	i1u186_21
  5034   0000A0  EF54  F000         	goto	i1u186_20
  5035   0000A4                     i1u186_21:
  5036   0000A4  EF56  F000         	goto	i1l137
  5037   0000A8                     i1u186_20:
  5038   0000A8                     
  5039                           ; BSR set to: 14
  5040                           ;interrupts.c: 78:             LATHbits.LATH3 = 0;
  5041   0000A8  9680               	bcf	128,3,c	;volatile
  5042                           
  5043                           ;interrupts.c: 80:             PIR2bits.C2IF = 0;
  5044   0000AA  9335               	bcf	53,1,b	;volatile
  5045   0000AC                     i1l137:
  5046                           
  5047                           ; BSR set to: 14
  5048   0000AC  C003  FFE0         	movff	??_LowISR+2,bsr
  5049   0000B0  C002  FFE8         	movff	??_LowISR+1,wreg
  5050   0000B4  C001  FFD8         	movff	??_LowISR,status
  5051   0000B8  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5052   0000BA  0010               	retfie	
  5053   0000BC                     __end_of_LowISR:
  5054                           	callstack 0
  5055                           
  5056                           	psect	rparam
  5057   000000                     
  5058                           	psect	temp
  5059   000055                     btemp:
  5060                           	callstack 0
  5061   000055                     	ds	1
  5062   000000                     int$flags	set	btemp
  5063   000000                     wtemp8	set	btemp+1
  5064   000000                     ttemp5	set	btemp+1
  5065   000000                     ttemp6	set	btemp+4
  5066   000000                     ttemp7	set	btemp+8
  5067                           
  5068                           	psect	config
  5069                           
  5070                           ;Config register CONFIG1L @ 0x300000
  5071                           ;	External Oscillator mode Selection bits
  5072                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5073                           ;	Power-up default value for COSC bits
  5074                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5075   300000                     	org	3145728
  5076   300000  AA                 	db	170
  5077                           
  5078                           ;Config register CONFIG1H @ 0x300001
  5079                           ;	unspecified, using default values
  5080                           ;	Clock Out Enable bit
  5081                           ;	CLKOUTEN = 0x1, unprogrammed default
  5082                           ;	Clock Switch Enable bit
  5083                           ;	CSWEN = 0x1, unprogrammed default
  5084                           ;	Fail-Safe Clock Monitor Enable bit
  5085                           ;	FCMEN = 0x1, unprogrammed default
  5086   300001                     	org	3145729
  5087   300001  FF                 	db	255
  5088                           
  5089                           ;Config register CONFIG3L @ 0x300004
  5090                           ;	WDT Period Select bits
  5091                           ;	WDTCPS = 0x1F, unprogrammed default
  5092                           ;	WDT operating mode
  5093                           ;	WDTE = OFF, WDT Disabled
  5094   300004                     	org	3145732
  5095   300004  9F                 	db	159
  5096                           
  5097                           ;Config register CONFIG3H @ 0x300005
  5098                           ;	unspecified, using default values
  5099                           ;	WDT Window Select bits
  5100                           ;	WDTCWS = 0x7, unprogrammed default
  5101                           ;	WDT input clock selector
  5102                           ;	WDTCCS = 0x7, unprogrammed default
  5103   300005                     	org	3145733
  5104   300005  FF                 	db	255
  5105                           tosu	equ	0xFFF
  5106                           tosh	equ	0xFFE
  5107                           tosl	equ	0xFFD
  5108                           stkptr	equ	0xFFC
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           pcl	equ	0xFF9
  5112                           tblptru	equ	0xFF8
  5113                           tblptrh	equ	0xFF7
  5114                           tblptrl	equ	0xFF6
  5115                           tablat	equ	0xFF5
  5116                           prodh	equ	0xFF4
  5117                           prodl	equ	0xFF3
  5118                           indf0	equ	0xFEF
  5119                           postinc0	equ	0xFEE
  5120                           postdec0	equ	0xFED
  5121                           preinc0	equ	0xFEC
  5122                           plusw0	equ	0xFEB
  5123                           fsr0h	equ	0xFEA
  5124                           fsr0l	equ	0xFE9
  5125                           wreg	equ	0xFE8
  5126                           indf1	equ	0xFE7
  5127                           postinc1	equ	0xFE6
  5128                           postdec1	equ	0xFE5
  5129                           preinc1	equ	0xFE4
  5130                           plusw1	equ	0xFE3
  5131                           fsr1h	equ	0xFE2
  5132                           fsr1l	equ	0xFE1
  5133                           bsr	equ	0xFE0
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           preinc2	equ	0xFDC
  5138                           plusw2	equ	0xFDB
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      84
    BANK0           160     46      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    changeHourDayYear@day	PTR unsigned int  size(1) Largest target is 2
		 -> main@day(BANK0[2]), 

    changeHourDayYear@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    changeHourDayYear@synced	PTR unsigned int  size(1) Largest target is 2
		 -> main@synced(BANK0[2]), 

    changeHourDayYear@year	PTR unsigned int  size(1) Largest target is 2
		 -> main@year(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    findDSTdates@bkwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@bkwd_daylight_savings_day(BANK0[2]), 

    findDSTdates@fwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@fwd_daylight_savings_day(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    hourChangeDST@backward_zone	PTR unsigned int  size(1) Largest target is 2
		 -> main@backward_zone(BANK0[2]), 

    hourChangeDST@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1902$buffer	PTR unsigned char  size(2) Largest target is 0

    S1902$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    sunSync@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    sunSync@synced	PTR unsigned int  size(1) Largest target is 2
		 -> main@synced(BANK0[2]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_3(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _initialise->_LCD_init
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _findDSTdates->_lastSunday
    _lastSunday->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   20406
                                              0 BANK0     46    46      0
                        _LCD_setline
                  _LEDarray_disp_bin
                  _changeHourDayYear
                       _findDSTdates
                      _hourChangeDST
                         _initialise
                         _isLeapYear
                            _sunSync
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                         11     2      9    9625
                                             68 COMRAM    11     2      9
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    6918
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6261
                                             45 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    5902
                                             34 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     795
                                              9 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             23 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0     928
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1157
                                              8 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _sunSync                                              6     2      4     338
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0     972
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0     972
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     884
                                              4 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              3 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (3) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hourChangeDST                                       10     2      8     622
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _findDSTdates                                         8     0      8    5083
                                             64 COMRAM     8     0      8
                         _lastSunday
 ---------------------------------------------------------------------------------
 (2) _lastSunday                                          38    34      4    4571
                                             26 COMRAM    38    34      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (1) _isLeapYear                                           5     3      2    1465
                                             21 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1223
                                             16 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              9 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _changeHourDayYear                                    8     2      6     644
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     274
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _changeHourDayYear
   _findDSTdates
     _lastSunday
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul
       _isLeapYear
         ___lwmod
   _hourChangeDST
   _initialise
     _Comp1_init_fe
       _DAC_init
     _Comp1_init_re
       _DAC_init
     _Interrupts_init
     _LCD_init
       _LCD_sendbyte
       _LCD_sendnibble
     _LEDarray_init
     _Timer0_init
   _isLeapYear
   _sunSync
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      50       5       50.0%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      54       1       89.4%
BITBIGSFRlhhhhh     4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhlhh      4      0       0      38        0.0%
BITBIGSFRlhhhhl      1      0       0      35        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      47        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 12:23:50 2024

                                    l25 1358                                      l47 1F28  
                                    l81 1F54                                      l90 1548  
                                    l91 154A                                      l92 155E  
                                    l84 1506                                      l93 1560  
                                    l85 1508                                      l94 1574  
                                    l86 151C                                      l95 1576  
                                    l87 151E                                      l96 158A  
                                    l88 1532                                      l97 158C  
                                    l89 1534                                      l98 15A0  
                                    l99 15A2                            ___awdiv@sign 0009  
                                    bsr 0FE0                     ___wmul@multiplicand 0006  
                     ??_Interrupts_init 0004                                     l100 15B6  
                                   l102 15B8                                     l211 1CA4  
                                   l221 1BC6                                     l207 1888  
                                   l127 2016                                     l224 1FFC  
                                   l217 14F0                                     l162 202A  
                                   l250 1CE8                                     l243 2038  
                                   l252 1CFE                                     l165 1F9E  
                                   l254 1D0C                                     l246 1CBC  
                                   l262 1AD6                                     l168 1FC2  
                                   l248 1CD2                                     l512 167C  
                                   l281 1F7A                                     l257 1E08  
                                   l273 1EFA                                     l259 1E2A  
                                   l267 1E64                                     l189 1B50  
                                   l197 103C                                     l525 172C  
                                   l278 19C6                                     l772 1C32  
                                   l782 1D68                                     l779 1C3A  
                                   l789 1D70                                     l982 1A36  
                                   l959 1E98                                     l984 1A50  
                                   l979 19F8                                     l987 121E  
                                   u940 189A                                     u941 1896  
                                   u950 18AA                                     u951 18A6  
                                   u960 18D0                                     u961 18CC  
                                   u970 1902                                     u971 18FE  
                                   u980 1DEE                                     u981 1DEA  
                                   u990 15CC                                     u991 15C8  
                                   _abs 1E9A                                     _pad 19C8  
                          ___awmod@sign 0009                                     wreg 0FE8  
                     main@backward_zone 0086                                    l1000 1326  
                                  l1004 17D2                                    l1023 11BE  
                                  l1008 17DA                                    l2001 1D28  
                                  l1033 1EB4                                    l2011 1D62  
                                  l2003 1D30                                    ?_abs 000A  
                                  l1036 1ECC                                    l2101 1BC8  
                                  l2005 1D3E                                    l2021 107C  
                                  l2013 103E                                    l1029 1DB2  
                                  l2111 1C00                                    l2103 1BD0  
                                  l2007 1D54                                    l2031 109A  
                                  l2023 1084                                    l2015 1064  
                                  l1048 1932                                    l1056 1DEE  
                                  l2121 1C2C                                    l2113 1C06  
                                  l2105 1BE2                                    l2009 1D5C  
                                  l2201 1FB6                                    l2041 110C  
                                  l2025 1086                                    l2033 10D0  
                                  l2017 106C                                    l2115 1C1C  
                                  l2107 1BEA                                    l2211 0E3A  
                                  l2203 1FB8                                    l1059 203A  
                                  l2051 1178                                    l2043 1116  
                                  l2035 10E0                                    l2027 1092  
                                  l2019 1078                                    l2123 1D72  
                                  l2117 1C24                                    l2109 1BF2  
                                  l2221 0F84                                    l2213 0F18  
                                  l2205 1FBA                                    l2141 1EFC  
                                  l2301 1FE8                                    l2133 1E2E  
                                  l2045 1136                                    l2037 10F4  
                                  l2125 1D7A                                    l2311 14F2  
                                  l2119 1C26                                    l2071 1ADC  
                                  l2231 0FCA                                    l2223 0F98  
                                  l2215 0F34                                    l2207 1FBE  
                                  l2151 1F16                                    l2143 1F04  
                                  l2303 1FEC                                    l2135 1E3E  
                                  l2055 118C                                    l2047 1156  
                                  l2039 1102                                    l2127 1D8A  
                                  l2321 1558                                    l2313 1500  
                                  l2073 1AFA                                    l2241 1008  
                                  l2233 0FD6                                    l2225 0FAA  
                                  l2217 0F54                                    l2209 0E26  
                                  l2161 1F2A                                    l2153 1F18  
                                  l2145 1F0E                                    l2305 1FF0  
                                  l2401 1B60                                    l2137 1E48  
                                  l2049 116E                                    l2129 1DAA  
                                  l2323 156E                                    l2315 1516  
                                  l2075 1B20                                    l2243 1014  
                                  l2227 0FB6                                    l2219 0F74  
                                  l2083 2018                                    l2091 1E02  
                                  l2171 1F46                                    l2163 1F32  
                                  l2155 1F1A                                    l2147 1F10  
                                  l2307 1FF4                                    l2403 1B74  
                                  l2139 1E5A                                    l2059 1198  
                                  l2331 1934                                    l2411 134A  
                                  l2325 1584                                    l2317 152C  
                                  l2077 1B46                                    l2069 1AD8  
                                  l2245 101C                                    l2229 0FBE  
                                  l2237 0FE2                                    l2085 201E  
                                  l2181 1F7C                                    l2093 1E0A  
                                  l2261 1A80                                    l2253 1A52  
                                  l2173 1F4C                                    l2165 1F34  
                                  l2157 1F1C                                    l2149 1F14  
                                  l2309 1FF8                                    l2405 1B92  
                                  l2341 1976                                    l2333 193A  
                                  l2421 13A6                                    l2413 134E  
                                  l2327 159A                                    l2319 1542  
                                  l2079 1B4A                                    l2247 1028  
                                  l2239 0FF6                                    l2351 1C3C  
                                  l2087 2028                                    l2191 1F96  
                                  l2183 1F7E                                    l2095 1E10  
                                  l2271 1AAA                                    l2263 1A86  
                                  l2255 1A6A                                    l2175 1F4E  
                                  l2167 1F3A                                    l2159 1F26  
                                  l2407 1BAA                                    l2343 198A  
                                  l2335 1956                                    l2423 13CA  
                                  l2415 136C                                    l2329 15B0  
                                  l1801 1F56                                    l2249 1034  
                                  l2353 1C4E                                    l2361 180E  
                                  l2193 1F9A                                    l2185 1F90  
                                  l2097 1E16                                    l2089 1DF2  
                                  l2273 1AB4                                    l2265 1A90  
                                  l2257 1A70                                    l2177 1F50  
                                  l2169 1F44                                    l2281 1ED2  
                                  l2345 1996                                    l2337 195E  
                                  l2425 13EE                                    l2417 1378  
                                  l2409 1328                                    l1803 1F72  
                                  l2355 1C60                                    l2371 186E  
                                  l2363 181A                                    l2195 1FA0  
                                  l2187 1F92                                    l2179 1FFE  
                                  l2099 1E22                                    l2275 1AC2  
                                  l2267 1A98                                    l2259 1A76  
                                  l2283 1EE2                                    l1811 15CC  
                                  l2291 1E76                                    l2339 1964  
                                  l2427 140A                                    l2419 137E  
                                  l2381 1456                                    l2373 187A  
                                  l2365 1824                                    l2357 17DC  
                                  l2197 1FA2                                    l2189 1F94  
                                  l2277 1ACC                                    l2269 1AA2  
                                  l2285 1EE4                                    l1821 15F2  
                                  l1813 15D4                                    l1901 1A44  
                                  l2293 1E7E                                    l2349 19AE  
                                  l2383 1468                                    l2391 14A8  
                                  l2375 1426                                    l2367 183C  
                                  l2359 17F4                                    l2199 1FB4  
                                  l1911 2036                                    l2279 1ECE  
                                  l1831 162A                                    l1823 15FA  
                                  l1815 15D8                                    l1807 15BA  
                                  l1903 1E9A                                    l2471 10C2  
                                  l2295 1E8E                                    l2287 1E66  
                                  l2393 14BA                                    l2385 1484  
                                  l2377 1440                                    l2369 1856  
                                  l1841 1656                                    l1833 1630  
                                  l1825 160C                                    l1817 15E6  
                                  l1809 15BE                                    l1905 1EA8  
                                  l1921 11F0                                    l1913 11C0  
                                  l2289 1E6E                                    l2395 14D6  
                                  l2387 1492                                    l2379 144A  
                                  l1907 202C                                    l2299 1FE4  
                                  l1835 1646                                    l1827 1614  
                                  l1843 165C                                    l1819 15EE  
                                  l1851 167E                                    l1931 1226  
                                  l1923 11F6                                    l1915 11C4  
                                  l2397 14E4                                    l2389 149E  
                                  l1909 202E                                    l1845 166C  
                                  l1837 164E                                    l1829 161C  
                                  l1861 16AA                                    l1853 1682  
                                  l1781 189A                                    l1941 126E  
                                  l1933 1230                                    l1925 1206  
                                  l1917 11D8                                    l2399 1B52  
                                  l1847 1674                                    l1839 1650  
                                  l1871 16E2                                    l1863 16B2  
                                  l1855 1690                                    l1783 18AA  
                                  l1951 12E0                                    l1935 1236  
                                  l1943 128A                                    l1927 1212  
                                  l1919 11E0                                    l1881 171C  
                                  l1873 16F8                                    l1865 16C4  
                                  l1857 1698                                    l1785 18B4  
                                  l1793 1DB4                                    l1945 12A4  
                                  l1953 12EE                                    l1937 1264  
                                  l1929 121A                                    l1883 1724  
                                  l1875 1700                                    l1867 16CC  
                                  l1859 169C                                    l1787 18D0  
                                  l1779 188A                                    l1795 1DC0  
                                  l1891 19E2                                    l1955 12FE  
                                  l1947 12B6                                    l1939 1268  
                                  l1971 1780                                    l1963 172E  
                                  l1981 1CBE                                    l1877 1706  
                                  l1869 16D4                                    l1789 1902  
                                  l1797 1DCE                                    l1893 19F0  
                                  l1957 1304                                    l1949 12C6  
                                  l1973 17A0                                    l1965 1736  
                                  ?_pad 0011                                    l1991 1CF8  
                                  l1983 1CCC                                    l1879 170C  
                                  l1799 1DD2                                    l1895 1A04  
                                  l1887 19C8                                    l1959 1310  
                                  l1967 175C                                    l1975 17A8  
                                  l1993 1D00                                    l1985 1CD4  
                                  l1977 1CA8                                    l1897 1A14  
                                  l1889 19D6                                    l1969 1764  
                                  l1995 1D04                                    l1987 1CE2  
                                  l1979 1CB6                                    l1899 1A18  
                                  l1997 1D0E                                    l1989 1CEA  
                                  l1999 1D20            lastSunday@dayOfWeekMonth31st 002D  
                                  STR_1 0E01                                    STR_2 0E1B  
                                  STR_3 0E0F                                    u1000 15E6  
                                  u1001 15E2                                    u1010 160C  
                                  u1011 1608                                    u1020 162A  
                                  u1100 171C                                    u1021 1626  
                                  u1101 1718                                    u1030 1646  
                                  u1110 19D6                                    u1031 1642  
                                  u1111 19D2                                    u1040 166C  
                                  u1120 19F0                                    u1200 12A4  
                                  u1041 1668                                    u1121 19EC  
                                  u1201 12A0                                    u1050 1690  
                                  u1130 1A36                                    u1210 12B6  
                                  u1051 168C                                    u1131 1A32  
                                  u1211 12B2                                    u1300 1CE2  
                                  u1060 16AA                                    u1140 1A44  
                                  u1220 12C6                                    u1301 1CDE  
                                  u1061 16A6                                    u1141 1A40  
                                  u1221 12C2                                    u1310 1CF8  
                                  u1070 16C4                                    u1150 1EA8  
                                  u1230 12E0                                    u1311 1CF4  
                                  u1071 16C0                                    u1151 1EA4  
                                  u1231 12DC                                    u1320 1D20  
                                  u1400 1AFA                                    u1080 16E2  
                                  u1240 12EE                                    u1160 11D4  
                                  u1321 1D1C                                    u1401 1AF6  
                                  u1081 16DE                                    u1241 12EA  
                                  u1161 11CE                                    u1330 1D3E  
                                  u1410 1B20                                    u1090 16F8  
                                  u1250 12FE                                    u1170 11D6  
                                  u1331 1D3A                                    u1411 1B1C  
                                  u1091 16F4                                    u1251 12FA  
                                  u1340 1D54                                    u1420 1B46  
                                  u1500 0F98                                    u1180 11F0  
                                  u1260 175C                                    u1341 1D50  
                                  u1421 1B42                                    u1501 0F94  
                                  u1181 11EC                                    u1261 1758  
                                  _LATA 0F79                                    u1510 0FAA  
                                  u1430 1E02                                    u1190 1206  
                                  u1270 17D2                                    u1350 1064  
                                  _LATB 0F7A                                    u1511 0FA6  
                                  u1431 1DFE                                    u1191 1202  
                                  u1271 17CE                                    u1351 1060  
                                  u1600 156E                                    u1440 1BE2  
                                  u1520 0FF6                                    u1280 1CB6  
                                  u1360 10E0                                    u1601 156A  
                                  u1441 1BDE                                    u1521 0FF2  
                                  u1281 1CB2                                    u1361 10DC  
                                  u1610 1584                                    u1450 1C00  
                                  u1530 1008                                    u1290 1CCC  
                                  u1370 1102                                    u1611 1580  
                                  u1451 1BFC                                    u1531 1004  
                                  u1291 1CC8                                    u1371 10FE  
                                  _LATG 0F7F                                    u1620 159A  
                                  u1460 1C1C                                    u1700 1856  
                                  u1540 1EFA                                    u1380 1136  
                                  u1621 1596                                    u1461 1C18  
                                  u1701 1852                                    u1541 1EF6  
                                  u1381 1132                                    u1630 15B0  
                                  u1550 1500                                    u1710 186E  
                                  u1390 1156                                    u1470 1DAA  
                                  u1631 15AC                                    u1551 14FC  
                                  u1711 186A                                    u1391 1152  
                                  u1471 1DA6                                    u1560 1516  
                                  u1720 1440                                    u1800 1BAA  
                                  u1480 1E3E                                    u1640 1976  
                                  u1561 1512                                    u1721 143C  
                                  u1801 1BA6                                    u1481 1E3A  
                                  u1641 1972                                    u1570 152C  
                                  u1730 1468                                    u1650 1C4E  
                                  u1490 1E5A                                    u1571 1528  
                                  u1731 1464                                    u1651 1C4A  
                                  u1491 1E56                                    u1580 1542  
                                  u1740 1484                                    u1660 1C60  
                                  u1581 153E                                    u1741 1480  
                                  u1661 1C5C                                    u1590 1558  
                                  u1750 14BA                                    u1670 17F4  
                                  u1591 1554                                    u1751 14B6  
                                  u1671 17F0                                    u1760 14D6  
                                  u1680 180E                                    u1761 14D2  
                                  u1681 180A                                    u1690 183C  
                                  u1770 1B60                                    u1691 1838  
                                  u1907 1A92                                    u1771 1B5C  
                                  u1780 1B74                                    u1917 1AA4  
                                  u1781 1B70                                    u1790 1B92  
                                  u1927 1ABA                                    u1791 1B8E  
                                  u1937 1E24                                    u1947 1D06  
                                  u1957 2030                                    u1877 19B8  
                                  u1887 1A72                                    u1897 1A82  
                                  abs@a 000A                                    _dbuf 008E  
                                  _main 1328                                    _dtoa 11C0  
                                  _hour 00AE                                    _prec 0052  
                                  pad@i 0016                                    pad@p 0013  
                                  fsr1h 0FE2                                    fsr2h 0FDA  
                                  indf2 0FDF                                    fsr1l 0FE1  
                                  fsr2l 0FD9                                    btemp 0055  
                          ?_LCD_setline 0001                                    prodh 0FF4  
                                  prodl 0FF3                                    start 00BC  
                      __end_of_DAC_init 202C                       _changeHourDayYear 1426  
                          ___param_bank 0000                      ?_changeHourDayYear 0004  
                                 ??_abs 000C                                   ??_pad 0015  
                      __end_of_LCD_init 1AD8                                   ?_main 0001  
                                 ?_dtoa 0018                         __end_of___awdiv 167E  
                       __end_of___awmod 172E                     ??_changeHourDayYear 000A  
                       ___awdiv@divisor 0006                         __end_of___lwdiv 1C3C  
                                 i1l132 0088                                   i1l134 0084  
                                 i1l135 009A                                   i1l137 00AC  
                       __end_of___lwmod 1D72                         ___awdiv@counter 0008  
                          vfpfcnvrt@fmt 0024                                   _TMR0H 0FD4  
                                 _TMR0L 0FD3                                   _TRISA 0F81  
                                 _TRISB 0F82                                   _TRISG 0F87  
                                 _flags 0054                     read_prec_or_width@c 000C  
                   read_prec_or_width@n 000D                                   _fputc 188A  
                                 _fputs 1DB4                                   pad@fp 0011  
                                 _width 0050                                   _putch 203A  
                                 dtoa@d 0019                                   dtoa@i 0021  
                                 dtoa@p 001D                                   dtoa@s 0020  
                                 dtoa@w 001E                           ?_LCD_sendbyte 0005  
                  __end_of_findDSTdates 1CA6                                   tablat 0FF5  
                 __end_of_Comp1_init_fe 1FC4                   __end_of_Comp1_init_re 1FA0  
                                 plusw2 0FDB                                   ttemp5 0056  
                                 ttemp6 0059                                   ttemp7 005D  
                                 status 0FD8                         __end_of_sunSync 1BC8  
          lastSunday@dayOfYearForDSTEnd 0035                                   wtemp8 0056  
                       __end_of_sprintf 1E9A               __end_of_changeHourDayYear 14F2  
                       __initialization 1FC4                            __end_of_main 1426  
                          __end_of_dtoa 1328                      lastSunday@leapYear 003D  
                     __end_of_LCD_E_TOG 203A                                  ??_main 0050  
                                ??_dtoa 001B            main@fwd_daylight_savings_day 0082  
                         __activetblptr 0003              __end_of_read_prec_or_width 17DC  
                          ?_time2String 0045                             lastSunday@h 0029  
                                ?_fputc 0004                                  ?_fputs 000C  
                        ??_LCD_sendbyte 0006                        ___awdiv@dividend 0004  
                                ?_putch 0001                   changeHourDayYear@leap 0007  
                 changeHourDayYear@hour 0004                                  i1l2431 0036  
                                i1l2441 006C                                  i1l2433 003C  
                                i1l2443 006E                                  i1l2435 0040  
                                i1l2445 0082                                  i1l2437 0044  
                                i1l2429 0026                                  i1l2447 0096  
                                i1l2439 0056                                  i1l2449 00A8  
                 changeHourDayYear@year 0006                           vfpfcnvrt@done 002C  
                     _LEDarray_disp_bin 14F2                                  _LowISR 0018  
                    ?_LEDarray_disp_bin 0004                           ??_Timer0_init 0004  
                          vfprintf@cfmt 0031                                  ___wmul 1F56  
                             ??___awdiv 0008                               ??___awmod 0008  
                             ??___lwdiv 000E                               ??___lwmod 0015  
hourChangeDST@bkwd_daylight_savings_day 0008                    read_prec_or_width@ap 000B  
                   ??_LEDarray_disp_bin 0006                                  clear_0 1FCA  
                      ___awdiv@quotient 000A                         ___awmod@divisor 0006  
                                isa$std 0001                         ___awmod@counter 0008  
                                pad@buf 0012                                  dtoa@fp 0018  
                                fputc@c 0004                                  fputs@c 000E  
                                fputs@i 000F                                  fputs@s 000C  
           lastSunday@dayOfWeekMonth1st 002B                            __mediumconst 0000  
                                tblptrh 0FF7                                  tblptrl 0FF6  
                                tblptru 0FF8                                  putch@c 0001  
                             ?_DAC_init 0001                        __end_of_vfprintf 1DB4  
                             ??_sunSync 0008                               ??_sprintf 0038  
             __end_of_LEDarray_disp_bin 15BA                              __accesstop 0060  
               __end_of__initialization 1FDA                               ?_LCD_init 0001  
                         ___rparam_used 0001                           _LEDarray_init 1F2A  
                       _Interrupts_init 1FFE                        findDSTdates@hour 0041  
                      findDSTdates@year 0045                          __pcstackCOMRAM 0001  
                         __end_of_fputc 1934                           __end_of_fputs 1DF0  
                         __end_of_putch 203C                     __end_of_Timer0_init 1F2A  
           lastSunday@daysBeforeOctober 0033                              ??_DAC_init 0004  
                               ??_fputc 0007                                 ??_fputs 000E  
                               ??_putch 0004                              __pbssBANK0 008E  
                        _LCD_sendnibble 1CA6                              ??_LCD_init 0009  
                         _hourChangeDST 17DC                          ?_LEDarray_init 0001  
                        _LCD_sendstring 1ECE                                 ?_LowISR 0001  
                               ?___wmul 0004                    __end_of_LCD_sendbyte 1E2C  
            hourChangeDST@backward_zone 000B                            _findDSTdates 1C3C  
                            _isLeapYear 1AD8                        hourChangeDST@day 0004  
                __end_of_LCD_sendnibble 1D0E                 __end_of_Interrupts_init 2018  
                        lastSunday@year 001B                  __end_of_LCD_sendstring 1EFC  
                        ?_hourChangeDST 0004                                 __Hparam 0000  
                               __Lparam 0000                             _Timer0_init 1EFC  
                            _lastSunday 0E26                         _isLeapYear$1178 001A  
                               ___awdiv 15BA                                 ___awmod 167E  
                               ___lwdiv 1BC8                                 ___lwmod 1D0E  
                             ?_vfprintf 002E                            __psmallconst 0E00  
                               __pcinit 1FC4                                 __ramtop 0E00  
                            _initialise 1FE4                                 __ptext0 1328  
                               __ptext1 1934                                 __ptext2 1E66  
                               __ptext3 1D72                                 __ptext4 103E  
                               __ptext5 172E                                 __ptext6 11C0  
                               __ptext7 19C8                                 __ptext8 1DB4  
                               __ptext9 188A                   read_prec_or_width@fmt 000A  
                      ___awmod@dividend 0004                               _LCD_E_TOG 202C  
                       LCD_setline@line 0009                                 _sunSync 1B52  
                               main@day 008C                                 main@buf 0060  
                               _sprintf 1E66                    end_of_initialization 1FDA  
                       ?_LCD_sendnibble 0001                                 fputc@fp 0006  
                       ??_LEDarray_init 0004                                 fputs@fp 000D  
                       ?_LCD_sendstring 0009                      _read_prec_or_width 172E  
 findDSTdates@bkwd_daylight_savings_day 0048                       __end_of_vfpfcnvrt 11C0  
                               postdec2 0FDD                     ?_read_prec_or_width 000A  
                               postinc0 0FEE                                 postinc1 0FE6  
                               postinc2 0FDE                        vfpfcnvrt@convarg 0028  
                            ??_vfprintf 0031          lastSunday@dayOfYearForDSTStart 0031  
                           ?_isLeapYear 0016                              ?_LCD_E_TOG 0001  
                             _TRISBbits 0F82                               _TRISCbits 0F83  
                             _TRISEbits 0F85                               _TRISFbits 0F86  
                             _TRISHbits 0F88                    ??_read_prec_or_width 000C  
                         sunSync@synced 0007                         ??_hourChangeDST 000C  
                           _CM1CON0bits 0ED0                             _CM1CON1bits 0ED1  
                      ?_Interrupts_init 0001                             _CM2CON0bits 0ECC  
                           _CM2CON1bits 0ECD                              main@synced 0088  
                           ?_lastSunday 001B                          __end_of_LowISR 00BC  
                           vfpfcnvrt@ap 0025                             vfpfcnvrt@cp 002D  
                           vfpfcnvrt@fp 0023                          __end_of___wmul 1F7C  
                  LCD_sendnibble@number 0004                             ?_initialise 0001  
                   start_initialization 1FC4                             __end_of_abs 1ECE  
                           __end_of_pad 1A52                            _LCD_sendbyte 1DF0  
                         _Comp1_init_fe 1FA0                           _Comp1_init_re 1F7C  
                  changeHourDayYear@day 0005                           ??_LCD_setline 0009  
                              ??_LowISR 0001                             vfprintf@fmt 002F  
                  LCD_sendstring@string 0009                                ??___wmul 0008  
                           sunSync@hour 0004                             __pbssCOMRAM 0050  
                           ??_LCD_E_TOG 0004                           __pcstackBANK0 0060  
                       findDSTdates@day 0043                          ?_Comp1_init_fe 0001  
                        ?_Comp1_init_re 0001                        ___lwdiv@dividend 000A  
                             _dtoa$1981 001B                            ?_Timer0_init 0001  
                              ?___awdiv 0004                                ?___awmod 0004  
                   __end_of_LCD_setline 1E66                                ?___lwdiv 000A  
                              ?___lwmod 0011                             __pintcodelo 0018  
                           __smallconst 0E00                           ??_time2String 004E  
                      ??_LCD_sendnibble 0004                                _DAC_init 2018  
                      ___lwdiv@quotient 000E                                ?_sunSync 0004  
                      ??_LCD_sendstring 000A                                ?_sprintf 0032  
                      LCD_sendbyte@Byte 0008                        LCD_sendbyte@type 0005  
                        ___wmul@product 0008                                _LATAbits 0F79  
                              _LATBbits 0F7A                                _LATCbits 0F7B  
                              _LATEbits 0F7D                                _LATFbits 0F7E  
                              _LATGbits 0F7F                                _LATHbits 0F80  
                              _LCD_init 1A52                 changeHourDayYear@synced 0009  
                              _IPR0bits 0E1F                                _IPR2bits 0E21  
                              _PIE0bits 0E29                                _PIE2bits 0E2B  
                     hourChangeDST@hour 000A                                i1u181_20 0036  
                              i1u181_21 0032                                i1u182_20 0056  
                              i1u182_21 0052                                i1u183_20 006C  
                              i1u183_21 0068                                i1u184_20 0082  
                              i1u184_21 007E                                i1u185_20 0096  
                              i1u185_21 0092                                i1u186_20 00A8  
                              i1u186_21 00A4                                _PIR0bits 0E33  
                              _PIR2bits 0E35                            time2String@h 0046  
 hourChangeDST@fwd_daylight_savings_day 0006                               _vfpfcnvrt 103E  
                     ___wmul@multiplier 0004                            ??_isLeapYear 0018  
                            _CM1NCHbits 0ED2                         lastSunday@month 001D  
                            _CM1PCHbits 0ED3                              _CM2NCHbits 0ECE  
                            _CM2PCHbits 0ECF               lastSunday@daysBeforeMarch 002F  
                       ??_Comp1_init_fe 0004                         ??_Comp1_init_re 0004  
                   __end_of_time2String 19C8                   __end_of_LEDarray_init 1F56  
                           _LCD_setline 1E2C                                __Hrparam 0000  
         lastSunday@lastSundayDateMonth 003F                      __end_of_isLeapYear 1B52  
                          ??_lastSunday 001F                              vfprintf@ap 0030  
                              __Lrparam 0000                              vfprintf@fp 002E  
                            sunSync@day 0005                              ?_vfpfcnvrt 0023  
                          ??_initialise 000A                         _lastSunday$1191 003B  
                            _ANSELFbits 0EB4                         _lastSunday$1188 0039  
                       _lastSunday$2258 0037                              sprintf@fmt 0033  
                            _T0CON0bits 0FD5                              _T0CON1bits 0FD6  
                       ___lwdiv@divisor 000C                         ___lwdiv@counter 0010  
                              __ptext10 203A                                __ptext11 1E9A  
                              __ptext20 1A52                                __ptext12 167E  
                              __ptext21 1DF0                                __ptext13 15BA  
                              __ptext30 0E26                                __ptext22 1CA6  
                              __ptext14 1E2C                                __ptext31 1AD8  
                              __ptext23 202C                                __ptext15 1ECE  
                              __ptext32 1D0E                                __ptext24 1FFE  
                              __ptext16 1B52                                __ptext33 1F56  
                              __ptext25 1F7C                                __ptext17 1FE4  
                              __ptext34 1BC8                                __ptext26 1FA0  
                              __ptext18 1EFC                                __ptext35 1426  
                              __ptext27 2018                                __ptext19 1F2A  
                              __ptext36 14F2                                __ptext28 17DC  
                              __ptext29 1C3C                  LCD_sendbyte@highNibble 0006  
                    __end_of_lastSunday 103E                 LEDarray_disp_bin@number 0004  
                 __end_of_hourChangeDST 188A    findDSTdates@fwd_daylight_savings_day 0047  
                    __end_of_initialise 1FFE           main@bkwd_daylight_savings_day 0084  
                              isa$xinst 0000                         time2String@leap 004C  
                              int$flags 0055                         time2String@year 004A  
                              _vfprintf 1D72                           ?_findDSTdates 0041  
                              main@leap 0080                                main@year 008A  
                            _INTCONbits 0FF2                             _time2String 1934  
                              intlevel1 0000                               sprintf@ap 0038  
                          _DAC1CON0bits 0EC6                            _DAC1CON1bits 0EC7  
                      ___lwmod@dividend 0011                          time2String@day 0048  
                        time2String@buf 0045                          ??_findDSTdates 0049  
                           ??_vfpfcnvrt 0026                                sprintf@f 0039  
                              sprintf@s 0032                   LCD_sendbyte@lowNibble 0007  
                       ___lwmod@divisor 0013                         ___lwmod@counter 0015  
                        isLeapYear@year 0016  
