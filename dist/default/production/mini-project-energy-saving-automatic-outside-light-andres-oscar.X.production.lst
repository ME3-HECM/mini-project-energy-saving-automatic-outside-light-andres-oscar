

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 00:52:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 21/07/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     _CM2CON1bits	set	3789
    88   000000                     _CM2PCHbits	set	3791
    89   000000                     _CM1CON1bits	set	3793
    90   000000                     _TRISBbits	set	3970
    91   000000                     _LATBbits	set	3962
    92   000000                     _LATAbits	set	3961
    93   000000                     _LATGbits	set	3967
    94   000000                     _IPR0bits	set	3615
    95   000000                     _PIE0bits	set	3625
    96   000000                     _T0CON0bits	set	4053
    97   000000                     _T0CON1bits	set	4054
    98   000000                     _INTCONbits	set	4082
    99   000000                     _PIE2bits	set	3627
   100   000000                     _PIR0bits	set	3635
   101   000000                     _PIR2bits	set	3637
   102   000000                     _ANSELFbits	set	3764
   103   000000                     _LATA	set	3961
   104   000000                     _TMR0L	set	4051
   105   000000                     _TMR0H	set	4052
   106   000000                     _IPR2bits	set	3617
   107   000000                     _LATEbits	set	3965
   108   000000                     _LATCbits	set	3963
   109   000000                     _LATFbits	set	3966
   110   000000                     _LATB	set	3962
   111   000000                     _TRISEbits	set	3973
   112   000000                     _TRISCbits	set	3971
   113   000000                     _TRISFbits	set	3974
   114   000000                     _TRISB	set	3970
   115   000000                     _TRISA	set	3969
   116   000000                     _LATHbits	set	3968
   117   000000                     _LATG	set	3967
   118   000000                     _TRISHbits	set	3976
   119   000000                     _TRISG	set	3975
   120   000000                     _DAC1CON0bits	set	3782
   121   000000                     _CM2CON0bits	set	3788
   122   000000                     _CM2NCHbits	set	3790
   123   000000                     _CM1CON0bits	set	3792
   124   000000                     _CM1NCHbits	set	3794
   125   000000                     _DAC1CON1bits	set	3783
   126   000000                     _CM1PCHbits	set	3795
   127                           
   128                           	psect	smallconst
   129   000E00                     __psmallconst:
   130                           	callstack 0
   131   000E00  00                 	db	0
   132   000E01                     
   133                           ; BSR set to: 14
   134   000E01  56                 	db	86	;'V'
   135   000E02  6F                 	db	111	;'o'
   136   000E03  6C                 	db	108	;'l'
   137   000E04  74                 	db	116	;'t'
   138   000E05  61                 	db	97	;'a'
   139   000E06  67                 	db	103	;'g'
   140   000E07  65                 	db	101	;'e'
   141   000E08  20                 	db	32
   142   000E09  3D                 	db	61	;'='
   143   000E0A  20                 	db	32
   144   000E0B  25                 	db	37
   145   000E0C  64                 	db	100	;'d'
   146   000E0D  2E                 	db	46
   147   000E0E  25                 	db	37
   148   000E0F  30                 	db	48	;'0'
   149   000E10  32                 	db	50	;'2'
   150   000E11  64                 	db	100	;'d'
   151   000E12  00                 	db	0
   152   000E13                     STR_2:
   153                           
   154                           ; BSR set to: 14
   155   000E13  68                 	db	104	;'h'
   156   000E14  3D                 	db	61	;'='
   157   000E15  30                 	db	48	;'0'
   158   000E16  25                 	db	37
   159   000E17  64                 	db	100	;'d'
   160   000E18  20                 	db	32
   161   000E19  25                 	db	37
   162   000E1A  64                 	db	100	;'d'
   163   000E1B  20                 	db	32
   164   000E1C  25                 	db	37
   165   000E1D  64                 	db	100	;'d'
   166   000E1E  00                 	db	0
   167   000E1F                     STR_3:
   168                           
   169                           ; BSR set to: 14
   170   000E1F  68                 	db	104	;'h'
   171   000E20  3D                 	db	61	;'='
   172   000E21  25                 	db	37
   173   000E22  64                 	db	100	;'d'
   174   000E23  20                 	db	32
   175   000E24  25                 	db	37
   176   000E25  64                 	db	100	;'d'
   177   000E26  20                 	db	32
   178   000E27  25                 	db	37
   179   000E28  64                 	db	100	;'d'
   180   000E29  00                 	db	0
   181   000E2A  00                 	db	0	; dummy byte at the end
   182   000000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   001EEC                     __pcinit:
   187                           	callstack 0
   188   001EEC                     start_initialization:
   189                           	callstack 0
   190   001EEC                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Clear objects allocated to BANK0 (34 bytes)
   194   001EEC  EE00  F08A         	lfsr	0,__pbssBANK0
   195   001EF0  0E22               	movlw	34
   196   001EF2                     clear_0:
   197   001EF2  6AEE               	clrf	postinc0,c
   198   001EF4  06E8               	decf	wreg,f,c
   199   001EF6  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to COMRAM (9 bytes)
   202   001EF8  EE00  F050         	lfsr	0,__pbssCOMRAM
   203   001EFC  0E09               	movlw	9
   204   001EFE                     clear_1:
   205   001EFE  6AEE               	clrf	postinc0,c
   206   001F00  06E8               	decf	wreg,f,c
   207   001F02  E1FD               	bnz	clear_1
   208   001F04                     end_of_initialization:
   209                           	callstack 0
   210   001F04                     __end_of__initialization:
   211                           	callstack 0
   212   001F04  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213   001F06  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214   001F08  0100               	movlb	0
   215   001F0A  EFBE  F00A         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218   000050                     __pbssCOMRAM:
   219                           	callstack 0
   220   000050                     calc_max_PPM@loopCounter:
   221                           	callstack 0
   222   000050                     	ds	4
   223   000054                     _width:
   224                           	callstack 0
   225   000054                     	ds	2
   226   000056                     _prec:
   227                           	callstack 0
   228   000056                     	ds	2
   229   000058                     _flags:
   230                           	callstack 0
   231   000058                     	ds	1
   232                           
   233                           	psect	bssBANK0
   234   00008A                     __pbssBANK0:
   235                           	callstack 0
   236   00008A                     _dbuf:
   237                           	callstack 0
   238   00008A                     	ds	32
   239   0000AA                     _hour:
   240                           	callstack 0
   241   0000AA                     	ds	2
   242                           
   243                           	psect	cstackBANK0
   244   000060                     __pcstackBANK0:
   245                           	callstack 0
   246   000060                     main@buf:
   247                           	callstack 0
   248                           
   249                           ; 32 bytes @ 0x0
   250   000060                     	ds	32
   251   000080                     main@fwd_daylight_savings_day:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x20
   255   000080                     	ds	2
   256   000082                     main@bkwd_daylight_savings_day:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x22
   260   000082                     	ds	2
   261   000084                     main@backward_zone:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x24
   265   000084                     	ds	2
   266   000086                     main@year:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x26
   270   000086                     	ds	2
   271   000088                     main@day:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x28
   275   000088                     	ds	2
   276                           
   277                           	psect	cstackCOMRAM
   278   000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280   000001                     ??_LowISR:
   281   000001                     
   282                           ; 1 bytes @ 0x0
   283   000001                     	ds	3
   284   000004                     ?___wmul:
   285                           	callstack 0
   286   000004                     ?___awdiv:
   287                           	callstack 0
   288   000004                     ?___awmod:
   289                           	callstack 0
   290   000004                     LCD_sendnibble@number:
   291                           	callstack 0
   292   000004                     LEDarray_disp_bin@number:
   293                           	callstack 0
   294   000004                     increaseHour@day:
   295                           	callstack 0
   296   000004                     ___wmul@multiplier:
   297                           	callstack 0
   298   000004                     ___awdiv@dividend:
   299                           	callstack 0
   300   000004                     ___awmod@dividend:
   301                           	callstack 0
   302   000004                     fputc@c:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x3
   306   000004                     	ds	1
   307   000005                     LCD_sendbyte@type:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x4
   311   000005                     	ds	1
   312   000006                     LCD_sendbyte@highNibble:
   313                           	callstack 0
   314   000006                     fputc@fp:
   315                           	callstack 0
   316   000006                     increaseHour@fwd_daylight_savings_day:
   317                           	callstack 0
   318   000006                     ___wmul@multiplicand:
   319                           	callstack 0
   320   000006                     ___awdiv@divisor:
   321                           	callstack 0
   322   000006                     ___awmod@divisor:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x5
   326   000006                     	ds	1
   327   000007                     ??_fputc:
   328   000007                     LCD_sendbyte@lowNibble:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x6
   332   000007                     	ds	1
   333   000008                     LCD_sendbyte@Byte:
   334                           	callstack 0
   335   000008                     ___awdiv@counter:
   336                           	callstack 0
   337   000008                     ___awmod@counter:
   338                           	callstack 0
   339   000008                     increaseHour@bkwd_daylight_savings_day:
   340                           	callstack 0
   341   000008                     ___wmul@product:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x7
   345   000008                     	ds	1
   346   000009                     ??_LCD_init:
   347   000009                     LCD_setline@line:
   348                           	callstack 0
   349   000009                     LCD_sendstring@string:
   350                           	callstack 0
   351   000009                     ___awdiv@sign:
   352                           	callstack 0
   353   000009                     ___awmod@sign:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x8
   357   000009                     	ds	1
   358   00000A                     ?_abs:
   359                           	callstack 0
   360   00000A                     ?___lwdiv:
   361                           	callstack 0
   362   00000A                     ?_read_prec_or_width:
   363                           	callstack 0
   364   00000A                     increaseHour@hour:
   365                           	callstack 0
   366   00000A                     read_prec_or_width@fmt:
   367                           	callstack 0
   368   00000A                     ___awdiv@quotient:
   369                           	callstack 0
   370   00000A                     ___lwdiv@dividend:
   371                           	callstack 0
   372   00000A                     abs@a:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x9
   376   00000A                     	ds	1
   377   00000B                     increaseHour@backward_zone:
   378                           	callstack 0
   379   00000B                     read_prec_or_width@ap:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0xA
   383   00000B                     	ds	1
   384   00000C                     ??_abs:
   385   00000C                     read_prec_or_width@c:
   386                           	callstack 0
   387   00000C                     fputs@s:
   388                           	callstack 0
   389   00000C                     ___lwdiv@divisor:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xB
   393   00000C                     	ds	1
   394   00000D                     fputs@fp:
   395                           	callstack 0
   396   00000D                     read_prec_or_width@n:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xC
   400   00000D                     	ds	1
   401   00000E                     fputs@c:
   402                           	callstack 0
   403   00000E                     ___lwdiv@quotient:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xD
   407   00000E                     	ds	1
   408   00000F                     fputs@i:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0xE
   412   00000F                     	ds	1
   413   000010                     ___lwdiv@counter:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0xF
   417   000010                     	ds	1
   418   000011                     ?___lwmod:
   419                           	callstack 0
   420   000011                     pad@fp:
   421                           	callstack 0
   422   000011                     ___lwmod@dividend:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x10
   426   000011                     	ds	1
   427   000012                     pad@buf:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x11
   431   000012                     	ds	1
   432   000013                     ___lwmod@divisor:
   433                           	callstack 0
   434   000013                     pad@p:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x12
   438   000013                     	ds	2
   439   000015                     ??_pad:
   440   000015                     ___lwmod@counter:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x14
   444   000015                     	ds	1
   445   000016                     ?_isLeapYear:
   446                           	callstack 0
   447   000016                     isLeapYear@year:
   448                           	callstack 0
   449   000016                     pad@i:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x15
   453   000016                     	ds	2
   454   000018                     ??_isLeapYear:
   455   000018                     dtoa@fp:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x17
   459   000018                     	ds	1
   460   000019                     dtoa@d:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x18
   464   000019                     	ds	1
   465   00001A                     _isLeapYear$1162:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x19
   469   00001A                     	ds	1
   470   00001B                     ?_lastSunday:
   471                           	callstack 0
   472   00001B                     changeHourDayYear@hour:
   473                           	callstack 0
   474   00001B                     lastSunday@year:
   475                           	callstack 0
   476   00001B                     _dtoa$1962:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x1A
   480   00001B                     	ds	1
   481   00001C                     changeHourDayYear@day:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x1B
   485   00001C                     	ds	1
   486   00001D                     changeHourDayYear@year:
   487                           	callstack 0
   488   00001D                     dtoa@p:
   489                           	callstack 0
   490   00001D                     lastSunday@month:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x1C
   494   00001D                     	ds	1
   495   00001E                     dtoa@w:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1D
   499   00001E                     	ds	1
   500   00001F                     ??_lastSunday:
   501                           
   502                           ; 1 bytes @ 0x1E
   503   00001F                     	ds	1
   504   000020                     dtoa@s:
   505                           	callstack 0
   506   000020                     changeHourDayYear@leap:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x1F
   510   000020                     	ds	1
   511   000021                     dtoa@i:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x20
   515   000021                     	ds	2
   516   000023                     vfpfcnvrt@fp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x22
   520   000023                     	ds	1
   521   000024                     vfpfcnvrt@fmt:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x23
   525   000024                     	ds	1
   526   000025                     vfpfcnvrt@ap:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x24
   530   000025                     	ds	1
   531   000026                     ??_vfpfcnvrt:
   532                           
   533                           ; 1 bytes @ 0x25
   534   000026                     	ds	2
   535   000028                     vfpfcnvrt@convarg:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x27
   539   000028                     	ds	1
   540   000029                     lastSunday@h:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x28
   544   000029                     	ds	2
   545   00002B                     lastSunday@dayOfWeekMonth1st:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x2A
   549   00002B                     	ds	1
   550   00002C                     vfpfcnvrt@done:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x2B
   554   00002C                     	ds	1
   555   00002D                     vfpfcnvrt@cp:
   556                           	callstack 0
   557   00002D                     lastSunday@dayOfWeekMonth31st:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2C
   561   00002D                     	ds	1
   562   00002E                     ?_vfprintf:
   563                           	callstack 0
   564   00002E                     vfprintf@fp:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x2D
   568   00002E                     	ds	1
   569   00002F                     vfprintf@fmt:
   570                           	callstack 0
   571   00002F                     lastSunday@daysBeforeMarch:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x2E
   575   00002F                     	ds	1
   576   000030                     vfprintf@ap:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x2F
   580   000030                     	ds	1
   581   000031                     vfprintf@cfmt:
   582                           	callstack 0
   583   000031                     lastSunday@dayOfYearForDSTStart:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x30
   587   000031                     	ds	1
   588   000032                     ?_sprintf:
   589                           	callstack 0
   590   000032                     sprintf@s:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x31
   594   000032                     	ds	1
   595   000033                     sprintf@fmt:
   596                           	callstack 0
   597   000033                     lastSunday@daysBeforeOctober:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x32
   601   000033                     	ds	2
   602   000035                     lastSunday@dayOfYearForDSTEnd:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x34
   606   000035                     	ds	2
   607   000037                     _lastSunday$2256:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x36
   611   000037                     	ds	2
   612   000039                     _lastSunday$1173:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x38
   616   000039                     	ds	1
   617   00003A                     sprintf@ap:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x39
   621   00003A                     	ds	1
   622   00003B                     _lastSunday$1176:
   623                           	callstack 0
   624   00003B                     sprintf@f:
   625                           	callstack 0
   626                           
   627                           ; 12 bytes @ 0x3A
   628   00003B                     	ds	2
   629   00003D                     lastSunday@leapYear:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x3C
   633   00003D                     	ds	2
   634   00003F                     lastSunday@lastSundayDateMonth:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x3E
   638   00003F                     	ds	2
   639   000041                     findDSTdates@hour:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x40
   643   000041                     	ds	2
   644   000043                     findDSTdates@day:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x42
   648   000043                     	ds	2
   649   000045                     findDSTdates@year:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x44
   653   000045                     	ds	2
   654   000047                     findDSTdates@fwd_daylight_savings_day:
   655                           	callstack 0
   656   000047                     time2String@buf:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x46
   660   000047                     	ds	1
   661   000048                     findDSTdates@bkwd_daylight_savings_day:
   662                           	callstack 0
   663   000048                     time2String@h:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x47
   667   000048                     	ds	1
   668   000049                     
   669                           ; 1 bytes @ 0x48
   670   000049                     	ds	1
   671   00004A                     time2String@day:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x49
   675   00004A                     	ds	2
   676   00004C                     time2String@year:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x4B
   680   00004C                     	ds	2
   681   00004E                     ??_time2String:
   682                           
   683                           ; 1 bytes @ 0x4D
   684   00004E                     	ds	2
   685   000050                     
   686                           ; 1 bytes @ 0x4F
   687 ;;
   688 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   689 ;;
   690 ;; *************** function _main *****************
   691 ;; Defined at:
   692 ;;		line 20 in file "main.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  buf            32    0[BANK0 ] unsigned char [32]
   697 ;;  day             2   40[BANK0 ] unsigned int 
   698 ;;  year            2   38[BANK0 ] unsigned int 
   699 ;;  backward_zon    2   36[BANK0 ] unsigned int 
   700 ;;  bkwd_dayligh    2   34[BANK0 ] unsigned int 
   701 ;;  fwd_daylight    2   32[BANK0 ] unsigned int 
   702 ;;  daylight_sav    2    0        unsigned int 
   703 ;;  leap            2    0        unsigned int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   714 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   717 ;;Total ram usage:       42 bytes
   718 ;; Hardware stack levels required when called: 10
   719 ;; This function calls:
   720 ;;		_LCD_setline
   721 ;;		_LEDarray_disp_bin
   722 ;;		_changeHourDayYear
   723 ;;		_findDSTdates
   724 ;;		_increaseHour
   725 ;;		_initialise
   726 ;;		_time2String
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text0
   733   00157C                     __ptext0:
   734                           	callstack 0
   735   00157C                     _main:
   736                           	callstack 21
   737   00157C                     
   738                           ;main.c: 23:     unsigned int day = 364;
   739   00157C  0E01               	movlw	1
   740   00157E  0100               	movlb	0	; () banked
   741   001580  6F89               	movwf	(main@day+1)& (0+255),b
   742   001582  0E6C               	movlw	108
   743   001584  6F88               	movwf	main@day& (0+255),b
   744                           
   745                           ;main.c: 24:     unsigned int year = 2024;
   746   001586  0E07               	movlw	7
   747   001588  6F87               	movwf	(main@year+1)& (0+255),b
   748   00158A  0EE8               	movlw	232
   749   00158C  6F86               	movwf	main@year& (0+255),b
   750                           
   751                           ;main.c: 25:     unsigned int leap;;main.c: 26:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 27:     unsigned int bkwd_daylight_savings_day;;main.c: 28:     unsigned int 
      +                          backward_zone = 0;
   752   00158E  0E00               	movlw	0
   753   001590  6F85               	movwf	(main@backward_zone+1)& (0+255),b
   754   001592  0E00               	movlw	0
   755   001594  6F84               	movwf	main@backward_zone& (0+255),b
   756   001596                     
   757                           ; BSR set to: 0
   758                           ;main.c: 29:     char buf[32];;main.c: 31:     initialise();
   759   001596  EC87  F00F         	call	_initialise	;wreg free
   760   00159A                     l2458:
   761                           
   762                           ;main.c: 35:         LEDarray_disp_bin(hour);
   763   00159A  C0AA  F004         	movff	_hour,LEDarray_disp_bin@number
   764   00159E  C0AB  F005         	movff	_hour+1,LEDarray_disp_bin@number+1
   765   0015A2  EC97  F009         	call	_LEDarray_disp_bin	;wreg free
   766   0015A6                     
   767                           ;main.c: 37:         LCD_setline(1);
   768   0015A6  0E01               	movlw	1
   769   0015A8  ECAA  F00E         	call	_LCD_setline
   770   0015AC                     
   771                           ;main.c: 39:         time2String(buf,hour,day,year);
   772   0015AC  0E60               	movlw	low main@buf
   773   0015AE  6E47               	movwf	time2String@buf^0,c
   774   0015B0  C0AA  F048         	movff	_hour,time2String@h
   775   0015B4  C0AB  F049         	movff	_hour+1,time2String@h+1
   776   0015B8  C088  F04A         	movff	main@day,time2String@day
   777   0015BC  C089  F04B         	movff	main@day+1,time2String@day+1
   778   0015C0  C086  F04C         	movff	main@year,time2String@year
   779   0015C4  C087  F04D         	movff	main@year+1,time2String@year+1
   780   0015C8  ECF9  F00C         	call	_time2String	;wreg free
   781   0015CC                     
   782                           ;main.c: 41:         findDSTdates(hour, day, year,&fwd_daylight_savings_day, &bkwd_dayli
      +                          ght_savings_day);
   783   0015CC  C0AA  F041         	movff	_hour,findDSTdates@hour
   784   0015D0  C0AB  F042         	movff	_hour+1,findDSTdates@hour+1
   785   0015D4  C088  F043         	movff	main@day,findDSTdates@day
   786   0015D8  C089  F044         	movff	main@day+1,findDSTdates@day+1
   787   0015DC  C086  F045         	movff	main@year,findDSTdates@year
   788   0015E0  C087  F046         	movff	main@year+1,findDSTdates@year+1
   789   0015E4  0E80               	movlw	low main@fwd_daylight_savings_day
   790   0015E6  6E47               	movwf	findDSTdates@fwd_daylight_savings_day^0,c
   791   0015E8  0E82               	movlw	low main@bkwd_daylight_savings_day
   792   0015EA  6E48               	movwf	findDSTdates@bkwd_daylight_savings_day^0,c
   793   0015EC  ECB2  F00D         	call	_findDSTdates	;wreg free
   794   0015F0                     
   795                           ;main.c: 43:         increaseHour(day, fwd_daylight_savings_day, bkwd_daylight_savings_d
      +                          ay, &hour, &backward_zone);
   796   0015F0  C088  F004         	movff	main@day,increaseHour@day
   797   0015F4  C089  F005         	movff	main@day+1,increaseHour@day+1
   798   0015F8  C080  F006         	movff	main@fwd_daylight_savings_day,increaseHour@fwd_daylight_savings_day
   799   0015FC  C081  F007         	movff	main@fwd_daylight_savings_day+1,increaseHour@fwd_daylight_savings_day+1
   800   001600  C082  F008         	movff	main@bkwd_daylight_savings_day,increaseHour@bkwd_daylight_savings_day
   801   001604  C083  F009         	movff	main@bkwd_daylight_savings_day+1,increaseHour@bkwd_daylight_savings_day+1
   802   001608  0EAA               	movlw	low _hour
   803   00160A  6E0A               	movwf	increaseHour@hour^0,c
   804   00160C  0E84               	movlw	low main@backward_zone
   805   00160E  6E0B               	movwf	increaseHour@backward_zone^0,c
   806   001610  ECC5  F00B         	call	_increaseHour	;wreg free
   807   001614                     
   808                           ;main.c: 45:         changeHourDayYear(&hour, &day, &year);
   809   001614  0EAA               	movlw	low _hour
   810   001616  6E1B               	movwf	changeHourDayYear@hour^0,c
   811   001618  0E88               	movlw	low main@day
   812   00161A  6E1C               	movwf	changeHourDayYear@day^0,c
   813   00161C  0E86               	movlw	low main@year
   814   00161E  6E1D               	movwf	changeHourDayYear@year^0,c
   815   001620  EC5D  F00A         	call	_changeHourDayYear	;wreg free
   816   001624  EFCD  F00A         	goto	l2458
   817   001628  EF53  F000         	goto	start
   818   00162C                     __end_of_main:
   819                           	callstack 0
   820                           
   821 ;; *************** function _time2String *****************
   822 ;; Defined at:
   823 ;;		line 152 in file "LCD.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  buf             1   70[COMRAM] PTR unsigned char 
   826 ;;		 -> main@buf(32), 
   827 ;;  h               2   71[COMRAM] unsigned int 
   828 ;;  day             2   73[COMRAM] unsigned int 
   829 ;;  year            2   75[COMRAM] unsigned int 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   841 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;Total ram usage:        9 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 9
   848 ;; This function calls:
   849 ;;		_LCD_sendstring
   850 ;;		_sprintf
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text1
   857   0019F2                     __ptext1:
   858                           	callstack 0
   859   0019F2                     _time2String:
   860                           	callstack 21
   861   0019F2                     
   862                           ;LCD.c: 153:     if (h<=9){
   863   0019F2  5049               	movf	(time2String@h+1)^0,w,c
   864   0019F4  E107               	bnz	u1671
   865   0019F6  0E0A               	movlw	10
   866   0019F8  5C48               	subwf	time2String@h^0,w,c
   867   0019FA  B0D8               	btfsc	status,0,c
   868   0019FC  EF02  F00D         	goto	u1671
   869   001A00  EF04  F00D         	goto	u1670
   870   001A04                     u1671:
   871   001A04  EF18  F00D         	goto	l2402
   872   001A08                     u1670:
   873   001A08                     
   874                           ;LCD.c: 154:         sprintf(buf,"h=0%d %d %d",h,day,year);
   875   001A08  C047  F032         	movff	time2String@buf,sprintf@s
   876   001A0C  0E13               	movlw	low STR_2
   877   001A0E  6E33               	movwf	sprintf@fmt^0,c
   878   001A10  C048  F034         	movff	time2String@h,?_sprintf+2
   879   001A14  C049  F035         	movff	time2String@h+1,?_sprintf+3
   880   001A18  C04A  F036         	movff	time2String@day,?_sprintf+4
   881   001A1C  C04B  F037         	movff	time2String@day+1,?_sprintf+5
   882   001A20  C04C  F038         	movff	time2String@year,?_sprintf+6
   883   001A24  C04D  F039         	movff	time2String@year+1,?_sprintf+7
   884   001A28  ECC7  F00E         	call	_sprintf	;wreg free
   885                           
   886                           ;LCD.c: 155:     }
   887   001A2C  EF2A  F00D         	goto	l2404
   888   001A30                     l2402:
   889   001A30  C047  F032         	movff	time2String@buf,sprintf@s
   890   001A34  0E1F               	movlw	low STR_3
   891   001A36  6E33               	movwf	sprintf@fmt^0,c
   892   001A38  C048  F034         	movff	time2String@h,?_sprintf+2
   893   001A3C  C049  F035         	movff	time2String@h+1,?_sprintf+3
   894   001A40  C04A  F036         	movff	time2String@day,?_sprintf+4
   895   001A44  C04B  F037         	movff	time2String@day+1,?_sprintf+5
   896   001A48  C04C  F038         	movff	time2String@year,?_sprintf+6
   897   001A4C  C04D  F039         	movff	time2String@year+1,?_sprintf+7
   898   001A50  ECC7  F00E         	call	_sprintf	;wreg free
   899   001A54                     l2404:
   900                           
   901                           ;LCD.c: 157:     LCD_sendstring(buf);
   902   001A54  C047  F009         	movff	time2String@buf,LCD_sendstring@string
   903   001A58  ECFB  F00E         	call	_LCD_sendstring	;wreg free
   904   001A5C                     
   905                           ;LCD.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
   906   001A5C  0E11               	movlw	17
   907   001A5E  6E4F               	movwf	(??_time2String+1)^0,c
   908   001A60  0E3C               	movlw	60
   909   001A62  6E4E               	movwf	??_time2String^0,c
   910   001A64  0ECB               	movlw	203
   911   001A66                     u1887:
   912   001A66  2EE8               	decfsz	wreg,f,c
   913   001A68  D7FE               	bra	u1887
   914   001A6A  2E4E               	decfsz	??_time2String^0,f,c
   915   001A6C  D7FC               	bra	u1887
   916   001A6E  2E4F               	decfsz	(??_time2String+1)^0,f,c
   917   001A70  D7FA               	bra	u1887
   918   001A72  0000               	nop	
   919   001A74  0012               	return		;funcret
   920   001A76                     __end_of_time2String:
   921                           	callstack 0
   922                           
   923 ;; *************** function _sprintf *****************
   924 ;; Defined at:
   925 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  s               1   49[COMRAM] PTR unsigned char 
   928 ;;		 -> main@buf(32), 
   929 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
   930 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  f              12   58[COMRAM] struct _IO_FILE
   933 ;;  ret             2    0        int 
   934 ;;  ap              1   57[COMRAM] PTR void [1]
   935 ;;		 -> ?_sprintf(2), 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2   49[COMRAM] int 
   938 ;; Registers used:
   939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   945 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;Total ram usage:       21 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 8
   952 ;; This function calls:
   953 ;;		_vfprintf
   954 ;; This function is called by:
   955 ;;		_time2String
   956 ;;		_ADC2String
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text2
   961   001D8E                     __ptext2:
   962                           	callstack 0
   963   001D8E                     _sprintf:
   964                           	callstack 21
   965   001D8E  0E34               	movlw	low (?_sprintf+2)
   966   001D90  6E3A               	movwf	sprintf@ap^0,c
   967   001D92  C032  F03B         	movff	sprintf@s,sprintf@f
   968   001D96  0E00               	movlw	0
   969   001D98  6E3F               	movwf	(sprintf@f+4)^0,c
   970   001D9A  0E00               	movlw	0
   971   001D9C  6E3E               	movwf	(sprintf@f+3)^0,c
   972   001D9E  0E00               	movlw	0
   973   001DA0  6E46               	movwf	(sprintf@f+11)^0,c
   974   001DA2  0E00               	movlw	0
   975   001DA4  6E45               	movwf	(sprintf@f+10)^0,c
   976   001DA6  0E3B               	movlw	low sprintf@f
   977   001DA8  6E2E               	movwf	vfprintf@fp^0,c
   978   001DAA  C033  F02F         	movff	sprintf@fmt,vfprintf@fmt
   979   001DAE  0E3A               	movlw	low sprintf@ap
   980   001DB0  6E30               	movwf	vfprintf@ap^0,c
   981   001DB2  EC4D  F00E         	call	_vfprintf	;wreg free
   982   001DB6  5032               	movf	sprintf@s^0,w,c
   983   001DB8  243E               	addwf	(sprintf@f+3)^0,w,c
   984   001DBA  6ED9               	movwf	fsr2l,c
   985   001DBC  6ADA               	clrf	fsr2h,c
   986   001DBE  6ADF               	clrf	indf2,c
   987   001DC0  0012               	return		;funcret
   988   001DC2                     __end_of_sprintf:
   989                           	callstack 0
   990                           
   991 ;; *************** function _vfprintf *****************
   992 ;; Defined at:
   993 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
   996 ;;		 -> sprintf@f(12), 
   997 ;;  fmt             1   46[COMRAM] PTR const unsigned char 
   998 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
   999 ;;  ap              1   47[COMRAM] PTR PTR void 
  1000 ;;		 -> sprintf@ap(1), 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  cfmt            1   48[COMRAM] PTR unsigned char 
  1003 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  2   45[COMRAM] int 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;Total ram usage:        4 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 7
  1020 ;; This function calls:
  1021 ;;		_vfpfcnvrt
  1022 ;; This function is called by:
  1023 ;;		_sprintf
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text3
  1028   001C9A                     __ptext3:
  1029                           	callstack 0
  1030   001C9A                     _vfprintf:
  1031                           	callstack 21
  1032   001C9A                     
  1033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1034   001C9A  C02F  F031         	movff	vfprintf@fmt,vfprintf@cfmt
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1037   001C9E  EF59  F00E         	goto	l2194
  1038   001CA2                     l2192:
  1039                           
  1040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1041   001CA2  C02E  F023         	movff	vfprintf@fp,vfpfcnvrt@fp
  1042   001CA6  0E31               	movlw	low vfprintf@cfmt
  1043   001CA8  6E24               	movwf	vfpfcnvrt@fmt^0,c
  1044   001CAA  C030  F025         	movff	vfprintf@ap,vfpfcnvrt@ap
  1045   001CAE  EC22  F008         	call	_vfpfcnvrt	;wreg free
  1046   001CB2                     l2194:
  1047                           
  1048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1049   001CB2  C031  FFF6         	movff	vfprintf@cfmt,tblptrl
  1050   001CB6                     	if	1	;There is more than 1 active tblptr byte
  1051   001CB6  0E0E               	movlw	high __smallconst
  1052   001CB8  6EF7               	movwf	tblptrh,c
  1053   001CBA                     	endif
  1054   001CBA                     	if	0	;tblptru may be non-zero
  1055   001CBA                     	endif
  1056   001CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1057   001CBA  0E00               	movlw	low (__smallconst shr (0+16))
  1058   001CBC  6EF8               	movwf	tblptru,c
  1059   001CBE                     	endif
  1060   001CBE  0008               	tblrd		*
  1061   001CC0  50F5               	movf	tablat,w,c
  1062   001CC2  0900               	iorlw	0
  1063   001CC4  A4D8               	btfss	status,2,c
  1064   001CC6  EF67  F00E         	goto	u1501
  1065   001CCA  EF69  F00E         	goto	u1500
  1066   001CCE                     u1501:
  1067   001CCE  EF51  F00E         	goto	l2192
  1068   001CD2                     u1500:
  1069   001CD2                     
  1070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1071   001CD2  0E00               	movlw	0
  1072   001CD4  6E2F               	movwf	(?_vfprintf+1)^0,c
  1073   001CD6  0E00               	movlw	0
  1074   001CD8  6E2E               	movwf	?_vfprintf^0,c
  1075   001CDA  0012               	return		;funcret
  1076   001CDC                     __end_of_vfprintf:
  1077                           	callstack 0
  1078                           
  1079 ;; *************** function _vfpfcnvrt *****************
  1080 ;; Defined at:
  1081 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  fp              1   34[COMRAM] PTR struct _IO_FILE
  1084 ;;		 -> sprintf@f(12), 
  1085 ;;  fmt             1   35[COMRAM] PTR PTR unsigned char 
  1086 ;;		 -> vfprintf@cfmt(1), 
  1087 ;;  ap              1   36[COMRAM] PTR PTR void 
  1088 ;;		 -> sprintf@ap(1), 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  convarg         4   39[COMRAM] struct .
  1091 ;;  cp              1   44[COMRAM] PTR unsigned char 
  1092 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1093 ;;  done            1   43[COMRAM] _Bool 
  1094 ;;  c               1    0        unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:       11 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 6
  1111 ;; This function calls:
  1112 ;;		_dtoa
  1113 ;;		_fputc
  1114 ;;		_read_prec_or_width
  1115 ;; This function is called by:
  1116 ;;		_vfprintf
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text4
  1121   001044                     __ptext4:
  1122                           	callstack 0
  1123   001044                     _vfpfcnvrt:
  1124                           	callstack 21
  1125   001044                     
  1126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1127   001044  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1128   001046  6ED9               	movwf	fsr2l,c
  1129   001048  6ADA               	clrf	fsr2h,c
  1130   00104A  CFDF FFF6          	movff	indf2,tblptrl
  1131   00104E                     	if	1	;There is more than 1 active tblptr byte
  1132   00104E  0E0E               	movlw	high __smallconst
  1133   001050  6EF7               	movwf	tblptrh,c
  1134   001052                     	endif
  1135   001052                     	if	0	;tblptru may be non-zero
  1136   001052                     	endif
  1137   001052                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1138   001052  0E00               	movlw	low (__smallconst shr (0+16))
  1139   001054  6EF8               	movwf	tblptru,c
  1140   001056                     	endif
  1141   001056  0008               	tblrd		*
  1142   001058  50F5               	movf	tablat,w,c
  1143   00105A  0A25               	xorlw	37
  1144   00105C  A4D8               	btfss	status,2,c
  1145   00105E  EF33  F008         	goto	u1381
  1146   001062  EF35  F008         	goto	u1380
  1147   001066                     u1381:
  1148   001066  EFCF  F008         	goto	l2126
  1149   00106A                     u1380:
  1150   00106A                     
  1151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1152   00106A  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1153   00106C  6ED9               	movwf	fsr2l,c
  1154   00106E  6ADA               	clrf	fsr2h,c
  1155   001070  2ADF               	incf	indf2,f,c
  1156   001072                     
  1157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1158   001072  0E00               	movlw	0
  1159   001074  6E55               	movwf	(_width+1)^0,c
  1160   001076  0E00               	movlw	0
  1161   001078  6E54               	movwf	_width^0,c
  1162   00107A  C054  F058         	movff	_width,_flags
  1163   00107E                     
  1164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1165   00107E  6856               	setf	_prec^0,c
  1166   001080  6857               	setf	(_prec+1)^0,c
  1167   001082                     
  1168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1169   001082  0E00               	movlw	0
  1170   001084  6E2C               	movwf	vfpfcnvrt@done^0,c
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1173   001086  EF6B  F008         	goto	l2100
  1174   00108A                     l2090:
  1175                           
  1176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1177   00108A  8258               	bsf	_flags^0,1,c
  1178   00108C                     
  1179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1180   00108C  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1181   00108E  6ED9               	movwf	fsr2l,c
  1182   001090  6ADA               	clrf	fsr2h,c
  1183   001092  2ADF               	incf	indf2,f,c
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1186   001094  EF6B  F008         	goto	l2100
  1187   001098                     l2094:
  1188                           
  1189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1190   001098  0E01               	movlw	1
  1191   00109A  6E2C               	movwf	vfpfcnvrt@done^0,c
  1192                           
  1193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1194   00109C  EF6B  F008         	goto	l2100
  1195   0010A0                     l2098:
  1196   0010A0  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1197   0010A2  6ED9               	movwf	fsr2l,c
  1198   0010A4  6ADA               	clrf	fsr2h,c
  1199   0010A6  CFDF FFF6          	movff	indf2,tblptrl
  1200   0010AA                     	if	1	;There is more than 1 active tblptr byte
  1201   0010AA  0E0E               	movlw	high __smallconst
  1202   0010AC  6EF7               	movwf	tblptrh,c
  1203   0010AE                     	endif
  1204   0010AE                     	if	0	;tblptru may be non-zero
  1205   0010AE                     	endif
  1206   0010AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1207   0010AE  0E00               	movlw	low (__smallconst shr (0+16))
  1208   0010B0  6EF8               	movwf	tblptru,c
  1209   0010B2                     	endif
  1210   0010B2  0008               	tblrd		*
  1211   0010B4  50F5               	movf	tablat,w,c
  1212   0010B6  6E26               	movwf	??_vfpfcnvrt^0,c
  1213   0010B8  6A27               	clrf	(??_vfpfcnvrt+1)^0,c
  1214                           
  1215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1216                           ; Switch size 1, requested type "simple"
  1217                           ; Number of cases is 1, Range of values is 0 to 0
  1218                           ; switch strategies available:
  1219                           ; Name         Instructions Cycles
  1220                           ; simple_byte            4     3 (average)
  1221                           ;	Chosen strategy is simple_byte
  1222   0010BA  5027               	movf	(??_vfpfcnvrt+1)^0,w,c
  1223   0010BC  0A00               	xorlw	0	; case 0
  1224   0010BE  B4D8               	btfsc	status,2,c
  1225   0010C0  EF64  F008         	goto	l2542
  1226   0010C4  EF4C  F008         	goto	l2094
  1227   0010C8                     l2542:
  1228                           
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 1, Range of values is 48 to 48
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte            4     3 (average)
  1234                           ;	Chosen strategy is simple_byte
  1235   0010C8  5026               	movf	??_vfpfcnvrt^0,w,c
  1236   0010CA  0A30               	xorlw	48	; case 48
  1237   0010CC  B4D8               	btfsc	status,2,c
  1238   0010CE  EF45  F008         	goto	l2090
  1239   0010D2  EF4C  F008         	goto	l2094
  1240   0010D6                     l2100:
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1243   0010D6  502C               	movf	vfpfcnvrt@done^0,w,c
  1244   0010D8  B4D8               	btfsc	status,2,c
  1245   0010DA  EF71  F008         	goto	u1391
  1246   0010DE  EF73  F008         	goto	u1390
  1247   0010E2                     u1391:
  1248   0010E2  EF50  F008         	goto	l2098
  1249   0010E6                     u1390:
  1250   0010E6                     
  1251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1252   0010E6  C024  F00A         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1253   0010EA  C025  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1254   0010EE  EC6E  F00B         	call	_read_prec_or_width	;wreg free
  1255   0010F2  C00A  F054         	movff	?_read_prec_or_width,_width
  1256   0010F6  C00B  F055         	movff	?_read_prec_or_width+1,_width+1
  1257   0010FA                     
  1258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1259   0010FA  BE55               	btfsc	(_width+1)^0,7,c
  1260   0010FC  EF84  F008         	goto	u1400
  1261   001100  EF82  F008         	goto	u1401
  1262   001104                     u1401:
  1263   001104  EF89  F008         	goto	l2108
  1264   001108                     u1400:
  1265   001108                     
  1266                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1267   001108  8058               	bsf	_flags^0,0,c
  1268                           
  1269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1270   00110A  6C54               	negf	_width^0,c
  1271   00110C  1E55               	comf	(_width+1)^0,f,c
  1272   00110E  B0D8               	btfsc	status,0,c
  1273   001110  2A55               	incf	(_width+1)^0,f,c
  1274   001112                     l2108:
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1277   001112  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1278   001114  6ED9               	movwf	fsr2l,c
  1279   001116  6ADA               	clrf	fsr2h,c
  1280   001118  50DF               	movf	indf2,w,c
  1281   00111A  6E2D               	movwf	vfpfcnvrt@cp^0,c
  1282   00111C                     
  1283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1284   00111C  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1285   001120                     	if	1	;There is more than 1 active tblptr byte
  1286   001120  0E0E               	movlw	high __smallconst
  1287   001122  6EF7               	movwf	tblptrh,c
  1288   001124                     	endif
  1289   001124                     	if	0	;tblptru may be non-zero
  1290   001124                     	endif
  1291   001124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1292   001124  0E00               	movlw	low (__smallconst shr (0+16))
  1293   001126  6EF8               	movwf	tblptru,c
  1294   001128                     	endif
  1295   001128  0008               	tblrd		*
  1296   00112A  50F5               	movf	tablat,w,c
  1297   00112C  0A64               	xorlw	100
  1298   00112E  B4D8               	btfsc	status,2,c
  1299   001130  EF9C  F008         	goto	u1411
  1300   001134  EF9E  F008         	goto	u1410
  1301   001138                     u1411:
  1302   001138  EFAE  F008         	goto	l2114
  1303   00113C                     u1410:
  1304   00113C  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1305   001140                     	if	1	;There is more than 1 active tblptr byte
  1306   001140  0E0E               	movlw	high __smallconst
  1307   001142  6EF7               	movwf	tblptrh,c
  1308   001144                     	endif
  1309   001144                     	if	0	;tblptru may be non-zero
  1310   001144                     	endif
  1311   001144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1312   001144  0E00               	movlw	low (__smallconst shr (0+16))
  1313   001146  6EF8               	movwf	tblptru,c
  1314   001148                     	endif
  1315   001148  0008               	tblrd		*
  1316   00114A  50F5               	movf	tablat,w,c
  1317   00114C  0A69               	xorlw	105
  1318   00114E  A4D8               	btfss	status,2,c
  1319   001150  EFAC  F008         	goto	u1421
  1320   001154  EFAE  F008         	goto	u1420
  1321   001158                     u1421:
  1322   001158  EFC9  F008         	goto	l2122
  1323   00115C                     u1420:
  1324   00115C                     l2114:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1327   00115C  5025               	movf	vfpfcnvrt@ap^0,w,c
  1328   00115E  6ED9               	movwf	fsr2l,c
  1329   001160  6ADA               	clrf	fsr2h,c
  1330   001162  0E02               	movlw	2
  1331   001164  26DF               	addwf	indf2,f,c
  1332   001166  5CDF               	subwf	indf2,w,c
  1333   001168  6ED9               	movwf	fsr2l,c
  1334   00116A  6ADA               	clrf	fsr2h,c
  1335   00116C  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg
  1336   001170  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg+1
  1337   001174                     
  1338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1339   001174  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1340   001176  6ED9               	movwf	fsr2l,c
  1341   001178  6ADA               	clrf	fsr2h,c
  1342   00117A  282D               	incf	vfpfcnvrt@cp^0,w,c
  1343   00117C  6EDF               	movwf	indf2,c
  1344   00117E                     
  1345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1346   00117E  C023  F018         	movff	vfpfcnvrt@fp,dtoa@fp
  1347   001182  C028  F019         	movff	vfpfcnvrt@convarg,dtoa@d
  1348   001186  C029  F01A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1349   00118A  ECE3  F008         	call	_dtoa	;wreg free
  1350   00118E  EFE2  F008         	goto	l1052
  1351   001192                     l2122:
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1354   001192  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1355   001194  6ED9               	movwf	fsr2l,c
  1356   001196  6ADA               	clrf	fsr2h,c
  1357   001198  2ADF               	incf	indf2,f,c
  1358   00119A  EFE2  F008         	goto	l1052
  1359   00119E                     l2126:
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1362   00119E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1363   0011A0  6ED9               	movwf	fsr2l,c
  1364   0011A2  6ADA               	clrf	fsr2h,c
  1365   0011A4  CFDF FFF6          	movff	indf2,tblptrl
  1366   0011A8                     	if	1	;There is more than 1 active tblptr byte
  1367   0011A8  0E0E               	movlw	high __smallconst
  1368   0011AA  6EF7               	movwf	tblptrh,c
  1369   0011AC                     	endif
  1370   0011AC                     	if	0	;tblptru may be non-zero
  1371   0011AC                     	endif
  1372   0011AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1373   0011AC  0E00               	movlw	low (__smallconst shr (0+16))
  1374   0011AE  6EF8               	movwf	tblptru,c
  1375   0011B0                     	endif
  1376   0011B0  0008               	tblrd		*
  1377   0011B2  50F5               	movf	tablat,w,c
  1378   0011B4  6E04               	movwf	fputc@c^0,c
  1379   0011B6  6A05               	clrf	(fputc@c+1)^0,c
  1380   0011B8  C023  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1381   0011BC  EC1C  F00C         	call	_fputc	;wreg free
  1382   0011C0  EFC9  F008         	goto	l2122
  1383   0011C4                     l1052:
  1384   0011C4  0012               	return		;funcret
  1385   0011C6                     __end_of_vfpfcnvrt:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _read_prec_or_width *****************
  1389 ;; Defined at:
  1390 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  fmt             1    9[COMRAM] PTR PTR const unsigned c
  1393 ;;		 -> vfprintf@cfmt(1), 
  1394 ;;  ap              1   10[COMRAM] PTR PTR void [1]
  1395 ;;		 -> sprintf@ap(1), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  c               1   11[COMRAM] unsigned char 
  1398 ;;  n               2   12[COMRAM] int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2    9[COMRAM] int 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1409 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;Total ram usage:        5 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 2
  1415 ;; This function calls:
  1416 ;;		___wmul
  1417 ;; This function is called by:
  1418 ;;		_vfpfcnvrt
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text5
  1423   0016DC                     __ptext5:
  1424                           	callstack 0
  1425   0016DC                     _read_prec_or_width:
  1426                           	callstack 24
  1427   0016DC                     
  1428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1429   0016DC  0E00               	movlw	0
  1430   0016DE  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1431   0016E0  0E00               	movlw	0
  1432   0016E2  6E0D               	movwf	read_prec_or_width@n^0,c
  1433   0016E4                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1435   0016E4  500A               	movf	read_prec_or_width@fmt^0,w,c
  1436   0016E6  6ED9               	movwf	fsr2l,c
  1437   0016E8  6ADA               	clrf	fsr2h,c
  1438   0016EA  CFDF FFF6          	movff	indf2,tblptrl
  1439   0016EE                     	if	1	;There is more than 1 active tblptr byte
  1440   0016EE  0E0E               	movlw	high __smallconst
  1441   0016F0  6EF7               	movwf	tblptrh,c
  1442   0016F2                     	endif
  1443   0016F2                     	if	0	;tblptru may be non-zero
  1444   0016F2                     	endif
  1445   0016F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1446   0016F2  0E00               	movlw	low (__smallconst shr (0+16))
  1447   0016F4  6EF8               	movwf	tblptru,c
  1448   0016F6                     	endif
  1449   0016F6  0008               	tblrd		*
  1450   0016F8  50F5               	movf	tablat,w,c
  1451   0016FA  0A2A               	xorlw	42
  1452   0016FC  A4D8               	btfss	status,2,c
  1453   0016FE  EF83  F00B         	goto	u1291
  1454   001702  EF85  F00B         	goto	u1290
  1455   001706                     u1291:
  1456   001706  EFAB  F00B         	goto	l2042
  1457   00170A                     u1290:
  1458   00170A                     
  1459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1460   00170A  500A               	movf	read_prec_or_width@fmt^0,w,c
  1461   00170C  6ED9               	movwf	fsr2l,c
  1462   00170E  6ADA               	clrf	fsr2h,c
  1463   001710  2ADF               	incf	indf2,f,c
  1464   001712                     
  1465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1466   001712  500B               	movf	read_prec_or_width@ap^0,w,c
  1467   001714  6ED9               	movwf	fsr2l,c
  1468   001716  6ADA               	clrf	fsr2h,c
  1469   001718  0E02               	movlw	2
  1470   00171A  26DF               	addwf	indf2,f,c
  1471   00171C  5CDF               	subwf	indf2,w,c
  1472   00171E  6ED9               	movwf	fsr2l,c
  1473   001720  6ADA               	clrf	fsr2h,c
  1474   001722  CFDE F00D          	movff	postinc2,read_prec_or_width@n
  1475   001726  CFDE F00E          	movff	postinc2,read_prec_or_width@n+1
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1478   00172A  EFC0  F00B         	goto	l1033
  1479   00172E                     l2038:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1482   00172E  C00D  F004         	movff	read_prec_or_width@n,___wmul@multiplier
  1483   001732  C00E  F005         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1484   001736  0E00               	movlw	0
  1485   001738  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  1486   00173A  0E0A               	movlw	10
  1487   00173C  6E06               	movwf	___wmul@multiplicand^0,c
  1488   00173E  EC3F  F00F         	call	___wmul	;wreg free
  1489   001742  500C               	movf	read_prec_or_width@c^0,w,c
  1490   001744  2404               	addwf	?___wmul^0,w,c
  1491   001746  6E0D               	movwf	read_prec_or_width@n^0,c
  1492   001748  0E00               	movlw	0
  1493   00174A  2005               	addwfc	(?___wmul+1)^0,w,c
  1494   00174C  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1495   00174E                     
  1496                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1497   00174E  500A               	movf	read_prec_or_width@fmt^0,w,c
  1498   001750  6ED9               	movwf	fsr2l,c
  1499   001752  6ADA               	clrf	fsr2h,c
  1500   001754  2ADF               	incf	indf2,f,c
  1501   001756                     l2042:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1504   001756  500A               	movf	read_prec_or_width@fmt^0,w,c
  1505   001758  6ED9               	movwf	fsr2l,c
  1506   00175A  6ADA               	clrf	fsr2h,c
  1507   00175C  CFDF FFF6          	movff	indf2,tblptrl
  1508   001760                     	if	1	;There is more than 1 active tblptr byte
  1509   001760  0E0E               	movlw	high __smallconst
  1510   001762  6EF7               	movwf	tblptrh,c
  1511   001764                     	endif
  1512   001764                     	if	0	;tblptru may be non-zero
  1513   001764                     	endif
  1514   001764                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1515   001764  0E00               	movlw	low (__smallconst shr (0+16))
  1516   001766  6EF8               	movwf	tblptru,c
  1517   001768                     	endif
  1518   001768  0008               	tblrd		*
  1519   00176A  50F5               	movf	tablat,w,c
  1520   00176C  0FD0               	addlw	208
  1521   00176E  6E0C               	movwf	read_prec_or_width@c^0,c
  1522   001770  0E09               	movlw	9
  1523   001772  640C               	cpfsgt	read_prec_or_width@c^0,c
  1524   001774  EFBE  F00B         	goto	u1301
  1525   001778  EFC0  F00B         	goto	u1300
  1526   00177C                     u1301:
  1527   00177C  EF97  F00B         	goto	l2038
  1528   001780                     u1300:
  1529   001780                     l1033:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1532   001780  C00D  F00A         	movff	read_prec_or_width@n,?_read_prec_or_width
  1533   001784  C00E  F00B         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1534   001788  0012               	return		;funcret
  1535   00178A                     __end_of_read_prec_or_width:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _dtoa *****************
  1539 ;; Defined at:
  1540 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1543 ;;		 -> sprintf@f(12), 
  1544 ;;  d               2   24[COMRAM] int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  i               2   32[COMRAM] int 
  1547 ;;  w               2   29[COMRAM] int 
  1548 ;;  s               1   31[COMRAM] unsigned char 
  1549 ;;  p               1   28[COMRAM] _Bool 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1559 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;Total ram usage:       11 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 5
  1566 ;; This function calls:
  1567 ;;		___awdiv
  1568 ;;		___awmod
  1569 ;;		_abs
  1570 ;;		_pad
  1571 ;; This function is called by:
  1572 ;;		_vfpfcnvrt
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text6
  1577   0011C6                     __ptext6:
  1578                           	callstack 0
  1579   0011C6                     _dtoa:
  1580                           	callstack 21
  1581   0011C6                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1583   0011C6  0E01               	movlw	1
  1584   0011C8  6E1D               	movwf	dtoa@p^0,c
  1585   0011CA                     
  1586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1587   0011CA  BE1A               	btfsc	(dtoa@d+1)^0,7,c
  1588   0011CC  EFEA  F008         	goto	u1191
  1589   0011D0  EFED  F008         	goto	u1190
  1590   0011D4                     u1191:
  1591   0011D4  0E01               	movlw	1
  1592   0011D6  EFEE  F008         	goto	u1200
  1593   0011DA                     u1190:
  1594   0011DA  0E00               	movlw	0
  1595   0011DC                     u1200:
  1596   0011DC  6E20               	movwf	dtoa@s^0,c
  1597   0011DE                     
  1598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1599   0011DE  C054  F01E         	movff	_width,dtoa@w
  1600   0011E2  C055  F01F         	movff	_width+1,dtoa@w+1
  1601   0011E6                     
  1602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1603   0011E6  5020               	movf	dtoa@s^0,w,c
  1604   0011E8  B4D8               	btfsc	status,2,c
  1605   0011EA  EFF9  F008         	goto	u1211
  1606   0011EE  EFFB  F008         	goto	u1210
  1607   0011F2                     u1211:
  1608   0011F2  EF12  F009         	goto	l1016
  1609   0011F6                     u1210:
  1610   0011F6                     
  1611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1612   0011F6  061E               	decf	dtoa@w^0,f,c
  1613   0011F8  A0D8               	btfss	status,0,c
  1614   0011FA  061F               	decf	(dtoa@w+1)^0,f,c
  1615   0011FC                     
  1616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1617   0011FC  5020               	movf	dtoa@s^0,w,c
  1618   0011FE  A4D8               	btfss	status,2,c
  1619   001200  EF04  F009         	goto	u1221
  1620   001204  EF06  F009         	goto	u1220
  1621   001208                     u1221:
  1622   001208  EF0C  F009         	goto	l1994
  1623   00120C                     u1220:
  1624   00120C  0E00               	movlw	0
  1625   00120E  6E1C               	movwf	(_dtoa$1962+1)^0,c
  1626   001210  0E2B               	movlw	43
  1627   001212  6E1B               	movwf	_dtoa$1962^0,c
  1628   001214  EF10  F009         	goto	l1996
  1629   001218                     l1994:
  1630   001218  0E00               	movlw	0
  1631   00121A  6E1C               	movwf	(_dtoa$1962+1)^0,c
  1632   00121C  0E2D               	movlw	45
  1633   00121E  6E1B               	movwf	_dtoa$1962^0,c
  1634   001220                     l1996:
  1635   001220  C01B  F020         	movff	_dtoa$1962,dtoa@s
  1636   001224                     l1016:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1639   001224  0E00               	movlw	0
  1640   001226  6E22               	movwf	(dtoa@i+1)^0,c
  1641   001228  0E1F               	movlw	31
  1642   00122A  6E21               	movwf	dtoa@i^0,c
  1643   00122C                     
  1644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1645   00122C  0E00               	movlw	0
  1646   00122E  0100               	movlb	0	; () banked
  1647   001230  6FA9               	movwf	(_dbuf+31)& (0+255),b
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1650   001232  EF48  F009         	goto	l2010
  1651   001236                     l2000:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1654   001236  0621               	decf	dtoa@i^0,f,c
  1655   001238  A0D8               	btfss	status,0,c
  1656   00123A  0622               	decf	(dtoa@i+1)^0,f,c
  1657   00123C                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1659   00123C  5021               	movf	dtoa@i^0,w,c
  1660   00123E  0F8A               	addlw	low _dbuf
  1661   001240  6ED9               	movwf	fsr2l,c
  1662   001242  6ADA               	clrf	fsr2h,c
  1663   001244  C019  F004         	movff	dtoa@d,___awmod@dividend
  1664   001248  C01A  F005         	movff	dtoa@d+1,___awmod@dividend+1
  1665   00124C  0E00               	movlw	0
  1666   00124E  6E07               	movwf	(___awmod@divisor+1)^0,c
  1667   001250  0E0A               	movlw	10
  1668   001252  6E06               	movwf	___awmod@divisor^0,c
  1669   001254  EC16  F00B         	call	___awmod	;wreg free
  1670   001258  C004  F00A         	movff	?___awmod,abs@a
  1671   00125C  C005  F00B         	movff	?___awmod+1,abs@a+1
  1672   001260  ECE1  F00E         	call	_abs	;wreg free
  1673   001264  500A               	movf	?_abs^0,w,c
  1674   001266  0F30               	addlw	48
  1675   001268  6EDF               	movwf	indf2,c
  1676   00126A                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1678   00126A  0E00               	movlw	0
  1679   00126C  6E1D               	movwf	dtoa@p^0,c
  1680   00126E                     
  1681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1682   00126E  061E               	decf	dtoa@w^0,f,c
  1683   001270  A0D8               	btfss	status,0,c
  1684   001272  061F               	decf	(dtoa@w+1)^0,f,c
  1685   001274                     
  1686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1687   001274  C019  F004         	movff	dtoa@d,___awdiv@dividend
  1688   001278  C01A  F005         	movff	dtoa@d+1,___awdiv@dividend+1
  1689   00127C  0E00               	movlw	0
  1690   00127E  6E07               	movwf	(___awdiv@divisor+1)^0,c
  1691   001280  0E0A               	movlw	10
  1692   001282  6E06               	movwf	___awdiv@divisor^0,c
  1693   001284  ECFB  F009         	call	___awdiv	;wreg free
  1694   001288  C004  F019         	movff	?___awdiv,dtoa@d
  1695   00128C  C005  F01A         	movff	?___awdiv+1,dtoa@d+1
  1696   001290                     l2010:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1699   001290  BE22               	btfsc	(dtoa@i+1)^0,7,c
  1700   001292  EF53  F009         	goto	u1231
  1701   001296  5022               	movf	(dtoa@i+1)^0,w,c
  1702   001298  E108               	bnz	u1230
  1703   00129A  0421               	decf	dtoa@i^0,w,c
  1704   00129C  A0D8               	btfss	status,0,c
  1705   00129E  EF53  F009         	goto	u1231
  1706   0012A2  EF55  F009         	goto	u1230
  1707   0012A6                     u1231:
  1708   0012A6  EF7A  F009         	goto	l2020
  1709   0012AA                     u1230:
  1710   0012AA  5019               	movf	dtoa@d^0,w,c
  1711   0012AC  101A               	iorwf	(dtoa@d+1)^0,w,c
  1712   0012AE  A4D8               	btfss	status,2,c
  1713   0012B0  EF5C  F009         	goto	u1241
  1714   0012B4  EF5E  F009         	goto	u1240
  1715   0012B8                     u1241:
  1716   0012B8  EF1B  F009         	goto	l2000
  1717   0012BC                     u1240:
  1718   0012BC  501D               	movf	dtoa@p^0,w,c
  1719   0012BE  A4D8               	btfss	status,2,c
  1720   0012C0  EF64  F009         	goto	u1251
  1721   0012C4  EF66  F009         	goto	u1250
  1722   0012C8                     u1251:
  1723   0012C8  EF1B  F009         	goto	l2000
  1724   0012CC                     u1250:
  1725   0012CC  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  1726   0012CE  EF71  F009         	goto	u1261
  1727   0012D2  501F               	movf	(dtoa@w+1)^0,w,c
  1728   0012D4  E108               	bnz	u1260
  1729   0012D6  041E               	decf	dtoa@w^0,w,c
  1730   0012D8  A0D8               	btfss	status,0,c
  1731   0012DA  EF71  F009         	goto	u1261
  1732   0012DE  EF73  F009         	goto	u1260
  1733   0012E2                     u1261:
  1734   0012E2  EF7A  F009         	goto	l2020
  1735   0012E6                     u1260:
  1736   0012E6  B258               	btfsc	_flags^0,1,c
  1737   0012E8  EF78  F009         	goto	u1271
  1738   0012EC  EF7A  F009         	goto	u1270
  1739   0012F0                     u1271:
  1740   0012F0  EF1B  F009         	goto	l2000
  1741   0012F4                     u1270:
  1742   0012F4                     l2020:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1745   0012F4  5020               	movf	dtoa@s^0,w,c
  1746   0012F6  B4D8               	btfsc	status,2,c
  1747   0012F8  EF80  F009         	goto	u1281
  1748   0012FC  EF82  F009         	goto	u1280
  1749   001300                     u1281:
  1750   001300  EF8B  F009         	goto	l2026
  1751   001304                     u1280:
  1752   001304                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1754   001304  0621               	decf	dtoa@i^0,f,c
  1755   001306  A0D8               	btfss	status,0,c
  1756   001308  0622               	decf	(dtoa@i+1)^0,f,c
  1757   00130A                     
  1758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1759   00130A  5021               	movf	dtoa@i^0,w,c
  1760   00130C  0F8A               	addlw	low _dbuf
  1761   00130E  6ED9               	movwf	fsr2l,c
  1762   001310  6ADA               	clrf	fsr2h,c
  1763   001312  C020  FFDF         	movff	dtoa@s,indf2
  1764   001316                     l2026:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1767   001316  C018  F011         	movff	dtoa@fp,pad@fp
  1768   00131A  5021               	movf	dtoa@i^0,w,c
  1769   00131C  0F8A               	addlw	low _dbuf
  1770   00131E  6E12               	movwf	pad@buf^0,c
  1771   001320  C01E  F013         	movff	dtoa@w,pad@p
  1772   001324  C01F  F014         	movff	dtoa@w+1,pad@p+1
  1773   001328  EC71  F00C         	call	_pad	;wreg free
  1774   00132C  0012               	return		;funcret
  1775   00132E                     __end_of_dtoa:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _pad *****************
  1779 ;; Defined at:
  1780 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  1783 ;;		 -> sprintf@f(12), 
  1784 ;;  buf             1   17[COMRAM] PTR unsigned char 
  1785 ;;		 -> dbuf(32), 
  1786 ;;  p               2   18[COMRAM] int 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  i               2   21[COMRAM] int 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;Total ram usage:        7 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 4
  1805 ;; This function calls:
  1806 ;;		_fputc
  1807 ;;		_fputs
  1808 ;; This function is called by:
  1809 ;;		_dtoa
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text7
  1814   0018E2                     __ptext7:
  1815                           	callstack 0
  1816   0018E2                     _pad:
  1817                           	callstack 21
  1818   0018E2                     
  1819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1820   0018E2  A058               	btfss	_flags^0,0,c
  1821   0018E4  EF76  F00C         	goto	u1141
  1822   0018E8  EF78  F00C         	goto	u1140
  1823   0018EC                     u1141:
  1824   0018EC  EF7E  F00C         	goto	l1958
  1825   0018F0                     u1140:
  1826   0018F0                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1828   0018F0  C012  F00C         	movff	pad@buf,fputs@s
  1829   0018F4  C011  F00D         	movff	pad@fp,fputs@fp
  1830   0018F8  EC6E  F00E         	call	_fputs	;wreg free
  1831   0018FC                     l1958:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1834   0018FC  BE14               	btfsc	(pad@p+1)^0,7,c
  1835   0018FE  EF85  F00C         	goto	u1150
  1836   001902  EF83  F00C         	goto	u1151
  1837   001906                     u1151:
  1838   001906  EF89  F00C         	goto	l1008
  1839   00190A                     u1150:
  1840   00190A                     
  1841                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1842   00190A  0E00               	movlw	0
  1843   00190C  6E14               	movwf	(pad@p+1)^0,c
  1844   00190E  0E00               	movlw	0
  1845   001910  6E13               	movwf	pad@p^0,c
  1846   001912                     l1008:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1849   001912  0E00               	movlw	0
  1850   001914  6E17               	movwf	(pad@i+1)^0,c
  1851   001916  0E00               	movlw	0
  1852   001918  6E16               	movwf	pad@i^0,c
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1855   00191A  EF99  F00C         	goto	l1966
  1856   00191E                     l1962:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1859   00191E  0E00               	movlw	0
  1860   001920  6E05               	movwf	(fputc@c+1)^0,c
  1861   001922  0E20               	movlw	32
  1862   001924  6E04               	movwf	fputc@c^0,c
  1863   001926  C011  F006         	movff	pad@fp,fputc@fp
  1864   00192A  EC1C  F00C         	call	_fputc	;wreg free
  1865   00192E                     
  1866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1867   00192E  4A16               	infsnz	pad@i^0,f,c
  1868   001930  2A17               	incf	(pad@i+1)^0,f,c
  1869   001932                     l1966:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1872   001932  5013               	movf	pad@p^0,w,c
  1873   001934  5C16               	subwf	pad@i^0,w,c
  1874   001936  5017               	movf	(pad@i+1)^0,w,c
  1875   001938  0A80               	xorlw	128
  1876   00193A  6E15               	movwf	??_pad^0,c
  1877   00193C  5014               	movf	(pad@p+1)^0,w,c
  1878   00193E  0A80               	xorlw	128
  1879   001940  5815               	subwfb	??_pad^0,w,c
  1880   001942  A0D8               	btfss	status,0,c
  1881   001944  EFA6  F00C         	goto	u1161
  1882   001948  EFA8  F00C         	goto	u1160
  1883   00194C                     u1161:
  1884   00194C  EF8F  F00C         	goto	l1962
  1885   001950                     u1160:
  1886   001950                     
  1887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1888   001950  B058               	btfsc	_flags^0,0,c
  1889   001952  EFAD  F00C         	goto	u1171
  1890   001956  EFAF  F00C         	goto	u1170
  1891   00195A                     u1171:
  1892   00195A  EFB5  F00C         	goto	l1013
  1893   00195E                     u1170:
  1894   00195E                     
  1895                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1896   00195E  C012  F00C         	movff	pad@buf,fputs@s
  1897   001962  C011  F00D         	movff	pad@fp,fputs@fp
  1898   001966  EC6E  F00E         	call	_fputs	;wreg free
  1899   00196A                     l1013:
  1900   00196A  0012               	return		;funcret
  1901   00196C                     __end_of_pad:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _fputs *****************
  1905 ;; Defined at:
  1906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1909 ;;		 -> dbuf(32), 
  1910 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1911 ;;		 -> sprintf@f(12), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               2   14[COMRAM] int 
  1914 ;;  c               1   13[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2   11[COMRAM] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;Total ram usage:        5 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		_fputc
  1933 ;; This function is called by:
  1934 ;;		_pad
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text8
  1939   001CDC                     __ptext8:
  1940                           	callstack 0
  1941   001CDC                     _fputs:
  1942                           	callstack 21
  1943   001CDC  0E00               	movlw	0
  1944   001CDE  6E10               	movwf	(fputs@i+1)^0,c
  1945   001CE0  0E00               	movlw	0
  1946   001CE2  6E0F               	movwf	fputs@i^0,c
  1947   001CE4  EF7D  F00E         	goto	l1866
  1948   001CE8                     l1862:
  1949   001CE8  C00E  F004         	movff	fputs@c,fputc@c
  1950   001CEC  6A05               	clrf	(fputc@c+1)^0,c
  1951   001CEE  C00D  F006         	movff	fputs@fp,fputc@fp
  1952   001CF2  EC1C  F00C         	call	_fputc	;wreg free
  1953   001CF6  4A0F               	infsnz	fputs@i^0,f,c
  1954   001CF8  2A10               	incf	(fputs@i+1)^0,f,c
  1955   001CFA                     l1866:
  1956   001CFA  500C               	movf	fputs@s^0,w,c
  1957   001CFC  240F               	addwf	fputs@i^0,w,c
  1958   001CFE  6ED9               	movwf	fsr2l,c
  1959   001D00  6ADA               	clrf	fsr2h,c
  1960   001D02  50DF               	movf	indf2,w,c
  1961   001D04  6E0E               	movwf	fputs@c^0,c
  1962   001D06  500E               	movf	fputs@c^0,w,c
  1963   001D08  A4D8               	btfss	status,2,c
  1964   001D0A  EF89  F00E         	goto	u1011
  1965   001D0E  EF8B  F00E         	goto	u1010
  1966   001D12                     u1011:
  1967   001D12  EF74  F00E         	goto	l1862
  1968   001D16                     u1010:
  1969   001D16  0012               	return		;funcret
  1970   001D18                     __end_of_fputs:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _fputc *****************
  1974 ;; Defined at:
  1975 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  c               2    3[COMRAM] int 
  1978 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  1979 ;;		 -> sprintf@f(12), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    3[COMRAM] int 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1991 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;Total ram usage:        8 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 2
  1998 ;; This function calls:
  1999 ;;		_putch
  2000 ;; This function is called by:
  2001 ;;		_pad
  2002 ;;		_vfpfcnvrt
  2003 ;;		_fputs
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text9
  2008   001838                     __ptext9:
  2009                           	callstack 0
  2010   001838                     _fputc:
  2011                           	callstack 24
  2012   001838  5006               	movf	fputc@fp^0,w,c
  2013   00183A  B4D8               	btfsc	status,2,c
  2014   00183C  EF22  F00C         	goto	u971
  2015   001840  EF24  F00C         	goto	u970
  2016   001844                     u971:
  2017   001844  EF2C  F00C         	goto	l1850
  2018   001848                     u970:
  2019   001848  5006               	movf	fputc@fp^0,w,c
  2020   00184A  A4D8               	btfss	status,2,c
  2021   00184C  EF2A  F00C         	goto	u981
  2022   001850  EF2C  F00C         	goto	u980
  2023   001854                     u981:
  2024   001854  EF31  F00C         	goto	l1852
  2025   001858                     u980:
  2026   001858                     l1850:
  2027   001858  5004               	movf	fputc@c^0,w,c
  2028   00185A  ECB2  F00F         	call	_putch
  2029   00185E  EF70  F00C         	goto	l1077
  2030   001862                     l1852:
  2031   001862  5006               	movf	fputc@fp^0,w,c
  2032   001864  6ED9               	movwf	fsr2l,c
  2033   001866  6ADA               	clrf	fsr2h,c
  2034   001868  0E0A               	movlw	10
  2035   00186A  26D9               	addwf	fsr2l,f,c
  2036   00186C  50DE               	movf	postinc2,w,c
  2037   00186E  10DE               	iorwf	postinc2,w,c
  2038   001870  B4D8               	btfsc	status,2,c
  2039   001872  EF3D  F00C         	goto	u991
  2040   001876  EF3F  F00C         	goto	u990
  2041   00187A                     u991:
  2042   00187A  EF58  F00C         	goto	l1856
  2043   00187E                     u990:
  2044   00187E  5006               	movf	fputc@fp^0,w,c
  2045   001880  6ED9               	movwf	fsr2l,c
  2046   001882  6ADA               	clrf	fsr2h,c
  2047   001884  0E0A               	movlw	10
  2048   001886  26D9               	addwf	fsr2l,f,c
  2049   001888  5006               	movf	fputc@fp^0,w,c
  2050   00188A  6EE1               	movwf	fsr1l,c
  2051   00188C  6AE2               	clrf	fsr1h,c
  2052   00188E  0E03               	movlw	3
  2053   001890  26E1               	addwf	fsr1l,f,c
  2054   001892  50DE               	movf	postinc2,w,c
  2055   001894  5CE6               	subwf	postinc1,w,c
  2056   001896  50E6               	movf	postinc1,w,c
  2057   001898  0A80               	xorlw	128
  2058   00189A  6E0B               	movwf	(??_fputc+4)^0,c
  2059   00189C  50DE               	movf	postinc2,w,c
  2060   00189E  0A80               	xorlw	128
  2061   0018A0  580B               	subwfb	(??_fputc+4)^0,w,c
  2062   0018A2  B0D8               	btfsc	status,0,c
  2063   0018A4  EF56  F00C         	goto	u1001
  2064   0018A8  EF58  F00C         	goto	u1000
  2065   0018AC                     u1001:
  2066   0018AC  EF70  F00C         	goto	l1077
  2067   0018B0                     u1000:
  2068   0018B0                     l1856:
  2069   0018B0  5006               	movf	fputc@fp^0,w,c
  2070   0018B2  6ED9               	movwf	fsr2l,c
  2071   0018B4  6ADA               	clrf	fsr2h,c
  2072   0018B6  0E03               	movlw	3
  2073   0018B8  26D9               	addwf	fsr2l,f,c
  2074   0018BA  50DF               	movf	indf2,w,c
  2075   0018BC  6E07               	movwf	??_fputc^0,c
  2076   0018BE  5006               	movf	fputc@fp^0,w,c
  2077   0018C0  6ED9               	movwf	fsr2l,c
  2078   0018C2  6ADA               	clrf	fsr2h,c
  2079   0018C4  50DF               	movf	indf2,w,c
  2080   0018C6  2407               	addwf	??_fputc^0,w,c
  2081   0018C8  6ED9               	movwf	fsr2l,c
  2082   0018CA  6ADA               	clrf	fsr2h,c
  2083   0018CC  C004  FFDF         	movff	fputc@c,indf2
  2084   0018D0  5006               	movf	fputc@fp^0,w,c
  2085   0018D2  6ED9               	movwf	fsr2l,c
  2086   0018D4  6ADA               	clrf	fsr2h,c
  2087   0018D6  0E03               	movlw	3
  2088   0018D8  26D9               	addwf	fsr2l,f,c
  2089   0018DA  2ADE               	incf	postinc2,f,c
  2090   0018DC  0E00               	movlw	0
  2091   0018DE  22DD               	addwfc	postdec2,f,c
  2092   0018E0                     l1077:
  2093   0018E0  0012               	return		;funcret
  2094   0018E2                     __end_of_fputc:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _putch *****************
  2098 ;; Defined at:
  2099 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  c               1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  c               1    0[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_fputc
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text10
  2128   001F64                     __ptext10:
  2129                           	callstack 0
  2130   001F64                     _putch:
  2131                           	callstack 24
  2132   001F64  0012               	return		;funcret
  2133   001F66                     __end_of_putch:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _abs *****************
  2137 ;; Defined at:
  2138 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  a               2    9[COMRAM] int 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2    9[COMRAM] int 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;Total ram usage:        4 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_dtoa
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text11
  2167   001DC2                     __ptext11:
  2168                           	callstack 0
  2169   001DC2                     _abs:
  2170                           	callstack 24
  2171   001DC2  BE0B               	btfsc	(abs@a+1)^0,7,c
  2172   001DC4  EFE6  F00E         	goto	u1181
  2173   001DC8  EFE8  F00E         	goto	u1180
  2174   001DCC                     u1181:
  2175   001DCC  EFEE  F00E         	goto	l1062
  2176   001DD0                     u1180:
  2177   001DD0  C00A  F00A         	movff	abs@a,?_abs
  2178   001DD4  C00B  F00B         	movff	abs@a+1,?_abs+1
  2179   001DD8  EFFA  F00E         	goto	l1065
  2180   001DDC                     l1062:
  2181   001DDC  C00A  F00C         	movff	abs@a,??_abs
  2182   001DE0  C00B  F00D         	movff	abs@a+1,??_abs+1
  2183   001DE4  1E0C               	comf	??_abs^0,f,c
  2184   001DE6  1E0D               	comf	(??_abs+1)^0,f,c
  2185   001DE8  4A0C               	infsnz	??_abs^0,f,c
  2186   001DEA  2A0D               	incf	(??_abs+1)^0,f,c
  2187   001DEC  C00C  F00A         	movff	??_abs,?_abs
  2188   001DF0  C00D  F00B         	movff	??_abs+1,?_abs+1
  2189   001DF4                     l1065:
  2190   001DF4  0012               	return		;funcret
  2191   001DF6                     __end_of_abs:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function ___awmod *****************
  2195 ;; Defined at:
  2196 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  dividend        2    3[COMRAM] int 
  2199 ;;  divisor         2    5[COMRAM] int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  sign            1    8[COMRAM] unsigned char 
  2202 ;;  counter         1    7[COMRAM] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  2    3[COMRAM] int 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;Total ram usage:        6 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_dtoa
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text12
  2227   00162C                     __ptext12:
  2228                           	callstack 0
  2229   00162C                     ___awmod:
  2230                           	callstack 24
  2231   00162C  0E00               	movlw	0
  2232   00162E  6E09               	movwf	___awmod@sign^0,c
  2233   001630  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  2234   001632  EF1F  F00B         	goto	u1080
  2235   001636  EF1D  F00B         	goto	u1081
  2236   00163A                     u1081:
  2237   00163A  EF25  F00B         	goto	l1926
  2238   00163E                     u1080:
  2239   00163E  6C04               	negf	___awmod@dividend^0,c
  2240   001640  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2241   001642  B0D8               	btfsc	status,0,c
  2242   001644  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2243   001646  0E01               	movlw	1
  2244   001648  6E09               	movwf	___awmod@sign^0,c
  2245   00164A                     l1926:
  2246   00164A  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  2247   00164C  EF2C  F00B         	goto	u1090
  2248   001650  EF2A  F00B         	goto	u1091
  2249   001654                     u1091:
  2250   001654  EF30  F00B         	goto	l1930
  2251   001658                     u1090:
  2252   001658  6C06               	negf	___awmod@divisor^0,c
  2253   00165A  1E07               	comf	(___awmod@divisor+1)^0,f,c
  2254   00165C  B0D8               	btfsc	status,0,c
  2255   00165E  2A07               	incf	(___awmod@divisor+1)^0,f,c
  2256   001660                     l1930:
  2257   001660  5006               	movf	___awmod@divisor^0,w,c
  2258   001662  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  2259   001664  B4D8               	btfsc	status,2,c
  2260   001666  EF37  F00B         	goto	u1101
  2261   00166A  EF39  F00B         	goto	u1100
  2262   00166E                     u1101:
  2263   00166E  EF5D  F00B         	goto	l1946
  2264   001672                     u1100:
  2265   001672  0E01               	movlw	1
  2266   001674  6E08               	movwf	___awmod@counter^0,c
  2267   001676  EF41  F00B         	goto	l1936
  2268   00167A                     l1934:
  2269   00167A  90D8               	bcf	status,0,c
  2270   00167C  3606               	rlcf	___awmod@divisor^0,f,c
  2271   00167E  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  2272   001680  2A08               	incf	___awmod@counter^0,f,c
  2273   001682                     l1936:
  2274   001682  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  2275   001684  EF46  F00B         	goto	u1111
  2276   001688  EF48  F00B         	goto	u1110
  2277   00168C                     u1111:
  2278   00168C  EF3D  F00B         	goto	l1934
  2279   001690                     u1110:
  2280   001690                     l1938:
  2281   001690  5006               	movf	___awmod@divisor^0,w,c
  2282   001692  5C04               	subwf	___awmod@dividend^0,w,c
  2283   001694  5007               	movf	(___awmod@divisor+1)^0,w,c
  2284   001696  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  2285   001698  A0D8               	btfss	status,0,c
  2286   00169A  EF51  F00B         	goto	u1121
  2287   00169E  EF53  F00B         	goto	u1120
  2288   0016A2                     u1121:
  2289   0016A2  EF57  F00B         	goto	l1942
  2290   0016A6                     u1120:
  2291   0016A6  5006               	movf	___awmod@divisor^0,w,c
  2292   0016A8  5E04               	subwf	___awmod@dividend^0,f,c
  2293   0016AA  5007               	movf	(___awmod@divisor+1)^0,w,c
  2294   0016AC  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  2295   0016AE                     l1942:
  2296   0016AE  90D8               	bcf	status,0,c
  2297   0016B0  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  2298   0016B2  3206               	rrcf	___awmod@divisor^0,f,c
  2299   0016B4  2E08               	decfsz	___awmod@counter^0,f,c
  2300   0016B6  EF48  F00B         	goto	l1938
  2301   0016BA                     l1946:
  2302   0016BA  5009               	movf	___awmod@sign^0,w,c
  2303   0016BC  B4D8               	btfsc	status,2,c
  2304   0016BE  EF63  F00B         	goto	u1131
  2305   0016C2  EF65  F00B         	goto	u1130
  2306   0016C6                     u1131:
  2307   0016C6  EF69  F00B         	goto	l1950
  2308   0016CA                     u1130:
  2309   0016CA  6C04               	negf	___awmod@dividend^0,c
  2310   0016CC  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2311   0016CE  B0D8               	btfsc	status,0,c
  2312   0016D0  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2313   0016D2                     l1950:
  2314   0016D2  C004  F004         	movff	___awmod@dividend,?___awmod
  2315   0016D6  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  2316   0016DA  0012               	return		;funcret
  2317   0016DC                     __end_of___awmod:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function ___awdiv *****************
  2321 ;; Defined at:
  2322 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  dividend        2    3[COMRAM] int 
  2325 ;;  divisor         2    5[COMRAM] int 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  quotient        2    9[COMRAM] int 
  2328 ;;  sign            1    8[COMRAM] unsigned char 
  2329 ;;  counter         1    7[COMRAM] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  2    3[COMRAM] int 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;Total ram usage:        8 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 1
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_dtoa
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text13
  2354   0013F6                     __ptext13:
  2355                           	callstack 0
  2356   0013F6                     ___awdiv:
  2357                           	callstack 24
  2358   0013F6  0E00               	movlw	0
  2359   0013F8  6E09               	movwf	___awdiv@sign^0,c
  2360   0013FA  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  2361   0013FC  EF04  F00A         	goto	u1020
  2362   001400  EF02  F00A         	goto	u1021
  2363   001404                     u1021:
  2364   001404  EF0A  F00A         	goto	l1882
  2365   001408                     u1020:
  2366   001408  6C06               	negf	___awdiv@divisor^0,c
  2367   00140A  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  2368   00140C  B0D8               	btfsc	status,0,c
  2369   00140E  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  2370   001410  0E01               	movlw	1
  2371   001412  6E09               	movwf	___awdiv@sign^0,c
  2372   001414                     l1882:
  2373   001414  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  2374   001416  EF11  F00A         	goto	u1030
  2375   00141A  EF0F  F00A         	goto	u1031
  2376   00141E                     u1031:
  2377   00141E  EF17  F00A         	goto	l1888
  2378   001422                     u1030:
  2379   001422  6C04               	negf	___awdiv@dividend^0,c
  2380   001424  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  2381   001426  B0D8               	btfsc	status,0,c
  2382   001428  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  2383   00142A  0E01               	movlw	1
  2384   00142C  1A09               	xorwf	___awdiv@sign^0,f,c
  2385   00142E                     l1888:
  2386   00142E  0E00               	movlw	0
  2387   001430  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  2388   001432  0E00               	movlw	0
  2389   001434  6E0A               	movwf	___awdiv@quotient^0,c
  2390   001436  5006               	movf	___awdiv@divisor^0,w,c
  2391   001438  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  2392   00143A  B4D8               	btfsc	status,2,c
  2393   00143C  EF22  F00A         	goto	u1041
  2394   001440  EF24  F00A         	goto	u1040
  2395   001444                     u1041:
  2396   001444  EF4C  F00A         	goto	l1910
  2397   001448                     u1040:
  2398   001448  0E01               	movlw	1
  2399   00144A  6E08               	movwf	___awdiv@counter^0,c
  2400   00144C  EF2C  F00A         	goto	l1896
  2401   001450                     l1894:
  2402   001450  90D8               	bcf	status,0,c
  2403   001452  3606               	rlcf	___awdiv@divisor^0,f,c
  2404   001454  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  2405   001456  2A08               	incf	___awdiv@counter^0,f,c
  2406   001458                     l1896:
  2407   001458  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  2408   00145A  EF31  F00A         	goto	u1051
  2409   00145E  EF33  F00A         	goto	u1050
  2410   001462                     u1051:
  2411   001462  EF28  F00A         	goto	l1894
  2412   001466                     u1050:
  2413   001466                     l1898:
  2414   001466  90D8               	bcf	status,0,c
  2415   001468  360A               	rlcf	___awdiv@quotient^0,f,c
  2416   00146A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2417   00146C  5006               	movf	___awdiv@divisor^0,w,c
  2418   00146E  5C04               	subwf	___awdiv@dividend^0,w,c
  2419   001470  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2420   001472  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  2421   001474  A0D8               	btfss	status,0,c
  2422   001476  EF3F  F00A         	goto	u1061
  2423   00147A  EF41  F00A         	goto	u1060
  2424   00147E                     u1061:
  2425   00147E  EF46  F00A         	goto	l1906
  2426   001482                     u1060:
  2427   001482  5006               	movf	___awdiv@divisor^0,w,c
  2428   001484  5E04               	subwf	___awdiv@dividend^0,f,c
  2429   001486  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2430   001488  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  2431   00148A  800A               	bsf	___awdiv@quotient^0,0,c
  2432   00148C                     l1906:
  2433   00148C  90D8               	bcf	status,0,c
  2434   00148E  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  2435   001490  3206               	rrcf	___awdiv@divisor^0,f,c
  2436   001492  2E08               	decfsz	___awdiv@counter^0,f,c
  2437   001494  EF33  F00A         	goto	l1898
  2438   001498                     l1910:
  2439   001498  5009               	movf	___awdiv@sign^0,w,c
  2440   00149A  B4D8               	btfsc	status,2,c
  2441   00149C  EF52  F00A         	goto	u1071
  2442   0014A0  EF54  F00A         	goto	u1070
  2443   0014A4                     u1071:
  2444   0014A4  EF58  F00A         	goto	l1914
  2445   0014A8                     u1070:
  2446   0014A8  6C0A               	negf	___awdiv@quotient^0,c
  2447   0014AA  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  2448   0014AC  B0D8               	btfsc	status,0,c
  2449   0014AE  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  2450   0014B0                     l1914:
  2451   0014B0  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  2452   0014B4  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  2453   0014B8  0012               	return		;funcret
  2454   0014BA                     __end_of___awdiv:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _LCD_sendstring *****************
  2458 ;; Defined at:
  2459 ;;		line 117 in file "LCD.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  string          1    8[COMRAM] PTR unsigned char 
  2462 ;;		 -> main@buf(32), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2474 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;Total ram usage:        1 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 4
  2481 ;; This function calls:
  2482 ;;		_LCD_sendbyte
  2483 ;; This function is called by:
  2484 ;;		_time2String
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text14
  2489   001DF6                     __ptext14:
  2490                           	callstack 0
  2491   001DF6                     _LCD_sendstring:
  2492                           	callstack 25
  2493   001DF6                     
  2494                           ;LCD.c: 117: void LCD_sendstring(char *string);LCD.c: 118: {;LCD.c: 120:     while(*stri
      +                          ng != 0){
  2495   001DF6  EF06  F00F         	goto	l2344
  2496   001DFA                     l2340:
  2497                           
  2498                           ;LCD.c: 121:   LCD_sendbyte(*string++,1);
  2499   001DFA  0E01               	movlw	1
  2500   001DFC  6E05               	movwf	LCD_sendbyte@type^0,c
  2501   001DFE  5009               	movf	LCD_sendstring@string^0,w,c
  2502   001E00  6ED9               	movwf	fsr2l,c
  2503   001E02  6ADA               	clrf	fsr2h,c
  2504   001E04  50DF               	movf	indf2,w,c
  2505   001E06  EC8C  F00E         	call	_LCD_sendbyte
  2506   001E0A  2A09               	incf	LCD_sendstring@string^0,f,c
  2507   001E0C                     l2344:
  2508                           
  2509                           ;LCD.c: 120:     while(*string != 0){
  2510   001E0C  5009               	movf	LCD_sendstring@string^0,w,c
  2511   001E0E  6ED9               	movwf	fsr2l,c
  2512   001E10  6ADA               	clrf	fsr2h,c
  2513   001E12  50DF               	movf	indf2,w,c
  2514   001E14  A4D8               	btfss	status,2,c
  2515   001E16  EF0F  F00F         	goto	u1551
  2516   001E1A  EF11  F00F         	goto	u1550
  2517   001E1E                     u1551:
  2518   001E1E  EFFD  F00E         	goto	l2340
  2519   001E22                     u1550:
  2520   001E22  0012               	return		;funcret
  2521   001E24                     __end_of_LCD_sendstring:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _initialise *****************
  2525 ;; Defined at:
  2526 ;;		line 92 in file "functions.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 5
  2547 ;; This function calls:
  2548 ;;		_Comp1_init_fe
  2549 ;;		_Comp1_init_re
  2550 ;;		_Interrupts_init
  2551 ;;		_LCD_init
  2552 ;;		_LEDarray_init
  2553 ;;		_Timer0_init
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text15
  2560   001F0E                     __ptext15:
  2561                           	callstack 0
  2562   001F0E                     _initialise:
  2563                           	callstack 25
  2564   001F0E                     
  2565                           ;functions.c: 94:     Interrupts_init();
  2566   001F0E  EC94  F00F         	call	_Interrupts_init	;wreg free
  2567   001F12                     
  2568                           ;functions.c: 95:     Comp1_init_re();
  2569   001F12  EC52  F00F         	call	_Comp1_init_re	;wreg free
  2570   001F16                     
  2571                           ;functions.c: 96:     Comp1_init_fe();
  2572   001F16  EC64  F00F         	call	_Comp1_init_fe	;wreg free
  2573   001F1A                     
  2574                           ;functions.c: 97:     Timer0_init();
  2575   001F1A  EC12  F00F         	call	_Timer0_init	;wreg free
  2576   001F1E                     
  2577                           ;functions.c: 98:     LEDarray_init();
  2578   001F1E  EC29  F00F         	call	_LEDarray_init	;wreg free
  2579   001F22                     
  2580                           ;functions.c: 99:     LCD_init();
  2581   001F22  ECB6  F00C         	call	_LCD_init	;wreg free
  2582   001F26  0012               	return		;funcret
  2583   001F28                     __end_of_initialise:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _Timer0_init *****************
  2587 ;; Defined at:
  2588 ;;		line 9 in file "timers.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_initialise
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text16
  2617   001E24                     __ptext16:
  2618                           	callstack 0
  2619   001E24                     _Timer0_init:
  2620                           	callstack 28
  2621   001E24                     
  2622                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
  2623   001E24  50D6               	movf	214,w,c	;volatile
  2624   001E26  0B1F               	andlw	-225
  2625   001E28  0940               	iorlw	64
  2626   001E2A  6ED6               	movwf	214,c	;volatile
  2627   001E2C                     
  2628                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
  2629   001E2C  88D6               	bsf	214,4,c	;volatile
  2630                           
  2631                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  2632   001E2E  50D6               	movf	214,w,c	;volatile
  2633   001E30  0BF0               	andlw	-16
  2634   001E32  0908               	iorlw	8
  2635   001E34  6ED6               	movwf	214,c	;volatile
  2636   001E36                     
  2637                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  2638   001E36  88D5               	bsf	213,4,c	;volatile
  2639   001E38                     
  2640                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  2641   001E38  010E               	movlb	14	; () banked
  2642   001E3A  8B29               	bsf	41,5,b	;volatile
  2643   001E3C                     
  2644                           ; BSR set to: 14
  2645                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  2646   001E3C  9B33               	bcf	51,5,b	;volatile
  2647   001E3E                     
  2648                           ; BSR set to: 14
  2649                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  2650   001E3E  9B1F               	bcf	31,5,b	;volatile
  2651   001E40                     
  2652                           ; BSR set to: 14
  2653                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  2654   001E40  8AF2               	bsf	242,5,c	;volatile
  2655   001E42                     
  2656                           ; BSR set to: 14
  2657                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  2658   001E42  8CF2               	bsf	242,6,c	;volatile
  2659   001E44                     
  2660                           ; BSR set to: 14
  2661                           ;timers.c: 21:     INTCONbits.GIE = 1;
  2662   001E44  8EF2               	bsf	242,7,c	;volatile
  2663                           
  2664                           ;timers.c: 24:     TMR0H=00001011;
  2665   001E46  0E09               	movlw	9
  2666   001E48  6ED4               	movwf	212,c	;volatile
  2667                           
  2668                           ;timers.c: 25:     TMR0L=110011011;
  2669   001E4A  0E83               	movlw	131
  2670   001E4C  6ED3               	movwf	211,c	;volatile
  2671   001E4E                     
  2672                           ; BSR set to: 14
  2673                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  2674   001E4E  8ED5               	bsf	213,7,c	;volatile
  2675   001E50                     
  2676                           ; BSR set to: 14
  2677   001E50  0012               	return		;funcret
  2678   001E52                     __end_of_Timer0_init:
  2679                           	callstack 0
  2680                           
  2681 ;; *************** function _LEDarray_init *****************
  2682 ;; Defined at:
  2683 ;;		line 8 in file "LEDarray.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_initialise
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text17
  2712   001E52                     __ptext17:
  2713                           	callstack 0
  2714   001E52                     _LEDarray_init:
  2715                           	callstack 28
  2716   001E52                     
  2717                           ;LEDarray.c: 10:     LATA = 0;
  2718   001E52  0E00               	movlw	0
  2719   001E54  6E79               	movwf	121,c	;volatile
  2720                           
  2721                           ;LEDarray.c: 11:     LATB = 0;
  2722   001E56  0E00               	movlw	0
  2723   001E58  6E7A               	movwf	122,c	;volatile
  2724   001E5A                     
  2725                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  2726   001E5A  907E               	bcf	126,0,c	;volatile
  2727   001E5C                     
  2728                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  2729   001E5C  9C7E               	bcf	126,6,c	;volatile
  2730                           
  2731                           ;LEDarray.c: 14:     LATG = 0;
  2732   001E5E  0E00               	movlw	0
  2733   001E60  6E7F               	movwf	127,c	;volatile
  2734   001E62                     
  2735                           ;LEDarray.c: 15:  LATHbits.LATH3 = 1;
  2736   001E62  8680               	bsf	128,3,c	;volatile
  2737                           
  2738                           ;LEDarray.c: 18:     TRISA = 0;
  2739   001E64  0E00               	movlw	0
  2740   001E66  6E81               	movwf	129,c	;volatile
  2741                           
  2742                           ;LEDarray.c: 19:  TRISB = 0;
  2743   001E68  0E00               	movlw	0
  2744   001E6A  6E82               	movwf	130,c	;volatile
  2745   001E6C                     
  2746                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2747   001E6C  9086               	bcf	134,0,c	;volatile
  2748   001E6E                     
  2749                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  2750   001E6E  9C86               	bcf	134,6,c	;volatile
  2751                           
  2752                           ;LEDarray.c: 22:     TRISG = 0;
  2753   001E70  0E00               	movlw	0
  2754   001E72  6E87               	movwf	135,c	;volatile
  2755   001E74                     
  2756                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  2757   001E74  9688               	bcf	136,3,c	;volatile
  2758   001E76                     
  2759                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  2760   001E76  8486               	bsf	134,2,c	;volatile
  2761   001E78                     
  2762                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  2763   001E78  010E               	movlb	14	; () banked
  2764   001E7A  95B4               	bcf	180,2,b	;volatile
  2765   001E7C                     
  2766                           ; BSR set to: 14
  2767   001E7C  0012               	return		;funcret
  2768   001E7E                     __end_of_LEDarray_init:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function _LCD_init *****************
  2772 ;; Defined at:
  2773 ;;		line 63 in file "LCD.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 4
  2794 ;; This function calls:
  2795 ;;		_LCD_sendbyte
  2796 ;;		_LCD_sendnibble
  2797 ;; This function is called by:
  2798 ;;		_initialise
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text18
  2803   00196C                     __ptext18:
  2804                           	callstack 0
  2805   00196C                     _LCD_init:
  2806                           	callstack 25
  2807   00196C                     
  2808                           ;LCD.c: 67:     TRISCbits.TRISC6=0;
  2809   00196C  9C83               	bcf	131,6,c	;volatile
  2810                           
  2811                           ;LCD.c: 68:     TRISCbits.TRISC2=0;
  2812   00196E  9483               	bcf	131,2,c	;volatile
  2813                           
  2814                           ;LCD.c: 69:     TRISBbits.TRISB3=0;
  2815   001970  9682               	bcf	130,3,c	;volatile
  2816                           
  2817                           ;LCD.c: 70:     TRISBbits.TRISB2=0;
  2818   001972  9482               	bcf	130,2,c	;volatile
  2819                           
  2820                           ;LCD.c: 71:     TRISEbits.TRISE3=0;
  2821   001974  9685               	bcf	133,3,c	;volatile
  2822                           
  2823                           ;LCD.c: 72:     TRISEbits.TRISE1=0;
  2824   001976  9285               	bcf	133,1,c	;volatile
  2825                           
  2826                           ;LCD.c: 75:     LATCbits.LATC6=0;
  2827   001978  9C7B               	bcf	123,6,c	;volatile
  2828                           
  2829                           ;LCD.c: 76:     LATCbits.LATC2=0;
  2830   00197A  947B               	bcf	123,2,c	;volatile
  2831                           
  2832                           ;LCD.c: 77:     LATBbits.LATB4 = 0;
  2833   00197C  987A               	bcf	122,4,c	;volatile
  2834                           
  2835                           ;LCD.c: 78:     LATBbits.LATB5 = 0;
  2836   00197E  9A7A               	bcf	122,5,c	;volatile
  2837                           
  2838                           ;LCD.c: 79:     LATBbits.LATB6 = 0;
  2839   001980  9C7A               	bcf	122,6,c	;volatile
  2840                           
  2841                           ;LCD.c: 80:     LATBbits.LATB7 = 0;
  2842   001982  9E7A               	bcf	122,7,c	;volatile
  2843   001984                     
  2844                           ;LCD.c: 85:     LCD_sendnibble(0b0011);
  2845   001984  0E03               	movlw	3
  2846   001986  ECE7  F00D         	call	_LCD_sendnibble
  2847   00198A                     
  2848                           ;LCD.c: 86:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  2849   00198A  0ED0               	movlw	208
  2850   00198C                     u1897:
  2851   00198C  2EE8               	decfsz	wreg,f,c
  2852   00198E  D7FE               	bra	u1897
  2853   001990                     
  2854                           ;LCD.c: 88:     LCD_sendbyte(0b00101000,0);
  2855   001990  0E00               	movlw	0
  2856   001992  6E05               	movwf	LCD_sendbyte@type^0,c
  2857   001994  0E28               	movlw	40
  2858   001996  EC8C  F00E         	call	_LCD_sendbyte
  2859   00199A                     
  2860                           ;LCD.c: 89:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  2861   00199A  0ED0               	movlw	208
  2862   00199C                     u1907:
  2863   00199C  2EE8               	decfsz	wreg,f,c
  2864   00199E  D7FE               	bra	u1907
  2865   0019A0                     
  2866                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  2867   0019A0  0E00               	movlw	0
  2868   0019A2  6E05               	movwf	LCD_sendbyte@type^0,c
  2869   0019A4  0E28               	movlw	40
  2870   0019A6  EC8C  F00E         	call	_LCD_sendbyte
  2871   0019AA                     
  2872                           ;LCD.c: 91:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  2873   0019AA  0EC5               	movlw	197
  2874   0019AC                     u1917:
  2875   0019AC  2EE8               	decfsz	wreg,f,c
  2876   0019AE  D7FE               	bra	u1917
  2877   0019B0  0000               	nop	
  2878   0019B2                     
  2879                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  2880   0019B2  0E00               	movlw	0
  2881   0019B4  6E05               	movwf	LCD_sendbyte@type^0,c
  2882   0019B6  0E0C               	movlw	12
  2883   0019B8  EC8C  F00E         	call	_LCD_sendbyte
  2884   0019BC                     
  2885                           ;LCD.c: 93:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  2886   0019BC  0EC5               	movlw	197
  2887   0019BE                     u1927:
  2888   0019BE  2EE8               	decfsz	wreg,f,c
  2889   0019C0  D7FE               	bra	u1927
  2890   0019C2  0000               	nop	
  2891   0019C4                     
  2892                           ;LCD.c: 94:     LCD_sendbyte(0b00000001,0);
  2893   0019C4  0E00               	movlw	0
  2894   0019C6  6E05               	movwf	LCD_sendbyte@type^0,c
  2895   0019C8  0E01               	movlw	1
  2896   0019CA  EC8C  F00E         	call	_LCD_sendbyte
  2897   0019CE                     
  2898                           ;LCD.c: 95:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  2899   0019CE  0E20               	movlw	32
  2900   0019D0  6E09               	movwf	??_LCD_init^0,c
  2901   0019D2  0ECA               	movlw	202
  2902   0019D4                     u1937:
  2903   0019D4  2EE8               	decfsz	wreg,f,c
  2904   0019D6  D7FE               	bra	u1937
  2905   0019D8  2E09               	decfsz	??_LCD_init^0,f,c
  2906   0019DA  D7FC               	bra	u1937
  2907   0019DC                     
  2908                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  2909   0019DC  0E00               	movlw	0
  2910   0019DE  6E05               	movwf	LCD_sendbyte@type^0,c
  2911   0019E0  0E06               	movlw	6
  2912   0019E2  EC8C  F00E         	call	_LCD_sendbyte
  2913   0019E6                     
  2914                           ;LCD.c: 100:     LCD_sendbyte(0b1111,0);
  2915   0019E6  0E00               	movlw	0
  2916   0019E8  6E05               	movwf	LCD_sendbyte@type^0,c
  2917   0019EA  0E0F               	movlw	15
  2918   0019EC  EC8C  F00E         	call	_LCD_sendbyte
  2919   0019F0  0012               	return		;funcret
  2920   0019F2                     __end_of_LCD_init:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _Interrupts_init *****************
  2924 ;; Defined at:
  2925 ;;		line 11 in file "interrupts.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		None
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_initialise
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text19
  2954   001F28                     __ptext19:
  2955                           	callstack 0
  2956   001F28                     _Interrupts_init:
  2957                           	callstack 28
  2958   001F28                     
  2959                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  2960   001F28  010E               	movlb	14	; () banked
  2961   001F2A  812B               	bsf	43,0,b	;volatile
  2962                           
  2963                           ;interrupts.c: 14:     IPR2bits.C1IP = 0;
  2964   001F2C  9121               	bcf	33,0,b	;volatile
  2965                           
  2966                           ;interrupts.c: 17:     PIE2bits.C2IE = 1;
  2967   001F2E  832B               	bsf	43,1,b	;volatile
  2968                           
  2969                           ;interrupts.c: 18:     IPR2bits.C2IP = 0;
  2970   001F30  9321               	bcf	33,1,b	;volatile
  2971                           
  2972                           ;interrupts.c: 21:     PIE2bits.C3IE = 1;
  2973   001F32  852B               	bsf	43,2,b	;volatile
  2974                           
  2975                           ;interrupts.c: 22:     IPR2bits.C3IP = 1;
  2976   001F34  8521               	bsf	33,2,b	;volatile
  2977                           
  2978                           ;interrupts.c: 26:     PIE0bits.TMR0IE = 1;
  2979   001F36  8B29               	bsf	41,5,b	;volatile
  2980                           
  2981                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  2982   001F38  9B1F               	bcf	31,5,b	;volatile
  2983                           
  2984                           ;interrupts.c: 30:     INTCONbits.IPEN = 1;
  2985   001F3A  8AF2               	bsf	242,5,c	;volatile
  2986                           
  2987                           ;interrupts.c: 33:     INTCONbits.PEIE = 1;
  2988   001F3C  8CF2               	bsf	242,6,c	;volatile
  2989                           
  2990                           ;interrupts.c: 36:     INTCONbits.GIE = 1;
  2991   001F3E  8EF2               	bsf	242,7,c	;volatile
  2992   001F40                     
  2993                           ; BSR set to: 14
  2994   001F40  0012               	return		;funcret
  2995   001F42                     __end_of_Interrupts_init:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _Comp1_init_re *****************
  2999 ;; Defined at:
  3000 ;;		line 23 in file "comparator.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 2
  3021 ;; This function calls:
  3022 ;;		_DAC_init
  3023 ;; This function is called by:
  3024 ;;		_initialise
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text20
  3029   001EA4                     __ptext20:
  3030                           	callstack 0
  3031   001EA4                     _Comp1_init_re:
  3032                           	callstack 27
  3033   001EA4                     
  3034                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  3035   001EA4  8E86               	bsf	134,7,c	;volatile
  3036   001EA6                     
  3037                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  3038   001EA6  010E               	movlb	14	; () banked
  3039   001EA8  51D2               	movf	210,w,b	;volatile
  3040   001EAA  0BF8               	andlw	-8
  3041   001EAC  0903               	iorlw	3
  3042   001EAE  6FD2               	movwf	210,b	;volatile
  3043                           
  3044                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  3045   001EB0  51D3               	movf	211,w,b	;volatile
  3046   001EB2  0BF8               	andlw	-8
  3047   001EB4  0905               	iorlw	5
  3048   001EB6  6FD3               	movwf	211,b	;volatile
  3049   001EB8                     
  3050                           ; BSR set to: 14
  3051                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  3052   001EB8  83D0               	bsf	208,1,b	;volatile
  3053   001EBA                     
  3054                           ; BSR set to: 14
  3055                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  3056   001EBA  89D0               	bsf	208,4,b	;volatile
  3057   001EBC                     
  3058                           ; BSR set to: 14
  3059                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  3060   001EBC  83D1               	bsf	209,1,b	;volatile
  3061   001EBE                     
  3062                           ; BSR set to: 14
  3063                           ;comparator.c: 31:     DAC_init();
  3064   001EBE  ECA1  F00F         	call	_DAC_init	;wreg free
  3065   001EC2                     
  3066                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  3067   001EC2  010E               	movlb	14	; () banked
  3068   001EC4  8FD0               	bsf	208,7,b	;volatile
  3069   001EC6                     
  3070                           ; BSR set to: 14
  3071   001EC6  0012               	return		;funcret
  3072   001EC8                     __end_of_Comp1_init_re:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _Comp1_init_fe *****************
  3076 ;; Defined at:
  3077 ;;		line 36 in file "comparator.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 2
  3098 ;; This function calls:
  3099 ;;		_DAC_init
  3100 ;; This function is called by:
  3101 ;;		_initialise
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text21
  3106   001EC8                     __ptext21:
  3107                           	callstack 0
  3108   001EC8                     _Comp1_init_fe:
  3109                           	callstack 27
  3110   001EC8                     
  3111                           ;comparator.c: 38:     TRISFbits.TRISF7=1;
  3112   001EC8  8E86               	bsf	134,7,c	;volatile
  3113   001ECA                     
  3114                           ;comparator.c: 39:     CM2NCHbits.NCH=0b011;
  3115   001ECA  010E               	movlb	14	; () banked
  3116   001ECC  51CE               	movf	206,w,b	;volatile
  3117   001ECE  0BF8               	andlw	-8
  3118   001ED0  0903               	iorlw	3
  3119   001ED2  6FCE               	movwf	206,b	;volatile
  3120                           
  3121                           ;comparator.c: 40:     CM2PCHbits.PCH=0b101;
  3122   001ED4  51CF               	movf	207,w,b	;volatile
  3123   001ED6  0BF8               	andlw	-8
  3124   001ED8  0905               	iorlw	5
  3125   001EDA  6FCF               	movwf	207,b	;volatile
  3126   001EDC                     
  3127                           ; BSR set to: 14
  3128                           ;comparator.c: 41:     CM2CON0bits.HYS=1;
  3129   001EDC  83CC               	bsf	204,1,b	;volatile
  3130   001EDE                     
  3131                           ; BSR set to: 14
  3132                           ;comparator.c: 42:     CM2CON0bits.POL=1;
  3133   001EDE  89CC               	bsf	204,4,b	;volatile
  3134   001EE0                     
  3135                           ; BSR set to: 14
  3136                           ;comparator.c: 43:     CM2CON1bits.INTN=1;
  3137   001EE0  81CD               	bsf	205,0,b	;volatile
  3138   001EE2                     
  3139                           ; BSR set to: 14
  3140                           ;comparator.c: 44:     DAC_init();
  3141   001EE2  ECA1  F00F         	call	_DAC_init	;wreg free
  3142   001EE6                     
  3143                           ;comparator.c: 45:     CM2CON0bits.EN=1;
  3144   001EE6  010E               	movlb	14	; () banked
  3145   001EE8  8FCC               	bsf	204,7,b	;volatile
  3146   001EEA                     
  3147                           ; BSR set to: 14
  3148   001EEA  0012               	return		;funcret
  3149   001EEC                     __end_of_Comp1_init_fe:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _DAC_init *****************
  3153 ;; Defined at:
  3154 ;;		line 6 in file "comparator.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_Comp1_init_re
  3179 ;;		_Comp1_init_fe
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text22
  3184   001F42                     __ptext22:
  3185                           	callstack 0
  3186   001F42                     _DAC_init:
  3187                           	callstack 27
  3188   001F42                     
  3189                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  3190   001F42  0EF3               	movlw	-13
  3191   001F44  010E               	movlb	14	; () banked
  3192   001F46  17C6               	andwf	198,f,b	;volatile
  3193   001F48                     
  3194                           ; BSR set to: 14
  3195                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  3196   001F48  91C6               	bcf	198,0,b	;volatile
  3197                           
  3198                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  3199   001F4A  51C7               	movf	199,w,b	;volatile
  3200   001F4C  0BE0               	andlw	-32
  3201   001F4E  0914               	iorlw	20
  3202   001F50  6FC7               	movwf	199,b	;volatile
  3203   001F52                     
  3204                           ; BSR set to: 14
  3205                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  3206   001F52  8FC6               	bsf	198,7,b	;volatile
  3207   001F54                     
  3208                           ; BSR set to: 14
  3209   001F54  0012               	return		;funcret
  3210   001F56                     __end_of_DAC_init:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _increaseHour *****************
  3214 ;; Defined at:
  3215 ;;		line 51 in file "functions.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  day             2    3[COMRAM] unsigned int 
  3218 ;;  fwd_daylight    2    5[COMRAM] unsigned int 
  3219 ;;  bkwd_dayligh    2    7[COMRAM] unsigned int 
  3220 ;;  hour            1    9[COMRAM] PTR unsigned int 
  3221 ;;		 -> hour(2), 
  3222 ;;  backward_zon    1   10[COMRAM] PTR unsigned int 
  3223 ;;		 -> main@backward_zone(2), 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3235 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;Total ram usage:       10 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 1
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text23
  3250   00178A                     __ptext23:
  3251                           	callstack 0
  3252   00178A                     _increaseHour:
  3253                           	callstack 29
  3254   00178A                     
  3255                           ;functions.c: 53:     if (day == fwd_daylight_savings_day && *hour == 2) {
  3256   00178A  5006               	movf	increaseHour@fwd_daylight_savings_day^0,w,c
  3257   00178C  1804               	xorwf	increaseHour@day^0,w,c
  3258   00178E  E107               	bnz	u1701
  3259   001790  5007               	movf	(increaseHour@fwd_daylight_savings_day+1)^0,w,c
  3260   001792  1805               	xorwf	(increaseHour@day+1)^0,w,c
  3261   001794  A4D8               	btfss	status,2,c
  3262   001796  EFCF  F00B         	goto	u1701
  3263   00179A  EFD1  F00B         	goto	u1700
  3264   00179E                     u1701:
  3265   00179E  EFE9  F00B         	goto	l2422
  3266   0017A2                     u1700:
  3267   0017A2  500A               	movf	increaseHour@hour^0,w,c
  3268   0017A4  6ED9               	movwf	fsr2l,c
  3269   0017A6  6ADA               	clrf	fsr2h,c
  3270   0017A8  0E02               	movlw	2
  3271   0017AA  18DE               	xorwf	postinc2,w,c
  3272   0017AC  10DE               	iorwf	postinc2,w,c
  3273   0017AE  A4D8               	btfss	status,2,c
  3274   0017B0  EFDC  F00B         	goto	u1711
  3275   0017B4  EFDE  F00B         	goto	u1710
  3276   0017B8                     u1711:
  3277   0017B8  EFE9  F00B         	goto	l2422
  3278   0017BC                     u1710:
  3279   0017BC                     
  3280                           ;functions.c: 54:         (*hour)++;
  3281   0017BC  500A               	movf	increaseHour@hour^0,w,c
  3282   0017BE  6ED9               	movwf	fsr2l,c
  3283   0017C0  6ADA               	clrf	fsr2h,c
  3284   0017C2  2ADE               	incf	postinc2,f,c
  3285   0017C4  0E00               	movlw	0
  3286   0017C6  22DD               	addwfc	postdec2,f,c
  3287   0017C8                     
  3288                           ;functions.c: 55:         *backward_zone = 0;
  3289   0017C8  500B               	movf	increaseHour@backward_zone^0,w,c
  3290   0017CA  6ED9               	movwf	fsr2l,c
  3291   0017CC  6ADA               	clrf	fsr2h,c
  3292   0017CE  6ADE               	clrf	postinc2,c
  3293   0017D0  6ADD               	clrf	postdec2,c
  3294   0017D2                     l2422:
  3295                           
  3296                           ;functions.c: 58:     if (day == bkwd_daylight_savings_day && *hour == 2 && *backward_zo
      +                          ne == 0) {
  3297   0017D2  5008               	movf	increaseHour@bkwd_daylight_savings_day^0,w,c
  3298   0017D4  1804               	xorwf	increaseHour@day^0,w,c
  3299   0017D6  E107               	bnz	u1721
  3300   0017D8  5009               	movf	(increaseHour@bkwd_daylight_savings_day+1)^0,w,c
  3301   0017DA  1805               	xorwf	(increaseHour@day+1)^0,w,c
  3302   0017DC  A4D8               	btfss	status,2,c
  3303   0017DE  EFF3  F00B         	goto	u1721
  3304   0017E2  EFF5  F00B         	goto	u1720
  3305   0017E6                     u1721:
  3306   0017E6  EF1B  F00C         	goto	l233
  3307   0017EA                     u1720:
  3308   0017EA  500A               	movf	increaseHour@hour^0,w,c
  3309   0017EC  6ED9               	movwf	fsr2l,c
  3310   0017EE  6ADA               	clrf	fsr2h,c
  3311   0017F0  0E02               	movlw	2
  3312   0017F2  18DE               	xorwf	postinc2,w,c
  3313   0017F4  10DE               	iorwf	postinc2,w,c
  3314   0017F6  A4D8               	btfss	status,2,c
  3315   0017F8  EF00  F00C         	goto	u1731
  3316   0017FC  EF02  F00C         	goto	u1730
  3317   001800                     u1731:
  3318   001800  EF1B  F00C         	goto	l233
  3319   001804                     u1730:
  3320   001804  500B               	movf	increaseHour@backward_zone^0,w,c
  3321   001806  6ED9               	movwf	fsr2l,c
  3322   001808  6ADA               	clrf	fsr2h,c
  3323   00180A  50DE               	movf	postinc2,w,c
  3324   00180C  10DE               	iorwf	postinc2,w,c
  3325   00180E  A4D8               	btfss	status,2,c
  3326   001810  EF0C  F00C         	goto	u1741
  3327   001814  EF0E  F00C         	goto	u1740
  3328   001818                     u1741:
  3329   001818  EF1B  F00C         	goto	l233
  3330   00181C                     u1740:
  3331   00181C                     
  3332                           ;functions.c: 59:         (*hour)--;
  3333   00181C  500A               	movf	increaseHour@hour^0,w,c
  3334   00181E  6ED9               	movwf	fsr2l,c
  3335   001820  6ADA               	clrf	fsr2h,c
  3336   001822  06DE               	decf	postinc2,f,c
  3337   001824  0E00               	movlw	0
  3338   001826  5ADD               	subwfb	postdec2,f,c
  3339   001828                     
  3340                           ;functions.c: 60:         *backward_zone = 1;
  3341   001828  500B               	movf	increaseHour@backward_zone^0,w,c
  3342   00182A  6ED9               	movwf	fsr2l,c
  3343   00182C  6ADA               	clrf	fsr2h,c
  3344   00182E  0E01               	movlw	1
  3345   001830  6EDE               	movwf	postinc2,c
  3346   001832  0E00               	movlw	0
  3347   001834  6EDD               	movwf	postdec2,c
  3348   001836                     l233:
  3349   001836  0012               	return		;funcret
  3350   001838                     __end_of_increaseHour:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _findDSTdates *****************
  3354 ;; Defined at:
  3355 ;;		line 64 in file "functions.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  hour            2   64[COMRAM] unsigned int 
  3358 ;;  day             2   66[COMRAM] unsigned int 
  3359 ;;  year            2   68[COMRAM] unsigned int 
  3360 ;;  fwd_daylight    1   70[COMRAM] PTR unsigned int 
  3361 ;;		 -> main@fwd_daylight_savings_day(2), 
  3362 ;;  bkwd_dayligh    1   71[COMRAM] PTR unsigned int 
  3363 ;;		 -> main@bkwd_daylight_savings_day(2), 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3375 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;Total ram usage:        8 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 4
  3382 ;; This function calls:
  3383 ;;		_lastSunday
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text24
  3390   001B64                     __ptext24:
  3391                           	callstack 0
  3392   001B64                     _findDSTdates:
  3393                           	callstack 26
  3394   001B64                     
  3395                           ;functions.c: 66:     if (day==1 && hour == 0){
  3396   001B64  0443               	decf	findDSTdates@day^0,w,c
  3397   001B66  1044               	iorwf	(findDSTdates@day+1)^0,w,c
  3398   001B68  A4D8               	btfss	status,2,c
  3399   001B6A  EFB9  F00D         	goto	u1681
  3400   001B6E  EFBB  F00D         	goto	u1680
  3401   001B72                     u1681:
  3402   001B72  EFE6  F00D         	goto	l237
  3403   001B76                     u1680:
  3404   001B76  5041               	movf	findDSTdates@hour^0,w,c
  3405   001B78  1042               	iorwf	(findDSTdates@hour+1)^0,w,c
  3406   001B7A  A4D8               	btfss	status,2,c
  3407   001B7C  EFC2  F00D         	goto	u1691
  3408   001B80  EFC4  F00D         	goto	u1690
  3409   001B84                     u1691:
  3410   001B84  EFE6  F00D         	goto	l237
  3411   001B88                     u1690:
  3412   001B88                     
  3413                           ;functions.c: 67:         *fwd_daylight_savings_day = lastSunday(year, 3);
  3414   001B88  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3415   001B8C  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3416   001B90  0E00               	movlw	0
  3417   001B92  6E1E               	movwf	(lastSunday@month+1)^0,c
  3418   001B94  0E03               	movlw	3
  3419   001B96  6E1D               	movwf	lastSunday@month^0,c
  3420   001B98  EC16  F007         	call	_lastSunday	;wreg free
  3421   001B9C  5047               	movf	findDSTdates@fwd_daylight_savings_day^0,w,c
  3422   001B9E  6ED9               	movwf	fsr2l,c
  3423   001BA0  6ADA               	clrf	fsr2h,c
  3424   001BA2  C01B  FFDE         	movff	?_lastSunday,postinc2
  3425   001BA6  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3426                           
  3427                           ;functions.c: 68:         *bkwd_daylight_savings_day = lastSunday(year, 10);
  3428   001BAA  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3429   001BAE  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3430   001BB2  0E00               	movlw	0
  3431   001BB4  6E1E               	movwf	(lastSunday@month+1)^0,c
  3432   001BB6  0E0A               	movlw	10
  3433   001BB8  6E1D               	movwf	lastSunday@month^0,c
  3434   001BBA  EC16  F007         	call	_lastSunday	;wreg free
  3435   001BBE  5048               	movf	findDSTdates@bkwd_daylight_savings_day^0,w,c
  3436   001BC0  6ED9               	movwf	fsr2l,c
  3437   001BC2  6ADA               	clrf	fsr2h,c
  3438   001BC4  C01B  FFDE         	movff	?_lastSunday,postinc2
  3439   001BC8  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3440   001BCC                     l237:
  3441   001BCC  0012               	return		;funcret
  3442   001BCE                     __end_of_findDSTdates:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function _lastSunday *****************
  3446 ;; Defined at:
  3447 ;;		line 18 in file "functions.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  year            2   26[COMRAM] unsigned int 
  3450 ;;  month           2   28[COMRAM] unsigned int 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  dayOfYearFor    2   52[COMRAM] unsigned int 
  3453 ;;  daysBeforeOc    2   50[COMRAM] unsigned int 
  3454 ;;  dayOfYearFor    2   48[COMRAM] unsigned int 
  3455 ;;  daysBeforeMa    2   46[COMRAM] unsigned int 
  3456 ;;  lastSundayDa    2   62[COMRAM] unsigned int 
  3457 ;;  leapYear        2   60[COMRAM] unsigned int 
  3458 ;;  dayOfWeekMon    2   44[COMRAM] unsigned int 
  3459 ;;  dayOfWeekMon    2   42[COMRAM] unsigned int 
  3460 ;;  h               2   40[COMRAM] unsigned int 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  2   26[COMRAM] unsigned int 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3472 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3474 ;;Total ram usage:       38 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 3
  3477 ;; This function calls:
  3478 ;;		___lwdiv
  3479 ;;		___lwmod
  3480 ;;		___wmul
  3481 ;;		_isLeapYear
  3482 ;; This function is called by:
  3483 ;;		_findDSTdates
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text25
  3488   000E2C                     __ptext25:
  3489                           	callstack 0
  3490   000E2C                     _lastSunday:
  3491                           	callstack 26
  3492   000E2C                     
  3493                           ;functions.c: 19:     unsigned int leapYear = isLeapYear(year);
  3494   000E2C  C01B  F016         	movff	lastSunday@year,isLeapYear@year
  3495   000E30  C01C  F017         	movff	lastSunday@year+1,isLeapYear@year+1
  3496   000E34  EC3B  F00D         	call	_isLeapYear	;wreg free
  3497   000E38  C016  F03D         	movff	?_isLeapYear,lastSunday@leapYear
  3498   000E3C  C017  F03E         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  3499   000E40                     
  3500                           ;functions.c: 23:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3501   000E40  0E00               	movlw	0
  3502   000E42  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3503   000E44  0E05               	movlw	5
  3504   000E46  6E0C               	movwf	___lwdiv@divisor^0,c
  3505   000E48  0E01               	movlw	1
  3506   000E4A  241D               	addwf	lastSunday@month^0,w,c
  3507   000E4C  6E04               	movwf	___wmul@multiplier^0,c
  3508   000E4E  0E00               	movlw	0
  3509   000E50  201E               	addwfc	(lastSunday@month+1)^0,w,c
  3510   000E52  6E05               	movwf	(___wmul@multiplier+1)^0,c
  3511   000E54  0E00               	movlw	0
  3512   000E56  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  3513   000E58  0E0D               	movlw	13
  3514   000E5A  6E06               	movwf	___wmul@multiplicand^0,c
  3515   000E5C  EC3F  F00F         	call	___wmul	;wreg free
  3516   000E60  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  3517   000E64  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  3518   000E68  EC78  F00D         	call	___lwdiv	;wreg free
  3519   000E6C  C00A  F01F         	movff	?___lwdiv,??_lastSunday
  3520   000E70  C00B  F020         	movff	?___lwdiv+1,??_lastSunday+1
  3521   000E74  0E00               	movlw	0
  3522   000E76  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3523   000E78  0E64               	movlw	100
  3524   000E7A  6E13               	movwf	___lwmod@divisor^0,c
  3525   000E7C  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  3526   000E80  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  3527   000E84  EC1B  F00E         	call	___lwmod	;wreg free
  3528   000E88  5011               	movf	?___lwmod^0,w,c
  3529   000E8A  241F               	addwf	??_lastSunday^0,w,c
  3530   000E8C  6E21               	movwf	(??_lastSunday+2)^0,c
  3531   000E8E  5012               	movf	(?___lwmod+1)^0,w,c
  3532   000E90  2020               	addwfc	(??_lastSunday+1)^0,w,c
  3533   000E92  6E22               	movwf	(??_lastSunday+3)^0,c
  3534   000E94  0E00               	movlw	0
  3535   000E96  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3536   000E98  0E64               	movlw	100
  3537   000E9A  6E13               	movwf	___lwmod@divisor^0,c
  3538   000E9C  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  3539   000EA0  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  3540   000EA4  EC1B  F00E         	call	___lwmod	;wreg free
  3541   000EA8  90D8               	bcf	status,0,c
  3542   000EAA  3212               	rrcf	(?___lwmod+1)^0,f,c
  3543   000EAC  3211               	rrcf	?___lwmod^0,f,c
  3544   000EAE  90D8               	bcf	status,0,c
  3545   000EB0  3212               	rrcf	(?___lwmod+1)^0,f,c
  3546   000EB2  3211               	rrcf	?___lwmod^0,f,c
  3547   000EB4  5011               	movf	?___lwmod^0,w,c
  3548   000EB6  2421               	addwf	(??_lastSunday+2)^0,w,c
  3549   000EB8  6E23               	movwf	(??_lastSunday+4)^0,c
  3550   000EBA  5012               	movf	(?___lwmod+1)^0,w,c
  3551   000EBC  2022               	addwfc	(??_lastSunday+3)^0,w,c
  3552   000EBE  6E24               	movwf	(??_lastSunday+5)^0,c
  3553   000EC0  0E00               	movlw	0
  3554   000EC2  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3555   000EC4  0E64               	movlw	100
  3556   000EC6  6E0C               	movwf	___lwdiv@divisor^0,c
  3557   000EC8  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  3558   000ECC  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  3559   000ED0  EC78  F00D         	call	___lwdiv	;wreg free
  3560   000ED4  90D8               	bcf	status,0,c
  3561   000ED6  320B               	rrcf	(?___lwdiv+1)^0,f,c
  3562   000ED8  320A               	rrcf	?___lwdiv^0,f,c
  3563   000EDA  90D8               	bcf	status,0,c
  3564   000EDC  320B               	rrcf	(?___lwdiv+1)^0,f,c
  3565   000EDE  320A               	rrcf	?___lwdiv^0,f,c
  3566   000EE0  500A               	movf	?___lwdiv^0,w,c
  3567   000EE2  2423               	addwf	(??_lastSunday+4)^0,w,c
  3568   000EE4  6E25               	movwf	(??_lastSunday+6)^0,c
  3569   000EE6  500B               	movf	(?___lwdiv+1)^0,w,c
  3570   000EE8  2024               	addwfc	(??_lastSunday+5)^0,w,c
  3571   000EEA  6E26               	movwf	(??_lastSunday+7)^0,c
  3572   000EEC  0E00               	movlw	0
  3573   000EEE  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  3574   000EF0  0E64               	movlw	100
  3575   000EF2  6E0C               	movwf	___lwdiv@divisor^0,c
  3576   000EF4  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  3577   000EF8  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  3578   000EFC  EC78  F00D         	call	___lwdiv	;wreg free
  3579   000F00  90D8               	bcf	status,0,c
  3580   000F02  360A               	rlcf	?___lwdiv^0,f,c
  3581   000F04  360B               	rlcf	(?___lwdiv+1)^0,f,c
  3582   000F06  500A               	movf	?___lwdiv^0,w,c
  3583   000F08  5C25               	subwf	(??_lastSunday+6)^0,w,c
  3584   000F0A  6E27               	movwf	(??_lastSunday+8)^0,c
  3585   000F0C  500B               	movf	(?___lwdiv+1)^0,w,c
  3586   000F0E  5826               	subwfb	(??_lastSunday+7)^0,w,c
  3587   000F10  6E28               	movwf	(??_lastSunday+9)^0,c
  3588   000F12  0E01               	movlw	1
  3589   000F14  2427               	addwf	(??_lastSunday+8)^0,w,c
  3590   000F16  6E37               	movwf	_lastSunday$2256^0,c
  3591   000F18  0E00               	movlw	0
  3592   000F1A  2028               	addwfc	(??_lastSunday+9)^0,w,c
  3593   000F1C  6E38               	movwf	(_lastSunday$2256+1)^0,c
  3594   000F1E                     
  3595                           ;functions.c: 23:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3596   000F1E  C037  F011         	movff	_lastSunday$2256,___lwmod@dividend
  3597   000F22  C038  F012         	movff	_lastSunday$2256+1,___lwmod@dividend+1
  3598   000F26  0E00               	movlw	0
  3599   000F28  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3600   000F2A  0E07               	movlw	7
  3601   000F2C  6E13               	movwf	___lwmod@divisor^0,c
  3602   000F2E  EC1B  F00E         	call	___lwmod	;wreg free
  3603   000F32  C011  F029         	movff	?___lwmod,lastSunday@h
  3604   000F36  C012  F02A         	movff	?___lwmod+1,lastSunday@h+1
  3605   000F3A                     
  3606                           ;functions.c: 24:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  3607   000F3A  0E06               	movlw	6
  3608   000F3C  2429               	addwf	lastSunday@h^0,w,c
  3609   000F3E  6E11               	movwf	___lwmod@dividend^0,c
  3610   000F40  0E00               	movlw	0
  3611   000F42  202A               	addwfc	(lastSunday@h+1)^0,w,c
  3612   000F44  6E12               	movwf	(___lwmod@dividend+1)^0,c
  3613   000F46  0E00               	movlw	0
  3614   000F48  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3615   000F4A  0E07               	movlw	7
  3616   000F4C  6E13               	movwf	___lwmod@divisor^0,c
  3617   000F4E  EC1B  F00E         	call	___lwmod	;wreg free
  3618   000F52  C011  F02B         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  3619   000F56  C012  F02C         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  3620   000F5A                     
  3621                           ;functions.c: 27:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  3622   000F5A  0E1E               	movlw	30
  3623   000F5C  242B               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  3624   000F5E  6E11               	movwf	___lwmod@dividend^0,c
  3625   000F60  0E00               	movlw	0
  3626   000F62  202C               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  3627   000F64  6E12               	movwf	(___lwmod@dividend+1)^0,c
  3628   000F66  0E00               	movlw	0
  3629   000F68  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3630   000F6A  0E07               	movlw	7
  3631   000F6C  6E13               	movwf	___lwmod@divisor^0,c
  3632   000F6E  EC1B  F00E         	call	___lwmod	;wreg free
  3633   000F72  C011  F02D         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  3634   000F76  C012  F02E         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  3635   000F7A                     
  3636                           ;functions.c: 30:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  3637   000F7A  502D               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  3638   000F7C  081F               	sublw	31
  3639   000F7E  6E3F               	movwf	lastSunday@lastSundayDateMonth^0,c
  3640   000F80  502E               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  3641   000F82  A0D8               	btfss	status,0,c
  3642   000F84  2AE8               	incf	wreg,f,c
  3643   000F86  0800               	sublw	0
  3644   000F88  6E40               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  3645   000F8A                     
  3646                           ;functions.c: 33:     if (month == 3){
  3647   000F8A  0E03               	movlw	3
  3648   000F8C  181D               	xorwf	lastSunday@month^0,w,c
  3649   000F8E  101E               	iorwf	(lastSunday@month+1)^0,w,c
  3650   000F90  A4D8               	btfss	status,2,c
  3651   000F92  EFCD  F007         	goto	u1511
  3652   000F96  EFCF  F007         	goto	u1510
  3653   000F9A                     u1511:
  3654   000F9A  EFF4  F007         	goto	l2296
  3655   000F9E                     u1510:
  3656   000F9E                     
  3657                           ;functions.c: 34:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  3658   000F9E  503D               	movf	lastSunday@leapYear^0,w,c
  3659   000FA0  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  3660   000FA2  A4D8               	btfss	status,2,c
  3661   000FA4  EFD6  F007         	goto	u1521
  3662   000FA8  EFD8  F007         	goto	u1520
  3663   000FAC                     u1521:
  3664   000FAC  EFDE  F007         	goto	l2286
  3665   000FB0                     u1520:
  3666   000FB0  0E00               	movlw	0
  3667   000FB2  6E3A               	movwf	(_lastSunday$1173+1)^0,c
  3668   000FB4  0E1C               	movlw	28
  3669   000FB6  6E39               	movwf	_lastSunday$1173^0,c
  3670   000FB8  EFE2  F007         	goto	l2288
  3671   000FBC                     l2286:
  3672   000FBC  0E00               	movlw	0
  3673   000FBE  6E3A               	movwf	(_lastSunday$1173+1)^0,c
  3674   000FC0  0E1D               	movlw	29
  3675   000FC2  6E39               	movwf	_lastSunday$1173^0,c
  3676   000FC4                     l2288:
  3677   000FC4  0E1F               	movlw	31
  3678   000FC6  2439               	addwf	_lastSunday$1173^0,w,c
  3679   000FC8  6E2F               	movwf	lastSunday@daysBeforeMarch^0,c
  3680   000FCA  0E00               	movlw	0
  3681   000FCC  203A               	addwfc	(_lastSunday$1173+1)^0,w,c
  3682   000FCE  6E30               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  3683   000FD0                     
  3684                           ;functions.c: 35:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  3685   000FD0  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  3686   000FD2  242F               	addwf	lastSunday@daysBeforeMarch^0,w,c
  3687   000FD4  6E31               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  3688   000FD6  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  3689   000FD8  2030               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  3690   000FDA  6E32               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  3691   000FDC                     
  3692                           ;functions.c: 36:     return dayOfYearForDSTStart;
  3693   000FDC  C031  F01B         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  3694   000FE0  C032  F01C         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  3695   000FE4  EF21  F008         	goto	l223
  3696   000FE8                     l2296:
  3697                           
  3698                           ;functions.c: 41:     if (month == 10){
  3699   000FE8  0E0A               	movlw	10
  3700   000FEA  181D               	xorwf	lastSunday@month^0,w,c
  3701   000FEC  101E               	iorwf	(lastSunday@month+1)^0,w,c
  3702   000FEE  A4D8               	btfss	status,2,c
  3703   000FF0  EFFC  F007         	goto	u1531
  3704   000FF4  EFFE  F007         	goto	u1530
  3705   000FF8                     u1531:
  3706   000FF8  EF21  F008         	goto	l223
  3707   000FFC                     u1530:
  3708   000FFC                     
  3709                           ;functions.c: 42:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  3710   000FFC  503D               	movf	lastSunday@leapYear^0,w,c
  3711   000FFE  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  3712   001000  A4D8               	btfss	status,2,c
  3713   001002  EF05  F008         	goto	u1541
  3714   001006  EF07  F008         	goto	u1540
  3715   00100A                     u1541:
  3716   00100A  EF0D  F008         	goto	l2302
  3717   00100E                     u1540:
  3718   00100E  0E00               	movlw	0
  3719   001010  6E3C               	movwf	(_lastSunday$1176+1)^0,c
  3720   001012  0E1C               	movlw	28
  3721   001014  6E3B               	movwf	_lastSunday$1176^0,c
  3722   001016  EF11  F008         	goto	l2304
  3723   00101A                     l2302:
  3724   00101A  0E00               	movlw	0
  3725   00101C  6E3C               	movwf	(_lastSunday$1176+1)^0,c
  3726   00101E  0E1D               	movlw	29
  3727   001020  6E3B               	movwf	_lastSunday$1176^0,c
  3728   001022                     l2304:
  3729   001022  0EF5               	movlw	245
  3730   001024  243B               	addwf	_lastSunday$1176^0,w,c
  3731   001026  6E33               	movwf	lastSunday@daysBeforeOctober^0,c
  3732   001028  0E00               	movlw	0
  3733   00102A  203C               	addwfc	(_lastSunday$1176+1)^0,w,c
  3734   00102C  6E34               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  3735   00102E                     
  3736                           ;functions.c: 44:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  3737   00102E  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  3738   001030  2433               	addwf	lastSunday@daysBeforeOctober^0,w,c
  3739   001032  6E35               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  3740   001034  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  3741   001036  2034               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  3742   001038  6E36               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  3743   00103A                     
  3744                           ;functions.c: 46:     return dayOfYearForDSTEnd;
  3745   00103A  C035  F01B         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  3746   00103E  C036  F01C         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  3747   001042                     l223:
  3748   001042  0012               	return		;funcret
  3749   001044                     __end_of_lastSunday:
  3750                           	callstack 0
  3751                           
  3752 ;; *************** function ___wmul *****************
  3753 ;; Defined at:
  3754 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  multiplier      2    3[COMRAM] unsigned int 
  3757 ;;  multiplicand    2    5[COMRAM] unsigned int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  product         2    7[COMRAM] unsigned int 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2    3[COMRAM] unsigned int 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, prodl, prodh
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;Total ram usage:        6 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_lastSunday
  3780 ;;		_read_prec_or_width
  3781 ;;		_LED_Light_Meter
  3782 ;;		_ADC2String
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text26
  3787   001E7E                     __ptext26:
  3788                           	callstack 0
  3789   001E7E                     ___wmul:
  3790                           	callstack 24
  3791   001E7E  5004               	movf	___wmul@multiplier^0,w,c
  3792   001E80  0206               	mulwf	___wmul@multiplicand^0,c
  3793   001E82  CFF3 F008          	movff	prodl,___wmul@product
  3794   001E86  CFF4 F009          	movff	prodh,___wmul@product+1
  3795   001E8A  5004               	movf	___wmul@multiplier^0,w,c
  3796   001E8C  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  3797   001E8E  50F3               	movf	243,w,c
  3798   001E90  2609               	addwf	(___wmul@product+1)^0,f,c
  3799   001E92  5005               	movf	(___wmul@multiplier+1)^0,w,c
  3800   001E94  0206               	mulwf	___wmul@multiplicand^0,c
  3801   001E96  50F3               	movf	243,w,c
  3802   001E98  2609               	addwf	(___wmul@product+1)^0,f,c
  3803   001E9A  C008  F004         	movff	___wmul@product,?___wmul
  3804   001E9E  C009  F005         	movff	___wmul@product+1,?___wmul+1
  3805   001EA2  0012               	return		;funcret
  3806   001EA4                     __end_of___wmul:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function ___lwdiv *****************
  3810 ;; Defined at:
  3811 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  dividend        2    9[COMRAM] unsigned int 
  3814 ;;  divisor         2   11[COMRAM] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  quotient        2   13[COMRAM] unsigned int 
  3817 ;;  counter         1   15[COMRAM] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2    9[COMRAM] unsigned int 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:        7 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_lastSunday
  3838 ;;		_LED_Light_Meter
  3839 ;;		_ADC2String
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text27
  3844   001AF0                     __ptext27:
  3845                           	callstack 0
  3846   001AF0                     ___lwdiv:
  3847                           	callstack 27
  3848   001AF0  0E00               	movlw	0
  3849   001AF2  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  3850   001AF4  0E00               	movlw	0
  3851   001AF6  6E0E               	movwf	___lwdiv@quotient^0,c
  3852   001AF8  500C               	movf	___lwdiv@divisor^0,w,c
  3853   001AFA  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3854   001AFC  B4D8               	btfsc	status,2,c
  3855   001AFE  EF83  F00D         	goto	u1471
  3856   001B02  EF85  F00D         	goto	u1470
  3857   001B06                     u1471:
  3858   001B06  EFAD  F00D         	goto	l801
  3859   001B0A                     u1470:
  3860   001B0A  0E01               	movlw	1
  3861   001B0C  6E10               	movwf	___lwdiv@counter^0,c
  3862   001B0E  EF8D  F00D         	goto	l2176
  3863   001B12                     l2174:
  3864   001B12  90D8               	bcf	status,0,c
  3865   001B14  360C               	rlcf	___lwdiv@divisor^0,f,c
  3866   001B16  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3867   001B18  2A10               	incf	___lwdiv@counter^0,f,c
  3868   001B1A                     l2176:
  3869   001B1A  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  3870   001B1C  EF92  F00D         	goto	u1481
  3871   001B20  EF94  F00D         	goto	u1480
  3872   001B24                     u1481:
  3873   001B24  EF89  F00D         	goto	l2174
  3874   001B28                     u1480:
  3875   001B28                     l2178:
  3876   001B28  90D8               	bcf	status,0,c
  3877   001B2A  360E               	rlcf	___lwdiv@quotient^0,f,c
  3878   001B2C  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3879   001B2E  500C               	movf	___lwdiv@divisor^0,w,c
  3880   001B30  5C0A               	subwf	___lwdiv@dividend^0,w,c
  3881   001B32  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3882   001B34  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3883   001B36  A0D8               	btfss	status,0,c
  3884   001B38  EFA0  F00D         	goto	u1491
  3885   001B3C  EFA2  F00D         	goto	u1490
  3886   001B40                     u1491:
  3887   001B40  EFA7  F00D         	goto	l2186
  3888   001B44                     u1490:
  3889   001B44  500C               	movf	___lwdiv@divisor^0,w,c
  3890   001B46  5E0A               	subwf	___lwdiv@dividend^0,f,c
  3891   001B48  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  3892   001B4A  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3893   001B4C  800E               	bsf	___lwdiv@quotient^0,0,c
  3894   001B4E                     l2186:
  3895   001B4E  90D8               	bcf	status,0,c
  3896   001B50  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3897   001B52  320C               	rrcf	___lwdiv@divisor^0,f,c
  3898   001B54  2E10               	decfsz	___lwdiv@counter^0,f,c
  3899   001B56  EF94  F00D         	goto	l2178
  3900   001B5A                     l801:
  3901   001B5A  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  3902   001B5E  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3903   001B62  0012               	return		;funcret
  3904   001B64                     __end_of___lwdiv:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _changeHourDayYear *****************
  3908 ;; Defined at:
  3909 ;;		line 73 in file "functions.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  hour            1   26[COMRAM] PTR unsigned int 
  3912 ;;		 -> hour(2), 
  3913 ;;  day             1   27[COMRAM] PTR unsigned int 
  3914 ;;		 -> main@day(2), 
  3915 ;;  year            1   28[COMRAM] PTR unsigned int 
  3916 ;;		 -> main@year(2), 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  leap            2   31[COMRAM] unsigned int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3928 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;Total ram usage:        7 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 3
  3935 ;; This function calls:
  3936 ;;		_isLeapYear
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text28
  3943   0014BA                     __ptext28:
  3944                           	callstack 0
  3945   0014BA                     _changeHourDayYear:
  3946                           	callstack 27
  3947   0014BA                     
  3948                           ;functions.c: 74:         if (*hour == 24) {
  3949   0014BA  501B               	movf	changeHourDayYear@hour^0,w,c
  3950   0014BC  6ED9               	movwf	fsr2l,c
  3951   0014BE  6ADA               	clrf	fsr2h,c
  3952   0014C0  0E18               	movlw	24
  3953   0014C2  18DE               	xorwf	postinc2,w,c
  3954   0014C4  10DE               	iorwf	postinc2,w,c
  3955   0014C6  A4D8               	btfss	status,2,c
  3956   0014C8  EF68  F00A         	goto	u1751
  3957   0014CC  EF6A  F00A         	goto	u1750
  3958   0014D0                     u1751:
  3959   0014D0  EF75  F00A         	goto	l2438
  3960   0014D4                     u1750:
  3961   0014D4                     
  3962                           ;functions.c: 75:            *hour = 0;
  3963   0014D4  501B               	movf	changeHourDayYear@hour^0,w,c
  3964   0014D6  6ED9               	movwf	fsr2l,c
  3965   0014D8  6ADA               	clrf	fsr2h,c
  3966   0014DA  6ADE               	clrf	postinc2,c
  3967   0014DC  6ADD               	clrf	postdec2,c
  3968   0014DE                     
  3969                           ;functions.c: 76:            (*day)++;
  3970   0014DE  501C               	movf	changeHourDayYear@day^0,w,c
  3971   0014E0  6ED9               	movwf	fsr2l,c
  3972   0014E2  6ADA               	clrf	fsr2h,c
  3973   0014E4  2ADE               	incf	postinc2,f,c
  3974   0014E6  0E00               	movlw	0
  3975   0014E8  22DD               	addwfc	postdec2,f,c
  3976   0014EA                     l2438:
  3977                           
  3978                           ;functions.c: 78:         if (*day == 365){
  3979   0014EA  501C               	movf	changeHourDayYear@day^0,w,c
  3980   0014EC  6ED9               	movwf	fsr2l,c
  3981   0014EE  6ADA               	clrf	fsr2h,c
  3982   0014F0  0E6D               	movlw	109
  3983   0014F2  18DE               	xorwf	postinc2,w,c
  3984   0014F4  E106               	bnz	u1761
  3985   0014F6  04DE               	decf	postinc2,w,c
  3986   0014F8  A4D8               	btfss	status,2,c
  3987   0014FA  EF81  F00A         	goto	u1761
  3988   0014FE  EF83  F00A         	goto	u1760
  3989   001502                     u1761:
  3990   001502  EFA2  F00A         	goto	l2448
  3991   001506                     u1760:
  3992   001506                     
  3993                           ;functions.c: 79:             unsigned int leap = isLeapYear(year);
  3994   001506  C01D  F016         	movff	changeHourDayYear@year,isLeapYear@year
  3995   00150A  6A17               	clrf	(isLeapYear@year+1)^0,c
  3996   00150C  EC3B  F00D         	call	_isLeapYear	;wreg free
  3997   001510  C016  F020         	movff	?_isLeapYear,changeHourDayYear@leap
  3998   001514  C017  F021         	movff	?_isLeapYear+1,changeHourDayYear@leap+1
  3999   001518                     
  4000                           ;functions.c: 80:             if (leap == 0){
  4001   001518  5020               	movf	changeHourDayYear@leap^0,w,c
  4002   00151A  1021               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4003   00151C  A4D8               	btfss	status,2,c
  4004   00151E  EF93  F00A         	goto	u1771
  4005   001522  EF95  F00A         	goto	u1770
  4006   001526                     u1771:
  4007   001526  EFA2  F00A         	goto	l2448
  4008   00152A                     u1770:
  4009   00152A                     
  4010                           ;functions.c: 81:                 *day=1;
  4011   00152A  501C               	movf	changeHourDayYear@day^0,w,c
  4012   00152C  6ED9               	movwf	fsr2l,c
  4013   00152E  6ADA               	clrf	fsr2h,c
  4014   001530  0E01               	movlw	1
  4015   001532  6EDE               	movwf	postinc2,c
  4016   001534  0E00               	movlw	0
  4017   001536  6EDD               	movwf	postdec2,c
  4018   001538                     
  4019                           ;functions.c: 82:                 (*year)++;
  4020   001538  501D               	movf	changeHourDayYear@year^0,w,c
  4021   00153A  6ED9               	movwf	fsr2l,c
  4022   00153C  6ADA               	clrf	fsr2h,c
  4023   00153E  2ADE               	incf	postinc2,f,c
  4024   001540  0E00               	movlw	0
  4025   001542  22DD               	addwfc	postdec2,f,c
  4026   001544                     l2448:
  4027                           
  4028                           ;functions.c: 86:         if (*day == 366){
  4029   001544  501C               	movf	changeHourDayYear@day^0,w,c
  4030   001546  6ED9               	movwf	fsr2l,c
  4031   001548  6ADA               	clrf	fsr2h,c
  4032   00154A  0E6E               	movlw	110
  4033   00154C  18DE               	xorwf	postinc2,w,c
  4034   00154E  E106               	bnz	u1781
  4035   001550  04DE               	decf	postinc2,w,c
  4036   001552  A4D8               	btfss	status,2,c
  4037   001554  EFAE  F00A         	goto	u1781
  4038   001558  EFB0  F00A         	goto	u1780
  4039   00155C                     u1781:
  4040   00155C  EFBD  F00A         	goto	l244
  4041   001560                     u1780:
  4042   001560                     
  4043                           ;functions.c: 87:             *day = 1;
  4044   001560  501C               	movf	changeHourDayYear@day^0,w,c
  4045   001562  6ED9               	movwf	fsr2l,c
  4046   001564  6ADA               	clrf	fsr2h,c
  4047   001566  0E01               	movlw	1
  4048   001568  6EDE               	movwf	postinc2,c
  4049   00156A  0E00               	movlw	0
  4050   00156C  6EDD               	movwf	postdec2,c
  4051   00156E                     
  4052                           ;functions.c: 88:             (*year)++;
  4053   00156E  501D               	movf	changeHourDayYear@year^0,w,c
  4054   001570  6ED9               	movwf	fsr2l,c
  4055   001572  6ADA               	clrf	fsr2h,c
  4056   001574  2ADE               	incf	postinc2,f,c
  4057   001576  0E00               	movlw	0
  4058   001578  22DD               	addwfc	postdec2,f,c
  4059   00157A                     l244:
  4060   00157A  0012               	return		;funcret
  4061   00157C                     __end_of_changeHourDayYear:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function _isLeapYear *****************
  4065 ;; Defined at:
  4066 ;;		line 14 in file "functions.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  year            2   21[COMRAM] unsigned int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2   21[COMRAM] unsigned int 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;Total ram usage:        5 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 2
  4087 ;; This function calls:
  4088 ;;		___lwmod
  4089 ;; This function is called by:
  4090 ;;		_lastSunday
  4091 ;;		_changeHourDayYear
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text29
  4096   001A76                     __ptext29:
  4097                           	callstack 0
  4098   001A76                     _isLeapYear:
  4099                           	callstack 26
  4100   001A76                     
  4101                           ;functions.c: 15:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  4102   001A76  0E01               	movlw	1
  4103   001A78  6E1A               	movwf	_isLeapYear$1162^0,c
  4104   001A7A  0E03               	movlw	3
  4105   001A7C  1416               	andwf	isLeapYear@year^0,w,c
  4106   001A7E  6E18               	movwf	??_isLeapYear^0,c
  4107   001A80  0E00               	movlw	0
  4108   001A82  1417               	andwf	(isLeapYear@year+1)^0,w,c
  4109   001A84  6E19               	movwf	(??_isLeapYear+1)^0,c
  4110   001A86  5018               	movf	??_isLeapYear^0,w,c
  4111   001A88  1019               	iorwf	(??_isLeapYear+1)^0,w,c
  4112   001A8A  A4D8               	btfss	status,2,c
  4113   001A8C  EF4A  F00D         	goto	u1431
  4114   001A90  EF4C  F00D         	goto	u1430
  4115   001A94                     u1431:
  4116   001A94  EF5F  F00D         	goto	l2148
  4117   001A98                     u1430:
  4118   001A98  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4119   001A9C  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4120   001AA0  0E00               	movlw	0
  4121   001AA2  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4122   001AA4  0E64               	movlw	100
  4123   001AA6  6E13               	movwf	___lwmod@divisor^0,c
  4124   001AA8  EC1B  F00E         	call	___lwmod	;wreg free
  4125   001AAC  5011               	movf	?___lwmod^0,w,c
  4126   001AAE  1012               	iorwf	(?___lwmod+1)^0,w,c
  4127   001AB0  A4D8               	btfss	status,2,c
  4128   001AB2  EF5D  F00D         	goto	u1441
  4129   001AB6  EF5F  F00D         	goto	u1440
  4130   001ABA                     u1441:
  4131   001ABA  EF74  F00D         	goto	l2152
  4132   001ABE                     u1440:
  4133   001ABE                     l2148:
  4134   001ABE  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4135   001AC2  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4136   001AC6  0E01               	movlw	1
  4137   001AC8  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4138   001ACA  0E90               	movlw	144
  4139   001ACC  6E13               	movwf	___lwmod@divisor^0,c
  4140   001ACE  EC1B  F00E         	call	___lwmod	;wreg free
  4141   001AD2  5011               	movf	?___lwmod^0,w,c
  4142   001AD4  1012               	iorwf	(?___lwmod+1)^0,w,c
  4143   001AD6  B4D8               	btfsc	status,2,c
  4144   001AD8  EF70  F00D         	goto	u1451
  4145   001ADC  EF72  F00D         	goto	u1450
  4146   001AE0                     u1451:
  4147   001AE0  EF74  F00D         	goto	l2152
  4148   001AE4                     u1450:
  4149   001AE4  0E00               	movlw	0
  4150   001AE6  6E1A               	movwf	_isLeapYear$1162^0,c
  4151   001AE8                     l2152:
  4152   001AE8  C01A  F016         	movff	_isLeapYear$1162,?_isLeapYear
  4153   001AEC  6A17               	clrf	(?_isLeapYear+1)^0,c
  4154   001AEE  0012               	return		;funcret
  4155   001AF0                     __end_of_isLeapYear:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function ___lwmod *****************
  4159 ;; Defined at:
  4160 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  dividend        2   16[COMRAM] unsigned int 
  4163 ;;  divisor         2   18[COMRAM] unsigned int 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  counter         1   20[COMRAM] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2   16[COMRAM] unsigned int 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;Total ram usage:        5 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_isLeapYear
  4186 ;;		_lastSunday
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text30
  4191   001C36                     __ptext30:
  4192                           	callstack 0
  4193   001C36                     ___lwmod:
  4194                           	callstack 26
  4195   001C36  5013               	movf	___lwmod@divisor^0,w,c
  4196   001C38  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  4197   001C3A  B4D8               	btfsc	status,2,c
  4198   001C3C  EF22  F00E         	goto	u1351
  4199   001C40  EF24  F00E         	goto	u1350
  4200   001C44                     u1351:
  4201   001C44  EF48  F00E         	goto	l811
  4202   001C48                     u1350:
  4203   001C48  0E01               	movlw	1
  4204   001C4A  6E15               	movwf	___lwmod@counter^0,c
  4205   001C4C  EF2C  F00E         	goto	l2070
  4206   001C50                     l2068:
  4207   001C50  90D8               	bcf	status,0,c
  4208   001C52  3613               	rlcf	___lwmod@divisor^0,f,c
  4209   001C54  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  4210   001C56  2A15               	incf	___lwmod@counter^0,f,c
  4211   001C58                     l2070:
  4212   001C58  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  4213   001C5A  EF31  F00E         	goto	u1361
  4214   001C5E  EF33  F00E         	goto	u1360
  4215   001C62                     u1361:
  4216   001C62  EF28  F00E         	goto	l2068
  4217   001C66                     u1360:
  4218   001C66                     l2072:
  4219   001C66  5013               	movf	___lwmod@divisor^0,w,c
  4220   001C68  5C11               	subwf	___lwmod@dividend^0,w,c
  4221   001C6A  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4222   001C6C  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  4223   001C6E  A0D8               	btfss	status,0,c
  4224   001C70  EF3C  F00E         	goto	u1371
  4225   001C74  EF3E  F00E         	goto	u1370
  4226   001C78                     u1371:
  4227   001C78  EF42  F00E         	goto	l2076
  4228   001C7C                     u1370:
  4229   001C7C  5013               	movf	___lwmod@divisor^0,w,c
  4230   001C7E  5E11               	subwf	___lwmod@dividend^0,f,c
  4231   001C80  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4232   001C82  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  4233   001C84                     l2076:
  4234   001C84  90D8               	bcf	status,0,c
  4235   001C86  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  4236   001C88  3213               	rrcf	___lwmod@divisor^0,f,c
  4237   001C8A  2E15               	decfsz	___lwmod@counter^0,f,c
  4238   001C8C  EF33  F00E         	goto	l2072
  4239   001C90                     l811:
  4240   001C90  C011  F011         	movff	___lwmod@dividend,?___lwmod
  4241   001C94  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  4242   001C98  0012               	return		;funcret
  4243   001C9A                     __end_of___lwmod:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _LEDarray_disp_bin *****************
  4247 ;; Defined at:
  4248 ;;		line 33 in file "LEDarray.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  number          2    3[COMRAM] unsigned int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		None
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:        2 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;;		_LEDarray_disp_PPM
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text31
  4278   00132E                     __ptext31:
  4279                           	callstack 0
  4280   00132E                     _LEDarray_disp_bin:
  4281                           	callstack 29
  4282   00132E                     
  4283                           ;LEDarray.c: 33: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 34: {;LEDarray.
      +                          c: 36:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  4284   00132E  A004               	btfss	LEDarray_disp_bin@number^0,0,c
  4285   001330  EF9C  F009         	goto	u1561
  4286   001334  EF9E  F009         	goto	u1560
  4287   001338                     u1561:
  4288   001338  EFA1  F009         	goto	l84
  4289   00133C                     u1560:
  4290   00133C  807F               	bsf	127,0,c	;volatile
  4291   00133E  EFA2  F009         	goto	l85
  4292   001342                     l84:
  4293   001342  907F               	bcf	127,0,c	;volatile
  4294   001344                     l85:
  4295                           
  4296                           ;LEDarray.c: 37:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  4297   001344  A204               	btfss	LEDarray_disp_bin@number^0,1,c
  4298   001346  EFA7  F009         	goto	u1571
  4299   00134A  EFA9  F009         	goto	u1570
  4300   00134E                     u1571:
  4301   00134E  EFAC  F009         	goto	l86
  4302   001352                     u1570:
  4303   001352  827F               	bsf	127,1,c	;volatile
  4304   001354  EFAD  F009         	goto	l87
  4305   001358                     l86:
  4306   001358  927F               	bcf	127,1,c	;volatile
  4307   00135A                     l87:
  4308                           
  4309                           ;LEDarray.c: 38:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  4310   00135A  A404               	btfss	LEDarray_disp_bin@number^0,2,c
  4311   00135C  EFB2  F009         	goto	u1581
  4312   001360  EFB4  F009         	goto	u1580
  4313   001364                     u1581:
  4314   001364  EFB7  F009         	goto	l88
  4315   001368                     u1580:
  4316   001368  8479               	bsf	121,2,c	;volatile
  4317   00136A  EFB8  F009         	goto	l89
  4318   00136E                     l88:
  4319   00136E  9479               	bcf	121,2,c	;volatile
  4320   001370                     l89:
  4321                           
  4322                           ;LEDarray.c: 39:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  4323   001370  A604               	btfss	LEDarray_disp_bin@number^0,3,c
  4324   001372  EFBD  F009         	goto	u1591
  4325   001376  EFBF  F009         	goto	u1590
  4326   00137A                     u1591:
  4327   00137A  EFC2  F009         	goto	l90
  4328   00137E                     u1590:
  4329   00137E  8C7E               	bsf	126,6,c	;volatile
  4330   001380  EFC3  F009         	goto	l91
  4331   001384                     l90:
  4332   001384  9C7E               	bcf	126,6,c	;volatile
  4333   001386                     l91:
  4334                           
  4335                           ;LEDarray.c: 40:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  4336   001386  A804               	btfss	LEDarray_disp_bin@number^0,4,c
  4337   001388  EFC8  F009         	goto	u1601
  4338   00138C  EFCA  F009         	goto	u1600
  4339   001390                     u1601:
  4340   001390  EFCD  F009         	goto	l92
  4341   001394                     u1600:
  4342   001394  8879               	bsf	121,4,c	;volatile
  4343   001396  EFCE  F009         	goto	l93
  4344   00139A                     l92:
  4345   00139A  9879               	bcf	121,4,c	;volatile
  4346   00139C                     l93:
  4347                           
  4348                           ;LEDarray.c: 41:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  4349   00139C  AA04               	btfss	LEDarray_disp_bin@number^0,5,c
  4350   00139E  EFD3  F009         	goto	u1611
  4351   0013A2  EFD5  F009         	goto	u1610
  4352   0013A6                     u1611:
  4353   0013A6  EFD8  F009         	goto	l94
  4354   0013AA                     u1610:
  4355   0013AA  8A79               	bsf	121,5,c	;volatile
  4356   0013AC  EFD9  F009         	goto	l95
  4357   0013B0                     l94:
  4358   0013B0  9A79               	bcf	121,5,c	;volatile
  4359   0013B2                     l95:
  4360                           
  4361                           ;LEDarray.c: 42:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  4362   0013B2  AC04               	btfss	LEDarray_disp_bin@number^0,6,c
  4363   0013B4  EFDE  F009         	goto	u1621
  4364   0013B8  EFE0  F009         	goto	u1620
  4365   0013BC                     u1621:
  4366   0013BC  EFE3  F009         	goto	l96
  4367   0013C0                     u1620:
  4368   0013C0  807E               	bsf	126,0,c	;volatile
  4369   0013C2  EFE4  F009         	goto	l97
  4370   0013C6                     l96:
  4371   0013C6  907E               	bcf	126,0,c	;volatile
  4372   0013C8                     l97:
  4373                           
  4374                           ;LEDarray.c: 43:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  4375   0013C8  AE04               	btfss	LEDarray_disp_bin@number^0,7,c
  4376   0013CA  EFE9  F009         	goto	u1631
  4377   0013CE  EFEB  F009         	goto	u1630
  4378   0013D2                     u1631:
  4379   0013D2  EFEE  F009         	goto	l98
  4380   0013D6                     u1630:
  4381   0013D6  807A               	bsf	122,0,c	;volatile
  4382   0013D8  EFEF  F009         	goto	l99
  4383   0013DC                     l98:
  4384   0013DC  907A               	bcf	122,0,c	;volatile
  4385   0013DE                     l99:
  4386                           
  4387                           ;LEDarray.c: 44:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  4388   0013DE  A005               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4389   0013E0  EFF4  F009         	goto	u1641
  4390   0013E4  EFF6  F009         	goto	u1640
  4391   0013E8                     u1641:
  4392   0013E8  EFF9  F009         	goto	l100
  4393   0013EC                     u1640:
  4394   0013EC  827A               	bsf	122,1,c	;volatile
  4395   0013EE  EFFA  F009         	goto	l102
  4396   0013F2                     l100:
  4397   0013F2  927A               	bcf	122,1,c	;volatile
  4398   0013F4                     l102:
  4399   0013F4  0012               	return		;funcret
  4400   0013F6                     __end_of_LEDarray_disp_bin:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _LCD_setline *****************
  4404 ;; Defined at:
  4405 ;;		line 106 in file "LCD.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  line            1    wreg     unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  line            1    8[COMRAM] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;Total ram usage:        1 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 4
  4426 ;; This function calls:
  4427 ;;		_LCD_sendbyte
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text32
  4434   001D54                     __ptext32:
  4435                           	callstack 0
  4436   001D54                     _LCD_setline:
  4437                           	callstack 26
  4438                           
  4439                           ;incstack = 0
  4440                           ;LCD_setline@line stored from wreg
  4441   001D54  6E09               	movwf	LCD_setline@line^0,c
  4442   001D56                     
  4443                           ;LCD.c: 106: void LCD_setline (char line);LCD.c: 107: {;LCD.c: 109:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  4444   001D56  0409               	decf	LCD_setline@line^0,w,c
  4445   001D58  A4D8               	btfss	status,2,c
  4446   001D5A  EFB1  F00E         	goto	u1651
  4447   001D5E  EFB3  F00E         	goto	u1650
  4448   001D62                     u1651:
  4449   001D62  EFB8  F00E         	goto	l2394
  4450   001D66                     u1650:
  4451   001D66  0E00               	movlw	0
  4452   001D68  6E05               	movwf	LCD_sendbyte@type^0,c
  4453   001D6A  0E80               	movlw	128
  4454   001D6C  EC8C  F00E         	call	_LCD_sendbyte
  4455   001D70                     l2394:
  4456                           
  4457                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4458   001D70  0E02               	movlw	2
  4459   001D72  1809               	xorwf	LCD_setline@line^0,w,c
  4460   001D74  A4D8               	btfss	status,2,c
  4461   001D76  EFBF  F00E         	goto	u1661
  4462   001D7A  EFC1  F00E         	goto	u1660
  4463   001D7E                     u1661:
  4464   001D7E  EFC6  F00E         	goto	l290
  4465   001D82                     u1660:
  4466   001D82  0E00               	movlw	0
  4467   001D84  6E05               	movwf	LCD_sendbyte@type^0,c
  4468   001D86  0EC0               	movlw	192
  4469   001D88  EC8C  F00E         	call	_LCD_sendbyte
  4470   001D8C                     l290:
  4471   001D8C  0012               	return		;funcret
  4472   001D8E                     __end_of_LCD_setline:
  4473                           	callstack 0
  4474                           
  4475 ;; *************** function _LCD_sendbyte *****************
  4476 ;; Defined at:
  4477 ;;		line 43 in file "LCD.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  Byte            1    wreg     unsigned char 
  4480 ;;  type            1    4[COMRAM] unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  Byte            1    7[COMRAM] unsigned char 
  4483 ;;  lowNibble       1    6[COMRAM] unsigned char 
  4484 ;;  highNibble      1    5[COMRAM] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4494 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;Total ram usage:        4 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 3
  4501 ;; This function calls:
  4502 ;;		_LCD_sendnibble
  4503 ;; This function is called by:
  4504 ;;		_LCD_init
  4505 ;;		_LCD_setline
  4506 ;;		_LCD_sendstring
  4507 ;;		_LCD_scroll
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text33
  4512   001D18                     __ptext33:
  4513                           	callstack 0
  4514   001D18                     _LCD_sendbyte:
  4515                           	callstack 25
  4516                           
  4517                           ;incstack = 0
  4518                           ;LCD_sendbyte@Byte stored from wreg
  4519   001D18  6E08               	movwf	LCD_sendbyte@Byte^0,c
  4520   001D1A                     
  4521                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  4522   001D1A  0405               	decf	LCD_sendbyte@type^0,w,c
  4523   001D1C  A4D8               	btfss	status,2,c
  4524   001D1E  EF93  F00E         	goto	u1461
  4525   001D22  EF95  F00E         	goto	u1460
  4526   001D26                     u1461:
  4527   001D26  EF98  F00E         	goto	l280
  4528   001D2A                     u1460:
  4529   001D2A  8C7B               	bsf	123,6,c	;volatile
  4530   001D2C  EF99  F00E         	goto	l2160
  4531   001D30                     l280:
  4532   001D30  9C7B               	bcf	123,6,c	;volatile
  4533   001D32                     l2160:
  4534                           
  4535                           ;LCD.c: 50:     unsigned char highNibble = (Byte >> 4) ;
  4536   001D32  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  4537   001D34  0B0F               	andlw	15
  4538   001D36  6E06               	movwf	LCD_sendbyte@highNibble^0,c
  4539   001D38                     
  4540                           ;LCD.c: 51:     LCD_sendnibble(highNibble);
  4541   001D38  5006               	movf	LCD_sendbyte@highNibble^0,w,c
  4542   001D3A  ECE7  F00D         	call	_LCD_sendnibble
  4543   001D3E                     
  4544                           ;LCD.c: 54:     unsigned char lowNibble = Byte & 0b1111;
  4545   001D3E  5008               	movf	LCD_sendbyte@Byte^0,w,c
  4546   001D40  0B0F               	andlw	15
  4547   001D42  6E07               	movwf	LCD_sendbyte@lowNibble^0,c
  4548                           
  4549                           ;LCD.c: 55:     LCD_sendnibble(lowNibble);
  4550   001D44  5007               	movf	LCD_sendbyte@lowNibble^0,w,c
  4551   001D46  ECE7  F00D         	call	_LCD_sendnibble
  4552   001D4A                     
  4553                           ;LCD.c: 57:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4554   001D4A  0EA0               	movlw	160
  4555   001D4C                     u1947:
  4556   001D4C  D000               	nop2	
  4557   001D4E  2EE8               	decfsz	wreg,f,c
  4558   001D50  D7FD               	bra	u1947
  4559   001D52  0012               	return		;funcret
  4560   001D54                     __end_of_LCD_sendbyte:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _LCD_sendnibble *****************
  4564 ;; Defined at:
  4565 ;;		line 21 in file "LCD.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  number          1    wreg     unsigned char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  number          1    3[COMRAM] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;Total ram usage:        1 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 2
  4586 ;; This function calls:
  4587 ;;		_LCD_E_TOG
  4588 ;; This function is called by:
  4589 ;;		_LCD_sendbyte
  4590 ;;		_LCD_init
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text34
  4595   001BCE                     __ptext34:
  4596                           	callstack 0
  4597   001BCE                     _LCD_sendnibble:
  4598                           	callstack 25
  4599                           
  4600                           ;incstack = 0
  4601                           ;LCD_sendnibble@number stored from wreg
  4602   001BCE  6E04               	movwf	LCD_sendnibble@number^0,c
  4603   001BD0                     
  4604                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  4605   001BD0  A004               	btfss	LCD_sendnibble@number^0,0,c
  4606   001BD2  EFED  F00D         	goto	u1311
  4607   001BD6  EFEF  F00D         	goto	u1310
  4608   001BDA                     u1311:
  4609   001BDA  EFF2  F00D         	goto	l269
  4610   001BDE                     u1310:
  4611   001BDE  867A               	bsf	122,3,c	;volatile
  4612   001BE0  EFF3  F00D         	goto	l2048
  4613   001BE4                     l269:
  4614   001BE4  967A               	bcf	122,3,c	;volatile
  4615   001BE6                     l2048:
  4616                           
  4617                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  4618   001BE6  A204               	btfss	LCD_sendnibble@number^0,1,c
  4619   001BE8  EFF8  F00D         	goto	u1321
  4620   001BEC  EFFA  F00D         	goto	u1320
  4621   001BF0                     u1321:
  4622   001BF0  EFFD  F00D         	goto	l271
  4623   001BF4                     u1320:
  4624   001BF4  847A               	bsf	122,2,c	;volatile
  4625   001BF6  EFFE  F00D         	goto	l2052
  4626   001BFA                     l271:
  4627   001BFA  947A               	bcf	122,2,c	;volatile
  4628   001BFC                     l2052:
  4629                           
  4630                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  4631   001BFC  A404               	btfss	LCD_sendnibble@number^0,2,c
  4632   001BFE  EF03  F00E         	goto	u1331
  4633   001C02  EF05  F00E         	goto	u1330
  4634   001C06                     u1331:
  4635   001C06  EF08  F00E         	goto	l273
  4636   001C0A                     u1330:
  4637   001C0A  867D               	bsf	125,3,c	;volatile
  4638   001C0C  EF09  F00E         	goto	l2056
  4639   001C10                     l273:
  4640   001C10  967D               	bcf	125,3,c	;volatile
  4641   001C12                     l2056:
  4642                           
  4643                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  4644   001C12  A604               	btfss	LCD_sendnibble@number^0,3,c
  4645   001C14  EF0E  F00E         	goto	u1341
  4646   001C18  EF10  F00E         	goto	u1340
  4647   001C1C                     u1341:
  4648   001C1C  EF13  F00E         	goto	l275
  4649   001C20                     u1340:
  4650   001C20  827D               	bsf	125,1,c	;volatile
  4651   001C22  EF14  F00E         	goto	l2060
  4652   001C26                     l275:
  4653   001C26  927D               	bcf	125,1,c	;volatile
  4654   001C28                     l2060:
  4655                           
  4656                           ;LCD.c: 34:     LCD_E_TOG();
  4657   001C28  ECAB  F00F         	call	_LCD_E_TOG	;wreg free
  4658   001C2C                     
  4659                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4660   001C2C  0E1A               	movlw	26
  4661   001C2E                     u1957:
  4662   001C2E  2EE8               	decfsz	wreg,f,c
  4663   001C30  D7FE               	bra	u1957
  4664   001C32  D000               	nop2	
  4665   001C34  0012               	return		;funcret
  4666   001C36                     __end_of_LCD_sendnibble:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _LCD_E_TOG *****************
  4670 ;; Defined at:
  4671 ;;		line 9 in file "LCD.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_LCD_sendnibble
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text35
  4700   001F56                     __ptext35:
  4701                           	callstack 0
  4702   001F56                     _LCD_E_TOG:
  4703                           	callstack 25
  4704   001F56                     
  4705                           ;LCD.c: 12:     LATCbits.LATC2=1;
  4706   001F56  847B               	bsf	123,2,c	;volatile
  4707   001F58                     
  4708                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4709   001F58  0E0A               	movlw	10
  4710   001F5A                     u1967:
  4711   001F5A  2EE8               	decfsz	wreg,f,c
  4712   001F5C  D7FE               	bra	u1967
  4713   001F5E  D000               	nop2	
  4714   001F60                     
  4715                           ;LCD.c: 15:     LATCbits.LATC2=0;
  4716   001F60  947B               	bcf	123,2,c	;volatile
  4717   001F62  0012               	return		;funcret
  4718   001F64                     __end_of_LCD_E_TOG:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _LowISR *****************
  4722 ;; Defined at:
  4723 ;;		line 49 in file "interrupts.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;Total ram usage:        3 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		Interrupt level 1
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	intcodelo
  4751   000018                     __pintcodelo:
  4752                           	callstack 0
  4753   000018                     _LowISR:
  4754                           	callstack 21
  4755                           
  4756                           ;incstack = 0
  4757   000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4758   00001A  CFD8 F001          	movff	status,??_LowISR
  4759   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  4760   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  4761   000026                     
  4762                           ;interrupts.c: 52:     if (PIR0bits.TMR0IF == 1) {
  4763   000026  010E               	movlb	14	; () banked
  4764   000028  AB33               	btfss	51,5,b	;volatile
  4765   00002A  EF19  F000         	goto	i1u183_21
  4766   00002E  EF1B  F000         	goto	i1u183_20
  4767   000032                     i1u183_21:
  4768   000032  EF39  F000         	goto	i1l161
  4769   000036                     i1u183_20:
  4770   000036                     
  4771                           ; BSR set to: 14
  4772                           ;interrupts.c: 55:         hour++;
  4773   000036  0100               	movlb	0	; () banked
  4774   000038  4BAA               	infsnz	_hour& (0+255),f,b
  4775   00003A  2BAB               	incf	(_hour+1)& (0+255),f,b
  4776   00003C                     
  4777                           ; BSR set to: 0
  4778                           ;interrupts.c: 56:         TMR0H=00001011;
  4779   00003C  0E09               	movlw	9
  4780   00003E  6ED4               	movwf	212,c	;volatile
  4781   000040                     
  4782                           ; BSR set to: 0
  4783                           ;interrupts.c: 57:         TMR0L=110011011;
  4784   000040  0E83               	movlw	131
  4785   000042  6ED3               	movwf	211,c	;volatile
  4786   000044                     
  4787                           ; BSR set to: 0
  4788                           ;interrupts.c: 58:         if (hour >= 1 && hour <= 5){
  4789   000044  51AA               	movf	_hour& (0+255),w,b
  4790   000046  11AB               	iorwf	(_hour+1)& (0+255),w,b
  4791   000048  B4D8               	btfsc	status,2,c
  4792   00004A  EF29  F000         	goto	i1u184_21
  4793   00004E  EF2B  F000         	goto	i1u184_20
  4794   000052                     i1u184_21:
  4795   000052  EF37  F000         	goto	i1l162
  4796   000056                     i1u184_20:
  4797   000056                     
  4798                           ; BSR set to: 0
  4799   000056  51AB               	movf	(_hour+1)& (0+255),w,b
  4800   000058  E107               	bnz	i1u185_21
  4801   00005A  0E06               	movlw	6
  4802   00005C  5DAA               	subwf	_hour& (0+255),w,b
  4803   00005E  B0D8               	btfsc	status,0,c
  4804   000060  EF34  F000         	goto	i1u185_21
  4805   000064  EF36  F000         	goto	i1u185_20
  4806   000068                     i1u185_21:
  4807   000068  EF37  F000         	goto	i1l162
  4808   00006C                     i1u185_20:
  4809   00006C                     
  4810                           ; BSR set to: 0
  4811                           ;interrupts.c: 59:             LATHbits.LATH3 = 0;
  4812   00006C  9680               	bcf	128,3,c	;volatile
  4813   00006E                     i1l162:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;interrupts.c: 61:         PIR0bits.TMR0IF = 0;
  4817   00006E  010E               	movlb	14	; () banked
  4818   000070  9B33               	bcf	51,5,b	;volatile
  4819   000072                     i1l161:
  4820                           
  4821                           ; BSR set to: 14
  4822                           ;interrupts.c: 66:     if (PIR2bits.C1IF == 1) {
  4823   000072  A135               	btfss	53,0,b	;volatile
  4824   000074  EF3E  F000         	goto	i1u186_21
  4825   000078  EF40  F000         	goto	i1u186_20
  4826   00007C                     i1u186_21:
  4827   00007C  EF42  F000         	goto	i1l163
  4828   000080                     i1u186_20:
  4829   000080                     
  4830                           ; BSR set to: 14
  4831                           ;interrupts.c: 68:         LATHbits.LATH3 = 1;
  4832   000080  8680               	bsf	128,3,c	;volatile
  4833                           
  4834                           ;interrupts.c: 70:         PIR2bits.C1IF = 0;
  4835   000082  9135               	bcf	53,0,b	;volatile
  4836   000084                     i1l163:
  4837                           
  4838                           ; BSR set to: 14
  4839                           ;interrupts.c: 73:     if (PIR2bits.C2IF == 1) {
  4840   000084  A335               	btfss	53,1,b	;volatile
  4841   000086  EF47  F000         	goto	i1u187_21
  4842   00008A  EF49  F000         	goto	i1u187_20
  4843   00008E                     i1u187_21:
  4844   00008E  EF4B  F000         	goto	i1l165
  4845   000092                     i1u187_20:
  4846   000092                     
  4847                           ; BSR set to: 14
  4848                           ;interrupts.c: 74:             LATHbits.LATH3 = 0;
  4849   000092  9680               	bcf	128,3,c	;volatile
  4850                           
  4851                           ;interrupts.c: 75:             PIR2bits.C2IF = 0;
  4852   000094  9335               	bcf	53,1,b	;volatile
  4853   000096                     i1l165:
  4854                           
  4855                           ; BSR set to: 14
  4856   000096  C003  FFE0         	movff	??_LowISR+2,bsr
  4857   00009A  C002  FFE8         	movff	??_LowISR+1,wreg
  4858   00009E  C001  FFD8         	movff	??_LowISR,status
  4859   0000A2  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4860   0000A4  0010               	retfie	
  4861   0000A6                     __end_of_LowISR:
  4862                           	callstack 0
  4863                           
  4864                           	psect	rparam
  4865   000000                     
  4866                           	psect	temp
  4867   000059                     btemp:
  4868                           	callstack 0
  4869   000059                     	ds	1
  4870   000000                     int$flags	set	btemp
  4871   000000                     wtemp8	set	btemp+1
  4872   000000                     ttemp5	set	btemp+1
  4873   000000                     ttemp6	set	btemp+4
  4874   000000                     ttemp7	set	btemp+8
  4875                           
  4876                           	psect	config
  4877                           
  4878                           ;Config register CONFIG1L @ 0x300000
  4879                           ;	External Oscillator mode Selection bits
  4880                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4881                           ;	Power-up default value for COSC bits
  4882                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4883   300000                     	org	3145728
  4884   300000  AA                 	db	170
  4885                           
  4886                           ;Config register CONFIG1H @ 0x300001
  4887                           ;	unspecified, using default values
  4888                           ;	Clock Out Enable bit
  4889                           ;	CLKOUTEN = 0x1, unprogrammed default
  4890                           ;	Clock Switch Enable bit
  4891                           ;	CSWEN = 0x1, unprogrammed default
  4892                           ;	Fail-Safe Clock Monitor Enable bit
  4893                           ;	FCMEN = 0x1, unprogrammed default
  4894   300001                     	org	3145729
  4895   300001  FF                 	db	255
  4896                           
  4897                           ;Config register CONFIG3L @ 0x300004
  4898                           ;	WDT Period Select bits
  4899                           ;	WDTCPS = 0x1F, unprogrammed default
  4900                           ;	WDT operating mode
  4901                           ;	WDTE = OFF, WDT Disabled
  4902   300004                     	org	3145732
  4903   300004  9F                 	db	159
  4904                           
  4905                           ;Config register CONFIG3H @ 0x300005
  4906                           ;	unspecified, using default values
  4907                           ;	WDT Window Select bits
  4908                           ;	WDTCWS = 0x7, unprogrammed default
  4909                           ;	WDT input clock selector
  4910                           ;	WDTCCS = 0x7, unprogrammed default
  4911   300005                     	org	3145733
  4912   300005  FF                 	db	255
  4913                           tosu	equ	0xFFF
  4914                           tosh	equ	0xFFE
  4915                           tosl	equ	0xFFD
  4916                           stkptr	equ	0xFFC
  4917                           pclatu	equ	0xFFB
  4918                           pclath	equ	0xFFA
  4919                           pcl	equ	0xFF9
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           prodh	equ	0xFF4
  4925                           prodl	equ	0xFF3
  4926                           indf0	equ	0xFEF
  4927                           postinc0	equ	0xFEE
  4928                           postdec0	equ	0xFED
  4929                           preinc0	equ	0xFEC
  4930                           plusw0	equ	0xFEB
  4931                           fsr0h	equ	0xFEA
  4932                           fsr0l	equ	0xFE9
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           postinc1	equ	0xFE6
  4936                           postdec1	equ	0xFE5
  4937                           preinc1	equ	0xFE4
  4938                           plusw1	equ	0xFE3
  4939                           fsr1h	equ	0xFE2
  4940                           fsr1l	equ	0xFE1
  4941                           bsr	equ	0xFE0
  4942                           indf2	equ	0xFDF
  4943                           postinc2	equ	0xFDE
  4944                           postdec2	equ	0xFDD
  4945                           preinc2	equ	0xFDC
  4946                           plusw2	equ	0xFDB
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      88
    BANK0           160     42      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    changeHourDayYear@day	PTR unsigned int  size(1) Largest target is 2
		 -> main@day(BANK0[2]), 

    changeHourDayYear@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    changeHourDayYear@year	PTR unsigned int  size(1) Largest target is 2
		 -> main@year(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    findDSTdates@bkwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@bkwd_daylight_savings_day(BANK0[2]), 

    findDSTdates@fwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@fwd_daylight_savings_day(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    increaseHour@backward_zone	PTR unsigned int  size(1) Largest target is 2
		 -> main@backward_zone(BANK0[2]), 

    increaseHour@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1883$buffer	PTR unsigned char  size(2) Largest target is 0

    S1883$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_sendstring->_LCD_sendbyte
    _initialise->_LCD_init
    _LCD_init->_LCD_sendbyte
    _findDSTdates->_lastSunday
    _lastSunday->_isLeapYear
    ___lwdiv->___wmul
    _changeHourDayYear->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   20251
                                              0 BANK0     42    42      0
                        _LCD_setline
                  _LEDarray_disp_bin
                  _changeHourDayYear
                       _findDSTdates
                       _increaseHour
                         _initialise
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                          9     2      7    8979
                                             70 COMRAM     9     2      7
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    7374
                                             49 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6717
                                             45 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6358
                                             34 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1251
                                              9 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             23 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1081
                                              8 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0    1048
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    1048
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (3) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increaseHour                                        10     2      8     622
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _findDSTdates                                         8     0      8    5995
                                             64 COMRAM     8     0      8
                         _lastSunday
 ---------------------------------------------------------------------------------
 (2) _lastSunday                                          38    34      4    5483
                                             26 COMRAM    38    34      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1074
                                              9 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _changeHourDayYear                                    7     4      3    1936
                                             26 COMRAM     7     4      3
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (3) _isLeapYear                                           5     3      2    1465
                                             21 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1223
                                             16 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     350
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1004
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     960
                                              4 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              3 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _changeHourDayYear
     _isLeapYear
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
   _findDSTdates
     _lastSunday
       ___lwdiv
       ___lwmod
       ___wmul
       _isLeapYear
   _increaseHour
   _initialise
     _Comp1_init_fe
       _DAC_init
     _Comp1_init_re
       _DAC_init
     _Interrupts_init
     _LCD_init
       _LCD_sendbyte
       _LCD_sendnibble
     _LEDarray_init
     _Timer0_init
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      4C       5       47.5%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      58       1       93.6%
BITBIGSFRlhhhhh     4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhlhh      4      0       0      38        0.0%
BITBIGSFRlhhhhl      1      0       0      35        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      47        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 00:52:42 2024

                                   l43 1E50                                     l81 1E7C  
                                   l90 1384                                     l91 1386  
                                   l92 139A                                     l84 1342  
                                   l93 139C                                     l85 1344  
                                   l94 13B0                                     l86 1358  
                                   l95 13B2                                     l87 135A  
                                   l96 13C6                                     l88 136E  
                                   l97 13C8                                     l89 1370  
                                   l98 13DC                                     l99 13DE  
                         ___awdiv@sign 0009                                     bsr 0FE0  
                  ___wmul@multiplicand 0006                      ??_Interrupts_init 0004  
                                  l100 13F2                                    l102 13F4  
                                  l310 1EA2                                    l215 1AEE  
                                  l223 1042                                    l233 1836  
                                  l307 1A74                                    l244 157A  
                                  l156 1F40                                    l237 1BCC  
                                  l190 1F54                                    l271 1BFA  
                                  l247 1F26                                    l280 1D30  
                                  l273 1C10                                    l193 1EC6  
                                  l266 1F62                                    l282 1D52  
                                  l290 1D8C                                    l275 1C26  
                                  l196 1EEA                                    l277 1C34  
                                  l269 1BE4                                    l285 19F0  
                                  l541 14B8                                    l296 1E22  
                                  l801 1B5A                                    l554 16DA  
                                  l811 1C90                                    l808 1B62  
                                  l818 1C98                                    l988 1DC0  
                                  u970 1848                                    u971 1844  
                                  u980 1858                                    u981 1854  
                                  u990 187E                                    u991 187A  
                                  _abs 1DC2                                    _pad 18E2  
                         ___awmod@sign 0009                                    wreg 0FE8  
                    main@backward_zone 0084                                   l1011 1950  
                                 l1013 196A                                   l1008 1912  
                                 l2000 1236                                   l1016 1224  
                                 l1033 1780                                   l2002 123C  
                                 l2010 1290                                   ?_abs 000A  
                                 l2012 12AA                                   l2020 12F4  
                                 l2004 126A                                   l1052 11C4  
                                 l2100 10D6                                   l1029 132C  
                                 l1037 1788                                   l1062 1DDC  
                                 l2022 1304                                   l2014 12BC  
                                 l2006 126E                                   l2030 16DC  
                                 l2110 111C                                   l2102 10E6  
                                 l2200 1E24                                   l2024 130A  
                                 l2016 12CC                                   l2008 1274  
                                 l2040 174E                                   l2032 16E4  
                                 l2112 113C                                   l2104 10FA  
                                 l1065 1DF4                                   l2050 1BF4  
                                 l2210 1E3E                                   l2202 1E2C  
                                 l2026 1316                                   l2018 12E6  
                                 l2034 170A                                   l2042 1756  
                                 l2122 1192                                   l2114 115C  
                                 l2106 1108                                   l1058 1CDA  
                                 l2060 1C28                                   l2052 1BFC  
                                 l2044 1BD0                                   l2300 100E  
                                 l2140 1F52                                   l2220 1E52  
                                 l2212 1E40                                   l2204 1E36  
                                 l2036 1712                                   l2116 1174  
                                 l2108 1112                                   l1077 18E0  
                                 l1085 1D16                                   l2062 1C2C  
                                 l2054 1C0A                                   l2046 1BDE  
                                 l2070 1C58                                   l2150 1AE4  
                                 l2142 1A76                                   l2302 101A  
                                 l2230 1E6E                                   l2222 1E5A  
                                 l2214 1E42                                   l2206 1E38  
                                 l2038 172E                                   l2118 117E  
                                 l2126 119E                                   l2056 1C12  
                                 l2048 1BE6                                   l2160 1D32  
                                 l2072 1C66                                   l2064 1C36  
                                 l2152 1AE8                                   l2144 1A7A  
                                 l2304 1022                                   l2136 1F42  
                                 l2240 1EA4                                   l2320 199A  
                                 l2312 196C                                   l2232 1E74  
                                 l2224 1E5C                                   l2216 1E44  
                                 l2208 1E3C                                   l1088 1F64  
                                 l2080 1044                                   l2400 1A08  
                                 l2058 1C20                                   l2162 1D38  
                                 l2074 1C7C                                   l2066 1C48  
                                 l2146 1A98                                   l2170 1AF8  
                                 l2306 102E                                   l2410 1B76  
                                 l2138 1F48                                   l2250 1EBE  
                                 l2242 1EA6                                   l2330 19C4  
                                 l2322 19A0                                   l2314 1984  
                                 l2234 1E76                                   l2226 1E62  
                                 l2218 1E4E                                   l2090 108A  
                                 l2082 106A                                   l2402 1A30  
                                 l2164 1D3E                                   l2156 1D1A  
                                 l2076 1C84                                   l2068 1C50  
                                 l2148 1ABE                                   l2180 1B2E  
                                 l2172 1B0A                                   l2308 103A  
                                 l2412 1B88                                   l2420 17C8  
                                 l2260 1EDE                                   l2252 1EC2  
                                 l2244 1EB8                                   l2332 19CE  
                                 l2324 19AA                                   l2316 198A  
                                 l2236 1E78                                   l2228 1E6C  
                                 l2340 1DFA                                   l2092 108C  
                                 l2084 1072                                   l2404 1A54  
                                 l2166 1D4A                                   l2158 1D2A  
                                 l2078 1C8A                                   l2182 1B44  
                                 l2174 1B12                                   l2270 0E40  
                                 l2430 1828                                   l2422 17D2  
                                 l2414 178A                                   l2262 1EE0  
                                 l2254 1EC8                                   l2246 1EBA  
                                 l2238 1F28                                   l2334 19DC  
                                 l2326 19B2                                   l2318 1990  
                                 l2342 1E0A                                   l2094 1098  
                                 l2086 107E                                   l2190 1C9A  
                                 l2350 1D9E                                   l2406 1A5C  
                                 l2440 1506                                   l2432 14BA  
                                 l2184 1B4C                                   l2176 1B1A  
                                 l2168 1AF0                                   l2280 0F8A  
                                 l2272 0F1E                                   l2408 1B64  
                                 l2424 17EA                                   l2416 17A2  
                                 l2264 1EE2                                   l2256 1ECA  
                                 l2248 1EBC                                   l2336 19E6  
                                 l2328 19BC                                   l2360 1F12  
                                 l2344 1E0C                                   l2088 1082  
                                 l2192 1CA2                                   l2352 1DA6  
                                 l2370 132E                                   l2450 1560  
                                 l2442 1518                                   l2434 14D4  
                                 l2186 1B4E                                   l2178 1B28  
                                 l2290 0FD0                                   l2282 0F9E  
                                 l2274 0F3A                                   l2426 1804  
                                 l2418 17BC                                   l2266 1EE6  
                                 l2258 1EDC                                   l2362 1F16  
                                 l2338 1DF6                                   l2098 10A0  
                                 l2194 1CB2                                   l2354 1DB6  
                                 l2346 1D8E                                   l2380 1394  
                                 l2372 133C                                   l2452 156E  
                                 l2444 152A                                   l2436 14DE  
                                 l2188 1B54                                   l2292 0FDC  
                                 l2284 0FB0                                   l2276 0F5A  
                                 l2268 0E2C                                   l2428 181C  
                                 l2364 1F1A                                   l1900 146C  
                                 l2196 1CD2                                   l2348 1D96  
                                 l2460 15A6                                   l2390 1D56  
                                 l2382 13AA                                   l2374 1352  
                                 l2446 1538                                   l2438 14EA  
                                 l2286 0FBC                                   l2278 0F7A  
                                 l2366 1F1E                                   l2358 1F0E  
                                 l1902 1482                                   l1910 1498  
                                 l2542 10C8                                   l2462 15AC  
                                 l2454 157C                                   l2392 1D66  
                                 l2384 13C0                                   l2376 1368  
                                 l2448 1544                                   l2288 0FC4  
                                 l2296 0FE8                                   l2368 1F22  
                                 l1912 14A8                                   l1904 148A  
                                 l1920 1630                                   l2464 15CC  
                                 l2456 1596                                   l2394 1D70  
                                 l2386 13D6                                   l2378 137E  
                                 l2298 0FFC                                   l1914 14B0  
                                 l1906 148C                                   l1930 1660  
                                 l1922 163E                                   l1850 1858  
                                 l2466 15F0                                   l2458 159A  
                                 l2396 1D82                                   l2388 13EC  
                                 l1908 1492                                   l1940 16A6  
                                 l1932 1672                                   l1924 1646  
                                 l1852 1862                                   l1860 1CDC  
                                 l2468 1614                                   l1870 1E9A  
                                 l1950 16D2                                   l1942 16AE  
                                 l1934 167A                                   l1926 164A  
                                 l1918 162C                                   l1854 187E  
                                 l1846 1838                                   l1862 1CE8  
                                 l2398 19F2                                   l1880 1410  
                                 l1944 16B4                                   l1936 1682  
                                 l1928 1658                                   l1856 18B0  
                                 l1848 1848                                   l1864 1CF6  
                                 l1960 190A                                   l1890 1436  
                                 l1882 1414                                   l1874 13F6  
                                 l1938 1690                                   l1946 16BA  
                                 l1970 1DC2                                   l1866 1CFA  
                                 l1962 191E                                   l1954 18E2  
                                 l1868 1E7E                                   l1892 1448  
                                 l1884 1422                                   l1876 13FA  
                                 l1948 16CA                                   l1972 1DD0  
                                 l1964 192E                                   l1956 18F0  
                                 l1980 11C6                                   l1974 1F56  
                                 l1894 1450                                   l1886 142A  
                                 l1878 1408                                   l1966 1932  
                                 l1958 18FC                                   l1990 11FC  
                                 l1982 11CA                                   ?_pad 0011  
                                 l1976 1F58                                   l1896 1458  
                                 l1888 142E                                   l1968 195E  
                                 l1992 120C                                   l1984 11DE  
                                 l1978 1F60                                   l1898 1466  
                                 l1994 1218                                   l1986 11E6  
                                 l1996 1220                                   l1988 11F6  
                                 l1998 122C           lastSunday@dayOfWeekMonth31st 002D  
                                 STR_1 0E01                                   STR_2 0E13  
                                 STR_3 0E1F                                   u1000 18B0  
                                 u1001 18AC                                   u1010 1D16  
                                 u1011 1D12                                   u1020 1408  
                                 u1100 1672                                   u1021 1404  
                                 u1101 166E                                   u1030 1422  
                                 u1110 1690                                   u1031 141E  
                                 u1111 168C                                   u1040 1448  
                                 u1120 16A6                                   u1200 11DC  
                                 u1041 1444                                   u1121 16A2  
                                 u1050 1466                                   u1130 16CA  
                                 u1210 11F6                                   u1051 1462  
                                 u1131 16C6                                   u1211 11F2  
                                 u1060 1482                                   u1140 18F0  
                                 u1220 120C                                   u1300 1780  
                                 u1061 147E                                   u1141 18EC  
                                 u1221 1208                                   u1301 177C  
                                 u1310 1BDE                                   u1070 14A8  
                                 u1150 190A                                   u1230 12AA  
                                 u1311 1BDA                                   u1071 14A4  
                                 u1151 1906                                   u1231 12A6  
                                 u1320 1BF4                                   u1080 163E  
                                 u1160 1950                                   u1240 12BC  
                                 u1400 1108                                   u1321 1BF0  
                                 u1081 163A                                   u1161 194C  
                                 u1241 12B8                                   u1401 1104  
                                 u1330 1C0A                                   u1090 1658  
                                 u1170 195E                                   u1250 12CC  
                                 u1410 113C                                   u1331 1C06  
                                 u1091 1654                                   u1171 195A  
                                 u1251 12C8                                   u1411 1138  
                                 u1340 1C20                                   u1180 1DD0  
                                 u1260 12E6                                   u1420 115C  
                                 u1500 1CD2                                   u1341 1C1C  
                                 u1181 1DCC                                   u1261 12E2  
                                 u1421 1158                                   u1501 1CCE  
                                 _LATA 0F79                                   u1350 1C48  
                                 u1430 1A98                                   u1510 0F9E  
                                 u1270 12F4                                   u1190 11DA  
                                 _LATB 0F7A                                   u1351 1C44  
                                 u1431 1A94                                   u1511 0F9A  
                                 u1271 12F0                                   u1191 11D4  
                                 u1600 1394                                   u1360 1C66  
                                 u1440 1ABE                                   u1520 0FB0  
                                 u1280 1304                                   u1601 1390  
                                 u1361 1C62                                   u1441 1ABA  
                                 u1521 0FAC                                   u1281 1300  
                                 u1610 13AA                                   u1370 1C7C  
                                 u1450 1AE4                                   u1530 0FFC  
                                 u1290 170A                                   u1611 13A6  
                                 u1371 1C78                                   u1451 1AE0  
                                 u1531 0FF8                                   u1291 1706  
                                 _LATG 0F7F                                   u1460 1D2A  
                                 u1620 13C0                                   u1540 100E  
                                 u1700 17A2                                   u1380 106A  
                                 u1461 1D26                                   u1621 13BC  
                                 u1541 100A                                   u1701 179E  
                                 u1381 1066                                   u1630 13D6  
                                 u1470 1B0A                                   u1710 17BC  
                                 u1550 1E22                                   u1390 10E6  
                                 u1631 13D2                                   u1471 1B06  
                                 u1711 17B8                                   u1551 1E1E  
                                 u1391 10E2                                   u1640 13EC  
                                 u1560 133C                                   u1480 1B28  
                                 u1720 17EA                                   u1641 13E8  
                                 u1561 1338                                   u1481 1B24  
                                 u1721 17E6                                   u1650 1D66  
                                 u1570 1352                                   u1490 1B44  
                                 u1730 1804                                   u1651 1D62  
                                 u1571 134E                                   u1491 1B40  
                                 u1731 1800                                   u1660 1D82  
                                 u1580 1368                                   u1740 181C  
                                 u1661 1D7E                                   u1581 1364  
                                 u1741 1818                                   u1590 137E  
                                 u1750 14D4                                   u1670 1A08  
                                 u1591 137A                                   u1751 14D0  
                                 u1671 1A04                                   u1760 1506  
                                 u1680 1B76                                   u1761 1502  
                                 u1681 1B72                                   u1770 152A  
                                 u1690 1B88                                   u1771 1526  
                                 u1691 1B84                                   u1907 199C  
                                 u1780 1560                                   u1781 155C  
                                 u1917 19AC                                   u1927 19BE  
                                 u1937 19D4                                   u1947 1D4C  
                                 u1957 1C2E                                   u1967 1F5A  
                                 u1887 1A66                                   u1897 198C  
                                 abs@a 000A                                   _dbuf 008A  
                                 _main 157C                                   _dtoa 11C6  
                                 _hour 00AA                                   _prec 0056  
                                 pad@i 0016                                   pad@p 0013  
                                 fsr1h 0FE2                                   fsr2h 0FDA  
                                 indf2 0FDF                                   fsr1l 0FE1  
                                 fsr2l 0FD9                                   btemp 0059  
                         ?_LCD_setline 0001                                   prodh 0FF4  
                                 prodl 0FF3                                   start 00A6  
                     __end_of_DAC_init 1F56                      _changeHourDayYear 14BA  
                         ___param_bank 0000                     ?_changeHourDayYear 001B  
                                ??_abs 000C                                  ??_pad 0015  
                     __end_of_LCD_init 19F2                                  ?_main 0001  
                                ?_dtoa 0018                        __end_of___awdiv 14BA  
                      __end_of___awmod 16DC                    ??_changeHourDayYear 001E  
                      ___awdiv@divisor 0006                        __end_of___lwdiv 1B64  
                                i1l161 0072                                  i1l162 006E  
                                i1l163 0084                                  i1l165 0096  
                      __end_of___lwmod 1C9A                        ___awdiv@counter 0008  
                         vfpfcnvrt@fmt 0024                                  _TMR0H 0FD4  
                                _TMR0L 0FD3                                  _TRISA 0F81  
                                _TRISB 0F82                                  _TRISG 0F87  
                                _flags 0058                    read_prec_or_width@c 000C  
                  read_prec_or_width@n 000D                                  _fputc 1838  
                                _fputs 1CDC                                  pad@fp 0011  
                                _width 0054                                  _putch 1F64  
                                dtoa@d 0019                                  dtoa@i 0021  
                                dtoa@p 001D                                  dtoa@s 0020  
                                dtoa@w 001E                          ?_LCD_sendbyte 0005  
                 __end_of_findDSTdates 1BCE                                  tablat 0FF5  
                __end_of_Comp1_init_fe 1EEC                  __end_of_Comp1_init_re 1EC8  
                                ttemp5 005A                                  ttemp6 005D  
                                ttemp7 0061                                  status 0FD8  
         lastSunday@dayOfYearForDSTEnd 0035                                  wtemp8 005A  
                      __end_of_sprintf 1DC2              __end_of_changeHourDayYear 157C  
                        ?_increaseHour 0004                        __initialization 1EEC  
                         __end_of_main 162C                           __end_of_dtoa 132E  
                   lastSunday@leapYear 003D                      __end_of_LCD_E_TOG 1F64  
                               ??_main 0050                                 ??_dtoa 001B  
         main@fwd_daylight_savings_day 0080                          __activetblptr 0003  
           __end_of_read_prec_or_width 178A                           ?_time2String 0047  
                          lastSunday@h 0029                                 ?_fputc 0004  
                               ?_fputs 000C                         ??_LCD_sendbyte 0006  
                     ___awdiv@dividend 0004                                 ?_putch 0001  
                changeHourDayYear@leap 0020                  changeHourDayYear@hour 001B  
                               i1l2500 003C                                 i1l2510 0080  
                               i1l2502 0040                                 i1l2512 0092  
                               i1l2504 0044                                 i1l2506 0056  
                               i1l2508 006C                                 i1l2496 0026  
                               i1l2498 0036                  changeHourDayYear@year 001D  
                        vfpfcnvrt@done 002C                      _LEDarray_disp_bin 132E  
                       ??_increaseHour 000C                                 _LowISR 0018  
                   ?_LEDarray_disp_bin 0004                          ??_Timer0_init 0004  
                         vfprintf@cfmt 0031                                 ___wmul 1E7E  
                            ??___awdiv 0008                              ??___awmod 0008  
                            ??___lwdiv 000E                              ??___lwmod 0015  
                 read_prec_or_width@ap 000B                    ??_LEDarray_disp_bin 0006  
                               clear_0 1EF2                                 clear_1 1EFE  
                     ___awdiv@quotient 000A                        ___awmod@divisor 0006  
                               isa$std 0001                        ___awmod@counter 0008  
                               pad@buf 0012                                 dtoa@fp 0018  
                               fputc@c 0004                                 fputs@c 000E  
                               fputs@i 000F                                 fputs@s 000C  
          lastSunday@dayOfWeekMonth1st 002B                           __mediumconst 0000  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 putch@c 0001  
                            ?_DAC_init 0001                       __end_of_vfprintf 1CDC  
                            ??_sprintf 003A              __end_of_LEDarray_disp_bin 13F6  
                           __accesstop 0060                __end_of__initialization 1F04  
                            ?_LCD_init 0001                          ___rparam_used 0001  
                        _LEDarray_init 1E52                        _Interrupts_init 1F28  
                     findDSTdates@hour 0041                       findDSTdates@year 0045  
                       __pcstackCOMRAM 0001   increaseHour@fwd_daylight_savings_day 0006  
                        __end_of_fputc 18E2                          __end_of_fputs 1D18  
                        __end_of_putch 1F66                       increaseHour@hour 000A  
                  __end_of_Timer0_init 1E52            lastSunday@daysBeforeOctober 0033  
            increaseHour@backward_zone 000B                             ??_DAC_init 0004  
                              ??_fputc 0007                                ??_fputs 000E  
                              ??_putch 0004                             __pbssBANK0 008A  
                       _LCD_sendnibble 1BCE                             ??_LCD_init 0009  
                       ?_LEDarray_init 0001                         _LCD_sendstring 1DF6  
                              ?_LowISR 0001                                ?___wmul 0004  
                 __end_of_LCD_sendbyte 1D54                           _findDSTdates 1B64  
                           _isLeapYear 1A76                   __end_of_increaseHour 1838  
               __end_of_LCD_sendnibble 1C36                __end_of_Interrupts_init 1F42  
                       lastSunday@year 001B                 __end_of_LCD_sendstring 1E24  
                              __Hparam 0000                                __Lparam 0000  
                          _Timer0_init 1E24                             _lastSunday 0E2C  
                      _isLeapYear$1162 001A                                ___awdiv 13F6  
                              ___awmod 162C                                ___lwdiv 1AF0  
                              ___lwmod 1C36                              ?_vfprintf 002E  
                         __psmallconst 0E00                                __pcinit 1EEC  
                              __ramtop 0E00                             _initialise 1F0E  
                              __ptext0 157C                                __ptext1 19F2  
                              __ptext2 1D8E                                __ptext3 1C9A  
                              __ptext4 1044                                __ptext5 16DC  
                              __ptext6 11C6                                __ptext7 18E2  
                              __ptext8 1CDC                                __ptext9 1838  
                read_prec_or_width@fmt 000A                       ___awmod@dividend 0004  
                            _LCD_E_TOG 1F56                        LCD_setline@line 0009  
                              main@day 0088                                main@buf 0060  
                              _sprintf 1D8E                   end_of_initialization 1F04  
                      ?_LCD_sendnibble 0001                                fputc@fp 0006  
                      ??_LEDarray_init 0004                                fputs@fp 000D  
                      ?_LCD_sendstring 0009                     _read_prec_or_width 16DC  
findDSTdates@bkwd_daylight_savings_day 0048                      __end_of_vfpfcnvrt 11C6  
                              postdec2 0FDD                    ?_read_prec_or_width 000A  
                              postinc0 0FEE                                postinc1 0FE6  
                              postinc2 0FDE                       vfpfcnvrt@convarg 0028  
                           ??_vfprintf 0031         lastSunday@dayOfYearForDSTStart 0031  
                          ?_isLeapYear 0016                             ?_LCD_E_TOG 0001  
                            _TRISBbits 0F82                              _TRISCbits 0F83  
                            _TRISEbits 0F85                              _TRISFbits 0F86  
                            _TRISHbits 0F88                   ??_read_prec_or_width 000C  
                          _CM1CON0bits 0ED0                            _CM1CON1bits 0ED1  
                     ?_Interrupts_init 0001                            _CM2CON0bits 0ECC  
                          _CM2CON1bits 0ECD                            ?_lastSunday 001B  
                       __end_of_LowISR 00A6                            vfpfcnvrt@ap 0025  
                          vfpfcnvrt@cp 002D                            vfpfcnvrt@fp 0023  
                       __end_of___wmul 1EA4                   LCD_sendnibble@number 0004  
                          ?_initialise 0001                    start_initialization 1EEC  
                          __end_of_abs 1DF6                            __end_of_pad 196C  
                         _LCD_sendbyte 1D18                          _Comp1_init_fe 1EC8  
                        _Comp1_init_re 1EA4                   changeHourDayYear@day 001C  
                        ??_LCD_setline 0009                               ??_LowISR 0001  
                         _increaseHour 178A                            vfprintf@fmt 002F  
                 LCD_sendstring@string 0009                               ??___wmul 0008  
                          __pbssCOMRAM 0050                            ??_LCD_E_TOG 0004  
                        __pcstackBANK0 0060                        findDSTdates@day 0043  
                      increaseHour@day 0004                         ?_Comp1_init_fe 0001  
                       ?_Comp1_init_re 0001                       ___lwdiv@dividend 000A  
                            _dtoa$1962 001B                           ?_Timer0_init 0001  
                             ?___awdiv 0004                               ?___awmod 0004  
                  __end_of_LCD_setline 1D8E                               ?___lwdiv 000A  
                             ?___lwmod 0011                            __pintcodelo 0018  
                          __smallconst 0E00                          ??_time2String 004E  
                     ??_LCD_sendnibble 0004  increaseHour@bkwd_daylight_savings_day 0008  
                             _DAC_init 1F42                       ___lwdiv@quotient 000E  
                     ??_LCD_sendstring 000A                               ?_sprintf 0032  
                     LCD_sendbyte@Byte 0008                       LCD_sendbyte@type 0005  
                       ___wmul@product 0008                               _LATAbits 0F79  
                             _LATBbits 0F7A                               _LATCbits 0F7B  
                             _LATEbits 0F7D                               _LATFbits 0F7E  
                             _LATGbits 0F7F                               _LATHbits 0F80  
                             _LCD_init 196C                               _IPR0bits 0E1F  
                             _IPR2bits 0E21                               _PIE0bits 0E29  
                             _PIE2bits 0E2B                               i1u183_20 0036  
                             i1u183_21 0032                               i1u184_20 0056  
                             i1u184_21 0052                               i1u185_20 006C  
                             i1u185_21 0068                               i1u186_20 0080  
                             i1u186_21 007C                               i1u187_20 0092  
                             i1u187_21 008E                               _PIR0bits 0E33  
                             _PIR2bits 0E35                           time2String@h 0048  
                            _vfpfcnvrt 1044                      ___wmul@multiplier 0004  
                         ??_isLeapYear 0018                             _CM1NCHbits 0ED2  
                      lastSunday@month 001D                             _CM1PCHbits 0ED3  
                           _CM2NCHbits 0ECE                             _CM2PCHbits 0ECF  
            lastSunday@daysBeforeMarch 002F                        ??_Comp1_init_fe 0004  
                      ??_Comp1_init_re 0004                    __end_of_time2String 1A76  
                __end_of_LEDarray_init 1E7E                            _LCD_setline 1D54  
                             __Hrparam 0000          lastSunday@lastSundayDateMonth 003F  
                   __end_of_isLeapYear 1AF0                           ??_lastSunday 001F  
                           vfprintf@ap 0030                               __Lrparam 0000  
                           vfprintf@fp 002E                             ?_vfpfcnvrt 0023  
                         ??_initialise 000A                        _lastSunday$1173 0039  
                      _lastSunday$1176 003B                             _ANSELFbits 0EB4  
                      _lastSunday$2256 0037                             sprintf@fmt 0033  
                           _T0CON0bits 0FD5                             _T0CON1bits 0FD6  
                      ___lwdiv@divisor 000C                        ___lwdiv@counter 0010  
                             __ptext10 1F64                               __ptext11 1DC2  
                             __ptext20 1EA4                               __ptext12 162C  
                             __ptext21 1EC8                               __ptext13 13F6  
                             __ptext30 1C36                               __ptext22 1F42  
                             __ptext14 1DF6                               __ptext31 132E  
                             __ptext23 178A                               __ptext15 1F0E  
                             __ptext32 1D54                               __ptext24 1B64  
                             __ptext16 1E24                               __ptext33 1D18  
                             __ptext25 0E2C                               __ptext17 1E52  
                             __ptext34 1BCE                               __ptext26 1E7E  
                             __ptext18 196C                               __ptext35 1F56  
                             __ptext27 1AF0                               __ptext19 1F28  
                             __ptext28 14BA                               __ptext29 1A76  
               LCD_sendbyte@highNibble 0006                     __end_of_lastSunday 1044  
              LEDarray_disp_bin@number 0004   findDSTdates@fwd_daylight_savings_day 0047  
                   __end_of_initialise 1F28          main@bkwd_daylight_savings_day 0082  
                             isa$xinst 0000                               int$flags 0059  
                      time2String@year 004C                               _vfprintf 1C9A  
                        ?_findDSTdates 0041                               main@year 0086  
                           _INTCONbits 0FF2                            _time2String 19F2  
                             intlevel1 0000                              sprintf@ap 003A  
                         _DAC1CON0bits 0EC6                           _DAC1CON1bits 0EC7  
                     ___lwmod@dividend 0011                         time2String@day 004A  
                       time2String@buf 0047                         ??_findDSTdates 0049  
                          ??_vfpfcnvrt 0026                               sprintf@f 003B  
                             sprintf@s 0032                  LCD_sendbyte@lowNibble 0007  
                      ___lwmod@divisor 0013                        ___lwmod@counter 0015  
                       isLeapYear@year 0016                calc_max_PPM@loopCounter 0050  
