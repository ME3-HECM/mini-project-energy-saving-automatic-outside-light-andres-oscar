

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 09 11:33:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     _CM2CON1bits	set	3789
    89   000000                     _CM2PCHbits	set	3791
    90   000000                     _CM1CON1bits	set	3793
    91   000000                     _TRISBbits	set	3970
    92   000000                     _LATBbits	set	3962
    93   000000                     _LATAbits	set	3961
    94   000000                     _LATGbits	set	3967
    95   000000                     _IPR0bits	set	3615
    96   000000                     _PIE0bits	set	3625
    97   000000                     _T0CON0bits	set	4053
    98   000000                     _T0CON1bits	set	4054
    99   000000                     _INTCONbits	set	4082
   100   000000                     _PIE2bits	set	3627
   101   000000                     _PIR0bits	set	3635
   102   000000                     _PIR2bits	set	3637
   103   000000                     _ANSELFbits	set	3764
   104   000000                     _LATA	set	3961
   105   000000                     _TMR0L	set	4051
   106   000000                     _TMR0H	set	4052
   107   000000                     _IPR2bits	set	3617
   108   000000                     _LATEbits	set	3965
   109   000000                     _LATCbits	set	3963
   110   000000                     _LATFbits	set	3966
   111   000000                     _LATB	set	3962
   112   000000                     _TRISEbits	set	3973
   113   000000                     _TRISCbits	set	3971
   114   000000                     _TRISFbits	set	3974
   115   000000                     _TRISB	set	3970
   116   000000                     _TRISA	set	3969
   117   000000                     _LATHbits	set	3968
   118   000000                     _LATG	set	3967
   119   000000                     _TRISHbits	set	3976
   120   000000                     _TRISG	set	3975
   121   000000                     _DAC1CON0bits	set	3782
   122   000000                     _CM2CON0bits	set	3788
   123   000000                     _CM2NCHbits	set	3790
   124   000000                     _CM1CON0bits	set	3792
   125   000000                     _CM1NCHbits	set	3794
   126   000000                     _DAC1CON1bits	set	3783
   127   000000                     _CM1PCHbits	set	3795
   128                           
   129                           	psect	smallconst
   130   000E00                     __psmallconst:
   131                           	callstack 0
   132   000E00  00                 	db	0
   133   000E01                     
   134                           ; BSR set to: 14
   135   000E01  56                 	db	86	;'V'
   136   000E02  6F                 	db	111	;'o'
   137   000E03  6C                 	db	108	;'l'
   138   000E04  74                 	db	116	;'t'
   139   000E05  61                 	db	97	;'a'
   140   000E06  67                 	db	103	;'g'
   141   000E07  65                 	db	101	;'e'
   142   000E08  20                 	db	32
   143   000E09  3D                 	db	61	;'='
   144   000E0A  20                 	db	32
   145   000E0B  25                 	db	37
   146   000E0C  64                 	db	100	;'d'
   147   000E0D  2E                 	db	46
   148   000E0E  25                 	db	37
   149   000E0F  30                 	db	48	;'0'
   150   000E10  32                 	db	50	;'2'
   151   000E11  64                 	db	100	;'d'
   152   000E12  00                 	db	0
   153   000E13                     STR_2:
   154                           
   155                           ; BSR set to: 14
   156   000E13  48                 	db	72	;'H'
   157   000E14  3A                 	db	58	;':'
   158   000E15  25                 	db	37
   159   000E16  30                 	db	48	;'0'
   160   000E17  32                 	db	50	;'2'
   161   000E18  64                 	db	100	;'d'
   162   000E19  20                 	db	32
   163   000E1A  44                 	db	68	;'D'
   164   000E1B  3A                 	db	58	;':'
   165   000E1C  25                 	db	37
   166   000E1D  30                 	db	48	;'0'
   167   000E1E  33                 	db	51	;'3'
   168   000E1F  64                 	db	100	;'d'
   169   000E20  00                 	db	0
   170   000E21                     STR_4:
   171                           
   172                           ; BSR set to: 14
   173   000E21  59                 	db	89	;'Y'
   174   000E22  3A                 	db	58	;':'
   175   000E23  25                 	db	37
   176   000E24  64                 	db	100	;'d'
   177   000E25  20                 	db	32
   178   000E26  4E                 	db	78	;'N'
   179   000E27  6F                 	db	111	;'o'
   180   000E28  72                 	db	114	;'r'
   181   000E29  6D                 	db	109	;'m'
   182   000E2A  61                 	db	97	;'a'
   183   000E2B  6C                 	db	108	;'l'
   184   000E2C  00                 	db	0
   185   000E2D                     STR_3:
   186                           
   187                           ; BSR set to: 14
   188   000E2D  59                 	db	89	;'Y'
   189   000E2E  3A                 	db	58	;':'
   190   000E2F  25                 	db	37
   191   000E30  64                 	db	100	;'d'
   192   000E31  20                 	db	32
   193   000E32  4C                 	db	76	;'L'
   194   000E33  65                 	db	101	;'e'
   195   000E34  61                 	db	97	;'a'
   196   000E35  70                 	db	112	;'p'
   197   000E36  00                 	db	0
   198   000E37  00                 	db	0	; dummy byte at the end
   199   000000                     
   200                           ; #config settings
   201                           
   202                           	psect	cinit
   203   001FCC                     __pcinit:
   204                           	callstack 0
   205   001FCC                     start_initialization:
   206                           	callstack 0
   207   001FCC                     __initialization:
   208                           	callstack 0
   209                           
   210                           ; Clear objects allocated to BANK0 (34 bytes)
   211   001FCC  EE00  F08E         	lfsr	0,__pbssBANK0
   212   001FD0  0E22               	movlw	34
   213   001FD2                     clear_0:
   214   001FD2  6AEE               	clrf	postinc0,c
   215   001FD4  06E8               	decf	wreg,f,c
   216   001FD6  E1FD               	bnz	clear_0
   217                           
   218                           ; Clear objects allocated to COMRAM (9 bytes)
   219   001FD8  EE00  F050         	lfsr	0,__pbssCOMRAM
   220   001FDC  0E09               	movlw	9
   221   001FDE                     clear_1:
   222   001FDE  6AEE               	clrf	postinc0,c
   223   001FE0  06E8               	decf	wreg,f,c
   224   001FE2  E1FD               	bnz	clear_1
   225   001FE4                     end_of_initialization:
   226                           	callstack 0
   227   001FE4                     __end_of__initialization:
   228                           	callstack 0
   229   001FE4  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230   001FE6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231   001FE8  0100               	movlb	0
   232   001FEA  EF9D  F009         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMRAM
   235   000050                     __pbssCOMRAM:
   236                           	callstack 0
   237   000050                     calc_max_PPM@loopCounter:
   238                           	callstack 0
   239   000050                     	ds	4
   240   000054                     _width:
   241                           	callstack 0
   242   000054                     	ds	2
   243   000056                     _prec:
   244                           	callstack 0
   245   000056                     	ds	2
   246   000058                     _flags:
   247                           	callstack 0
   248   000058                     	ds	1
   249                           
   250                           	psect	bssBANK0
   251   00008E                     __pbssBANK0:
   252                           	callstack 0
   253   00008E                     _dbuf:
   254                           	callstack 0
   255   00008E                     	ds	32
   256   0000AE                     _hour:
   257                           	callstack 0
   258   0000AE                     	ds	2
   259                           
   260                           	psect	cstackBANK0
   261   000060                     __pcstackBANK0:
   262                           	callstack 0
   263   000060                     main@buf:
   264                           	callstack 0
   265                           
   266                           ; 32 bytes @ 0x0
   267   000060                     	ds	32
   268   000080                     main@leap:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x20
   272   000080                     	ds	2
   273   000082                     main@fwd_daylight_savings_day:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x22
   277   000082                     	ds	2
   278   000084                     main@bkwd_daylight_savings_day:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x24
   282   000084                     	ds	2
   283   000086                     main@backward_zone:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x26
   287   000086                     	ds	2
   288   000088                     main@synced:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x28
   292   000088                     	ds	2
   293   00008A                     main@year:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2A
   297   00008A                     	ds	2
   298   00008C                     main@day:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x2C
   302   00008C                     	ds	2
   303                           
   304                           	psect	cstackCOMRAM
   305   000001                     __pcstackCOMRAM:
   306                           	callstack 0
   307   000001                     ??_LowISR:
   308   000001                     
   309                           ; 1 bytes @ 0x0
   310   000001                     	ds	3
   311   000004                     ?___wmul:
   312                           	callstack 0
   313   000004                     ?___awdiv:
   314                           	callstack 0
   315   000004                     ?___awmod:
   316                           	callstack 0
   317   000004                     changeHourDayYear@hour:
   318                           	callstack 0
   319   000004                     sunSync@hour:
   320                           	callstack 0
   321   000004                     LCD_sendnibble@number:
   322                           	callstack 0
   323   000004                     LEDarray_disp_bin@number:
   324                           	callstack 0
   325   000004                     hourChangeDST@day:
   326                           	callstack 0
   327   000004                     ___wmul@multiplier:
   328                           	callstack 0
   329   000004                     ___awdiv@dividend:
   330                           	callstack 0
   331   000004                     ___awmod@dividend:
   332                           	callstack 0
   333   000004                     fputc@c:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x3
   337   000004                     	ds	1
   338   000005                     changeHourDayYear@day:
   339                           	callstack 0
   340   000005                     LCD_sendbyte@type:
   341                           	callstack 0
   342   000005                     sunSync@day:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x4
   346   000005                     	ds	1
   347   000006                     changeHourDayYear@year:
   348                           	callstack 0
   349   000006                     LCD_sendbyte@highNibble:
   350                           	callstack 0
   351   000006                     fputc@fp:
   352                           	callstack 0
   353   000006                     hourChangeDST@fwd_daylight_savings_day:
   354                           	callstack 0
   355   000006                     ___wmul@multiplicand:
   356                           	callstack 0
   357   000006                     ___awdiv@divisor:
   358                           	callstack 0
   359   000006                     ___awmod@divisor:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x5
   363   000006                     	ds	1
   364   000007                     ??_fputc:
   365   000007                     sunSync@synced:
   366                           	callstack 0
   367   000007                     LCD_sendbyte@lowNibble:
   368                           	callstack 0
   369   000007                     changeHourDayYear@leap:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x6
   373   000007                     	ds	1
   374   000008                     LCD_sendbyte@Byte:
   375                           	callstack 0
   376   000008                     ___awdiv@counter:
   377                           	callstack 0
   378   000008                     ___awmod@counter:
   379                           	callstack 0
   380   000008                     hourChangeDST@bkwd_daylight_savings_day:
   381                           	callstack 0
   382   000008                     ___wmul@product:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x7
   386   000008                     	ds	1
   387   000009                     ??_LCD_init:
   388   000009                     changeHourDayYear@synced:
   389                           	callstack 0
   390   000009                     LCD_setline@line:
   391                           	callstack 0
   392   000009                     LCD_sendstring@string:
   393                           	callstack 0
   394   000009                     ___awdiv@sign:
   395                           	callstack 0
   396   000009                     ___awmod@sign:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x8
   400   000009                     	ds	1
   401   00000A                     ?_abs:
   402                           	callstack 0
   403   00000A                     ?___lwdiv:
   404                           	callstack 0
   405   00000A                     ?_read_prec_or_width:
   406                           	callstack 0
   407   00000A                     hourChangeDST@hour:
   408                           	callstack 0
   409   00000A                     read_prec_or_width@fmt:
   410                           	callstack 0
   411   00000A                     ___awdiv@quotient:
   412                           	callstack 0
   413   00000A                     ___lwdiv@dividend:
   414                           	callstack 0
   415   00000A                     abs@a:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x9
   419   00000A                     	ds	1
   420   00000B                     hourChangeDST@backward_zone:
   421                           	callstack 0
   422   00000B                     read_prec_or_width@ap:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xA
   426   00000B                     	ds	1
   427   00000C                     ??_abs:
   428   00000C                     read_prec_or_width@c:
   429                           	callstack 0
   430   00000C                     fputs@s:
   431                           	callstack 0
   432   00000C                     ___lwdiv@divisor:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xB
   436   00000C                     	ds	1
   437   00000D                     fputs@fp:
   438                           	callstack 0
   439   00000D                     read_prec_or_width@n:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xC
   443   00000D                     	ds	1
   444   00000E                     fputs@c:
   445                           	callstack 0
   446   00000E                     ___lwdiv@quotient:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xD
   450   00000E                     	ds	1
   451   00000F                     fputs@i:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xE
   455   00000F                     	ds	1
   456   000010                     ___lwdiv@counter:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xF
   460   000010                     	ds	1
   461   000011                     ?___lwmod:
   462                           	callstack 0
   463   000011                     pad@fp:
   464                           	callstack 0
   465   000011                     ___lwmod@dividend:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x10
   469   000011                     	ds	1
   470   000012                     pad@buf:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x11
   474   000012                     	ds	1
   475   000013                     ___lwmod@divisor:
   476                           	callstack 0
   477   000013                     pad@p:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x12
   481   000013                     	ds	2
   482   000015                     ??_pad:
   483   000015                     ___lwmod@counter:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x14
   487   000015                     	ds	1
   488   000016                     ?_isLeapYear:
   489                           	callstack 0
   490   000016                     isLeapYear@year:
   491                           	callstack 0
   492   000016                     pad@i:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x15
   496   000016                     	ds	2
   497   000018                     ??_isLeapYear:
   498   000018                     dtoa@fp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x17
   502   000018                     	ds	1
   503   000019                     dtoa@d:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x18
   507   000019                     	ds	1
   508   00001A                     _isLeapYear$1208:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x19
   512   00001A                     	ds	1
   513   00001B                     ?_lastSunday:
   514                           	callstack 0
   515   00001B                     lastSunday@year:
   516                           	callstack 0
   517   00001B                     _dtoa$2014:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1A
   521   00001B                     	ds	2
   522   00001D                     dtoa@p:
   523                           	callstack 0
   524   00001D                     lastSunday@month:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1C
   528   00001D                     	ds	1
   529   00001E                     dtoa@w:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1D
   533   00001E                     	ds	1
   534   00001F                     ??_lastSunday:
   535                           
   536                           ; 1 bytes @ 0x1E
   537   00001F                     	ds	1
   538   000020                     dtoa@s:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x1F
   542   000020                     	ds	1
   543   000021                     dtoa@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x20
   547   000021                     	ds	2
   548   000023                     vfpfcnvrt@fp:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x22
   552   000023                     	ds	1
   553   000024                     vfpfcnvrt@fmt:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x23
   557   000024                     	ds	1
   558   000025                     vfpfcnvrt@ap:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x24
   562   000025                     	ds	1
   563   000026                     ??_vfpfcnvrt:
   564                           
   565                           ; 1 bytes @ 0x25
   566   000026                     	ds	2
   567   000028                     vfpfcnvrt@convarg:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x27
   571   000028                     	ds	1
   572   000029                     lastSunday@h:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x28
   576   000029                     	ds	2
   577   00002B                     lastSunday@dayOfWeekMonth1st:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x2A
   581   00002B                     	ds	1
   582   00002C                     vfpfcnvrt@done:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x2B
   586   00002C                     	ds	1
   587   00002D                     vfpfcnvrt@cp:
   588                           	callstack 0
   589   00002D                     lastSunday@dayOfWeekMonth31st:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2C
   593   00002D                     	ds	1
   594   00002E                     ?_vfprintf:
   595                           	callstack 0
   596   00002E                     vfprintf@fp:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x2D
   600   00002E                     	ds	1
   601   00002F                     vfprintf@fmt:
   602                           	callstack 0
   603   00002F                     lastSunday@daysBeforeMarch:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2E
   607   00002F                     	ds	1
   608   000030                     vfprintf@ap:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x2F
   612   000030                     	ds	1
   613   000031                     vfprintf@cfmt:
   614                           	callstack 0
   615   000031                     lastSunday@dayOfYearForDSTStart:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x30
   619   000031                     	ds	1
   620   000032                     ?_sprintf:
   621                           	callstack 0
   622   000032                     sprintf@s:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x31
   626   000032                     	ds	1
   627   000033                     sprintf@fmt:
   628                           	callstack 0
   629   000033                     lastSunday@daysBeforeOctober:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x32
   633   000033                     	ds	2
   634   000035                     lastSunday@dayOfYearForDSTEnd:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x34
   638   000035                     	ds	2
   639   000037                     _lastSunday$2306:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x36
   643   000037                     	ds	1
   644   000038                     sprintf@ap:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x37
   648   000038                     	ds	1
   649   000039                     _lastSunday$1218:
   650                           	callstack 0
   651   000039                     sprintf@f:
   652                           	callstack 0
   653                           
   654                           ; 12 bytes @ 0x38
   655   000039                     	ds	2
   656   00003B                     _lastSunday$1221:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x3A
   660   00003B                     	ds	2
   661   00003D                     lastSunday@leapYear:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x3C
   665   00003D                     	ds	2
   666   00003F                     lastSunday@lastSundayDateMonth:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x3E
   670   00003F                     	ds	2
   671   000041                     findDSTdates@hour:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x40
   675   000041                     	ds	2
   676   000043                     findDSTdates@day:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x42
   680   000043                     	ds	2
   681   000045                     time2String@buf:
   682                           	callstack 0
   683   000045                     findDSTdates@year:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x44
   687   000045                     	ds	1
   688   000046                     time2String@h:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x45
   692   000046                     	ds	1
   693   000047                     findDSTdates@fwd_daylight_savings_day:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x46
   697   000047                     	ds	1
   698   000048                     findDSTdates@bkwd_daylight_savings_day:
   699                           	callstack 0
   700   000048                     time2String@day:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x47
   704   000048                     	ds	1
   705   000049                     
   706                           ; 1 bytes @ 0x48
   707   000049                     	ds	1
   708   00004A                     time2String@year:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x49
   712   00004A                     	ds	2
   713   00004C                     time2String@leap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x4B
   717   00004C                     	ds	2
   718   00004E                     ??_time2String:
   719                           
   720                           ; 1 bytes @ 0x4D
   721   00004E                     	ds	2
   722   000050                     
   723                           ; 1 bytes @ 0x4F
   724 ;;
   725 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   726 ;;
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 20 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  buf            32    0[BANK0 ] unsigned char [32]
   734 ;;  day             2   44[BANK0 ] unsigned int 
   735 ;;  year            2   42[BANK0 ] unsigned int 
   736 ;;  synced          2   40[BANK0 ] unsigned int 
   737 ;;  backward_zon    2   38[BANK0 ] unsigned int 
   738 ;;  bkwd_dayligh    2   36[BANK0 ] unsigned int 
   739 ;;  fwd_daylight    2   34[BANK0 ] unsigned int 
   740 ;;  leap            2   32[BANK0 ] unsigned int 
   741 ;;  daylight_sav    2    0        unsigned int 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;Total ram usage:       46 bytes
   756 ;; Hardware stack levels required when called: 10
   757 ;; This function calls:
   758 ;;		_LCD_setline
   759 ;;		_LEDarray_disp_bin
   760 ;;		_changeHourDayYear
   761 ;;		_findDSTdates
   762 ;;		_hourChangeDST
   763 ;;		_initialise
   764 ;;		_isLeapYear
   765 ;;		_sunSync
   766 ;;		_time2String
   767 ;; This function is called by:
   768 ;;		Startup code after reset
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text0
   773   00133A                     __ptext0:
   774                           	callstack 0
   775   00133A                     _main:
   776                           	callstack 21
   777   00133A                     
   778                           ;main.c: 22:     unsigned int synced = 0;
   779   00133A  0E00               	movlw	0
   780   00133C  0100               	movlb	0	; () banked
   781   00133E  6F89               	movwf	(main@synced+1)& (0+255),b
   782   001340  0E00               	movlw	0
   783   001342  6F88               	movwf	main@synced& (0+255),b
   784                           
   785                           ;main.c: 24:     unsigned int day = 1;
   786   001344  0E00               	movlw	0
   787   001346  6F8D               	movwf	(main@day+1)& (0+255),b
   788   001348  0E01               	movlw	1
   789   00134A  6F8C               	movwf	main@day& (0+255),b
   790                           
   791                           ;main.c: 25:     unsigned int year = 2024;
   792   00134C  0E07               	movlw	7
   793   00134E  6F8B               	movwf	(main@year+1)& (0+255),b
   794   001350  0EE8               	movlw	232
   795   001352  6F8A               	movwf	main@year& (0+255),b
   796                           
   797                           ;main.c: 26:     unsigned int leap;;main.c: 27:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 28:     unsigned int bkwd_daylight_savings_day;;main.c: 29:     unsigned int 
      +                          backward_zone = 0;
   798   001354  0E00               	movlw	0
   799   001356  6F87               	movwf	(main@backward_zone+1)& (0+255),b
   800   001358  0E00               	movlw	0
   801   00135A  6F86               	movwf	main@backward_zone& (0+255),b
   802   00135C                     
   803                           ; BSR set to: 0
   804                           ;main.c: 30:     char buf[32];;main.c: 32:     initialise();
   805   00135C  ECF7  F00F         	call	_initialise	;wreg free
   806   001360                     l2520:
   807                           
   808                           ;main.c: 35:         leap = isLeapYear(year);
   809   001360  C08A  F016         	movff	main@year,isLeapYear@year
   810   001364  C08B  F017         	movff	main@year+1,isLeapYear@year+1
   811   001368  EC70  F00D         	call	_isLeapYear	;wreg free
   812   00136C  C016  F080         	movff	?_isLeapYear,main@leap
   813   001370  C017  F081         	movff	?_isLeapYear+1,main@leap+1
   814   001374                     
   815                           ;main.c: 37:         LEDarray_disp_bin(hour);
   816   001374  C0AE  F004         	movff	_hour,LEDarray_disp_bin@number
   817   001378  C0AF  F005         	movff	_hour+1,LEDarray_disp_bin@number+1
   818   00137C  EC7D  F00A         	call	_LEDarray_disp_bin	;wreg free
   819   001380                     
   820                           ;main.c: 39:         LCD_setline(1);
   821   001380  0E01               	movlw	1
   822   001382  EC1A  F00F         	call	_LCD_setline
   823   001386                     
   824                           ;main.c: 41:         time2String(buf,hour,day,year,leap);
   825   001386  0E60               	movlw	low main@buf
   826   001388  6E45               	movwf	time2String@buf^0,c
   827   00138A  C0AE  F046         	movff	_hour,time2String@h
   828   00138E  C0AF  F047         	movff	_hour+1,time2String@h+1
   829   001392  C08C  F048         	movff	main@day,time2String@day
   830   001396  C08D  F049         	movff	main@day+1,time2String@day+1
   831   00139A  C08A  F04A         	movff	main@year,time2String@year
   832   00139E  C08B  F04B         	movff	main@year+1,time2String@year+1
   833   0013A2  C080  F04C         	movff	main@leap,time2String@leap
   834   0013A6  C081  F04D         	movff	main@leap+1,time2String@leap+1
   835   0013AA  EC9E  F00C         	call	_time2String	;wreg free
   836   0013AE                     
   837                           ;main.c: 43:         findDSTdates(hour, day, year,&fwd_daylight_savings_day, &bkwd_dayli
      +                          ght_savings_day);
   838   0013AE  C0AE  F041         	movff	_hour,findDSTdates@hour
   839   0013B2  C0AF  F042         	movff	_hour+1,findDSTdates@hour+1
   840   0013B6  C08C  F043         	movff	main@day,findDSTdates@day
   841   0013BA  C08D  F044         	movff	main@day+1,findDSTdates@day+1
   842   0013BE  C08A  F045         	movff	main@year,findDSTdates@year
   843   0013C2  C08B  F046         	movff	main@year+1,findDSTdates@year+1
   844   0013C6  0E82               	movlw	low main@fwd_daylight_savings_day
   845   0013C8  6E47               	movwf	findDSTdates@fwd_daylight_savings_day^0,c
   846   0013CA  0E84               	movlw	low main@bkwd_daylight_savings_day
   847   0013CC  6E48               	movwf	findDSTdates@bkwd_daylight_savings_day^0,c
   848   0013CE  EC22  F00E         	call	_findDSTdates	;wreg free
   849   0013D2                     
   850                           ;main.c: 48:         hourChangeDST(day, fwd_daylight_savings_day, bkwd_daylight_savings_
      +                          day, &hour, &backward_zone);
   851   0013D2  C08C  F004         	movff	main@day,hourChangeDST@day
   852   0013D6  C08D  F005         	movff	main@day+1,hourChangeDST@day+1
   853   0013DA  C082  F006         	movff	main@fwd_daylight_savings_day,hourChangeDST@fwd_daylight_savings_day
   854   0013DE  C083  F007         	movff	main@fwd_daylight_savings_day+1,hourChangeDST@fwd_daylight_savings_day+1
   855   0013E2  C084  F008         	movff	main@bkwd_daylight_savings_day,hourChangeDST@bkwd_daylight_savings_day
   856   0013E6  C085  F009         	movff	main@bkwd_daylight_savings_day+1,hourChangeDST@bkwd_daylight_savings_day+1
   857   0013EA  0EAE               	movlw	low _hour
   858   0013EC  6E0A               	movwf	hourChangeDST@hour^0,c
   859   0013EE  0E86               	movlw	low main@backward_zone
   860   0013F0  6E0B               	movwf	hourChangeDST@backward_zone^0,c
   861   0013F2  ECF2  F00B         	call	_hourChangeDST	;wreg free
   862   0013F6                     
   863                           ;main.c: 50:         changeHourDayYear(&hour, &day, &year, leap, &synced);
   864   0013F6  0EAE               	movlw	low _hour
   865   0013F8  6E04               	movwf	changeHourDayYear@hour^0,c
   866   0013FA  0E8C               	movlw	low main@day
   867   0013FC  6E05               	movwf	changeHourDayYear@day^0,c
   868   0013FE  0E8A               	movlw	low main@year
   869   001400  6E06               	movwf	changeHourDayYear@year^0,c
   870   001402  C080  F007         	movff	main@leap,changeHourDayYear@leap
   871   001406  C081  F008         	movff	main@leap+1,changeHourDayYear@leap+1
   872   00140A  0E88               	movlw	low main@synced
   873   00140C  6E09               	movwf	changeHourDayYear@synced^0,c
   874   00140E  EC17  F00A         	call	_changeHourDayYear	;wreg free
   875   001412                     
   876                           ;main.c: 52:         sunSync(&hour, day, &synced);
   877   001412  0EAE               	movlw	low _hour
   878   001414  6E04               	movwf	sunSync@hour^0,c
   879   001416  C08C  F005         	movff	main@day,sunSync@day
   880   00141A  C08D  F006         	movff	main@day+1,sunSync@day+1
   881   00141E  0E88               	movlw	low main@synced
   882   001420  6E07               	movwf	sunSync@synced^0,c
   883   001422  ECAD  F00D         	call	_sunSync	;wreg free
   884   001426  EFB0  F009         	goto	l2520
   885   00142A  EF5E  F000         	goto	start
   886   00142E                     __end_of_main:
   887                           	callstack 0
   888                           
   889 ;; *************** function _time2String *****************
   890 ;; Defined at:
   891 ;;		line 152 in file "LCD.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  buf             1   68[COMRAM] PTR unsigned char 
   894 ;;		 -> main@buf(32), 
   895 ;;  h               2   69[COMRAM] unsigned int 
   896 ;;  day             2   71[COMRAM] unsigned int 
   897 ;;  year            2   73[COMRAM] unsigned int 
   898 ;;  leap            2   75[COMRAM] unsigned int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   910 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;Total ram usage:       11 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 9
   917 ;; This function calls:
   918 ;;		_LCD_sendstring
   919 ;;		_LCD_setline
   920 ;;		_sprintf
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text1
   927   00193C                     __ptext1:
   928                           	callstack 0
   929   00193C                     _time2String:
   930                           	callstack 21
   931   00193C                     
   932                           ;LCD.c: 154:     LCD_setline(1);
   933   00193C  0E01               	movlw	1
   934   00193E  EC1A  F00F         	call	_LCD_setline
   935   001942                     
   936                           ;LCD.c: 155:     sprintf(buf,"H:%02d D:%03d",h,day);
   937   001942  C045  F032         	movff	time2String@buf,sprintf@s
   938   001946  0E13               	movlw	low STR_2
   939   001948  6E33               	movwf	sprintf@fmt^0,c
   940   00194A  C046  F034         	movff	time2String@h,?_sprintf+2
   941   00194E  C047  F035         	movff	time2String@h+1,?_sprintf+3
   942   001952  C048  F036         	movff	time2String@day,?_sprintf+4
   943   001956  C049  F037         	movff	time2String@day+1,?_sprintf+5
   944   00195A  EC37  F00F         	call	_sprintf	;wreg free
   945   00195E                     
   946                           ;LCD.c: 156:     LCD_sendstring(buf);
   947   00195E  C045  F009         	movff	time2String@buf,LCD_sendstring@string
   948   001962  EC6B  F00F         	call	_LCD_sendstring	;wreg free
   949   001966                     
   950                           ;LCD.c: 158:     LCD_setline(2);
   951   001966  0E02               	movlw	2
   952   001968  EC1A  F00F         	call	_LCD_setline
   953   00196C                     
   954                           ;LCD.c: 159:     if (leap == 1){
   955   00196C  044C               	decf	time2String@leap^0,w,c
   956   00196E  104D               	iorwf	(time2String@leap+1)^0,w,c
   957   001970  A4D8               	btfss	status,2,c
   958   001972  EFBD  F00C         	goto	u1731
   959   001976  EFBF  F00C         	goto	u1730
   960   00197A                     u1731:
   961   00197A  EFCF  F00C         	goto	l2452
   962   00197E                     u1730:
   963   00197E                     
   964                           ;LCD.c: 160:         sprintf(buf,"Y:%d Leap",year);
   965   00197E  C045  F032         	movff	time2String@buf,sprintf@s
   966   001982  0E2D               	movlw	low STR_3
   967   001984  6E33               	movwf	sprintf@fmt^0,c
   968   001986  C04A  F034         	movff	time2String@year,?_sprintf+2
   969   00198A  C04B  F035         	movff	time2String@year+1,?_sprintf+3
   970   00198E  EC37  F00F         	call	_sprintf	;wreg free
   971   001992                     l2450:
   972                           
   973                           ;LCD.c: 161:         LCD_sendstring(buf);
   974   001992  C045  F009         	movff	time2String@buf,LCD_sendstring@string
   975   001996  EC6B  F00F         	call	_LCD_sendstring	;wreg free
   976                           
   977                           ;LCD.c: 162:     }
   978   00199A  EFDB  F00C         	goto	l2456
   979   00199E                     l2452:
   980                           
   981                           ;LCD.c: 164:         sprintf(buf,"Y:%d Normal",year);
   982   00199E  C045  F032         	movff	time2String@buf,sprintf@s
   983   0019A2  0E21               	movlw	low STR_4
   984   0019A4  6E33               	movwf	sprintf@fmt^0,c
   985   0019A6  C04A  F034         	movff	time2String@year,?_sprintf+2
   986   0019AA  C04B  F035         	movff	time2String@year+1,?_sprintf+3
   987   0019AE  EC37  F00F         	call	_sprintf	;wreg free
   988   0019B2  EFC9  F00C         	goto	l2450
   989   0019B6                     l2456:
   990                           
   991                           ;LCD.c: 168:     _delay((unsigned long)((200)*(64000000/4000.0)));
   992   0019B6  0E11               	movlw	17
   993   0019B8  6E4F               	movwf	(??_time2String+1)^0,c
   994   0019BA  0E3C               	movlw	60
   995   0019BC  6E4E               	movwf	??_time2String^0,c
   996   0019BE  0ECB               	movlw	203
   997   0019C0                     u2007:
   998   0019C0  2EE8               	decfsz	wreg,f,c
   999   0019C2  D7FE               	bra	u2007
  1000   0019C4  2E4E               	decfsz	??_time2String^0,f,c
  1001   0019C6  D7FC               	bra	u2007
  1002   0019C8  2E4F               	decfsz	(??_time2String+1)^0,f,c
  1003   0019CA  D7FA               	bra	u2007
  1004   0019CC  0000               	nop	
  1005   0019CE  0012               	return		;funcret
  1006   0019D0                     __end_of_time2String:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _sprintf *****************
  1010 ;; Defined at:
  1011 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  s               1   49[COMRAM] PTR unsigned char 
  1014 ;;		 -> main@buf(32), 
  1015 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
  1016 ;;		 -> STR_4(12), STR_3(10), STR_2(14), STR_1(18), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  f              12   56[COMRAM] struct _IO_FILE
  1019 ;;  ret             2    0        int 
  1020 ;;  ap              1   55[COMRAM] PTR void [1]
  1021 ;;		 -> ?_sprintf(2), 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2   49[COMRAM] int 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1031 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;Total ram usage:       19 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 8
  1038 ;; This function calls:
  1039 ;;		_vfprintf
  1040 ;; This function is called by:
  1041 ;;		_time2String
  1042 ;;		_ADC2String
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047   001E6E                     __ptext2:
  1048                           	callstack 0
  1049   001E6E                     _sprintf:
  1050                           	callstack 21
  1051   001E6E  0E34               	movlw	low (?_sprintf+2)
  1052   001E70  6E38               	movwf	sprintf@ap^0,c
  1053   001E72  C032  F039         	movff	sprintf@s,sprintf@f
  1054   001E76  0E00               	movlw	0
  1055   001E78  6E3D               	movwf	(sprintf@f+4)^0,c
  1056   001E7A  0E00               	movlw	0
  1057   001E7C  6E3C               	movwf	(sprintf@f+3)^0,c
  1058   001E7E  0E00               	movlw	0
  1059   001E80  6E44               	movwf	(sprintf@f+11)^0,c
  1060   001E82  0E00               	movlw	0
  1061   001E84  6E43               	movwf	(sprintf@f+10)^0,c
  1062   001E86  0E39               	movlw	low sprintf@f
  1063   001E88  6E2E               	movwf	vfprintf@fp^0,c
  1064   001E8A  C033  F02F         	movff	sprintf@fmt,vfprintf@fmt
  1065   001E8E  0E38               	movlw	low sprintf@ap
  1066   001E90  6E30               	movwf	vfprintf@ap^0,c
  1067   001E92  ECBD  F00E         	call	_vfprintf	;wreg free
  1068   001E96  5032               	movf	sprintf@s^0,w,c
  1069   001E98  243C               	addwf	(sprintf@f+3)^0,w,c
  1070   001E9A  6ED9               	movwf	fsr2l,c
  1071   001E9C  6ADA               	clrf	fsr2h,c
  1072   001E9E  6ADF               	clrf	indf2,c
  1073   001EA0  0012               	return		;funcret
  1074   001EA2                     __end_of_sprintf:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _vfprintf *****************
  1078 ;; Defined at:
  1079 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  1082 ;;		 -> sprintf@f(12), 
  1083 ;;  fmt             1   46[COMRAM] PTR const unsigned char 
  1084 ;;		 -> STR_4(12), STR_3(10), STR_2(14), STR_1(18), 
  1085 ;;  ap              1   47[COMRAM] PTR PTR void 
  1086 ;;		 -> sprintf@ap(1), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  cfmt            1   48[COMRAM] PTR unsigned char 
  1089 ;;		 -> STR_4(12), STR_3(10), STR_2(14), STR_1(18), 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2   45[COMRAM] int 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1099 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 7
  1106 ;; This function calls:
  1107 ;;		_vfpfcnvrt
  1108 ;; This function is called by:
  1109 ;;		_sprintf
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text3
  1114   001D7A                     __ptext3:
  1115                           	callstack 0
  1116   001D7A                     _vfprintf:
  1117                           	callstack 21
  1118   001D7A                     
  1119                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1120   001D7A  C02F  F031         	movff	vfprintf@fmt,vfprintf@cfmt
  1121                           
  1122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1123   001D7E  EFC9  F00E         	goto	l2234
  1124   001D82                     l2232:
  1125                           
  1126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1127   001D82  C02E  F023         	movff	vfprintf@fp,vfpfcnvrt@fp
  1128   001D86  0E31               	movlw	low vfprintf@cfmt
  1129   001D88  6E24               	movwf	vfpfcnvrt@fmt^0,c
  1130   001D8A  C030  F025         	movff	vfprintf@ap,vfpfcnvrt@ap
  1131   001D8E  EC28  F008         	call	_vfpfcnvrt	;wreg free
  1132   001D92                     l2234:
  1133                           
  1134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1135   001D92  C031  FFF6         	movff	vfprintf@cfmt,tblptrl
  1136   001D96                     	if	1	;There is more than 1 active tblptr byte
  1137   001D96  0E0E               	movlw	high __smallconst
  1138   001D98  6EF7               	movwf	tblptrh,c
  1139   001D9A                     	endif
  1140   001D9A                     	if	0	;tblptru may be non-zero
  1141   001D9A                     	endif
  1142   001D9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1143   001D9A  0E00               	movlw	low (__smallconst shr (0+16))
  1144   001D9C  6EF8               	movwf	tblptru,c
  1145   001D9E                     	endif
  1146   001D9E  0008               	tblrd		*
  1147   001DA0  50F5               	movf	tablat,w,c
  1148   001DA2  0900               	iorlw	0
  1149   001DA4  A4D8               	btfss	status,2,c
  1150   001DA6  EFD7  F00E         	goto	u1561
  1151   001DAA  EFD9  F00E         	goto	u1560
  1152   001DAE                     u1561:
  1153   001DAE  EFC1  F00E         	goto	l2232
  1154   001DB2                     u1560:
  1155   001DB2                     
  1156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1157   001DB2  0E00               	movlw	0
  1158   001DB4  6E2F               	movwf	(?_vfprintf+1)^0,c
  1159   001DB6  0E00               	movlw	0
  1160   001DB8  6E2E               	movwf	?_vfprintf^0,c
  1161   001DBA  0012               	return		;funcret
  1162   001DBC                     __end_of_vfprintf:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _vfpfcnvrt *****************
  1166 ;; Defined at:
  1167 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  fp              1   34[COMRAM] PTR struct _IO_FILE
  1170 ;;		 -> sprintf@f(12), 
  1171 ;;  fmt             1   35[COMRAM] PTR PTR unsigned char 
  1172 ;;		 -> vfprintf@cfmt(1), 
  1173 ;;  ap              1   36[COMRAM] PTR PTR void 
  1174 ;;		 -> sprintf@ap(1), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  convarg         4   39[COMRAM] struct .
  1177 ;;  cp              1   44[COMRAM] PTR unsigned char 
  1178 ;;		 -> STR_4(12), STR_3(10), STR_2(14), STR_1(18), 
  1179 ;;  done            1   43[COMRAM] _Bool 
  1180 ;;  c               1    0        unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1190 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;Total ram usage:       11 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 6
  1197 ;; This function calls:
  1198 ;;		_dtoa
  1199 ;;		_fputc
  1200 ;;		_read_prec_or_width
  1201 ;; This function is called by:
  1202 ;;		_vfprintf
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text4
  1207   001050                     __ptext4:
  1208                           	callstack 0
  1209   001050                     _vfpfcnvrt:
  1210                           	callstack 21
  1211   001050                     
  1212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1213   001050  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1214   001052  6ED9               	movwf	fsr2l,c
  1215   001054  6ADA               	clrf	fsr2h,c
  1216   001056  CFDF FFF6          	movff	indf2,tblptrl
  1217   00105A                     	if	1	;There is more than 1 active tblptr byte
  1218   00105A  0E0E               	movlw	high __smallconst
  1219   00105C  6EF7               	movwf	tblptrh,c
  1220   00105E                     	endif
  1221   00105E                     	if	0	;tblptru may be non-zero
  1222   00105E                     	endif
  1223   00105E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1224   00105E  0E00               	movlw	low (__smallconst shr (0+16))
  1225   001060  6EF8               	movwf	tblptru,c
  1226   001062                     	endif
  1227   001062  0008               	tblrd		*
  1228   001064  50F5               	movf	tablat,w,c
  1229   001066  0A25               	xorlw	37
  1230   001068  A4D8               	btfss	status,2,c
  1231   00106A  EF39  F008         	goto	u1441
  1232   00106E  EF3B  F008         	goto	u1440
  1233   001072                     u1441:
  1234   001072  EFD5  F008         	goto	l2166
  1235   001076                     u1440:
  1236   001076                     
  1237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1238   001076  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1239   001078  6ED9               	movwf	fsr2l,c
  1240   00107A  6ADA               	clrf	fsr2h,c
  1241   00107C  2ADF               	incf	indf2,f,c
  1242   00107E                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1244   00107E  0E00               	movlw	0
  1245   001080  6E55               	movwf	(_width+1)^0,c
  1246   001082  0E00               	movlw	0
  1247   001084  6E54               	movwf	_width^0,c
  1248   001086  C054  F058         	movff	_width,_flags
  1249   00108A                     
  1250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1251   00108A  6856               	setf	_prec^0,c
  1252   00108C  6857               	setf	(_prec+1)^0,c
  1253   00108E                     
  1254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1255   00108E  0E00               	movlw	0
  1256   001090  6E2C               	movwf	vfpfcnvrt@done^0,c
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1259   001092  EF71  F008         	goto	l2140
  1260   001096                     l2130:
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1263   001096  8258               	bsf	_flags^0,1,c
  1264   001098                     
  1265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1266   001098  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1267   00109A  6ED9               	movwf	fsr2l,c
  1268   00109C  6ADA               	clrf	fsr2h,c
  1269   00109E  2ADF               	incf	indf2,f,c
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1272   0010A0  EF71  F008         	goto	l2140
  1273   0010A4                     l2134:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1276   0010A4  0E01               	movlw	1
  1277   0010A6  6E2C               	movwf	vfpfcnvrt@done^0,c
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1280   0010A8  EF71  F008         	goto	l2140
  1281   0010AC                     l2138:
  1282   0010AC  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1283   0010AE  6ED9               	movwf	fsr2l,c
  1284   0010B0  6ADA               	clrf	fsr2h,c
  1285   0010B2  CFDF FFF6          	movff	indf2,tblptrl
  1286   0010B6                     	if	1	;There is more than 1 active tblptr byte
  1287   0010B6  0E0E               	movlw	high __smallconst
  1288   0010B8  6EF7               	movwf	tblptrh,c
  1289   0010BA                     	endif
  1290   0010BA                     	if	0	;tblptru may be non-zero
  1291   0010BA                     	endif
  1292   0010BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1293   0010BA  0E00               	movlw	low (__smallconst shr (0+16))
  1294   0010BC  6EF8               	movwf	tblptru,c
  1295   0010BE                     	endif
  1296   0010BE  0008               	tblrd		*
  1297   0010C0  50F5               	movf	tablat,w,c
  1298   0010C2  6E26               	movwf	??_vfpfcnvrt^0,c
  1299   0010C4  6A27               	clrf	(??_vfpfcnvrt+1)^0,c
  1300                           
  1301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1302                           ; Switch size 1, requested type "simple"
  1303                           ; Number of cases is 1, Range of values is 0 to 0
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte            4     3 (average)
  1307                           ;	Chosen strategy is simple_byte
  1308   0010C6  5027               	movf	(??_vfpfcnvrt+1)^0,w,c
  1309   0010C8  0A00               	xorlw	0	; case 0
  1310   0010CA  B4D8               	btfsc	status,2,c
  1311   0010CC  EF6A  F008         	goto	l2612
  1312   0010D0  EF52  F008         	goto	l2134
  1313   0010D4                     l2612:
  1314                           
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 1, Range of values is 48 to 48
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte            4     3 (average)
  1320                           ;	Chosen strategy is simple_byte
  1321   0010D4  5026               	movf	??_vfpfcnvrt^0,w,c
  1322   0010D6  0A30               	xorlw	48	; case 48
  1323   0010D8  B4D8               	btfsc	status,2,c
  1324   0010DA  EF4B  F008         	goto	l2130
  1325   0010DE  EF52  F008         	goto	l2134
  1326   0010E2                     l2140:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1329   0010E2  502C               	movf	vfpfcnvrt@done^0,w,c
  1330   0010E4  B4D8               	btfsc	status,2,c
  1331   0010E6  EF77  F008         	goto	u1451
  1332   0010EA  EF79  F008         	goto	u1450
  1333   0010EE                     u1451:
  1334   0010EE  EF56  F008         	goto	l2138
  1335   0010F2                     u1450:
  1336   0010F2                     
  1337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1338   0010F2  C024  F00A         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1339   0010F6  C025  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1340   0010FA  EC9B  F00B         	call	_read_prec_or_width	;wreg free
  1341   0010FE  C00A  F054         	movff	?_read_prec_or_width,_width
  1342   001102  C00B  F055         	movff	?_read_prec_or_width+1,_width+1
  1343   001106                     
  1344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1345   001106  BE55               	btfsc	(_width+1)^0,7,c
  1346   001108  EF8A  F008         	goto	u1460
  1347   00110C  EF88  F008         	goto	u1461
  1348   001110                     u1461:
  1349   001110  EF8F  F008         	goto	l2148
  1350   001114                     u1460:
  1351   001114                     
  1352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1353   001114  8058               	bsf	_flags^0,0,c
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1356   001116  6C54               	negf	_width^0,c
  1357   001118  1E55               	comf	(_width+1)^0,f,c
  1358   00111A  B0D8               	btfsc	status,0,c
  1359   00111C  2A55               	incf	(_width+1)^0,f,c
  1360   00111E                     l2148:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1363   00111E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1364   001120  6ED9               	movwf	fsr2l,c
  1365   001122  6ADA               	clrf	fsr2h,c
  1366   001124  50DF               	movf	indf2,w,c
  1367   001126  6E2D               	movwf	vfpfcnvrt@cp^0,c
  1368   001128                     
  1369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1370   001128  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1371   00112C                     	if	1	;There is more than 1 active tblptr byte
  1372   00112C  0E0E               	movlw	high __smallconst
  1373   00112E  6EF7               	movwf	tblptrh,c
  1374   001130                     	endif
  1375   001130                     	if	0	;tblptru may be non-zero
  1376   001130                     	endif
  1377   001130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1378   001130  0E00               	movlw	low (__smallconst shr (0+16))
  1379   001132  6EF8               	movwf	tblptru,c
  1380   001134                     	endif
  1381   001134  0008               	tblrd		*
  1382   001136  50F5               	movf	tablat,w,c
  1383   001138  0A64               	xorlw	100
  1384   00113A  B4D8               	btfsc	status,2,c
  1385   00113C  EFA2  F008         	goto	u1471
  1386   001140  EFA4  F008         	goto	u1470
  1387   001144                     u1471:
  1388   001144  EFB4  F008         	goto	l2154
  1389   001148                     u1470:
  1390   001148  C02D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1391   00114C                     	if	1	;There is more than 1 active tblptr byte
  1392   00114C  0E0E               	movlw	high __smallconst
  1393   00114E  6EF7               	movwf	tblptrh,c
  1394   001150                     	endif
  1395   001150                     	if	0	;tblptru may be non-zero
  1396   001150                     	endif
  1397   001150                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1398   001150  0E00               	movlw	low (__smallconst shr (0+16))
  1399   001152  6EF8               	movwf	tblptru,c
  1400   001154                     	endif
  1401   001154  0008               	tblrd		*
  1402   001156  50F5               	movf	tablat,w,c
  1403   001158  0A69               	xorlw	105
  1404   00115A  A4D8               	btfss	status,2,c
  1405   00115C  EFB2  F008         	goto	u1481
  1406   001160  EFB4  F008         	goto	u1480
  1407   001164                     u1481:
  1408   001164  EFCF  F008         	goto	l2162
  1409   001168                     u1480:
  1410   001168                     l2154:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1413   001168  5025               	movf	vfpfcnvrt@ap^0,w,c
  1414   00116A  6ED9               	movwf	fsr2l,c
  1415   00116C  6ADA               	clrf	fsr2h,c
  1416   00116E  0E02               	movlw	2
  1417   001170  26DF               	addwf	indf2,f,c
  1418   001172  5CDF               	subwf	indf2,w,c
  1419   001174  6ED9               	movwf	fsr2l,c
  1420   001176  6ADA               	clrf	fsr2h,c
  1421   001178  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg
  1422   00117C  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg+1
  1423   001180                     
  1424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1425   001180  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1426   001182  6ED9               	movwf	fsr2l,c
  1427   001184  6ADA               	clrf	fsr2h,c
  1428   001186  282D               	incf	vfpfcnvrt@cp^0,w,c
  1429   001188  6EDF               	movwf	indf2,c
  1430   00118A                     
  1431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1432   00118A  C023  F018         	movff	vfpfcnvrt@fp,dtoa@fp
  1433   00118E  C028  F019         	movff	vfpfcnvrt@convarg,dtoa@d
  1434   001192  C029  F01A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1435   001196  ECE9  F008         	call	_dtoa	;wreg free
  1436   00119A  EFE8  F008         	goto	l1062
  1437   00119E                     l2162:
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1440   00119E  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1441   0011A0  6ED9               	movwf	fsr2l,c
  1442   0011A2  6ADA               	clrf	fsr2h,c
  1443   0011A4  2ADF               	incf	indf2,f,c
  1444   0011A6  EFE8  F008         	goto	l1062
  1445   0011AA                     l2166:
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1448   0011AA  5024               	movf	vfpfcnvrt@fmt^0,w,c
  1449   0011AC  6ED9               	movwf	fsr2l,c
  1450   0011AE  6ADA               	clrf	fsr2h,c
  1451   0011B0  CFDF FFF6          	movff	indf2,tblptrl
  1452   0011B4                     	if	1	;There is more than 1 active tblptr byte
  1453   0011B4  0E0E               	movlw	high __smallconst
  1454   0011B6  6EF7               	movwf	tblptrh,c
  1455   0011B8                     	endif
  1456   0011B8                     	if	0	;tblptru may be non-zero
  1457   0011B8                     	endif
  1458   0011B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1459   0011B8  0E00               	movlw	low (__smallconst shr (0+16))
  1460   0011BA  6EF8               	movwf	tblptru,c
  1461   0011BC                     	endif
  1462   0011BC  0008               	tblrd		*
  1463   0011BE  50F5               	movf	tablat,w,c
  1464   0011C0  6E04               	movwf	fputc@c^0,c
  1465   0011C2  6A05               	clrf	(fputc@c+1)^0,c
  1466   0011C4  C023  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1467   0011C8  EC49  F00C         	call	_fputc	;wreg free
  1468   0011CC  EFCF  F008         	goto	l2162
  1469   0011D0                     l1062:
  1470   0011D0  0012               	return		;funcret
  1471   0011D2                     __end_of_vfpfcnvrt:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _read_prec_or_width *****************
  1475 ;; Defined at:
  1476 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  fmt             1    9[COMRAM] PTR PTR const unsigned c
  1479 ;;		 -> vfprintf@cfmt(1), 
  1480 ;;  ap              1   10[COMRAM] PTR PTR void [1]
  1481 ;;		 -> sprintf@ap(1), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  c               1   11[COMRAM] unsigned char 
  1484 ;;  n               2   12[COMRAM] int 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2    9[COMRAM] int 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;Total ram usage:        5 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 2
  1501 ;; This function calls:
  1502 ;;		___wmul
  1503 ;; This function is called by:
  1504 ;;		_vfpfcnvrt
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text5
  1509   001736                     __ptext5:
  1510                           	callstack 0
  1511   001736                     _read_prec_or_width:
  1512                           	callstack 24
  1513   001736                     
  1514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1515   001736  0E00               	movlw	0
  1516   001738  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1517   00173A  0E00               	movlw	0
  1518   00173C  6E0D               	movwf	read_prec_or_width@n^0,c
  1519   00173E                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1521   00173E  500A               	movf	read_prec_or_width@fmt^0,w,c
  1522   001740  6ED9               	movwf	fsr2l,c
  1523   001742  6ADA               	clrf	fsr2h,c
  1524   001744  CFDF FFF6          	movff	indf2,tblptrl
  1525   001748                     	if	1	;There is more than 1 active tblptr byte
  1526   001748  0E0E               	movlw	high __smallconst
  1527   00174A  6EF7               	movwf	tblptrh,c
  1528   00174C                     	endif
  1529   00174C                     	if	0	;tblptru may be non-zero
  1530   00174C                     	endif
  1531   00174C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1532   00174C  0E00               	movlw	low (__smallconst shr (0+16))
  1533   00174E  6EF8               	movwf	tblptru,c
  1534   001750                     	endif
  1535   001750  0008               	tblrd		*
  1536   001752  50F5               	movf	tablat,w,c
  1537   001754  0A2A               	xorlw	42
  1538   001756  A4D8               	btfss	status,2,c
  1539   001758  EFB0  F00B         	goto	u1351
  1540   00175C  EFB2  F00B         	goto	u1350
  1541   001760                     u1351:
  1542   001760  EFD8  F00B         	goto	l2082
  1543   001764                     u1350:
  1544   001764                     
  1545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1546   001764  500A               	movf	read_prec_or_width@fmt^0,w,c
  1547   001766  6ED9               	movwf	fsr2l,c
  1548   001768  6ADA               	clrf	fsr2h,c
  1549   00176A  2ADF               	incf	indf2,f,c
  1550   00176C                     
  1551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1552   00176C  500B               	movf	read_prec_or_width@ap^0,w,c
  1553   00176E  6ED9               	movwf	fsr2l,c
  1554   001770  6ADA               	clrf	fsr2h,c
  1555   001772  0E02               	movlw	2
  1556   001774  26DF               	addwf	indf2,f,c
  1557   001776  5CDF               	subwf	indf2,w,c
  1558   001778  6ED9               	movwf	fsr2l,c
  1559   00177A  6ADA               	clrf	fsr2h,c
  1560   00177C  CFDE F00D          	movff	postinc2,read_prec_or_width@n
  1561   001780  CFDE F00E          	movff	postinc2,read_prec_or_width@n+1
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1564   001784  EFED  F00B         	goto	l1043
  1565   001788                     l2078:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1568   001788  C00D  F004         	movff	read_prec_or_width@n,___wmul@multiplier
  1569   00178C  C00E  F005         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1570   001790  0E00               	movlw	0
  1571   001792  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  1572   001794  0E0A               	movlw	10
  1573   001796  6E06               	movwf	___wmul@multiplicand^0,c
  1574   001798  ECAF  F00F         	call	___wmul	;wreg free
  1575   00179C  500C               	movf	read_prec_or_width@c^0,w,c
  1576   00179E  2404               	addwf	?___wmul^0,w,c
  1577   0017A0  6E0D               	movwf	read_prec_or_width@n^0,c
  1578   0017A2  0E00               	movlw	0
  1579   0017A4  2005               	addwfc	(?___wmul+1)^0,w,c
  1580   0017A6  6E0E               	movwf	(read_prec_or_width@n+1)^0,c
  1581   0017A8                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1583   0017A8  500A               	movf	read_prec_or_width@fmt^0,w,c
  1584   0017AA  6ED9               	movwf	fsr2l,c
  1585   0017AC  6ADA               	clrf	fsr2h,c
  1586   0017AE  2ADF               	incf	indf2,f,c
  1587   0017B0                     l2082:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1590   0017B0  500A               	movf	read_prec_or_width@fmt^0,w,c
  1591   0017B2  6ED9               	movwf	fsr2l,c
  1592   0017B4  6ADA               	clrf	fsr2h,c
  1593   0017B6  CFDF FFF6          	movff	indf2,tblptrl
  1594   0017BA                     	if	1	;There is more than 1 active tblptr byte
  1595   0017BA  0E0E               	movlw	high __smallconst
  1596   0017BC  6EF7               	movwf	tblptrh,c
  1597   0017BE                     	endif
  1598   0017BE                     	if	0	;tblptru may be non-zero
  1599   0017BE                     	endif
  1600   0017BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1601   0017BE  0E00               	movlw	low (__smallconst shr (0+16))
  1602   0017C0  6EF8               	movwf	tblptru,c
  1603   0017C2                     	endif
  1604   0017C2  0008               	tblrd		*
  1605   0017C4  50F5               	movf	tablat,w,c
  1606   0017C6  0FD0               	addlw	208
  1607   0017C8  6E0C               	movwf	read_prec_or_width@c^0,c
  1608   0017CA  0E09               	movlw	9
  1609   0017CC  640C               	cpfsgt	read_prec_or_width@c^0,c
  1610   0017CE  EFEB  F00B         	goto	u1361
  1611   0017D2  EFED  F00B         	goto	u1360
  1612   0017D6                     u1361:
  1613   0017D6  EFC4  F00B         	goto	l2078
  1614   0017DA                     u1360:
  1615   0017DA                     l1043:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1618   0017DA  C00D  F00A         	movff	read_prec_or_width@n,?_read_prec_or_width
  1619   0017DE  C00E  F00B         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1620   0017E2  0012               	return		;funcret
  1621   0017E4                     __end_of_read_prec_or_width:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _dtoa *****************
  1625 ;; Defined at:
  1626 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1629 ;;		 -> sprintf@f(12), 
  1630 ;;  d               2   24[COMRAM] int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  i               2   32[COMRAM] int 
  1633 ;;  w               2   29[COMRAM] int 
  1634 ;;  s               1   31[COMRAM] unsigned char 
  1635 ;;  p               1   28[COMRAM] _Bool 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1645 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1648 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1649 ;;Total ram usage:       11 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 5
  1652 ;; This function calls:
  1653 ;;		___awdiv
  1654 ;;		___awmod
  1655 ;;		_abs
  1656 ;;		_pad
  1657 ;; This function is called by:
  1658 ;;		_vfpfcnvrt
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text6
  1663   0011D2                     __ptext6:
  1664                           	callstack 0
  1665   0011D2                     _dtoa:
  1666                           	callstack 21
  1667   0011D2                     
  1668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1669   0011D2  0E01               	movlw	1
  1670   0011D4  6E1D               	movwf	dtoa@p^0,c
  1671   0011D6                     
  1672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1673   0011D6  BE1A               	btfsc	(dtoa@d+1)^0,7,c
  1674   0011D8  EFF0  F008         	goto	u1251
  1675   0011DC  EFF3  F008         	goto	u1250
  1676   0011E0                     u1251:
  1677   0011E0  0E01               	movlw	1
  1678   0011E2  EFF4  F008         	goto	u1260
  1679   0011E6                     u1250:
  1680   0011E6  0E00               	movlw	0
  1681   0011E8                     u1260:
  1682   0011E8  6E20               	movwf	dtoa@s^0,c
  1683   0011EA                     
  1684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1685   0011EA  C054  F01E         	movff	_width,dtoa@w
  1686   0011EE  C055  F01F         	movff	_width+1,dtoa@w+1
  1687   0011F2                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1689   0011F2  5020               	movf	dtoa@s^0,w,c
  1690   0011F4  B4D8               	btfsc	status,2,c
  1691   0011F6  EFFF  F008         	goto	u1271
  1692   0011FA  EF01  F009         	goto	u1270
  1693   0011FE                     u1271:
  1694   0011FE  EF18  F009         	goto	l1026
  1695   001202                     u1270:
  1696   001202                     
  1697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1698   001202  061E               	decf	dtoa@w^0,f,c
  1699   001204  A0D8               	btfss	status,0,c
  1700   001206  061F               	decf	(dtoa@w+1)^0,f,c
  1701   001208                     
  1702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1703   001208  5020               	movf	dtoa@s^0,w,c
  1704   00120A  A4D8               	btfss	status,2,c
  1705   00120C  EF0A  F009         	goto	u1281
  1706   001210  EF0C  F009         	goto	u1280
  1707   001214                     u1281:
  1708   001214  EF12  F009         	goto	l2034
  1709   001218                     u1280:
  1710   001218  0E00               	movlw	0
  1711   00121A  6E1C               	movwf	(_dtoa$2014+1)^0,c
  1712   00121C  0E2B               	movlw	43
  1713   00121E  6E1B               	movwf	_dtoa$2014^0,c
  1714   001220  EF16  F009         	goto	l2036
  1715   001224                     l2034:
  1716   001224  0E00               	movlw	0
  1717   001226  6E1C               	movwf	(_dtoa$2014+1)^0,c
  1718   001228  0E2D               	movlw	45
  1719   00122A  6E1B               	movwf	_dtoa$2014^0,c
  1720   00122C                     l2036:
  1721   00122C  C01B  F020         	movff	_dtoa$2014,dtoa@s
  1722   001230                     l1026:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1725   001230  0E00               	movlw	0
  1726   001232  6E22               	movwf	(dtoa@i+1)^0,c
  1727   001234  0E1F               	movlw	31
  1728   001236  6E21               	movwf	dtoa@i^0,c
  1729   001238                     
  1730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1731   001238  0E00               	movlw	0
  1732   00123A  0100               	movlb	0	; () banked
  1733   00123C  6FAD               	movwf	(_dbuf+31)& (0+255),b
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1736   00123E  EF4E  F009         	goto	l2050
  1737   001242                     l2040:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1740   001242  0621               	decf	dtoa@i^0,f,c
  1741   001244  A0D8               	btfss	status,0,c
  1742   001246  0622               	decf	(dtoa@i+1)^0,f,c
  1743   001248                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1745   001248  5021               	movf	dtoa@i^0,w,c
  1746   00124A  0F8E               	addlw	low _dbuf
  1747   00124C  6ED9               	movwf	fsr2l,c
  1748   00124E  6ADA               	clrf	fsr2h,c
  1749   001250  C019  F004         	movff	dtoa@d,___awmod@dividend
  1750   001254  C01A  F005         	movff	dtoa@d+1,___awmod@dividend+1
  1751   001258  0E00               	movlw	0
  1752   00125A  6E07               	movwf	(___awmod@divisor+1)^0,c
  1753   00125C  0E0A               	movlw	10
  1754   00125E  6E06               	movwf	___awmod@divisor^0,c
  1755   001260  EC43  F00B         	call	___awmod	;wreg free
  1756   001264  C004  F00A         	movff	?___awmod,abs@a
  1757   001268  C005  F00B         	movff	?___awmod+1,abs@a+1
  1758   00126C  EC51  F00F         	call	_abs	;wreg free
  1759   001270  500A               	movf	?_abs^0,w,c
  1760   001272  0F30               	addlw	48
  1761   001274  6EDF               	movwf	indf2,c
  1762   001276                     
  1763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1764   001276  0E00               	movlw	0
  1765   001278  6E1D               	movwf	dtoa@p^0,c
  1766   00127A                     
  1767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1768   00127A  061E               	decf	dtoa@w^0,f,c
  1769   00127C  A0D8               	btfss	status,0,c
  1770   00127E  061F               	decf	(dtoa@w+1)^0,f,c
  1771   001280                     
  1772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1773   001280  C019  F004         	movff	dtoa@d,___awdiv@dividend
  1774   001284  C01A  F005         	movff	dtoa@d+1,___awdiv@dividend+1
  1775   001288  0E00               	movlw	0
  1776   00128A  6E07               	movwf	(___awdiv@divisor+1)^0,c
  1777   00128C  0E0A               	movlw	10
  1778   00128E  6E06               	movwf	___awdiv@divisor^0,c
  1779   001290  ECE1  F00A         	call	___awdiv	;wreg free
  1780   001294  C004  F019         	movff	?___awdiv,dtoa@d
  1781   001298  C005  F01A         	movff	?___awdiv+1,dtoa@d+1
  1782   00129C                     l2050:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1785   00129C  BE22               	btfsc	(dtoa@i+1)^0,7,c
  1786   00129E  EF59  F009         	goto	u1291
  1787   0012A2  5022               	movf	(dtoa@i+1)^0,w,c
  1788   0012A4  E108               	bnz	u1290
  1789   0012A6  0421               	decf	dtoa@i^0,w,c
  1790   0012A8  A0D8               	btfss	status,0,c
  1791   0012AA  EF59  F009         	goto	u1291
  1792   0012AE  EF5B  F009         	goto	u1290
  1793   0012B2                     u1291:
  1794   0012B2  EF80  F009         	goto	l2060
  1795   0012B6                     u1290:
  1796   0012B6  5019               	movf	dtoa@d^0,w,c
  1797   0012B8  101A               	iorwf	(dtoa@d+1)^0,w,c
  1798   0012BA  A4D8               	btfss	status,2,c
  1799   0012BC  EF62  F009         	goto	u1301
  1800   0012C0  EF64  F009         	goto	u1300
  1801   0012C4                     u1301:
  1802   0012C4  EF21  F009         	goto	l2040
  1803   0012C8                     u1300:
  1804   0012C8  501D               	movf	dtoa@p^0,w,c
  1805   0012CA  A4D8               	btfss	status,2,c
  1806   0012CC  EF6A  F009         	goto	u1311
  1807   0012D0  EF6C  F009         	goto	u1310
  1808   0012D4                     u1311:
  1809   0012D4  EF21  F009         	goto	l2040
  1810   0012D8                     u1310:
  1811   0012D8  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  1812   0012DA  EF77  F009         	goto	u1321
  1813   0012DE  501F               	movf	(dtoa@w+1)^0,w,c
  1814   0012E0  E108               	bnz	u1320
  1815   0012E2  041E               	decf	dtoa@w^0,w,c
  1816   0012E4  A0D8               	btfss	status,0,c
  1817   0012E6  EF77  F009         	goto	u1321
  1818   0012EA  EF79  F009         	goto	u1320
  1819   0012EE                     u1321:
  1820   0012EE  EF80  F009         	goto	l2060
  1821   0012F2                     u1320:
  1822   0012F2  B258               	btfsc	_flags^0,1,c
  1823   0012F4  EF7E  F009         	goto	u1331
  1824   0012F8  EF80  F009         	goto	u1330
  1825   0012FC                     u1331:
  1826   0012FC  EF21  F009         	goto	l2040
  1827   001300                     u1330:
  1828   001300                     l2060:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1831   001300  5020               	movf	dtoa@s^0,w,c
  1832   001302  B4D8               	btfsc	status,2,c
  1833   001304  EF86  F009         	goto	u1341
  1834   001308  EF88  F009         	goto	u1340
  1835   00130C                     u1341:
  1836   00130C  EF91  F009         	goto	l2066
  1837   001310                     u1340:
  1838   001310                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1840   001310  0621               	decf	dtoa@i^0,f,c
  1841   001312  A0D8               	btfss	status,0,c
  1842   001314  0622               	decf	(dtoa@i+1)^0,f,c
  1843   001316                     
  1844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1845   001316  5021               	movf	dtoa@i^0,w,c
  1846   001318  0F8E               	addlw	low _dbuf
  1847   00131A  6ED9               	movwf	fsr2l,c
  1848   00131C  6ADA               	clrf	fsr2h,c
  1849   00131E  C020  FFDF         	movff	dtoa@s,indf2
  1850   001322                     l2066:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1853   001322  C018  F011         	movff	dtoa@fp,pad@fp
  1854   001326  5021               	movf	dtoa@i^0,w,c
  1855   001328  0F8E               	addlw	low _dbuf
  1856   00132A  6E12               	movwf	pad@buf^0,c
  1857   00132C  C01E  F013         	movff	dtoa@w,pad@p
  1858   001330  C01F  F014         	movff	dtoa@w+1,pad@p+1
  1859   001334  ECE8  F00C         	call	_pad	;wreg free
  1860   001338  0012               	return		;funcret
  1861   00133A                     __end_of_dtoa:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _pad *****************
  1865 ;; Defined at:
  1866 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  1869 ;;		 -> sprintf@f(12), 
  1870 ;;  buf             1   17[COMRAM] PTR unsigned char 
  1871 ;;		 -> dbuf(32), 
  1872 ;;  p               2   18[COMRAM] int 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  i               2   21[COMRAM] int 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;Total ram usage:        7 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 4
  1891 ;; This function calls:
  1892 ;;		_fputc
  1893 ;;		_fputs
  1894 ;; This function is called by:
  1895 ;;		_dtoa
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text7
  1900   0019D0                     __ptext7:
  1901                           	callstack 0
  1902   0019D0                     _pad:
  1903                           	callstack 21
  1904   0019D0                     
  1905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1906   0019D0  A058               	btfss	_flags^0,0,c
  1907   0019D2  EFED  F00C         	goto	u1201
  1908   0019D6  EFEF  F00C         	goto	u1200
  1909   0019DA                     u1201:
  1910   0019DA  EFF5  F00C         	goto	l1998
  1911   0019DE                     u1200:
  1912   0019DE                     
  1913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1914   0019DE  C012  F00C         	movff	pad@buf,fputs@s
  1915   0019E2  C011  F00D         	movff	pad@fp,fputs@fp
  1916   0019E6  ECDE  F00E         	call	_fputs	;wreg free
  1917   0019EA                     l1998:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1920   0019EA  BE14               	btfsc	(pad@p+1)^0,7,c
  1921   0019EC  EFFC  F00C         	goto	u1210
  1922   0019F0  EFFA  F00C         	goto	u1211
  1923   0019F4                     u1211:
  1924   0019F4  EF00  F00D         	goto	l1018
  1925   0019F8                     u1210:
  1926   0019F8                     
  1927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1928   0019F8  0E00               	movlw	0
  1929   0019FA  6E14               	movwf	(pad@p+1)^0,c
  1930   0019FC  0E00               	movlw	0
  1931   0019FE  6E13               	movwf	pad@p^0,c
  1932   001A00                     l1018:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1935   001A00  0E00               	movlw	0
  1936   001A02  6E17               	movwf	(pad@i+1)^0,c
  1937   001A04  0E00               	movlw	0
  1938   001A06  6E16               	movwf	pad@i^0,c
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1941   001A08  EF10  F00D         	goto	l2006
  1942   001A0C                     l2002:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1945   001A0C  0E00               	movlw	0
  1946   001A0E  6E05               	movwf	(fputc@c+1)^0,c
  1947   001A10  0E20               	movlw	32
  1948   001A12  6E04               	movwf	fputc@c^0,c
  1949   001A14  C011  F006         	movff	pad@fp,fputc@fp
  1950   001A18  EC49  F00C         	call	_fputc	;wreg free
  1951   001A1C                     
  1952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1953   001A1C  4A16               	infsnz	pad@i^0,f,c
  1954   001A1E  2A17               	incf	(pad@i+1)^0,f,c
  1955   001A20                     l2006:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1958   001A20  5013               	movf	pad@p^0,w,c
  1959   001A22  5C16               	subwf	pad@i^0,w,c
  1960   001A24  5017               	movf	(pad@i+1)^0,w,c
  1961   001A26  0A80               	xorlw	128
  1962   001A28  6E15               	movwf	??_pad^0,c
  1963   001A2A  5014               	movf	(pad@p+1)^0,w,c
  1964   001A2C  0A80               	xorlw	128
  1965   001A2E  5815               	subwfb	??_pad^0,w,c
  1966   001A30  A0D8               	btfss	status,0,c
  1967   001A32  EF1D  F00D         	goto	u1221
  1968   001A36  EF1F  F00D         	goto	u1220
  1969   001A3A                     u1221:
  1970   001A3A  EF06  F00D         	goto	l2002
  1971   001A3E                     u1220:
  1972   001A3E                     
  1973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1974   001A3E  B058               	btfsc	_flags^0,0,c
  1975   001A40  EF24  F00D         	goto	u1231
  1976   001A44  EF26  F00D         	goto	u1230
  1977   001A48                     u1231:
  1978   001A48  EF2C  F00D         	goto	l1023
  1979   001A4C                     u1230:
  1980   001A4C                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1982   001A4C  C012  F00C         	movff	pad@buf,fputs@s
  1983   001A50  C011  F00D         	movff	pad@fp,fputs@fp
  1984   001A54  ECDE  F00E         	call	_fputs	;wreg free
  1985   001A58                     l1023:
  1986   001A58  0012               	return		;funcret
  1987   001A5A                     __end_of_pad:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _fputs *****************
  1991 ;; Defined at:
  1992 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  s               1   11[COMRAM] PTR const unsigned char 
  1995 ;;		 -> dbuf(32), 
  1996 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1997 ;;		 -> sprintf@f(12), 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  i               2   14[COMRAM] int 
  2000 ;;  c               1   13[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2   11[COMRAM] int 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;Total ram usage:        5 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 3
  2017 ;; This function calls:
  2018 ;;		_fputc
  2019 ;; This function is called by:
  2020 ;;		_pad
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text8
  2025   001DBC                     __ptext8:
  2026                           	callstack 0
  2027   001DBC                     _fputs:
  2028                           	callstack 21
  2029   001DBC  0E00               	movlw	0
  2030   001DBE  6E10               	movwf	(fputs@i+1)^0,c
  2031   001DC0  0E00               	movlw	0
  2032   001DC2  6E0F               	movwf	fputs@i^0,c
  2033   001DC4  EFED  F00E         	goto	l1906
  2034   001DC8                     l1902:
  2035   001DC8  C00E  F004         	movff	fputs@c,fputc@c
  2036   001DCC  6A05               	clrf	(fputc@c+1)^0,c
  2037   001DCE  C00D  F006         	movff	fputs@fp,fputc@fp
  2038   001DD2  EC49  F00C         	call	_fputc	;wreg free
  2039   001DD6  4A0F               	infsnz	fputs@i^0,f,c
  2040   001DD8  2A10               	incf	(fputs@i+1)^0,f,c
  2041   001DDA                     l1906:
  2042   001DDA  500C               	movf	fputs@s^0,w,c
  2043   001DDC  240F               	addwf	fputs@i^0,w,c
  2044   001DDE  6ED9               	movwf	fsr2l,c
  2045   001DE0  6ADA               	clrf	fsr2h,c
  2046   001DE2  50DF               	movf	indf2,w,c
  2047   001DE4  6E0E               	movwf	fputs@c^0,c
  2048   001DE6  500E               	movf	fputs@c^0,w,c
  2049   001DE8  A4D8               	btfss	status,2,c
  2050   001DEA  EFF9  F00E         	goto	u1071
  2051   001DEE  EFFB  F00E         	goto	u1070
  2052   001DF2                     u1071:
  2053   001DF2  EFE4  F00E         	goto	l1902
  2054   001DF6                     u1070:
  2055   001DF6  0012               	return		;funcret
  2056   001DF8                     __end_of_fputs:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _fputc *****************
  2060 ;; Defined at:
  2061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  c               2    3[COMRAM] int 
  2064 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  2065 ;;		 -> sprintf@f(12), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2    3[COMRAM] int 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2077 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;Total ram usage:        8 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		_putch
  2086 ;; This function is called by:
  2087 ;;		_pad
  2088 ;;		_vfpfcnvrt
  2089 ;;		_fputs
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text9
  2094   001892                     __ptext9:
  2095                           	callstack 0
  2096   001892                     _fputc:
  2097                           	callstack 24
  2098   001892  5006               	movf	fputc@fp^0,w,c
  2099   001894  B4D8               	btfsc	status,2,c
  2100   001896  EF4F  F00C         	goto	u1031
  2101   00189A  EF51  F00C         	goto	u1030
  2102   00189E                     u1031:
  2103   00189E  EF59  F00C         	goto	l1890
  2104   0018A2                     u1030:
  2105   0018A2  5006               	movf	fputc@fp^0,w,c
  2106   0018A4  A4D8               	btfss	status,2,c
  2107   0018A6  EF57  F00C         	goto	u1041
  2108   0018AA  EF59  F00C         	goto	u1040
  2109   0018AE                     u1041:
  2110   0018AE  EF5E  F00C         	goto	l1892
  2111   0018B2                     u1040:
  2112   0018B2                     l1890:
  2113   0018B2  5004               	movf	fputc@c^0,w,c
  2114   0018B4  EC22  F010         	call	_putch
  2115   0018B8  EF9D  F00C         	goto	l1087
  2116   0018BC                     l1892:
  2117   0018BC  5006               	movf	fputc@fp^0,w,c
  2118   0018BE  6ED9               	movwf	fsr2l,c
  2119   0018C0  6ADA               	clrf	fsr2h,c
  2120   0018C2  0E0A               	movlw	10
  2121   0018C4  26D9               	addwf	fsr2l,f,c
  2122   0018C6  50DE               	movf	postinc2,w,c
  2123   0018C8  10DE               	iorwf	postinc2,w,c
  2124   0018CA  B4D8               	btfsc	status,2,c
  2125   0018CC  EF6A  F00C         	goto	u1051
  2126   0018D0  EF6C  F00C         	goto	u1050
  2127   0018D4                     u1051:
  2128   0018D4  EF85  F00C         	goto	l1896
  2129   0018D8                     u1050:
  2130   0018D8  5006               	movf	fputc@fp^0,w,c
  2131   0018DA  6ED9               	movwf	fsr2l,c
  2132   0018DC  6ADA               	clrf	fsr2h,c
  2133   0018DE  0E0A               	movlw	10
  2134   0018E0  26D9               	addwf	fsr2l,f,c
  2135   0018E2  5006               	movf	fputc@fp^0,w,c
  2136   0018E4  6EE1               	movwf	fsr1l,c
  2137   0018E6  6AE2               	clrf	fsr1h,c
  2138   0018E8  0E03               	movlw	3
  2139   0018EA  26E1               	addwf	fsr1l,f,c
  2140   0018EC  50DE               	movf	postinc2,w,c
  2141   0018EE  5CE6               	subwf	postinc1,w,c
  2142   0018F0  50E6               	movf	postinc1,w,c
  2143   0018F2  0A80               	xorlw	128
  2144   0018F4  6E0B               	movwf	(??_fputc+4)^0,c
  2145   0018F6  50DE               	movf	postinc2,w,c
  2146   0018F8  0A80               	xorlw	128
  2147   0018FA  580B               	subwfb	(??_fputc+4)^0,w,c
  2148   0018FC  B0D8               	btfsc	status,0,c
  2149   0018FE  EF83  F00C         	goto	u1061
  2150   001902  EF85  F00C         	goto	u1060
  2151   001906                     u1061:
  2152   001906  EF9D  F00C         	goto	l1087
  2153   00190A                     u1060:
  2154   00190A                     l1896:
  2155   00190A  5006               	movf	fputc@fp^0,w,c
  2156   00190C  6ED9               	movwf	fsr2l,c
  2157   00190E  6ADA               	clrf	fsr2h,c
  2158   001910  0E03               	movlw	3
  2159   001912  26D9               	addwf	fsr2l,f,c
  2160   001914  50DF               	movf	indf2,w,c
  2161   001916  6E07               	movwf	??_fputc^0,c
  2162   001918  5006               	movf	fputc@fp^0,w,c
  2163   00191A  6ED9               	movwf	fsr2l,c
  2164   00191C  6ADA               	clrf	fsr2h,c
  2165   00191E  50DF               	movf	indf2,w,c
  2166   001920  2407               	addwf	??_fputc^0,w,c
  2167   001922  6ED9               	movwf	fsr2l,c
  2168   001924  6ADA               	clrf	fsr2h,c
  2169   001926  C004  FFDF         	movff	fputc@c,indf2
  2170   00192A  5006               	movf	fputc@fp^0,w,c
  2171   00192C  6ED9               	movwf	fsr2l,c
  2172   00192E  6ADA               	clrf	fsr2h,c
  2173   001930  0E03               	movlw	3
  2174   001932  26D9               	addwf	fsr2l,f,c
  2175   001934  2ADE               	incf	postinc2,f,c
  2176   001936  0E00               	movlw	0
  2177   001938  22DD               	addwfc	postdec2,f,c
  2178   00193A                     l1087:
  2179   00193A  0012               	return		;funcret
  2180   00193C                     __end_of_fputc:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _putch *****************
  2184 ;; Defined at:
  2185 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  c               1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  c               1    0[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_fputc
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text10
  2214   002044                     __ptext10:
  2215                           	callstack 0
  2216   002044                     _putch:
  2217                           	callstack 24
  2218   002044  0012               	return		;funcret
  2219   002046                     __end_of_putch:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _abs *****************
  2223 ;; Defined at:
  2224 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  a               2    9[COMRAM] int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    9[COMRAM] int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_dtoa
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text11
  2253   001EA2                     __ptext11:
  2254                           	callstack 0
  2255   001EA2                     _abs:
  2256                           	callstack 24
  2257   001EA2  BE0B               	btfsc	(abs@a+1)^0,7,c
  2258   001EA4  EF56  F00F         	goto	u1241
  2259   001EA8  EF58  F00F         	goto	u1240
  2260   001EAC                     u1241:
  2261   001EAC  EF5E  F00F         	goto	l1072
  2262   001EB0                     u1240:
  2263   001EB0  C00A  F00A         	movff	abs@a,?_abs
  2264   001EB4  C00B  F00B         	movff	abs@a+1,?_abs+1
  2265   001EB8  EF6A  F00F         	goto	l1075
  2266   001EBC                     l1072:
  2267   001EBC  C00A  F00C         	movff	abs@a,??_abs
  2268   001EC0  C00B  F00D         	movff	abs@a+1,??_abs+1
  2269   001EC4  1E0C               	comf	??_abs^0,f,c
  2270   001EC6  1E0D               	comf	(??_abs+1)^0,f,c
  2271   001EC8  4A0C               	infsnz	??_abs^0,f,c
  2272   001ECA  2A0D               	incf	(??_abs+1)^0,f,c
  2273   001ECC  C00C  F00A         	movff	??_abs,?_abs
  2274   001ED0  C00D  F00B         	movff	??_abs+1,?_abs+1
  2275   001ED4                     l1075:
  2276   001ED4  0012               	return		;funcret
  2277   001ED6                     __end_of_abs:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function ___awmod *****************
  2281 ;; Defined at:
  2282 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  dividend        2    3[COMRAM] int 
  2285 ;;  divisor         2    5[COMRAM] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  sign            1    8[COMRAM] unsigned char 
  2288 ;;  counter         1    7[COMRAM] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2    3[COMRAM] int 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;Total ram usage:        6 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_dtoa
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text12
  2313   001686                     __ptext12:
  2314                           	callstack 0
  2315   001686                     ___awmod:
  2316                           	callstack 24
  2317   001686  0E00               	movlw	0
  2318   001688  6E09               	movwf	___awmod@sign^0,c
  2319   00168A  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  2320   00168C  EF4C  F00B         	goto	u1140
  2321   001690  EF4A  F00B         	goto	u1141
  2322   001694                     u1141:
  2323   001694  EF52  F00B         	goto	l1966
  2324   001698                     u1140:
  2325   001698  6C04               	negf	___awmod@dividend^0,c
  2326   00169A  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2327   00169C  B0D8               	btfsc	status,0,c
  2328   00169E  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2329   0016A0  0E01               	movlw	1
  2330   0016A2  6E09               	movwf	___awmod@sign^0,c
  2331   0016A4                     l1966:
  2332   0016A4  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  2333   0016A6  EF59  F00B         	goto	u1150
  2334   0016AA  EF57  F00B         	goto	u1151
  2335   0016AE                     u1151:
  2336   0016AE  EF5D  F00B         	goto	l1970
  2337   0016B2                     u1150:
  2338   0016B2  6C06               	negf	___awmod@divisor^0,c
  2339   0016B4  1E07               	comf	(___awmod@divisor+1)^0,f,c
  2340   0016B6  B0D8               	btfsc	status,0,c
  2341   0016B8  2A07               	incf	(___awmod@divisor+1)^0,f,c
  2342   0016BA                     l1970:
  2343   0016BA  5006               	movf	___awmod@divisor^0,w,c
  2344   0016BC  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  2345   0016BE  B4D8               	btfsc	status,2,c
  2346   0016C0  EF64  F00B         	goto	u1161
  2347   0016C4  EF66  F00B         	goto	u1160
  2348   0016C8                     u1161:
  2349   0016C8  EF8A  F00B         	goto	l1986
  2350   0016CC                     u1160:
  2351   0016CC  0E01               	movlw	1
  2352   0016CE  6E08               	movwf	___awmod@counter^0,c
  2353   0016D0  EF6E  F00B         	goto	l1976
  2354   0016D4                     l1974:
  2355   0016D4  90D8               	bcf	status,0,c
  2356   0016D6  3606               	rlcf	___awmod@divisor^0,f,c
  2357   0016D8  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  2358   0016DA  2A08               	incf	___awmod@counter^0,f,c
  2359   0016DC                     l1976:
  2360   0016DC  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  2361   0016DE  EF73  F00B         	goto	u1171
  2362   0016E2  EF75  F00B         	goto	u1170
  2363   0016E6                     u1171:
  2364   0016E6  EF6A  F00B         	goto	l1974
  2365   0016EA                     u1170:
  2366   0016EA                     l1978:
  2367   0016EA  5006               	movf	___awmod@divisor^0,w,c
  2368   0016EC  5C04               	subwf	___awmod@dividend^0,w,c
  2369   0016EE  5007               	movf	(___awmod@divisor+1)^0,w,c
  2370   0016F0  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  2371   0016F2  A0D8               	btfss	status,0,c
  2372   0016F4  EF7E  F00B         	goto	u1181
  2373   0016F8  EF80  F00B         	goto	u1180
  2374   0016FC                     u1181:
  2375   0016FC  EF84  F00B         	goto	l1982
  2376   001700                     u1180:
  2377   001700  5006               	movf	___awmod@divisor^0,w,c
  2378   001702  5E04               	subwf	___awmod@dividend^0,f,c
  2379   001704  5007               	movf	(___awmod@divisor+1)^0,w,c
  2380   001706  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  2381   001708                     l1982:
  2382   001708  90D8               	bcf	status,0,c
  2383   00170A  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  2384   00170C  3206               	rrcf	___awmod@divisor^0,f,c
  2385   00170E  2E08               	decfsz	___awmod@counter^0,f,c
  2386   001710  EF75  F00B         	goto	l1978
  2387   001714                     l1986:
  2388   001714  5009               	movf	___awmod@sign^0,w,c
  2389   001716  B4D8               	btfsc	status,2,c
  2390   001718  EF90  F00B         	goto	u1191
  2391   00171C  EF92  F00B         	goto	u1190
  2392   001720                     u1191:
  2393   001720  EF96  F00B         	goto	l1990
  2394   001724                     u1190:
  2395   001724  6C04               	negf	___awmod@dividend^0,c
  2396   001726  1E05               	comf	(___awmod@dividend+1)^0,f,c
  2397   001728  B0D8               	btfsc	status,0,c
  2398   00172A  2A05               	incf	(___awmod@dividend+1)^0,f,c
  2399   00172C                     l1990:
  2400   00172C  C004  F004         	movff	___awmod@dividend,?___awmod
  2401   001730  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  2402   001734  0012               	return		;funcret
  2403   001736                     __end_of___awmod:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function ___awdiv *****************
  2407 ;; Defined at:
  2408 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  dividend        2    3[COMRAM] int 
  2411 ;;  divisor         2    5[COMRAM] int 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  quotient        2    9[COMRAM] int 
  2414 ;;  sign            1    8[COMRAM] unsigned char 
  2415 ;;  counter         1    7[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    3[COMRAM] int 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;Total ram usage:        8 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_dtoa
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text13
  2440   0015C2                     __ptext13:
  2441                           	callstack 0
  2442   0015C2                     ___awdiv:
  2443                           	callstack 24
  2444   0015C2  0E00               	movlw	0
  2445   0015C4  6E09               	movwf	___awdiv@sign^0,c
  2446   0015C6  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  2447   0015C8  EFEA  F00A         	goto	u1080
  2448   0015CC  EFE8  F00A         	goto	u1081
  2449   0015D0                     u1081:
  2450   0015D0  EFF0  F00A         	goto	l1922
  2451   0015D4                     u1080:
  2452   0015D4  6C06               	negf	___awdiv@divisor^0,c
  2453   0015D6  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  2454   0015D8  B0D8               	btfsc	status,0,c
  2455   0015DA  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  2456   0015DC  0E01               	movlw	1
  2457   0015DE  6E09               	movwf	___awdiv@sign^0,c
  2458   0015E0                     l1922:
  2459   0015E0  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  2460   0015E2  EFF7  F00A         	goto	u1090
  2461   0015E6  EFF5  F00A         	goto	u1091
  2462   0015EA                     u1091:
  2463   0015EA  EFFD  F00A         	goto	l1928
  2464   0015EE                     u1090:
  2465   0015EE  6C04               	negf	___awdiv@dividend^0,c
  2466   0015F0  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  2467   0015F2  B0D8               	btfsc	status,0,c
  2468   0015F4  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  2469   0015F6  0E01               	movlw	1
  2470   0015F8  1A09               	xorwf	___awdiv@sign^0,f,c
  2471   0015FA                     l1928:
  2472   0015FA  0E00               	movlw	0
  2473   0015FC  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  2474   0015FE  0E00               	movlw	0
  2475   001600  6E0A               	movwf	___awdiv@quotient^0,c
  2476   001602  5006               	movf	___awdiv@divisor^0,w,c
  2477   001604  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  2478   001606  B4D8               	btfsc	status,2,c
  2479   001608  EF08  F00B         	goto	u1101
  2480   00160C  EF0A  F00B         	goto	u1100
  2481   001610                     u1101:
  2482   001610  EF32  F00B         	goto	l1950
  2483   001614                     u1100:
  2484   001614  0E01               	movlw	1
  2485   001616  6E08               	movwf	___awdiv@counter^0,c
  2486   001618  EF12  F00B         	goto	l1936
  2487   00161C                     l1934:
  2488   00161C  90D8               	bcf	status,0,c
  2489   00161E  3606               	rlcf	___awdiv@divisor^0,f,c
  2490   001620  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  2491   001622  2A08               	incf	___awdiv@counter^0,f,c
  2492   001624                     l1936:
  2493   001624  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  2494   001626  EF17  F00B         	goto	u1111
  2495   00162A  EF19  F00B         	goto	u1110
  2496   00162E                     u1111:
  2497   00162E  EF0E  F00B         	goto	l1934
  2498   001632                     u1110:
  2499   001632                     l1938:
  2500   001632  90D8               	bcf	status,0,c
  2501   001634  360A               	rlcf	___awdiv@quotient^0,f,c
  2502   001636  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2503   001638  5006               	movf	___awdiv@divisor^0,w,c
  2504   00163A  5C04               	subwf	___awdiv@dividend^0,w,c
  2505   00163C  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2506   00163E  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  2507   001640  A0D8               	btfss	status,0,c
  2508   001642  EF25  F00B         	goto	u1121
  2509   001646  EF27  F00B         	goto	u1120
  2510   00164A                     u1121:
  2511   00164A  EF2C  F00B         	goto	l1946
  2512   00164E                     u1120:
  2513   00164E  5006               	movf	___awdiv@divisor^0,w,c
  2514   001650  5E04               	subwf	___awdiv@dividend^0,f,c
  2515   001652  5007               	movf	(___awdiv@divisor+1)^0,w,c
  2516   001654  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  2517   001656  800A               	bsf	___awdiv@quotient^0,0,c
  2518   001658                     l1946:
  2519   001658  90D8               	bcf	status,0,c
  2520   00165A  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  2521   00165C  3206               	rrcf	___awdiv@divisor^0,f,c
  2522   00165E  2E08               	decfsz	___awdiv@counter^0,f,c
  2523   001660  EF19  F00B         	goto	l1938
  2524   001664                     l1950:
  2525   001664  5009               	movf	___awdiv@sign^0,w,c
  2526   001666  B4D8               	btfsc	status,2,c
  2527   001668  EF38  F00B         	goto	u1131
  2528   00166C  EF3A  F00B         	goto	u1130
  2529   001670                     u1131:
  2530   001670  EF3E  F00B         	goto	l1954
  2531   001674                     u1130:
  2532   001674  6C0A               	negf	___awdiv@quotient^0,c
  2533   001676  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  2534   001678  B0D8               	btfsc	status,0,c
  2535   00167A  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  2536   00167C                     l1954:
  2537   00167C  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  2538   001680  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  2539   001684  0012               	return		;funcret
  2540   001686                     __end_of___awdiv:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _LCD_setline *****************
  2544 ;; Defined at:
  2545 ;;		line 106 in file "LCD.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  line            1    wreg     unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  line            1    8[COMRAM] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;Total ram usage:        1 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 4
  2566 ;; This function calls:
  2567 ;;		_LCD_sendbyte
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;;		_time2String
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text14
  2575   001E34                     __ptext14:
  2576                           	callstack 0
  2577   001E34                     _LCD_setline:
  2578                           	callstack 25
  2579                           
  2580                           ;incstack = 0
  2581                           ;LCD_setline@line stored from wreg
  2582   001E34  6E09               	movwf	LCD_setline@line^0,c
  2583   001E36                     
  2584                           ;LCD.c: 106: void LCD_setline (char line);LCD.c: 107: {;LCD.c: 109:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  2585   001E36  0409               	decf	LCD_setline@line^0,w,c
  2586   001E38  A4D8               	btfss	status,2,c
  2587   001E3A  EF21  F00F         	goto	u1571
  2588   001E3E  EF23  F00F         	goto	u1570
  2589   001E42                     u1571:
  2590   001E42  EF28  F00F         	goto	l2244
  2591   001E46                     u1570:
  2592   001E46  0E00               	movlw	0
  2593   001E48  6E05               	movwf	LCD_sendbyte@type^0,c
  2594   001E4A  0E80               	movlw	128
  2595   001E4C  ECFC  F00E         	call	_LCD_sendbyte
  2596   001E50                     l2244:
  2597                           
  2598                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  2599   001E50  0E02               	movlw	2
  2600   001E52  1809               	xorwf	LCD_setline@line^0,w,c
  2601   001E54  A4D8               	btfss	status,2,c
  2602   001E56  EF2F  F00F         	goto	u1581
  2603   001E5A  EF31  F00F         	goto	u1580
  2604   001E5E                     u1581:
  2605   001E5E  EF36  F00F         	goto	l300
  2606   001E62                     u1580:
  2607   001E62  0E00               	movlw	0
  2608   001E64  6E05               	movwf	LCD_sendbyte@type^0,c
  2609   001E66  0EC0               	movlw	192
  2610   001E68  ECFC  F00E         	call	_LCD_sendbyte
  2611   001E6C                     l300:
  2612   001E6C  0012               	return		;funcret
  2613   001E6E                     __end_of_LCD_setline:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _LCD_sendstring *****************
  2617 ;; Defined at:
  2618 ;;		line 117 in file "LCD.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  string          1    8[COMRAM] PTR unsigned char 
  2621 ;;		 -> main@buf(32), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2637 ;;Total ram usage:        1 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 4
  2640 ;; This function calls:
  2641 ;;		_LCD_sendbyte
  2642 ;; This function is called by:
  2643 ;;		_time2String
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text15
  2648   001ED6                     __ptext15:
  2649                           	callstack 0
  2650   001ED6                     _LCD_sendstring:
  2651                           	callstack 25
  2652   001ED6                     
  2653                           ;LCD.c: 117: void LCD_sendstring(char *string);LCD.c: 118: {;LCD.c: 120:     while(*stri
      +                          ng != 0){
  2654   001ED6  EF76  F00F         	goto	l2392
  2655   001EDA                     l2388:
  2656                           
  2657                           ;LCD.c: 121:   LCD_sendbyte(*string++,1);
  2658   001EDA  0E01               	movlw	1
  2659   001EDC  6E05               	movwf	LCD_sendbyte@type^0,c
  2660   001EDE  5009               	movf	LCD_sendstring@string^0,w,c
  2661   001EE0  6ED9               	movwf	fsr2l,c
  2662   001EE2  6ADA               	clrf	fsr2h,c
  2663   001EE4  50DF               	movf	indf2,w,c
  2664   001EE6  ECFC  F00E         	call	_LCD_sendbyte
  2665   001EEA  2A09               	incf	LCD_sendstring@string^0,f,c
  2666   001EEC                     l2392:
  2667                           
  2668                           ;LCD.c: 120:     while(*string != 0){
  2669   001EEC  5009               	movf	LCD_sendstring@string^0,w,c
  2670   001EEE  6ED9               	movwf	fsr2l,c
  2671   001EF0  6ADA               	clrf	fsr2h,c
  2672   001EF2  50DF               	movf	indf2,w,c
  2673   001EF4  A4D8               	btfss	status,2,c
  2674   001EF6  EF7F  F00F         	goto	u1631
  2675   001EFA  EF81  F00F         	goto	u1630
  2676   001EFE                     u1631:
  2677   001EFE  EF6D  F00F         	goto	l2388
  2678   001F02                     u1630:
  2679   001F02  0012               	return		;funcret
  2680   001F04                     __end_of_LCD_sendstring:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _sunSync *****************
  2684 ;; Defined at:
  2685 ;;		line 114 in file "functions.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  hour            1    3[COMRAM] PTR unsigned int 
  2688 ;;		 -> hour(2), 
  2689 ;;  day             2    4[COMRAM] unsigned int 
  2690 ;;  synced          1    6[COMRAM] PTR unsigned int 
  2691 ;;		 -> main@synced(2), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;Total ram usage:        6 bytes
  2708 ;; Hardware stack levels used: 1
  2709 ;; Hardware stack levels required when called: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text16
  2718   001B5A                     __ptext16:
  2719                           	callstack 0
  2720   001B5A                     _sunSync:
  2721                           	callstack 29
  2722   001B5A                     
  2723                           ;functions.c: 115:     if (LATHbits.LATH3 == 0 && day==11 && *hour>=6 && *synced == 0){
  2724   001B5A  B680               	btfsc	128,3,c	;volatile
  2725   001B5C  EFB2  F00D         	goto	u1861
  2726   001B60  EFB4  F00D         	goto	u1860
  2727   001B64                     u1861:
  2728   001B64  EFE7  F00D         	goto	l254
  2729   001B68                     u1860:
  2730   001B68  0E0B               	movlw	11
  2731   001B6A  1805               	xorwf	sunSync@day^0,w,c
  2732   001B6C  1006               	iorwf	(sunSync@day+1)^0,w,c
  2733   001B6E  A4D8               	btfss	status,2,c
  2734   001B70  EFBC  F00D         	goto	u1871
  2735   001B74  EFBE  F00D         	goto	u1870
  2736   001B78                     u1871:
  2737   001B78  EFE7  F00D         	goto	l254
  2738   001B7C                     u1870:
  2739   001B7C  5004               	movf	sunSync@hour^0,w,c
  2740   001B7E  6ED9               	movwf	fsr2l,c
  2741   001B80  6ADA               	clrf	fsr2h,c
  2742   001B82  0E01               	movlw	1
  2743   001B84  50DB               	movf	plusw2,w,c
  2744   001B86  E109               	bnz	u1880
  2745   001B88  0E06               	movlw	6
  2746   001B8A  5CDE               	subwf	postinc2,w,c
  2747   001B8C  A0D8               	btfss	status,0,c
  2748   001B8E  EFCB  F00D         	goto	u1881
  2749   001B92  EFCD  F00D         	goto	u1880
  2750   001B96                     u1881:
  2751   001B96  EFE7  F00D         	goto	l254
  2752   001B9A                     u1880:
  2753   001B9A  5007               	movf	sunSync@synced^0,w,c
  2754   001B9C  6ED9               	movwf	fsr2l,c
  2755   001B9E  6ADA               	clrf	fsr2h,c
  2756   001BA0  50DE               	movf	postinc2,w,c
  2757   001BA2  10DE               	iorwf	postinc2,w,c
  2758   001BA4  A4D8               	btfss	status,2,c
  2759   001BA6  EFD7  F00D         	goto	u1891
  2760   001BAA  EFD9  F00D         	goto	u1890
  2761   001BAE                     u1891:
  2762   001BAE  EFE7  F00D         	goto	l254
  2763   001BB2                     u1890:
  2764   001BB2                     
  2765                           ;functions.c: 116:         *hour = 8;
  2766   001BB2  5004               	movf	sunSync@hour^0,w,c
  2767   001BB4  6ED9               	movwf	fsr2l,c
  2768   001BB6  6ADA               	clrf	fsr2h,c
  2769   001BB8  0E08               	movlw	8
  2770   001BBA  6EDE               	movwf	postinc2,c
  2771   001BBC  0E00               	movlw	0
  2772   001BBE  6EDD               	movwf	postdec2,c
  2773                           
  2774                           ;functions.c: 117:         *synced = 1;
  2775   001BC0  5007               	movf	sunSync@synced^0,w,c
  2776   001BC2  6ED9               	movwf	fsr2l,c
  2777   001BC4  6ADA               	clrf	fsr2h,c
  2778   001BC6  0E01               	movlw	1
  2779   001BC8  6EDE               	movwf	postinc2,c
  2780   001BCA  0E00               	movlw	0
  2781   001BCC  6EDD               	movwf	postdec2,c
  2782   001BCE                     l254:
  2783   001BCE  0012               	return		;funcret
  2784   001BD0                     __end_of_sunSync:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _initialise *****************
  2788 ;; Defined at:
  2789 ;;		line 124 in file "functions.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;Total ram usage:        0 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 5
  2810 ;; This function calls:
  2811 ;;		_Comp1_init_fe
  2812 ;;		_Comp1_init_re
  2813 ;;		_Interrupts_init
  2814 ;;		_LCD_init
  2815 ;;		_LEDarray_init
  2816 ;;		_Timer0_init
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text17
  2823   001FEE                     __ptext17:
  2824                           	callstack 0
  2825   001FEE                     _initialise:
  2826                           	callstack 25
  2827   001FEE                     
  2828                           ;functions.c: 126:     Interrupts_init();
  2829   001FEE  EC04  F010         	call	_Interrupts_init	;wreg free
  2830   001FF2                     
  2831                           ;functions.c: 127:     Comp1_init_re();
  2832   001FF2  ECC2  F00F         	call	_Comp1_init_re	;wreg free
  2833   001FF6                     
  2834                           ;functions.c: 128:     Comp1_init_fe();
  2835   001FF6  ECD4  F00F         	call	_Comp1_init_fe	;wreg free
  2836   001FFA                     
  2837                           ;functions.c: 129:     Timer0_init();
  2838   001FFA  EC82  F00F         	call	_Timer0_init	;wreg free
  2839   001FFE                     
  2840                           ;functions.c: 130:     LEDarray_init();
  2841   001FFE  EC99  F00F         	call	_LEDarray_init	;wreg free
  2842   002002                     
  2843                           ;functions.c: 131:     LCD_init();
  2844   002002  EC2D  F00D         	call	_LCD_init	;wreg free
  2845   002006  0012               	return		;funcret
  2846   002008                     __end_of_initialise:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _Timer0_init *****************
  2850 ;; Defined at:
  2851 ;;		line 9 in file "timers.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_initialise
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text18
  2880   001F04                     __ptext18:
  2881                           	callstack 0
  2882   001F04                     _Timer0_init:
  2883                           	callstack 28
  2884   001F04                     
  2885                           ;timers.c: 11:     T0CON1bits.T0CS = 0b010;
  2886   001F04  50D6               	movf	214,w,c	;volatile
  2887   001F06  0B1F               	andlw	-225
  2888   001F08  0940               	iorlw	64
  2889   001F0A  6ED6               	movwf	214,c	;volatile
  2890   001F0C                     
  2891                           ;timers.c: 12:     T0CON1bits.T0ASYNC = 1;
  2892   001F0C  88D6               	bsf	214,4,c	;volatile
  2893                           
  2894                           ;timers.c: 13:     T0CON1bits.T0CKPS = 0b1000;
  2895   001F0E  50D6               	movf	214,w,c	;volatile
  2896   001F10  0BF0               	andlw	-16
  2897   001F12  0908               	iorlw	8
  2898   001F14  6ED6               	movwf	214,c	;volatile
  2899   001F16                     
  2900                           ;timers.c: 14:     T0CON0bits.T016BIT = 1;
  2901   001F16  88D5               	bsf	213,4,c	;volatile
  2902   001F18                     
  2903                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  2904   001F18  010E               	movlb	14	; () banked
  2905   001F1A  8B29               	bsf	41,5,b	;volatile
  2906   001F1C                     
  2907                           ; BSR set to: 14
  2908                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  2909   001F1C  9B33               	bcf	51,5,b	;volatile
  2910   001F1E                     
  2911                           ; BSR set to: 14
  2912                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  2913   001F1E  9B1F               	bcf	31,5,b	;volatile
  2914   001F20                     
  2915                           ; BSR set to: 14
  2916                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  2917   001F20  8AF2               	bsf	242,5,c	;volatile
  2918   001F22                     
  2919                           ; BSR set to: 14
  2920                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  2921   001F22  8CF2               	bsf	242,6,c	;volatile
  2922   001F24                     
  2923                           ; BSR set to: 14
  2924                           ;timers.c: 21:     INTCONbits.GIE = 1;
  2925   001F24  8EF2               	bsf	242,7,c	;volatile
  2926                           
  2927                           ;timers.c: 24:     TMR0H=00001011;
  2928   001F26  0E09               	movlw	9
  2929   001F28  6ED4               	movwf	212,c	;volatile
  2930                           
  2931                           ;timers.c: 25:     TMR0L=110011011;
  2932   001F2A  0E83               	movlw	131
  2933   001F2C  6ED3               	movwf	211,c	;volatile
  2934   001F2E                     
  2935                           ; BSR set to: 14
  2936                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  2937   001F2E  8ED5               	bsf	213,7,c	;volatile
  2938   001F30                     
  2939                           ; BSR set to: 14
  2940   001F30  0012               	return		;funcret
  2941   001F32                     __end_of_Timer0_init:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _LEDarray_init *****************
  2945 ;; Defined at:
  2946 ;;		line 8 in file "LEDarray.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_initialise
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text19
  2975   001F32                     __ptext19:
  2976                           	callstack 0
  2977   001F32                     _LEDarray_init:
  2978                           	callstack 28
  2979   001F32                     
  2980                           ;LEDarray.c: 10:     LATA = 0;
  2981   001F32  0E00               	movlw	0
  2982   001F34  6E79               	movwf	121,c	;volatile
  2983                           
  2984                           ;LEDarray.c: 11:     LATB = 0;
  2985   001F36  0E00               	movlw	0
  2986   001F38  6E7A               	movwf	122,c	;volatile
  2987   001F3A                     
  2988                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  2989   001F3A  907E               	bcf	126,0,c	;volatile
  2990   001F3C                     
  2991                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  2992   001F3C  9C7E               	bcf	126,6,c	;volatile
  2993                           
  2994                           ;LEDarray.c: 14:     LATG = 0;
  2995   001F3E  0E00               	movlw	0
  2996   001F40  6E7F               	movwf	127,c	;volatile
  2997   001F42                     
  2998                           ;LEDarray.c: 15:  LATHbits.LATH3 = 1;
  2999   001F42  8680               	bsf	128,3,c	;volatile
  3000                           
  3001                           ;LEDarray.c: 18:     TRISA = 0;
  3002   001F44  0E00               	movlw	0
  3003   001F46  6E81               	movwf	129,c	;volatile
  3004                           
  3005                           ;LEDarray.c: 19:  TRISB = 0;
  3006   001F48  0E00               	movlw	0
  3007   001F4A  6E82               	movwf	130,c	;volatile
  3008   001F4C                     
  3009                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  3010   001F4C  9086               	bcf	134,0,c	;volatile
  3011   001F4E                     
  3012                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  3013   001F4E  9C86               	bcf	134,6,c	;volatile
  3014                           
  3015                           ;LEDarray.c: 22:     TRISG = 0;
  3016   001F50  0E00               	movlw	0
  3017   001F52  6E87               	movwf	135,c	;volatile
  3018   001F54                     
  3019                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  3020   001F54  9688               	bcf	136,3,c	;volatile
  3021   001F56                     
  3022                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  3023   001F56  8486               	bsf	134,2,c	;volatile
  3024   001F58                     
  3025                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  3026   001F58  010E               	movlb	14	; () banked
  3027   001F5A  95B4               	bcf	180,2,b	;volatile
  3028   001F5C                     
  3029                           ; BSR set to: 14
  3030   001F5C  0012               	return		;funcret
  3031   001F5E                     __end_of_LEDarray_init:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _LCD_init *****************
  3035 ;; Defined at:
  3036 ;;		line 63 in file "LCD.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3054 ;;Total ram usage:        1 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 4
  3057 ;; This function calls:
  3058 ;;		_LCD_sendbyte
  3059 ;;		_LCD_sendnibble
  3060 ;; This function is called by:
  3061 ;;		_initialise
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text20
  3066   001A5A                     __ptext20:
  3067                           	callstack 0
  3068   001A5A                     _LCD_init:
  3069                           	callstack 25
  3070   001A5A                     
  3071                           ;LCD.c: 67:     TRISCbits.TRISC6=0;
  3072   001A5A  9C83               	bcf	131,6,c	;volatile
  3073                           
  3074                           ;LCD.c: 68:     TRISCbits.TRISC2=0;
  3075   001A5C  9483               	bcf	131,2,c	;volatile
  3076                           
  3077                           ;LCD.c: 69:     TRISBbits.TRISB3=0;
  3078   001A5E  9682               	bcf	130,3,c	;volatile
  3079                           
  3080                           ;LCD.c: 70:     TRISBbits.TRISB2=0;
  3081   001A60  9482               	bcf	130,2,c	;volatile
  3082                           
  3083                           ;LCD.c: 71:     TRISEbits.TRISE3=0;
  3084   001A62  9685               	bcf	133,3,c	;volatile
  3085                           
  3086                           ;LCD.c: 72:     TRISEbits.TRISE1=0;
  3087   001A64  9285               	bcf	133,1,c	;volatile
  3088                           
  3089                           ;LCD.c: 75:     LATCbits.LATC6=0;
  3090   001A66  9C7B               	bcf	123,6,c	;volatile
  3091                           
  3092                           ;LCD.c: 76:     LATCbits.LATC2=0;
  3093   001A68  947B               	bcf	123,2,c	;volatile
  3094                           
  3095                           ;LCD.c: 77:     LATBbits.LATB4 = 0;
  3096   001A6A  987A               	bcf	122,4,c	;volatile
  3097                           
  3098                           ;LCD.c: 78:     LATBbits.LATB5 = 0;
  3099   001A6C  9A7A               	bcf	122,5,c	;volatile
  3100                           
  3101                           ;LCD.c: 79:     LATBbits.LATB6 = 0;
  3102   001A6E  9C7A               	bcf	122,6,c	;volatile
  3103                           
  3104                           ;LCD.c: 80:     LATBbits.LATB7 = 0;
  3105   001A70  9E7A               	bcf	122,7,c	;volatile
  3106   001A72                     
  3107                           ;LCD.c: 85:     LCD_sendnibble(0b0011);
  3108   001A72  0E03               	movlw	3
  3109   001A74  EC57  F00E         	call	_LCD_sendnibble
  3110   001A78                     
  3111                           ;LCD.c: 86:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3112   001A78  0ED0               	movlw	208
  3113   001A7A                     u2017:
  3114   001A7A  2EE8               	decfsz	wreg,f,c
  3115   001A7C  D7FE               	bra	u2017
  3116   001A7E                     
  3117                           ;LCD.c: 88:     LCD_sendbyte(0b00101000,0);
  3118   001A7E  0E00               	movlw	0
  3119   001A80  6E05               	movwf	LCD_sendbyte@type^0,c
  3120   001A82  0E28               	movlw	40
  3121   001A84  ECFC  F00E         	call	_LCD_sendbyte
  3122   001A88                     
  3123                           ;LCD.c: 89:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  3124   001A88  0ED0               	movlw	208
  3125   001A8A                     u2027:
  3126   001A8A  2EE8               	decfsz	wreg,f,c
  3127   001A8C  D7FE               	bra	u2027
  3128   001A8E                     
  3129                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  3130   001A8E  0E00               	movlw	0
  3131   001A90  6E05               	movwf	LCD_sendbyte@type^0,c
  3132   001A92  0E28               	movlw	40
  3133   001A94  ECFC  F00E         	call	_LCD_sendbyte
  3134   001A98                     
  3135                           ;LCD.c: 91:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3136   001A98  0EC5               	movlw	197
  3137   001A9A                     u2037:
  3138   001A9A  2EE8               	decfsz	wreg,f,c
  3139   001A9C  D7FE               	bra	u2037
  3140   001A9E  0000               	nop	
  3141   001AA0                     
  3142                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  3143   001AA0  0E00               	movlw	0
  3144   001AA2  6E05               	movwf	LCD_sendbyte@type^0,c
  3145   001AA4  0E0C               	movlw	12
  3146   001AA6  ECFC  F00E         	call	_LCD_sendbyte
  3147   001AAA                     
  3148                           ;LCD.c: 93:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  3149   001AAA  0EC5               	movlw	197
  3150   001AAC                     u2047:
  3151   001AAC  2EE8               	decfsz	wreg,f,c
  3152   001AAE  D7FE               	bra	u2047
  3153   001AB0  0000               	nop	
  3154   001AB2                     
  3155                           ;LCD.c: 94:     LCD_sendbyte(0b00000001,0);
  3156   001AB2  0E00               	movlw	0
  3157   001AB4  6E05               	movwf	LCD_sendbyte@type^0,c
  3158   001AB6  0E01               	movlw	1
  3159   001AB8  ECFC  F00E         	call	_LCD_sendbyte
  3160   001ABC                     
  3161                           ;LCD.c: 95:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  3162   001ABC  0E20               	movlw	32
  3163   001ABE  6E09               	movwf	??_LCD_init^0,c
  3164   001AC0  0ECA               	movlw	202
  3165   001AC2                     u2057:
  3166   001AC2  2EE8               	decfsz	wreg,f,c
  3167   001AC4  D7FE               	bra	u2057
  3168   001AC6  2E09               	decfsz	??_LCD_init^0,f,c
  3169   001AC8  D7FC               	bra	u2057
  3170   001ACA                     
  3171                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  3172   001ACA  0E00               	movlw	0
  3173   001ACC  6E05               	movwf	LCD_sendbyte@type^0,c
  3174   001ACE  0E06               	movlw	6
  3175   001AD0  ECFC  F00E         	call	_LCD_sendbyte
  3176   001AD4                     
  3177                           ;LCD.c: 100:     LCD_sendbyte(0b1111,0);
  3178   001AD4  0E00               	movlw	0
  3179   001AD6  6E05               	movwf	LCD_sendbyte@type^0,c
  3180   001AD8  0E0F               	movlw	15
  3181   001ADA  ECFC  F00E         	call	_LCD_sendbyte
  3182   001ADE  0012               	return		;funcret
  3183   001AE0                     __end_of_LCD_init:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _LCD_sendbyte *****************
  3187 ;; Defined at:
  3188 ;;		line 43 in file "LCD.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  Byte            1    wreg     unsigned char 
  3191 ;;  type            1    4[COMRAM] unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  Byte            1    7[COMRAM] unsigned char 
  3194 ;;  lowNibble       1    6[COMRAM] unsigned char 
  3195 ;;  highNibble      1    5[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3205 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;Total ram usage:        4 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 3
  3212 ;; This function calls:
  3213 ;;		_LCD_sendnibble
  3214 ;; This function is called by:
  3215 ;;		_LCD_init
  3216 ;;		_LCD_setline
  3217 ;;		_LCD_sendstring
  3218 ;;		_LCD_scroll
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text21
  3223   001DF8                     __ptext21:
  3224                           	callstack 0
  3225   001DF8                     _LCD_sendbyte:
  3226                           	callstack 25
  3227                           
  3228                           ;incstack = 0
  3229                           ;LCD_sendbyte@Byte stored from wreg
  3230   001DF8  6E08               	movwf	LCD_sendbyte@Byte^0,c
  3231   001DFA                     
  3232                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  3233   001DFA  0405               	decf	LCD_sendbyte@type^0,w,c
  3234   001DFC  A4D8               	btfss	status,2,c
  3235   001DFE  EF03  F00F         	goto	u1521
  3236   001E02  EF05  F00F         	goto	u1520
  3237   001E06                     u1521:
  3238   001E06  EF08  F00F         	goto	l290
  3239   001E0A                     u1520:
  3240   001E0A  8C7B               	bsf	123,6,c	;volatile
  3241   001E0C  EF09  F00F         	goto	l2200
  3242   001E10                     l290:
  3243   001E10  9C7B               	bcf	123,6,c	;volatile
  3244   001E12                     l2200:
  3245                           
  3246                           ;LCD.c: 50:     unsigned char highNibble = (Byte >> 4) ;
  3247   001E12  3808               	swapf	LCD_sendbyte@Byte^0,w,c
  3248   001E14  0B0F               	andlw	15
  3249   001E16  6E06               	movwf	LCD_sendbyte@highNibble^0,c
  3250   001E18                     
  3251                           ;LCD.c: 51:     LCD_sendnibble(highNibble);
  3252   001E18  5006               	movf	LCD_sendbyte@highNibble^0,w,c
  3253   001E1A  EC57  F00E         	call	_LCD_sendnibble
  3254   001E1E                     
  3255                           ;LCD.c: 54:     unsigned char lowNibble = Byte & 0b1111;
  3256   001E1E  5008               	movf	LCD_sendbyte@Byte^0,w,c
  3257   001E20  0B0F               	andlw	15
  3258   001E22  6E07               	movwf	LCD_sendbyte@lowNibble^0,c
  3259                           
  3260                           ;LCD.c: 55:     LCD_sendnibble(lowNibble);
  3261   001E24  5007               	movf	LCD_sendbyte@lowNibble^0,w,c
  3262   001E26  EC57  F00E         	call	_LCD_sendnibble
  3263   001E2A                     
  3264                           ;LCD.c: 57:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3265   001E2A  0EA0               	movlw	160
  3266   001E2C                     u2067:
  3267   001E2C  D000               	nop2	
  3268   001E2E  2EE8               	decfsz	wreg,f,c
  3269   001E30  D7FD               	bra	u2067
  3270   001E32  0012               	return		;funcret
  3271   001E34                     __end_of_LCD_sendbyte:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _LCD_sendnibble *****************
  3275 ;; Defined at:
  3276 ;;		line 21 in file "LCD.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  number          1    wreg     unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  number          1    3[COMRAM] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;Total ram usage:        1 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 2
  3297 ;; This function calls:
  3298 ;;		_LCD_E_TOG
  3299 ;; This function is called by:
  3300 ;;		_LCD_sendbyte
  3301 ;;		_LCD_init
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text22
  3306   001CAE                     __ptext22:
  3307                           	callstack 0
  3308   001CAE                     _LCD_sendnibble:
  3309                           	callstack 25
  3310                           
  3311                           ;incstack = 0
  3312                           ;LCD_sendnibble@number stored from wreg
  3313   001CAE  6E04               	movwf	LCD_sendnibble@number^0,c
  3314   001CB0                     
  3315                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  3316   001CB0  A004               	btfss	LCD_sendnibble@number^0,0,c
  3317   001CB2  EF5D  F00E         	goto	u1371
  3318   001CB6  EF5F  F00E         	goto	u1370
  3319   001CBA                     u1371:
  3320   001CBA  EF62  F00E         	goto	l279
  3321   001CBE                     u1370:
  3322   001CBE  867A               	bsf	122,3,c	;volatile
  3323   001CC0  EF63  F00E         	goto	l2088
  3324   001CC4                     l279:
  3325   001CC4  967A               	bcf	122,3,c	;volatile
  3326   001CC6                     l2088:
  3327                           
  3328                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  3329   001CC6  A204               	btfss	LCD_sendnibble@number^0,1,c
  3330   001CC8  EF68  F00E         	goto	u1381
  3331   001CCC  EF6A  F00E         	goto	u1380
  3332   001CD0                     u1381:
  3333   001CD0  EF6D  F00E         	goto	l281
  3334   001CD4                     u1380:
  3335   001CD4  847A               	bsf	122,2,c	;volatile
  3336   001CD6  EF6E  F00E         	goto	l2092
  3337   001CDA                     l281:
  3338   001CDA  947A               	bcf	122,2,c	;volatile
  3339   001CDC                     l2092:
  3340                           
  3341                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  3342   001CDC  A404               	btfss	LCD_sendnibble@number^0,2,c
  3343   001CDE  EF73  F00E         	goto	u1391
  3344   001CE2  EF75  F00E         	goto	u1390
  3345   001CE6                     u1391:
  3346   001CE6  EF78  F00E         	goto	l283
  3347   001CEA                     u1390:
  3348   001CEA  867D               	bsf	125,3,c	;volatile
  3349   001CEC  EF79  F00E         	goto	l2096
  3350   001CF0                     l283:
  3351   001CF0  967D               	bcf	125,3,c	;volatile
  3352   001CF2                     l2096:
  3353                           
  3354                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  3355   001CF2  A604               	btfss	LCD_sendnibble@number^0,3,c
  3356   001CF4  EF7E  F00E         	goto	u1401
  3357   001CF8  EF80  F00E         	goto	u1400
  3358   001CFC                     u1401:
  3359   001CFC  EF83  F00E         	goto	l285
  3360   001D00                     u1400:
  3361   001D00  827D               	bsf	125,1,c	;volatile
  3362   001D02  EF84  F00E         	goto	l2100
  3363   001D06                     l285:
  3364   001D06  927D               	bcf	125,1,c	;volatile
  3365   001D08                     l2100:
  3366                           
  3367                           ;LCD.c: 34:     LCD_E_TOG();
  3368   001D08  EC1B  F010         	call	_LCD_E_TOG	;wreg free
  3369   001D0C                     
  3370                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3371   001D0C  0E1A               	movlw	26
  3372   001D0E                     u2077:
  3373   001D0E  2EE8               	decfsz	wreg,f,c
  3374   001D10  D7FE               	bra	u2077
  3375   001D12  D000               	nop2	
  3376   001D14  0012               	return		;funcret
  3377   001D16                     __end_of_LCD_sendnibble:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _LCD_E_TOG *****************
  3381 ;; Defined at:
  3382 ;;		line 9 in file "LCD.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_LCD_sendnibble
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text23
  3411   002036                     __ptext23:
  3412                           	callstack 0
  3413   002036                     _LCD_E_TOG:
  3414                           	callstack 25
  3415   002036                     
  3416                           ;LCD.c: 12:     LATCbits.LATC2=1;
  3417   002036  847B               	bsf	123,2,c	;volatile
  3418   002038                     
  3419                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3420   002038  0E0A               	movlw	10
  3421   00203A                     u2087:
  3422   00203A  2EE8               	decfsz	wreg,f,c
  3423   00203C  D7FE               	bra	u2087
  3424   00203E  D000               	nop2	
  3425   002040                     
  3426                           ;LCD.c: 15:     LATCbits.LATC2=0;
  3427   002040  947B               	bcf	123,2,c	;volatile
  3428   002042  0012               	return		;funcret
  3429   002044                     __end_of_LCD_E_TOG:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _Interrupts_init *****************
  3433 ;; Defined at:
  3434 ;;		line 11 in file "interrupts.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		None
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 1
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_initialise
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text24
  3463   002008                     __ptext24:
  3464                           	callstack 0
  3465   002008                     _Interrupts_init:
  3466                           	callstack 28
  3467   002008                     
  3468                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  3469   002008  010E               	movlb	14	; () banked
  3470   00200A  812B               	bsf	43,0,b	;volatile
  3471                           
  3472                           ;interrupts.c: 14:     IPR2bits.C1IP = 0;
  3473   00200C  9121               	bcf	33,0,b	;volatile
  3474                           
  3475                           ;interrupts.c: 17:     PIE2bits.C2IE = 1;
  3476   00200E  832B               	bsf	43,1,b	;volatile
  3477                           
  3478                           ;interrupts.c: 18:     IPR2bits.C2IP = 0;
  3479   002010  9321               	bcf	33,1,b	;volatile
  3480                           
  3481                           ;interrupts.c: 21:     PIE2bits.C3IE = 1;
  3482   002012  852B               	bsf	43,2,b	;volatile
  3483                           
  3484                           ;interrupts.c: 22:     IPR2bits.C3IP = 1;
  3485   002014  8521               	bsf	33,2,b	;volatile
  3486                           
  3487                           ;interrupts.c: 26:     PIE0bits.TMR0IE = 1;
  3488   002016  8B29               	bsf	41,5,b	;volatile
  3489                           
  3490                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  3491   002018  9B1F               	bcf	31,5,b	;volatile
  3492                           
  3493                           ;interrupts.c: 30:     INTCONbits.IPEN = 1;
  3494   00201A  8AF2               	bsf	242,5,c	;volatile
  3495                           
  3496                           ;interrupts.c: 33:     INTCONbits.PEIE = 1;
  3497   00201C  8CF2               	bsf	242,6,c	;volatile
  3498                           
  3499                           ;interrupts.c: 36:     INTCONbits.GIE = 1;
  3500   00201E  8EF2               	bsf	242,7,c	;volatile
  3501   002020                     
  3502                           ; BSR set to: 14
  3503   002020  0012               	return		;funcret
  3504   002022                     __end_of_Interrupts_init:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _Comp1_init_re *****************
  3508 ;; Defined at:
  3509 ;;		line 23 in file "comparator.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 2
  3530 ;; This function calls:
  3531 ;;		_DAC_init
  3532 ;; This function is called by:
  3533 ;;		_initialise
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text25
  3538   001F84                     __ptext25:
  3539                           	callstack 0
  3540   001F84                     _Comp1_init_re:
  3541                           	callstack 27
  3542   001F84                     
  3543                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  3544   001F84  8E86               	bsf	134,7,c	;volatile
  3545   001F86                     
  3546                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  3547   001F86  010E               	movlb	14	; () banked
  3548   001F88  51D2               	movf	210,w,b	;volatile
  3549   001F8A  0BF8               	andlw	-8
  3550   001F8C  0903               	iorlw	3
  3551   001F8E  6FD2               	movwf	210,b	;volatile
  3552                           
  3553                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  3554   001F90  51D3               	movf	211,w,b	;volatile
  3555   001F92  0BF8               	andlw	-8
  3556   001F94  0905               	iorlw	5
  3557   001F96  6FD3               	movwf	211,b	;volatile
  3558   001F98                     
  3559                           ; BSR set to: 14
  3560                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  3561   001F98  83D0               	bsf	208,1,b	;volatile
  3562   001F9A                     
  3563                           ; BSR set to: 14
  3564                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  3565   001F9A  89D0               	bsf	208,4,b	;volatile
  3566   001F9C                     
  3567                           ; BSR set to: 14
  3568                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  3569   001F9C  83D1               	bsf	209,1,b	;volatile
  3570   001F9E                     
  3571                           ; BSR set to: 14
  3572                           ;comparator.c: 31:     DAC_init();
  3573   001F9E  EC11  F010         	call	_DAC_init	;wreg free
  3574   001FA2                     
  3575                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  3576   001FA2  010E               	movlb	14	; () banked
  3577   001FA4  8FD0               	bsf	208,7,b	;volatile
  3578   001FA6                     
  3579                           ; BSR set to: 14
  3580   001FA6  0012               	return		;funcret
  3581   001FA8                     __end_of_Comp1_init_re:
  3582                           	callstack 0
  3583                           
  3584 ;; *************** function _Comp1_init_fe *****************
  3585 ;; Defined at:
  3586 ;;		line 39 in file "comparator.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 2
  3607 ;; This function calls:
  3608 ;;		_DAC_init
  3609 ;; This function is called by:
  3610 ;;		_initialise
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text26
  3615   001FA8                     __ptext26:
  3616                           	callstack 0
  3617   001FA8                     _Comp1_init_fe:
  3618                           	callstack 27
  3619   001FA8                     
  3620                           ;comparator.c: 41:     TRISFbits.TRISF7=1;
  3621   001FA8  8E86               	bsf	134,7,c	;volatile
  3622   001FAA                     
  3623                           ;comparator.c: 42:     CM2NCHbits.NCH=0b011;
  3624   001FAA  010E               	movlb	14	; () banked
  3625   001FAC  51CE               	movf	206,w,b	;volatile
  3626   001FAE  0BF8               	andlw	-8
  3627   001FB0  0903               	iorlw	3
  3628   001FB2  6FCE               	movwf	206,b	;volatile
  3629                           
  3630                           ;comparator.c: 43:     CM2PCHbits.PCH=0b101;
  3631   001FB4  51CF               	movf	207,w,b	;volatile
  3632   001FB6  0BF8               	andlw	-8
  3633   001FB8  0905               	iorlw	5
  3634   001FBA  6FCF               	movwf	207,b	;volatile
  3635   001FBC                     
  3636                           ; BSR set to: 14
  3637                           ;comparator.c: 44:     CM2CON0bits.HYS=1;
  3638   001FBC  83CC               	bsf	204,1,b	;volatile
  3639   001FBE                     
  3640                           ; BSR set to: 14
  3641                           ;comparator.c: 45:     CM2CON0bits.POL=1;
  3642   001FBE  89CC               	bsf	204,4,b	;volatile
  3643   001FC0                     
  3644                           ; BSR set to: 14
  3645                           ;comparator.c: 46:     CM2CON1bits.INTN=1;
  3646   001FC0  81CD               	bsf	205,0,b	;volatile
  3647   001FC2                     
  3648                           ; BSR set to: 14
  3649                           ;comparator.c: 47:     DAC_init();
  3650   001FC2  EC11  F010         	call	_DAC_init	;wreg free
  3651   001FC6                     
  3652                           ;comparator.c: 48:     CM2CON0bits.EN=1;
  3653   001FC6  010E               	movlb	14	; () banked
  3654   001FC8  8FCC               	bsf	204,7,b	;volatile
  3655   001FCA                     
  3656                           ; BSR set to: 14
  3657   001FCA  0012               	return		;funcret
  3658   001FCC                     __end_of_Comp1_init_fe:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _DAC_init *****************
  3662 ;; Defined at:
  3663 ;;		line 6 in file "comparator.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_Comp1_init_re
  3688 ;;		_Comp1_init_fe
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text27
  3693   002022                     __ptext27:
  3694                           	callstack 0
  3695   002022                     _DAC_init:
  3696                           	callstack 27
  3697   002022                     
  3698                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  3699   002022  0EF3               	movlw	-13
  3700   002024  010E               	movlb	14	; () banked
  3701   002026  17C6               	andwf	198,f,b	;volatile
  3702   002028                     
  3703                           ; BSR set to: 14
  3704                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  3705   002028  91C6               	bcf	198,0,b	;volatile
  3706                           
  3707                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  3708   00202A  51C7               	movf	199,w,b	;volatile
  3709   00202C  0BE0               	andlw	-32
  3710   00202E  0914               	iorlw	20
  3711   002030  6FC7               	movwf	199,b	;volatile
  3712   002032                     
  3713                           ; BSR set to: 14
  3714                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  3715   002032  8FC6               	bsf	198,7,b	;volatile
  3716   002034                     
  3717                           ; BSR set to: 14
  3718   002034  0012               	return		;funcret
  3719   002036                     __end_of_DAC_init:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _hourChangeDST *****************
  3723 ;; Defined at:
  3724 ;;		line 61 in file "functions.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  day             2    3[COMRAM] unsigned int 
  3727 ;;  fwd_daylight    2    5[COMRAM] unsigned int 
  3728 ;;  bkwd_dayligh    2    7[COMRAM] unsigned int 
  3729 ;;  hour            1    9[COMRAM] PTR unsigned int 
  3730 ;;		 -> hour(2), 
  3731 ;;  backward_zon    1   10[COMRAM] PTR unsigned int 
  3732 ;;		 -> main@backward_zone(2), 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3744 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;Total ram usage:       10 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text28
  3759   0017E4                     __ptext28:
  3760                           	callstack 0
  3761   0017E4                     _hourChangeDST:
  3762                           	callstack 29
  3763   0017E4                     
  3764                           ;functions.c: 63:     if (day == fwd_daylight_savings_day && *hour == 2) {
  3765   0017E4  5006               	movf	hourChangeDST@fwd_daylight_savings_day^0,w,c
  3766   0017E6  1804               	xorwf	hourChangeDST@day^0,w,c
  3767   0017E8  E107               	bnz	u1761
  3768   0017EA  5007               	movf	(hourChangeDST@fwd_daylight_savings_day+1)^0,w,c
  3769   0017EC  1805               	xorwf	(hourChangeDST@day+1)^0,w,c
  3770   0017EE  A4D8               	btfss	status,2,c
  3771   0017F0  EFFC  F00B         	goto	u1761
  3772   0017F4  EFFE  F00B         	goto	u1760
  3773   0017F8                     u1761:
  3774   0017F8  EF16  F00C         	goto	l2472
  3775   0017FC                     u1760:
  3776   0017FC  500A               	movf	hourChangeDST@hour^0,w,c
  3777   0017FE  6ED9               	movwf	fsr2l,c
  3778   001800  6ADA               	clrf	fsr2h,c
  3779   001802  0E02               	movlw	2
  3780   001804  18DE               	xorwf	postinc2,w,c
  3781   001806  10DE               	iorwf	postinc2,w,c
  3782   001808  A4D8               	btfss	status,2,c
  3783   00180A  EF09  F00C         	goto	u1771
  3784   00180E  EF0B  F00C         	goto	u1770
  3785   001812                     u1771:
  3786   001812  EF16  F00C         	goto	l2472
  3787   001816                     u1770:
  3788   001816                     
  3789                           ;functions.c: 64:         (*hour)++;
  3790   001816  500A               	movf	hourChangeDST@hour^0,w,c
  3791   001818  6ED9               	movwf	fsr2l,c
  3792   00181A  6ADA               	clrf	fsr2h,c
  3793   00181C  2ADE               	incf	postinc2,f,c
  3794   00181E  0E00               	movlw	0
  3795   001820  22DD               	addwfc	postdec2,f,c
  3796   001822                     
  3797                           ;functions.c: 65:         *backward_zone = 0;
  3798   001822  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3799   001824  6ED9               	movwf	fsr2l,c
  3800   001826  6ADA               	clrf	fsr2h,c
  3801   001828  6ADE               	clrf	postinc2,c
  3802   00182A  6ADD               	clrf	postdec2,c
  3803   00182C                     l2472:
  3804                           
  3805                           ;functions.c: 68:     if (day == bkwd_daylight_savings_day && *hour == 2 && *backward_zo
      +                          ne == 0) {
  3806   00182C  5008               	movf	hourChangeDST@bkwd_daylight_savings_day^0,w,c
  3807   00182E  1804               	xorwf	hourChangeDST@day^0,w,c
  3808   001830  E107               	bnz	u1781
  3809   001832  5009               	movf	(hourChangeDST@bkwd_daylight_savings_day+1)^0,w,c
  3810   001834  1805               	xorwf	(hourChangeDST@day+1)^0,w,c
  3811   001836  A4D8               	btfss	status,2,c
  3812   001838  EF20  F00C         	goto	u1781
  3813   00183C  EF22  F00C         	goto	u1780
  3814   001840                     u1781:
  3815   001840  EF48  F00C         	goto	l240
  3816   001844                     u1780:
  3817   001844  500A               	movf	hourChangeDST@hour^0,w,c
  3818   001846  6ED9               	movwf	fsr2l,c
  3819   001848  6ADA               	clrf	fsr2h,c
  3820   00184A  0E02               	movlw	2
  3821   00184C  18DE               	xorwf	postinc2,w,c
  3822   00184E  10DE               	iorwf	postinc2,w,c
  3823   001850  A4D8               	btfss	status,2,c
  3824   001852  EF2D  F00C         	goto	u1791
  3825   001856  EF2F  F00C         	goto	u1790
  3826   00185A                     u1791:
  3827   00185A  EF48  F00C         	goto	l240
  3828   00185E                     u1790:
  3829   00185E  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3830   001860  6ED9               	movwf	fsr2l,c
  3831   001862  6ADA               	clrf	fsr2h,c
  3832   001864  50DE               	movf	postinc2,w,c
  3833   001866  10DE               	iorwf	postinc2,w,c
  3834   001868  A4D8               	btfss	status,2,c
  3835   00186A  EF39  F00C         	goto	u1801
  3836   00186E  EF3B  F00C         	goto	u1800
  3837   001872                     u1801:
  3838   001872  EF48  F00C         	goto	l240
  3839   001876                     u1800:
  3840   001876                     
  3841                           ;functions.c: 69:         (*hour)--;
  3842   001876  500A               	movf	hourChangeDST@hour^0,w,c
  3843   001878  6ED9               	movwf	fsr2l,c
  3844   00187A  6ADA               	clrf	fsr2h,c
  3845   00187C  06DE               	decf	postinc2,f,c
  3846   00187E  0E00               	movlw	0
  3847   001880  5ADD               	subwfb	postdec2,f,c
  3848   001882                     
  3849                           ;functions.c: 70:         *backward_zone = 1;
  3850   001882  500B               	movf	hourChangeDST@backward_zone^0,w,c
  3851   001884  6ED9               	movwf	fsr2l,c
  3852   001886  6ADA               	clrf	fsr2h,c
  3853   001888  0E01               	movlw	1
  3854   00188A  6EDE               	movwf	postinc2,c
  3855   00188C  0E00               	movlw	0
  3856   00188E  6EDD               	movwf	postdec2,c
  3857   001890                     l240:
  3858   001890  0012               	return		;funcret
  3859   001892                     __end_of_hourChangeDST:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _findDSTdates *****************
  3863 ;; Defined at:
  3864 ;;		line 77 in file "functions.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  hour            2   64[COMRAM] unsigned int 
  3867 ;;  day             2   66[COMRAM] unsigned int 
  3868 ;;  year            2   68[COMRAM] unsigned int 
  3869 ;;  fwd_daylight    1   70[COMRAM] PTR unsigned int 
  3870 ;;		 -> main@fwd_daylight_savings_day(2), 
  3871 ;;  bkwd_dayligh    1   71[COMRAM] PTR unsigned int 
  3872 ;;		 -> main@bkwd_daylight_savings_day(2), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3884 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;Total ram usage:        8 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 4
  3891 ;; This function calls:
  3892 ;;		_lastSunday
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text29
  3899   001C44                     __ptext29:
  3900                           	callstack 0
  3901   001C44                     _findDSTdates:
  3902                           	callstack 26
  3903   001C44                     
  3904                           ;functions.c: 79:     if (day==1 && hour == 0){
  3905   001C44  0443               	decf	findDSTdates@day^0,w,c
  3906   001C46  1044               	iorwf	(findDSTdates@day+1)^0,w,c
  3907   001C48  A4D8               	btfss	status,2,c
  3908   001C4A  EF29  F00E         	goto	u1741
  3909   001C4E  EF2B  F00E         	goto	u1740
  3910   001C52                     u1741:
  3911   001C52  EF56  F00E         	goto	l244
  3912   001C56                     u1740:
  3913   001C56  5041               	movf	findDSTdates@hour^0,w,c
  3914   001C58  1042               	iorwf	(findDSTdates@hour+1)^0,w,c
  3915   001C5A  A4D8               	btfss	status,2,c
  3916   001C5C  EF32  F00E         	goto	u1751
  3917   001C60  EF34  F00E         	goto	u1750
  3918   001C64                     u1751:
  3919   001C64  EF56  F00E         	goto	l244
  3920   001C68                     u1750:
  3921   001C68                     
  3922                           ;functions.c: 80:         *fwd_daylight_savings_day = lastSunday(year, 3);
  3923   001C68  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3924   001C6C  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3925   001C70  0E00               	movlw	0
  3926   001C72  6E1E               	movwf	(lastSunday@month+1)^0,c
  3927   001C74  0E03               	movlw	3
  3928   001C76  6E1D               	movwf	lastSunday@month^0,c
  3929   001C78  EC1C  F007         	call	_lastSunday	;wreg free
  3930   001C7C  5047               	movf	findDSTdates@fwd_daylight_savings_day^0,w,c
  3931   001C7E  6ED9               	movwf	fsr2l,c
  3932   001C80  6ADA               	clrf	fsr2h,c
  3933   001C82  C01B  FFDE         	movff	?_lastSunday,postinc2
  3934   001C86  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3935                           
  3936                           ;functions.c: 81:         *bkwd_daylight_savings_day = lastSunday(year, 10);
  3937   001C8A  C045  F01B         	movff	findDSTdates@year,lastSunday@year
  3938   001C8E  C046  F01C         	movff	findDSTdates@year+1,lastSunday@year+1
  3939   001C92  0E00               	movlw	0
  3940   001C94  6E1E               	movwf	(lastSunday@month+1)^0,c
  3941   001C96  0E0A               	movlw	10
  3942   001C98  6E1D               	movwf	lastSunday@month^0,c
  3943   001C9A  EC1C  F007         	call	_lastSunday	;wreg free
  3944   001C9E  5048               	movf	findDSTdates@bkwd_daylight_savings_day^0,w,c
  3945   001CA0  6ED9               	movwf	fsr2l,c
  3946   001CA2  6ADA               	clrf	fsr2h,c
  3947   001CA4  C01B  FFDE         	movff	?_lastSunday,postinc2
  3948   001CA8  C01C  FFDD         	movff	?_lastSunday+1,postdec2
  3949   001CAC                     l244:
  3950   001CAC  0012               	return		;funcret
  3951   001CAE                     __end_of_findDSTdates:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _lastSunday *****************
  3955 ;; Defined at:
  3956 ;;		line 25 in file "functions.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  year            2   26[COMRAM] unsigned int 
  3959 ;;  month           2   28[COMRAM] unsigned int 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  dayOfYearFor    2   52[COMRAM] unsigned int 
  3962 ;;  daysBeforeOc    2   50[COMRAM] unsigned int 
  3963 ;;  dayOfYearFor    2   48[COMRAM] unsigned int 
  3964 ;;  daysBeforeMa    2   46[COMRAM] unsigned int 
  3965 ;;  lastSundayDa    2   62[COMRAM] unsigned int 
  3966 ;;  leapYear        2   60[COMRAM] unsigned int 
  3967 ;;  dayOfWeekMon    2   44[COMRAM] unsigned int 
  3968 ;;  dayOfWeekMon    2   42[COMRAM] unsigned int 
  3969 ;;  h               2   40[COMRAM] unsigned int 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2   26[COMRAM] unsigned int 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3980 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;Total ram usage:       38 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; Hardware stack levels required when called: 3
  3986 ;; This function calls:
  3987 ;;		___lwdiv
  3988 ;;		___lwmod
  3989 ;;		___wmul
  3990 ;;		_isLeapYear
  3991 ;; This function is called by:
  3992 ;;		_findDSTdates
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text30
  3997   000E38                     __ptext30:
  3998                           	callstack 0
  3999   000E38                     _lastSunday:
  4000                           	callstack 26
  4001   000E38                     
  4002                           ;functions.c: 26:     unsigned int leapYear = isLeapYear(year);
  4003   000E38  C01B  F016         	movff	lastSunday@year,isLeapYear@year
  4004   000E3C  C01C  F017         	movff	lastSunday@year+1,isLeapYear@year+1
  4005   000E40  EC70  F00D         	call	_isLeapYear	;wreg free
  4006   000E44  C016  F03D         	movff	?_isLeapYear,lastSunday@leapYear
  4007   000E48  C017  F03E         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  4008   000E4C                     
  4009                           ;functions.c: 30:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  4010   000E4C  0E00               	movlw	0
  4011   000E4E  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4012   000E50  0E05               	movlw	5
  4013   000E52  6E0C               	movwf	___lwdiv@divisor^0,c
  4014   000E54  0E01               	movlw	1
  4015   000E56  241D               	addwf	lastSunday@month^0,w,c
  4016   000E58  6E04               	movwf	___wmul@multiplier^0,c
  4017   000E5A  0E00               	movlw	0
  4018   000E5C  201E               	addwfc	(lastSunday@month+1)^0,w,c
  4019   000E5E  6E05               	movwf	(___wmul@multiplier+1)^0,c
  4020   000E60  0E00               	movlw	0
  4021   000E62  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  4022   000E64  0E0D               	movlw	13
  4023   000E66  6E06               	movwf	___wmul@multiplicand^0,c
  4024   000E68  ECAF  F00F         	call	___wmul	;wreg free
  4025   000E6C  C004  F00A         	movff	?___wmul,___lwdiv@dividend
  4026   000E70  C005  F00B         	movff	?___wmul+1,___lwdiv@dividend+1
  4027   000E74  ECE8  F00D         	call	___lwdiv	;wreg free
  4028   000E78  C00A  F01F         	movff	?___lwdiv,??_lastSunday
  4029   000E7C  C00B  F020         	movff	?___lwdiv+1,??_lastSunday+1
  4030   000E80  0E00               	movlw	0
  4031   000E82  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4032   000E84  0E64               	movlw	100
  4033   000E86  6E13               	movwf	___lwmod@divisor^0,c
  4034   000E88  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  4035   000E8C  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  4036   000E90  EC8B  F00E         	call	___lwmod	;wreg free
  4037   000E94  5011               	movf	?___lwmod^0,w,c
  4038   000E96  241F               	addwf	??_lastSunday^0,w,c
  4039   000E98  6E21               	movwf	(??_lastSunday+2)^0,c
  4040   000E9A  5012               	movf	(?___lwmod+1)^0,w,c
  4041   000E9C  2020               	addwfc	(??_lastSunday+1)^0,w,c
  4042   000E9E  6E22               	movwf	(??_lastSunday+3)^0,c
  4043   000EA0  0E00               	movlw	0
  4044   000EA2  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4045   000EA4  0E64               	movlw	100
  4046   000EA6  6E13               	movwf	___lwmod@divisor^0,c
  4047   000EA8  C01B  F011         	movff	lastSunday@year,___lwmod@dividend
  4048   000EAC  C01C  F012         	movff	lastSunday@year+1,___lwmod@dividend+1
  4049   000EB0  EC8B  F00E         	call	___lwmod	;wreg free
  4050   000EB4  90D8               	bcf	status,0,c
  4051   000EB6  3212               	rrcf	(?___lwmod+1)^0,f,c
  4052   000EB8  3211               	rrcf	?___lwmod^0,f,c
  4053   000EBA  90D8               	bcf	status,0,c
  4054   000EBC  3212               	rrcf	(?___lwmod+1)^0,f,c
  4055   000EBE  3211               	rrcf	?___lwmod^0,f,c
  4056   000EC0  5011               	movf	?___lwmod^0,w,c
  4057   000EC2  2421               	addwf	(??_lastSunday+2)^0,w,c
  4058   000EC4  6E23               	movwf	(??_lastSunday+4)^0,c
  4059   000EC6  5012               	movf	(?___lwmod+1)^0,w,c
  4060   000EC8  2022               	addwfc	(??_lastSunday+3)^0,w,c
  4061   000ECA  6E24               	movwf	(??_lastSunday+5)^0,c
  4062   000ECC  0E00               	movlw	0
  4063   000ECE  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4064   000ED0  0E64               	movlw	100
  4065   000ED2  6E0C               	movwf	___lwdiv@divisor^0,c
  4066   000ED4  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  4067   000ED8  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  4068   000EDC  ECE8  F00D         	call	___lwdiv	;wreg free
  4069   000EE0  90D8               	bcf	status,0,c
  4070   000EE2  320B               	rrcf	(?___lwdiv+1)^0,f,c
  4071   000EE4  320A               	rrcf	?___lwdiv^0,f,c
  4072   000EE6  90D8               	bcf	status,0,c
  4073   000EE8  320B               	rrcf	(?___lwdiv+1)^0,f,c
  4074   000EEA  320A               	rrcf	?___lwdiv^0,f,c
  4075   000EEC  500A               	movf	?___lwdiv^0,w,c
  4076   000EEE  2423               	addwf	(??_lastSunday+4)^0,w,c
  4077   000EF0  6E25               	movwf	(??_lastSunday+6)^0,c
  4078   000EF2  500B               	movf	(?___lwdiv+1)^0,w,c
  4079   000EF4  2024               	addwfc	(??_lastSunday+5)^0,w,c
  4080   000EF6  6E26               	movwf	(??_lastSunday+7)^0,c
  4081   000EF8  0E00               	movlw	0
  4082   000EFA  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
  4083   000EFC  0E64               	movlw	100
  4084   000EFE  6E0C               	movwf	___lwdiv@divisor^0,c
  4085   000F00  C01B  F00A         	movff	lastSunday@year,___lwdiv@dividend
  4086   000F04  C01C  F00B         	movff	lastSunday@year+1,___lwdiv@dividend+1
  4087   000F08  ECE8  F00D         	call	___lwdiv	;wreg free
  4088   000F0C  90D8               	bcf	status,0,c
  4089   000F0E  360A               	rlcf	?___lwdiv^0,f,c
  4090   000F10  360B               	rlcf	(?___lwdiv+1)^0,f,c
  4091   000F12  500A               	movf	?___lwdiv^0,w,c
  4092   000F14  5C25               	subwf	(??_lastSunday+6)^0,w,c
  4093   000F16  6E27               	movwf	(??_lastSunday+8)^0,c
  4094   000F18  500B               	movf	(?___lwdiv+1)^0,w,c
  4095   000F1A  5826               	subwfb	(??_lastSunday+7)^0,w,c
  4096   000F1C  6E28               	movwf	(??_lastSunday+9)^0,c
  4097   000F1E  0E01               	movlw	1
  4098   000F20  2427               	addwf	(??_lastSunday+8)^0,w,c
  4099   000F22  6E37               	movwf	_lastSunday$2306^0,c
  4100   000F24  0E00               	movlw	0
  4101   000F26  2028               	addwfc	(??_lastSunday+9)^0,w,c
  4102   000F28  6E38               	movwf	(_lastSunday$2306+1)^0,c
  4103   000F2A                     
  4104                           ;functions.c: 30:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  4105   000F2A  C037  F011         	movff	_lastSunday$2306,___lwmod@dividend
  4106   000F2E  C038  F012         	movff	_lastSunday$2306+1,___lwmod@dividend+1
  4107   000F32  0E00               	movlw	0
  4108   000F34  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4109   000F36  0E07               	movlw	7
  4110   000F38  6E13               	movwf	___lwmod@divisor^0,c
  4111   000F3A  EC8B  F00E         	call	___lwmod	;wreg free
  4112   000F3E  C011  F029         	movff	?___lwmod,lastSunday@h
  4113   000F42  C012  F02A         	movff	?___lwmod+1,lastSunday@h+1
  4114   000F46                     
  4115                           ;functions.c: 31:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  4116   000F46  0E06               	movlw	6
  4117   000F48  2429               	addwf	lastSunday@h^0,w,c
  4118   000F4A  6E11               	movwf	___lwmod@dividend^0,c
  4119   000F4C  0E00               	movlw	0
  4120   000F4E  202A               	addwfc	(lastSunday@h+1)^0,w,c
  4121   000F50  6E12               	movwf	(___lwmod@dividend+1)^0,c
  4122   000F52  0E00               	movlw	0
  4123   000F54  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4124   000F56  0E07               	movlw	7
  4125   000F58  6E13               	movwf	___lwmod@divisor^0,c
  4126   000F5A  EC8B  F00E         	call	___lwmod	;wreg free
  4127   000F5E  C011  F02B         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  4128   000F62  C012  F02C         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  4129   000F66                     
  4130                           ;functions.c: 34:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  4131   000F66  0E1E               	movlw	30
  4132   000F68  242B               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  4133   000F6A  6E11               	movwf	___lwmod@dividend^0,c
  4134   000F6C  0E00               	movlw	0
  4135   000F6E  202C               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  4136   000F70  6E12               	movwf	(___lwmod@dividend+1)^0,c
  4137   000F72  0E00               	movlw	0
  4138   000F74  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4139   000F76  0E07               	movlw	7
  4140   000F78  6E13               	movwf	___lwmod@divisor^0,c
  4141   000F7A  EC8B  F00E         	call	___lwmod	;wreg free
  4142   000F7E  C011  F02D         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  4143   000F82  C012  F02E         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  4144   000F86                     
  4145                           ;functions.c: 37:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  4146   000F86  502D               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  4147   000F88  081F               	sublw	31
  4148   000F8A  6E3F               	movwf	lastSunday@lastSundayDateMonth^0,c
  4149   000F8C  502E               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  4150   000F8E  A0D8               	btfss	status,0,c
  4151   000F90  2AE8               	incf	wreg,f,c
  4152   000F92  0800               	sublw	0
  4153   000F94  6E40               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  4154   000F96                     
  4155                           ;functions.c: 40:     if (month == 3){
  4156   000F96  0E03               	movlw	3
  4157   000F98  181D               	xorwf	lastSunday@month^0,w,c
  4158   000F9A  101E               	iorwf	(lastSunday@month+1)^0,w,c
  4159   000F9C  A4D8               	btfss	status,2,c
  4160   000F9E  EFD3  F007         	goto	u1591
  4161   000FA2  EFD5  F007         	goto	u1590
  4162   000FA6                     u1591:
  4163   000FA6  EFFA  F007         	goto	l2344
  4164   000FAA                     u1590:
  4165   000FAA                     
  4166                           ;functions.c: 41:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  4167   000FAA  503D               	movf	lastSunday@leapYear^0,w,c
  4168   000FAC  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  4169   000FAE  A4D8               	btfss	status,2,c
  4170   000FB0  EFDC  F007         	goto	u1601
  4171   000FB4  EFDE  F007         	goto	u1600
  4172   000FB8                     u1601:
  4173   000FB8  EFE4  F007         	goto	l2334
  4174   000FBC                     u1600:
  4175   000FBC  0E00               	movlw	0
  4176   000FBE  6E3A               	movwf	(_lastSunday$1218+1)^0,c
  4177   000FC0  0E1C               	movlw	28
  4178   000FC2  6E39               	movwf	_lastSunday$1218^0,c
  4179   000FC4  EFE8  F007         	goto	l2336
  4180   000FC8                     l2334:
  4181   000FC8  0E00               	movlw	0
  4182   000FCA  6E3A               	movwf	(_lastSunday$1218+1)^0,c
  4183   000FCC  0E1D               	movlw	29
  4184   000FCE  6E39               	movwf	_lastSunday$1218^0,c
  4185   000FD0                     l2336:
  4186   000FD0  0E1F               	movlw	31
  4187   000FD2  2439               	addwf	_lastSunday$1218^0,w,c
  4188   000FD4  6E2F               	movwf	lastSunday@daysBeforeMarch^0,c
  4189   000FD6  0E00               	movlw	0
  4190   000FD8  203A               	addwfc	(_lastSunday$1218+1)^0,w,c
  4191   000FDA  6E30               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  4192   000FDC                     
  4193                           ;functions.c: 42:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  4194   000FDC  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  4195   000FDE  242F               	addwf	lastSunday@daysBeforeMarch^0,w,c
  4196   000FE0  6E31               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  4197   000FE2  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  4198   000FE4  2030               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  4199   000FE6  6E32               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  4200   000FE8                     
  4201                           ;functions.c: 43:     return dayOfYearForDSTStart;
  4202   000FE8  C031  F01B         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  4203   000FEC  C032  F01C         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  4204   000FF0  EF27  F008         	goto	l230
  4205   000FF4                     l2344:
  4206                           
  4207                           ;functions.c: 48:     if (month == 10){
  4208   000FF4  0E0A               	movlw	10
  4209   000FF6  181D               	xorwf	lastSunday@month^0,w,c
  4210   000FF8  101E               	iorwf	(lastSunday@month+1)^0,w,c
  4211   000FFA  A4D8               	btfss	status,2,c
  4212   000FFC  EF02  F008         	goto	u1611
  4213   001000  EF04  F008         	goto	u1610
  4214   001004                     u1611:
  4215   001004  EF27  F008         	goto	l230
  4216   001008                     u1610:
  4217   001008                     
  4218                           ;functions.c: 49:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  4219   001008  503D               	movf	lastSunday@leapYear^0,w,c
  4220   00100A  103E               	iorwf	(lastSunday@leapYear+1)^0,w,c
  4221   00100C  A4D8               	btfss	status,2,c
  4222   00100E  EF0B  F008         	goto	u1621
  4223   001012  EF0D  F008         	goto	u1620
  4224   001016                     u1621:
  4225   001016  EF13  F008         	goto	l2350
  4226   00101A                     u1620:
  4227   00101A  0E00               	movlw	0
  4228   00101C  6E3C               	movwf	(_lastSunday$1221+1)^0,c
  4229   00101E  0E1C               	movlw	28
  4230   001020  6E3B               	movwf	_lastSunday$1221^0,c
  4231   001022  EF17  F008         	goto	l2352
  4232   001026                     l2350:
  4233   001026  0E00               	movlw	0
  4234   001028  6E3C               	movwf	(_lastSunday$1221+1)^0,c
  4235   00102A  0E1D               	movlw	29
  4236   00102C  6E3B               	movwf	_lastSunday$1221^0,c
  4237   00102E                     l2352:
  4238   00102E  0EF5               	movlw	245
  4239   001030  243B               	addwf	_lastSunday$1221^0,w,c
  4240   001032  6E33               	movwf	lastSunday@daysBeforeOctober^0,c
  4241   001034  0E00               	movlw	0
  4242   001036  203C               	addwfc	(_lastSunday$1221+1)^0,w,c
  4243   001038  6E34               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  4244   00103A                     
  4245                           ;functions.c: 51:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  4246   00103A  503F               	movf	lastSunday@lastSundayDateMonth^0,w,c
  4247   00103C  2433               	addwf	lastSunday@daysBeforeOctober^0,w,c
  4248   00103E  6E35               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  4249   001040  5040               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  4250   001042  2034               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  4251   001044  6E36               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  4252   001046                     
  4253                           ;functions.c: 53:     return dayOfYearForDSTEnd;
  4254   001046  C035  F01B         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  4255   00104A  C036  F01C         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  4256   00104E                     l230:
  4257   00104E  0012               	return		;funcret
  4258   001050                     __end_of_lastSunday:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _isLeapYear *****************
  4262 ;; Defined at:
  4263 ;;		line 17 in file "functions.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  year            2   21[COMRAM] unsigned int 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2   21[COMRAM] unsigned int 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;Total ram usage:        5 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 2
  4284 ;; This function calls:
  4285 ;;		___lwmod
  4286 ;; This function is called by:
  4287 ;;		_main
  4288 ;;		_lastSunday
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text31
  4293   001AE0                     __ptext31:
  4294                           	callstack 0
  4295   001AE0                     _isLeapYear:
  4296                           	callstack 28
  4297   001AE0                     
  4298                           ;functions.c: 18:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  4299   001AE0  0E01               	movlw	1
  4300   001AE2  6E1A               	movwf	_isLeapYear$1208^0,c
  4301   001AE4  0E03               	movlw	3
  4302   001AE6  1416               	andwf	isLeapYear@year^0,w,c
  4303   001AE8  6E18               	movwf	??_isLeapYear^0,c
  4304   001AEA  0E00               	movlw	0
  4305   001AEC  1417               	andwf	(isLeapYear@year+1)^0,w,c
  4306   001AEE  6E19               	movwf	(??_isLeapYear+1)^0,c
  4307   001AF0  5018               	movf	??_isLeapYear^0,w,c
  4308   001AF2  1019               	iorwf	(??_isLeapYear+1)^0,w,c
  4309   001AF4  A4D8               	btfss	status,2,c
  4310   001AF6  EF7F  F00D         	goto	u1491
  4311   001AFA  EF81  F00D         	goto	u1490
  4312   001AFE                     u1491:
  4313   001AFE  EF94  F00D         	goto	l2182
  4314   001B02                     u1490:
  4315   001B02  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4316   001B06  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4317   001B0A  0E00               	movlw	0
  4318   001B0C  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4319   001B0E  0E64               	movlw	100
  4320   001B10  6E13               	movwf	___lwmod@divisor^0,c
  4321   001B12  EC8B  F00E         	call	___lwmod	;wreg free
  4322   001B16  5011               	movf	?___lwmod^0,w,c
  4323   001B18  1012               	iorwf	(?___lwmod+1)^0,w,c
  4324   001B1A  A4D8               	btfss	status,2,c
  4325   001B1C  EF92  F00D         	goto	u1501
  4326   001B20  EF94  F00D         	goto	u1500
  4327   001B24                     u1501:
  4328   001B24  EFA9  F00D         	goto	l2186
  4329   001B28                     u1500:
  4330   001B28                     l2182:
  4331   001B28  C016  F011         	movff	isLeapYear@year,___lwmod@dividend
  4332   001B2C  C017  F012         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4333   001B30  0E01               	movlw	1
  4334   001B32  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4335   001B34  0E90               	movlw	144
  4336   001B36  6E13               	movwf	___lwmod@divisor^0,c
  4337   001B38  EC8B  F00E         	call	___lwmod	;wreg free
  4338   001B3C  5011               	movf	?___lwmod^0,w,c
  4339   001B3E  1012               	iorwf	(?___lwmod+1)^0,w,c
  4340   001B40  B4D8               	btfsc	status,2,c
  4341   001B42  EFA5  F00D         	goto	u1511
  4342   001B46  EFA7  F00D         	goto	u1510
  4343   001B4A                     u1511:
  4344   001B4A  EFA9  F00D         	goto	l2186
  4345   001B4E                     u1510:
  4346   001B4E  0E00               	movlw	0
  4347   001B50  6E1A               	movwf	_isLeapYear$1208^0,c
  4348   001B52                     l2186:
  4349   001B52  C01A  F016         	movff	_isLeapYear$1208,?_isLeapYear
  4350   001B56  6A17               	clrf	(?_isLeapYear+1)^0,c
  4351   001B58  0012               	return		;funcret
  4352   001B5A                     __end_of_isLeapYear:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function ___lwmod *****************
  4356 ;; Defined at:
  4357 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  dividend        2   16[COMRAM] unsigned int 
  4360 ;;  divisor         2   18[COMRAM] unsigned int 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  counter         1   20[COMRAM] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  2   16[COMRAM] unsigned int 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4375 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;Total ram usage:        5 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; Hardware stack levels required when called: 1
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_isLeapYear
  4383 ;;		_lastSunday
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text32
  4388   001D16                     __ptext32:
  4389                           	callstack 0
  4390   001D16                     ___lwmod:
  4391                           	callstack 28
  4392   001D16  5013               	movf	___lwmod@divisor^0,w,c
  4393   001D18  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  4394   001D1A  B4D8               	btfsc	status,2,c
  4395   001D1C  EF92  F00E         	goto	u1411
  4396   001D20  EF94  F00E         	goto	u1410
  4397   001D24                     u1411:
  4398   001D24  EFB8  F00E         	goto	l821
  4399   001D28                     u1410:
  4400   001D28  0E01               	movlw	1
  4401   001D2A  6E15               	movwf	___lwmod@counter^0,c
  4402   001D2C  EF9C  F00E         	goto	l2110
  4403   001D30                     l2108:
  4404   001D30  90D8               	bcf	status,0,c
  4405   001D32  3613               	rlcf	___lwmod@divisor^0,f,c
  4406   001D34  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  4407   001D36  2A15               	incf	___lwmod@counter^0,f,c
  4408   001D38                     l2110:
  4409   001D38  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  4410   001D3A  EFA1  F00E         	goto	u1421
  4411   001D3E  EFA3  F00E         	goto	u1420
  4412   001D42                     u1421:
  4413   001D42  EF98  F00E         	goto	l2108
  4414   001D46                     u1420:
  4415   001D46                     l2112:
  4416   001D46  5013               	movf	___lwmod@divisor^0,w,c
  4417   001D48  5C11               	subwf	___lwmod@dividend^0,w,c
  4418   001D4A  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4419   001D4C  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  4420   001D4E  A0D8               	btfss	status,0,c
  4421   001D50  EFAC  F00E         	goto	u1431
  4422   001D54  EFAE  F00E         	goto	u1430
  4423   001D58                     u1431:
  4424   001D58  EFB2  F00E         	goto	l2116
  4425   001D5C                     u1430:
  4426   001D5C  5013               	movf	___lwmod@divisor^0,w,c
  4427   001D5E  5E11               	subwf	___lwmod@dividend^0,f,c
  4428   001D60  5014               	movf	(___lwmod@divisor+1)^0,w,c
  4429   001D62  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  4430   001D64                     l2116:
  4431   001D64  90D8               	bcf	status,0,c
  4432   001D66  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  4433   001D68  3213               	rrcf	___lwmod@divisor^0,f,c
  4434   001D6A  2E15               	decfsz	___lwmod@counter^0,f,c
  4435   001D6C  EFA3  F00E         	goto	l2112
  4436   001D70                     l821:
  4437   001D70  C011  F011         	movff	___lwmod@dividend,?___lwmod
  4438   001D74  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  4439   001D78  0012               	return		;funcret
  4440   001D7A                     __end_of___lwmod:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function ___wmul *****************
  4444 ;; Defined at:
  4445 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  multiplier      2    3[COMRAM] unsigned int 
  4448 ;;  multiplicand    2    5[COMRAM] unsigned int 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  product         2    7[COMRAM] unsigned int 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  2    3[COMRAM] unsigned int 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, prodl, prodh
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;Total ram usage:        6 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_lastSunday
  4471 ;;		_read_prec_or_width
  4472 ;;		_LED_Light_Meter
  4473 ;;		_ADC2String
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text33
  4478   001F5E                     __ptext33:
  4479                           	callstack 0
  4480   001F5E                     ___wmul:
  4481                           	callstack 24
  4482   001F5E  5004               	movf	___wmul@multiplier^0,w,c
  4483   001F60  0206               	mulwf	___wmul@multiplicand^0,c
  4484   001F62  CFF3 F008          	movff	prodl,___wmul@product
  4485   001F66  CFF4 F009          	movff	prodh,___wmul@product+1
  4486   001F6A  5004               	movf	___wmul@multiplier^0,w,c
  4487   001F6C  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  4488   001F6E  50F3               	movf	243,w,c
  4489   001F70  2609               	addwf	(___wmul@product+1)^0,f,c
  4490   001F72  5005               	movf	(___wmul@multiplier+1)^0,w,c
  4491   001F74  0206               	mulwf	___wmul@multiplicand^0,c
  4492   001F76  50F3               	movf	243,w,c
  4493   001F78  2609               	addwf	(___wmul@product+1)^0,f,c
  4494   001F7A  C008  F004         	movff	___wmul@product,?___wmul
  4495   001F7E  C009  F005         	movff	___wmul@product+1,?___wmul+1
  4496   001F82  0012               	return		;funcret
  4497   001F84                     __end_of___wmul:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function ___lwdiv *****************
  4501 ;; Defined at:
  4502 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  dividend        2    9[COMRAM] unsigned int 
  4505 ;;  divisor         2   11[COMRAM] unsigned int 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  quotient        2   13[COMRAM] unsigned int 
  4508 ;;  counter         1   15[COMRAM] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  2    9[COMRAM] unsigned int 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4519 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4522 ;;Total ram usage:        7 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 1
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_lastSunday
  4529 ;;		_LED_Light_Meter
  4530 ;;		_ADC2String
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text34
  4535   001BD0                     __ptext34:
  4536                           	callstack 0
  4537   001BD0                     ___lwdiv:
  4538                           	callstack 27
  4539   001BD0  0E00               	movlw	0
  4540   001BD2  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
  4541   001BD4  0E00               	movlw	0
  4542   001BD6  6E0E               	movwf	___lwdiv@quotient^0,c
  4543   001BD8  500C               	movf	___lwdiv@divisor^0,w,c
  4544   001BDA  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4545   001BDC  B4D8               	btfsc	status,2,c
  4546   001BDE  EFF3  F00D         	goto	u1531
  4547   001BE2  EFF5  F00D         	goto	u1530
  4548   001BE6                     u1531:
  4549   001BE6  EF1D  F00E         	goto	l811
  4550   001BEA                     u1530:
  4551   001BEA  0E01               	movlw	1
  4552   001BEC  6E10               	movwf	___lwdiv@counter^0,c
  4553   001BEE  EFFD  F00D         	goto	l2216
  4554   001BF2                     l2214:
  4555   001BF2  90D8               	bcf	status,0,c
  4556   001BF4  360C               	rlcf	___lwdiv@divisor^0,f,c
  4557   001BF6  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4558   001BF8  2A10               	incf	___lwdiv@counter^0,f,c
  4559   001BFA                     l2216:
  4560   001BFA  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  4561   001BFC  EF02  F00E         	goto	u1541
  4562   001C00  EF04  F00E         	goto	u1540
  4563   001C04                     u1541:
  4564   001C04  EFF9  F00D         	goto	l2214
  4565   001C08                     u1540:
  4566   001C08                     l2218:
  4567   001C08  90D8               	bcf	status,0,c
  4568   001C0A  360E               	rlcf	___lwdiv@quotient^0,f,c
  4569   001C0C  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4570   001C0E  500C               	movf	___lwdiv@divisor^0,w,c
  4571   001C10  5C0A               	subwf	___lwdiv@dividend^0,w,c
  4572   001C12  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  4573   001C14  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4574   001C16  A0D8               	btfss	status,0,c
  4575   001C18  EF10  F00E         	goto	u1551
  4576   001C1C  EF12  F00E         	goto	u1550
  4577   001C20                     u1551:
  4578   001C20  EF17  F00E         	goto	l2226
  4579   001C24                     u1550:
  4580   001C24  500C               	movf	___lwdiv@divisor^0,w,c
  4581   001C26  5E0A               	subwf	___lwdiv@dividend^0,f,c
  4582   001C28  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  4583   001C2A  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4584   001C2C  800E               	bsf	___lwdiv@quotient^0,0,c
  4585   001C2E                     l2226:
  4586   001C2E  90D8               	bcf	status,0,c
  4587   001C30  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4588   001C32  320C               	rrcf	___lwdiv@divisor^0,f,c
  4589   001C34  2E10               	decfsz	___lwdiv@counter^0,f,c
  4590   001C36  EF04  F00E         	goto	l2218
  4591   001C3A                     l811:
  4592   001C3A  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
  4593   001C3E  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4594   001C42  0012               	return		;funcret
  4595   001C44                     __end_of___lwdiv:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _changeHourDayYear *****************
  4599 ;; Defined at:
  4600 ;;		line 90 in file "functions.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  hour            1    3[COMRAM] PTR unsigned int 
  4603 ;;		 -> hour(2), 
  4604 ;;  day             1    4[COMRAM] PTR unsigned int 
  4605 ;;		 -> main@day(2), 
  4606 ;;  year            1    5[COMRAM] PTR unsigned int 
  4607 ;;		 -> main@year(2), 
  4608 ;;  leap            2    6[COMRAM] unsigned int 
  4609 ;;  synced          1    8[COMRAM] PTR unsigned int 
  4610 ;;		 -> main@synced(2), 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4622 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;Total ram usage:        8 bytes
  4627 ;; Hardware stack levels used: 1
  4628 ;; Hardware stack levels required when called: 1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_main
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text35
  4637   00142E                     __ptext35:
  4638                           	callstack 0
  4639   00142E                     _changeHourDayYear:
  4640                           	callstack 29
  4641   00142E                     
  4642                           ;functions.c: 92:     if (*hour == 24) {
  4643   00142E  5004               	movf	changeHourDayYear@hour^0,w,c
  4644   001430  6ED9               	movwf	fsr2l,c
  4645   001432  6ADA               	clrf	fsr2h,c
  4646   001434  0E18               	movlw	24
  4647   001436  18DE               	xorwf	postinc2,w,c
  4648   001438  10DE               	iorwf	postinc2,w,c
  4649   00143A  A4D8               	btfss	status,2,c
  4650   00143C  EF22  F00A         	goto	u1811
  4651   001440  EF24  F00A         	goto	u1810
  4652   001444                     u1811:
  4653   001444  EF2F  F00A         	goto	l2488
  4654   001448                     u1810:
  4655   001448                     
  4656                           ;functions.c: 93:        *hour = 0;
  4657   001448  5004               	movf	changeHourDayYear@hour^0,w,c
  4658   00144A  6ED9               	movwf	fsr2l,c
  4659   00144C  6ADA               	clrf	fsr2h,c
  4660   00144E  6ADE               	clrf	postinc2,c
  4661   001450  6ADD               	clrf	postdec2,c
  4662   001452                     
  4663                           ;functions.c: 94:        (*day)++;
  4664   001452  5005               	movf	changeHourDayYear@day^0,w,c
  4665   001454  6ED9               	movwf	fsr2l,c
  4666   001456  6ADA               	clrf	fsr2h,c
  4667   001458  2ADE               	incf	postinc2,f,c
  4668   00145A  0E00               	movlw	0
  4669   00145C  22DD               	addwfc	postdec2,f,c
  4670   00145E                     l2488:
  4671                           
  4672                           ;functions.c: 98:     if (leap == 0 && *day > 365) {
  4673   00145E  5007               	movf	changeHourDayYear@leap^0,w,c
  4674   001460  1008               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4675   001462  A4D8               	btfss	status,2,c
  4676   001464  EF36  F00A         	goto	u1821
  4677   001468  EF38  F00A         	goto	u1820
  4678   00146C                     u1821:
  4679   00146C  EF58  F00A         	goto	l2498
  4680   001470                     u1820:
  4681   001470  5005               	movf	changeHourDayYear@day^0,w,c
  4682   001472  6ED9               	movwf	fsr2l,c
  4683   001474  6ADA               	clrf	fsr2h,c
  4684   001476  0E6E               	movlw	110
  4685   001478  5CDE               	subwf	postinc2,w,c
  4686   00147A  0E01               	movlw	1
  4687   00147C  58DE               	subwfb	postinc2,w,c
  4688   00147E  A0D8               	btfss	status,0,c
  4689   001480  EF44  F00A         	goto	u1831
  4690   001484  EF46  F00A         	goto	u1830
  4691   001488                     u1831:
  4692   001488  EF58  F00A         	goto	l2498
  4693   00148C                     u1830:
  4694   00148C                     
  4695                           ;functions.c: 99:         *day = 1;
  4696   00148C  5005               	movf	changeHourDayYear@day^0,w,c
  4697   00148E  6ED9               	movwf	fsr2l,c
  4698   001490  6ADA               	clrf	fsr2h,c
  4699   001492  0E01               	movlw	1
  4700   001494  6EDE               	movwf	postinc2,c
  4701   001496  0E00               	movlw	0
  4702   001498  6EDD               	movwf	postdec2,c
  4703   00149A                     
  4704                           ;functions.c: 100:         (*year)++;
  4705   00149A  5006               	movf	changeHourDayYear@year^0,w,c
  4706   00149C  6ED9               	movwf	fsr2l,c
  4707   00149E  6ADA               	clrf	fsr2h,c
  4708   0014A0  2ADE               	incf	postinc2,f,c
  4709   0014A2  0E00               	movlw	0
  4710   0014A4  22DD               	addwfc	postdec2,f,c
  4711   0014A6                     
  4712                           ;functions.c: 101:         *synced = 0;
  4713   0014A6  5009               	movf	changeHourDayYear@synced^0,w,c
  4714   0014A8  6ED9               	movwf	fsr2l,c
  4715   0014AA  6ADA               	clrf	fsr2h,c
  4716   0014AC  6ADE               	clrf	postinc2,c
  4717   0014AE  6ADD               	clrf	postdec2,c
  4718   0014B0                     l2498:
  4719                           
  4720                           ;functions.c: 105:     if (leap == 1 && *day > 366) {
  4721   0014B0  0407               	decf	changeHourDayYear@leap^0,w,c
  4722   0014B2  1008               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  4723   0014B4  A4D8               	btfss	status,2,c
  4724   0014B6  EF5F  F00A         	goto	u1841
  4725   0014BA  EF61  F00A         	goto	u1840
  4726   0014BE                     u1841:
  4727   0014BE  EF7C  F00A         	goto	l250
  4728   0014C2                     u1840:
  4729   0014C2  5005               	movf	changeHourDayYear@day^0,w,c
  4730   0014C4  6ED9               	movwf	fsr2l,c
  4731   0014C6  6ADA               	clrf	fsr2h,c
  4732   0014C8  0E6F               	movlw	111
  4733   0014CA  5CDE               	subwf	postinc2,w,c
  4734   0014CC  0E01               	movlw	1
  4735   0014CE  58DE               	subwfb	postinc2,w,c
  4736   0014D0  A0D8               	btfss	status,0,c
  4737   0014D2  EF6D  F00A         	goto	u1851
  4738   0014D6  EF6F  F00A         	goto	u1850
  4739   0014DA                     u1851:
  4740   0014DA  EF7C  F00A         	goto	l250
  4741   0014DE                     u1850:
  4742   0014DE                     
  4743                           ;functions.c: 106:         *day = 1;
  4744   0014DE  5005               	movf	changeHourDayYear@day^0,w,c
  4745   0014E0  6ED9               	movwf	fsr2l,c
  4746   0014E2  6ADA               	clrf	fsr2h,c
  4747   0014E4  0E01               	movlw	1
  4748   0014E6  6EDE               	movwf	postinc2,c
  4749   0014E8  0E00               	movlw	0
  4750   0014EA  6EDD               	movwf	postdec2,c
  4751   0014EC                     
  4752                           ;functions.c: 107:         (*year)++;
  4753   0014EC  5006               	movf	changeHourDayYear@year^0,w,c
  4754   0014EE  6ED9               	movwf	fsr2l,c
  4755   0014F0  6ADA               	clrf	fsr2h,c
  4756   0014F2  2ADE               	incf	postinc2,f,c
  4757   0014F4  0E00               	movlw	0
  4758   0014F6  22DD               	addwfc	postdec2,f,c
  4759   0014F8                     l250:
  4760   0014F8  0012               	return		;funcret
  4761   0014FA                     __end_of_changeHourDayYear:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _LEDarray_disp_bin *****************
  4765 ;; Defined at:
  4766 ;;		line 33 in file "LEDarray.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  number          2    3[COMRAM] unsigned int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		None
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;Total ram usage:        2 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_main
  4791 ;;		_LEDarray_disp_PPM
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text36
  4796   0014FA                     __ptext36:
  4797                           	callstack 0
  4798   0014FA                     _LEDarray_disp_bin:
  4799                           	callstack 29
  4800   0014FA                     
  4801                           ;LEDarray.c: 33: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 34: {;LEDarray.
      +                          c: 36:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  4802   0014FA  A004               	btfss	LEDarray_disp_bin@number^0,0,c
  4803   0014FC  EF82  F00A         	goto	u1641
  4804   001500  EF84  F00A         	goto	u1640
  4805   001504                     u1641:
  4806   001504  EF87  F00A         	goto	l88
  4807   001508                     u1640:
  4808   001508  807F               	bsf	127,0,c	;volatile
  4809   00150A  EF88  F00A         	goto	l89
  4810   00150E                     l88:
  4811   00150E  907F               	bcf	127,0,c	;volatile
  4812   001510                     l89:
  4813                           
  4814                           ;LEDarray.c: 37:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  4815   001510  A204               	btfss	LEDarray_disp_bin@number^0,1,c
  4816   001512  EF8D  F00A         	goto	u1651
  4817   001516  EF8F  F00A         	goto	u1650
  4818   00151A                     u1651:
  4819   00151A  EF92  F00A         	goto	l90
  4820   00151E                     u1650:
  4821   00151E  827F               	bsf	127,1,c	;volatile
  4822   001520  EF93  F00A         	goto	l91
  4823   001524                     l90:
  4824   001524  927F               	bcf	127,1,c	;volatile
  4825   001526                     l91:
  4826                           
  4827                           ;LEDarray.c: 38:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  4828   001526  A404               	btfss	LEDarray_disp_bin@number^0,2,c
  4829   001528  EF98  F00A         	goto	u1661
  4830   00152C  EF9A  F00A         	goto	u1660
  4831   001530                     u1661:
  4832   001530  EF9D  F00A         	goto	l92
  4833   001534                     u1660:
  4834   001534  8479               	bsf	121,2,c	;volatile
  4835   001536  EF9E  F00A         	goto	l93
  4836   00153A                     l92:
  4837   00153A  9479               	bcf	121,2,c	;volatile
  4838   00153C                     l93:
  4839                           
  4840                           ;LEDarray.c: 39:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  4841   00153C  A604               	btfss	LEDarray_disp_bin@number^0,3,c
  4842   00153E  EFA3  F00A         	goto	u1671
  4843   001542  EFA5  F00A         	goto	u1670
  4844   001546                     u1671:
  4845   001546  EFA8  F00A         	goto	l94
  4846   00154A                     u1670:
  4847   00154A  8C7E               	bsf	126,6,c	;volatile
  4848   00154C  EFA9  F00A         	goto	l95
  4849   001550                     l94:
  4850   001550  9C7E               	bcf	126,6,c	;volatile
  4851   001552                     l95:
  4852                           
  4853                           ;LEDarray.c: 40:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  4854   001552  A804               	btfss	LEDarray_disp_bin@number^0,4,c
  4855   001554  EFAE  F00A         	goto	u1681
  4856   001558  EFB0  F00A         	goto	u1680
  4857   00155C                     u1681:
  4858   00155C  EFB3  F00A         	goto	l96
  4859   001560                     u1680:
  4860   001560  8879               	bsf	121,4,c	;volatile
  4861   001562  EFB4  F00A         	goto	l97
  4862   001566                     l96:
  4863   001566  9879               	bcf	121,4,c	;volatile
  4864   001568                     l97:
  4865                           
  4866                           ;LEDarray.c: 41:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  4867   001568  AA04               	btfss	LEDarray_disp_bin@number^0,5,c
  4868   00156A  EFB9  F00A         	goto	u1691
  4869   00156E  EFBB  F00A         	goto	u1690
  4870   001572                     u1691:
  4871   001572  EFBE  F00A         	goto	l98
  4872   001576                     u1690:
  4873   001576  8A79               	bsf	121,5,c	;volatile
  4874   001578  EFBF  F00A         	goto	l99
  4875   00157C                     l98:
  4876   00157C  9A79               	bcf	121,5,c	;volatile
  4877   00157E                     l99:
  4878                           
  4879                           ;LEDarray.c: 42:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  4880   00157E  AC04               	btfss	LEDarray_disp_bin@number^0,6,c
  4881   001580  EFC4  F00A         	goto	u1701
  4882   001584  EFC6  F00A         	goto	u1700
  4883   001588                     u1701:
  4884   001588  EFC9  F00A         	goto	l100
  4885   00158C                     u1700:
  4886   00158C  807E               	bsf	126,0,c	;volatile
  4887   00158E  EFCA  F00A         	goto	l101
  4888   001592                     l100:
  4889   001592  907E               	bcf	126,0,c	;volatile
  4890   001594                     l101:
  4891                           
  4892                           ;LEDarray.c: 43:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  4893   001594  AE04               	btfss	LEDarray_disp_bin@number^0,7,c
  4894   001596  EFCF  F00A         	goto	u1711
  4895   00159A  EFD1  F00A         	goto	u1710
  4896   00159E                     u1711:
  4897   00159E  EFD4  F00A         	goto	l102
  4898   0015A2                     u1710:
  4899   0015A2  807A               	bsf	122,0,c	;volatile
  4900   0015A4  EFD5  F00A         	goto	l103
  4901   0015A8                     l102:
  4902   0015A8  907A               	bcf	122,0,c	;volatile
  4903   0015AA                     l103:
  4904                           
  4905                           ;LEDarray.c: 44:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  4906   0015AA  A005               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4907   0015AC  EFDA  F00A         	goto	u1721
  4908   0015B0  EFDC  F00A         	goto	u1720
  4909   0015B4                     u1721:
  4910   0015B4  EFDF  F00A         	goto	l104
  4911   0015B8                     u1720:
  4912   0015B8  827A               	bsf	122,1,c	;volatile
  4913   0015BA  EFE0  F00A         	goto	l106
  4914   0015BE                     l104:
  4915   0015BE  927A               	bcf	122,1,c	;volatile
  4916   0015C0                     l106:
  4917   0015C0  0012               	return		;funcret
  4918   0015C2                     __end_of_LEDarray_disp_bin:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function _LowISR *****************
  4922 ;; Defined at:
  4923 ;;		line 48 in file "interrupts.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;Total ram usage:        3 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		Interrupt level 1
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	intcodelo
  4951   000018                     __pintcodelo:
  4952                           	callstack 0
  4953   000018                     _LowISR:
  4954                           	callstack 21
  4955                           
  4956                           ;incstack = 0
  4957   000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4958   00001A  CFD8 F001          	movff	status,??_LowISR
  4959   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  4960   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  4961   000026                     
  4962                           ;interrupts.c: 51:     if (PIR0bits.TMR0IF == 1) {
  4963   000026  010E               	movlb	14	; () banked
  4964   000028  AB33               	btfss	51,5,b	;volatile
  4965   00002A  EF19  F000         	goto	i1u194_21
  4966   00002E  EF1B  F000         	goto	i1u194_20
  4967   000032                     i1u194_21:
  4968   000032  EF44  F000         	goto	i1l165
  4969   000036                     i1u194_20:
  4970   000036                     
  4971                           ; BSR set to: 14
  4972                           ;interrupts.c: 54:      hour++;
  4973   000036  0100               	movlb	0	; () banked
  4974   000038  4BAE               	infsnz	_hour& (0+255),f,b
  4975   00003A  2BAF               	incf	(_hour+1)& (0+255),f,b
  4976   00003C                     
  4977                           ; BSR set to: 0
  4978                           ;interrupts.c: 55:      TMR0H=00001011;
  4979   00003C  0E09               	movlw	9
  4980   00003E  6ED4               	movwf	212,c	;volatile
  4981   000040                     
  4982                           ; BSR set to: 0
  4983                           ;interrupts.c: 56:      TMR0L=110011011;
  4984   000040  0E83               	movlw	131
  4985   000042  6ED3               	movwf	211,c	;volatile
  4986   000044                     
  4987                           ; BSR set to: 0
  4988                           ;interrupts.c: 57:      if (hour >= 1 && hour < 5){
  4989   000044  51AE               	movf	_hour& (0+255),w,b
  4990   000046  11AF               	iorwf	(_hour+1)& (0+255),w,b
  4991   000048  B4D8               	btfsc	status,2,c
  4992   00004A  EF29  F000         	goto	i1u195_21
  4993   00004E  EF2B  F000         	goto	i1u195_20
  4994   000052                     i1u195_21:
  4995   000052  EF37  F000         	goto	i1l2576
  4996   000056                     i1u195_20:
  4997   000056                     
  4998                           ; BSR set to: 0
  4999   000056  51AF               	movf	(_hour+1)& (0+255),w,b
  5000   000058  E107               	bnz	i1u196_21
  5001   00005A  0E05               	movlw	5
  5002   00005C  5DAE               	subwf	_hour& (0+255),w,b
  5003   00005E  B0D8               	btfsc	status,0,c
  5004   000060  EF34  F000         	goto	i1u196_21
  5005   000064  EF36  F000         	goto	i1u196_20
  5006   000068                     i1u196_21:
  5007   000068  EF37  F000         	goto	i1l2576
  5008   00006C                     i1u196_20:
  5009   00006C                     
  5010                           ; BSR set to: 0
  5011                           ;interrupts.c: 58:          LATHbits.LATH3 = 0;
  5012   00006C  9680               	bcf	128,3,c	;volatile
  5013   00006E                     i1l2576:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;interrupts.c: 60:      if (hour == 6){
  5017   00006E  0E06               	movlw	6
  5018   000070  19AE               	xorwf	_hour& (0+255),w,b
  5019   000072  11AF               	iorwf	(_hour+1)& (0+255),w,b
  5020   000074  A4D8               	btfss	status,2,c
  5021   000076  EF3F  F000         	goto	i1u197_21
  5022   00007A  EF41  F000         	goto	i1u197_20
  5023   00007E                     i1u197_21:
  5024   00007E  EF42  F000         	goto	i1l167
  5025   000082                     i1u197_20:
  5026   000082                     
  5027                           ; BSR set to: 0
  5028                           ;interrupts.c: 61:          LATHbits.LATH3 = 1;
  5029   000082  8680               	bsf	128,3,c	;volatile
  5030   000084                     i1l167:
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;interrupts.c: 64:      PIR0bits.TMR0IF = 0;
  5034   000084  010E               	movlb	14	; () banked
  5035   000086  9B33               	bcf	51,5,b	;volatile
  5036   000088                     i1l165:
  5037                           
  5038                           ; BSR set to: 14
  5039                           ;interrupts.c: 68:     if (PIR2bits.C1IF == 1) {
  5040   000088  A135               	btfss	53,0,b	;volatile
  5041   00008A  EF49  F000         	goto	i1u198_21
  5042   00008E  EF4B  F000         	goto	i1u198_20
  5043   000092                     i1u198_21:
  5044   000092  EF4D  F000         	goto	i1l168
  5045   000096                     i1u198_20:
  5046   000096                     
  5047                           ; BSR set to: 14
  5048                           ;interrupts.c: 70:         LATHbits.LATH3 = 1;
  5049   000096  8680               	bsf	128,3,c	;volatile
  5050                           
  5051                           ;interrupts.c: 72:         PIR2bits.C1IF = 0;
  5052   000098  9135               	bcf	53,0,b	;volatile
  5053   00009A                     i1l168:
  5054                           
  5055                           ; BSR set to: 14
  5056                           ;interrupts.c: 75:     if (PIR2bits.C2IF == 1) {
  5057   00009A  A335               	btfss	53,1,b	;volatile
  5058   00009C  EF52  F000         	goto	i1u199_21
  5059   0000A0  EF54  F000         	goto	i1u199_20
  5060   0000A4                     i1u199_21:
  5061   0000A4  EF56  F000         	goto	i1l170
  5062   0000A8                     i1u199_20:
  5063   0000A8                     
  5064                           ; BSR set to: 14
  5065                           ;interrupts.c: 76:             LATHbits.LATH3 = 0;
  5066   0000A8  9680               	bcf	128,3,c	;volatile
  5067                           
  5068                           ;interrupts.c: 77:             PIR2bits.C2IF = 0;
  5069   0000AA  9335               	bcf	53,1,b	;volatile
  5070   0000AC                     i1l170:
  5071                           
  5072                           ; BSR set to: 14
  5073   0000AC  C003  FFE0         	movff	??_LowISR+2,bsr
  5074   0000B0  C002  FFE8         	movff	??_LowISR+1,wreg
  5075   0000B4  C001  FFD8         	movff	??_LowISR,status
  5076   0000B8  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5077   0000BA  0010               	retfie	
  5078   0000BC                     __end_of_LowISR:
  5079                           	callstack 0
  5080                           
  5081                           	psect	rparam
  5082   000000                     
  5083                           	psect	temp
  5084   000059                     btemp:
  5085                           	callstack 0
  5086   000059                     	ds	1
  5087   000000                     int$flags	set	btemp
  5088   000000                     wtemp8	set	btemp+1
  5089   000000                     ttemp5	set	btemp+1
  5090   000000                     ttemp6	set	btemp+4
  5091   000000                     ttemp7	set	btemp+8
  5092                           
  5093                           	psect	config
  5094                           
  5095                           ;Config register CONFIG1L @ 0x300000
  5096                           ;	External Oscillator mode Selection bits
  5097                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5098                           ;	Power-up default value for COSC bits
  5099                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5100   300000                     	org	3145728
  5101   300000  AA                 	db	170
  5102                           
  5103                           ;Config register CONFIG1H @ 0x300001
  5104                           ;	unspecified, using default values
  5105                           ;	Clock Out Enable bit
  5106                           ;	CLKOUTEN = 0x1, unprogrammed default
  5107                           ;	Clock Switch Enable bit
  5108                           ;	CSWEN = 0x1, unprogrammed default
  5109                           ;	Fail-Safe Clock Monitor Enable bit
  5110                           ;	FCMEN = 0x1, unprogrammed default
  5111   300001                     	org	3145729
  5112   300001  FF                 	db	255
  5113                           
  5114                           ;Config register CONFIG3L @ 0x300004
  5115                           ;	WDT Period Select bits
  5116                           ;	WDTCPS = 0x1F, unprogrammed default
  5117                           ;	WDT operating mode
  5118                           ;	WDTE = OFF, WDT Disabled
  5119   300004                     	org	3145732
  5120   300004  9F                 	db	159
  5121                           
  5122                           ;Config register CONFIG3H @ 0x300005
  5123                           ;	unspecified, using default values
  5124                           ;	WDT Window Select bits
  5125                           ;	WDTCWS = 0x7, unprogrammed default
  5126                           ;	WDT input clock selector
  5127                           ;	WDTCCS = 0x7, unprogrammed default
  5128   300005                     	org	3145733
  5129   300005  FF                 	db	255
  5130                           tosu	equ	0xFFF
  5131                           tosh	equ	0xFFE
  5132                           tosl	equ	0xFFD
  5133                           stkptr	equ	0xFFC
  5134                           pclatu	equ	0xFFB
  5135                           pclath	equ	0xFFA
  5136                           pcl	equ	0xFF9
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           prodh	equ	0xFF4
  5142                           prodl	equ	0xFF3
  5143                           indf0	equ	0xFEF
  5144                           postinc0	equ	0xFEE
  5145                           postdec0	equ	0xFED
  5146                           preinc0	equ	0xFEC
  5147                           plusw0	equ	0xFEB
  5148                           fsr0h	equ	0xFEA
  5149                           fsr0l	equ	0xFE9
  5150                           wreg	equ	0xFE8
  5151                           indf1	equ	0xFE7
  5152                           postinc1	equ	0xFE6
  5153                           postdec1	equ	0xFE5
  5154                           preinc1	equ	0xFE4
  5155                           plusw1	equ	0xFE3
  5156                           fsr1h	equ	0xFE2
  5157                           fsr1l	equ	0xFE1
  5158                           bsr	equ	0xFE0
  5159                           indf2	equ	0xFDF
  5160                           postinc2	equ	0xFDE
  5161                           postdec2	equ	0xFDD
  5162                           preinc2	equ	0xFDC
  5163                           plusw2	equ	0xFDB
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      88
    BANK0           160     46      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    changeHourDayYear@day	PTR unsigned int  size(1) Largest target is 2
		 -> main@day(BANK0[2]), 

    changeHourDayYear@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    changeHourDayYear@synced	PTR unsigned int  size(1) Largest target is 2
		 -> main@synced(BANK0[2]), 

    changeHourDayYear@year	PTR unsigned int  size(1) Largest target is 2
		 -> main@year(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    findDSTdates@bkwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@bkwd_daylight_savings_day(BANK0[2]), 

    findDSTdates@fwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@fwd_daylight_savings_day(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    hourChangeDST@backward_zone	PTR unsigned int  size(1) Largest target is 2
		 -> main@backward_zone(BANK0[2]), 

    hourChangeDST@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1935$buffer	PTR unsigned char  size(2) Largest target is 0

    S1935$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    sunSync@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    sunSync@synced	PTR unsigned int  size(1) Largest target is 2
		 -> main@synced(BANK0[2]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[14]), STR_3(CODE[10]), STR_4(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _initialise->_LCD_init
    _LCD_init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble
    _findDSTdates->_lastSunday
    _lastSunday->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   22307
                                              0 BANK0     46    46      0
                        _LCD_setline
                  _LEDarray_disp_bin
                  _changeHourDayYear
                       _findDSTdates
                      _hourChangeDST
                         _initialise
                         _isLeapYear
                            _sunSync
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                         11     2      9   10385
                                             68 COMRAM    11     2      9
                     _LCD_sendstring
                        _LCD_setline
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    7526
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6717
                                             45 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6358
                                             34 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1251
                                              9 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             23 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_setline                                          1     1      0    1004
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1233
                                              8 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _sunSync                                              6     2      4     338
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0    1048
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    1048
                                              8 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     960
                                              4 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              3 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (3) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hourChangeDST                                       10     2      8     622
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _findDSTdates                                         8     0      8    5995
                                             64 COMRAM     8     0      8
                         _lastSunday
 ---------------------------------------------------------------------------------
 (2) _lastSunday                                          38    34      4    5483
                                             26 COMRAM    38    34      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (1) _isLeapYear                                           5     3      2    1465
                                             21 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1223
                                             16 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1074
                                              9 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _changeHourDayYear                                    8     2      6     644
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     350
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _changeHourDayYear
   _findDSTdates
     _lastSunday
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul
       _isLeapYear
         ___lwmod
   _hourChangeDST
   _initialise
     _Comp1_init_fe
       _DAC_init
     _Comp1_init_re
       _DAC_init
     _Interrupts_init
     _LCD_init
       _LCD_sendbyte
       _LCD_sendnibble
     _LEDarray_init
     _Timer0_init
   _isLeapYear
   _sunSync
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _LCD_setline
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      50       5       50.0%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4F      58       1       93.6%
BITBIGSFRlhhhhh     4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhlhh      4      0       0      38        0.0%
BITBIGSFRlhhhhl      1      0       0      35        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      47        0.0%
DATA                 0      0      A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 09 11:33:18 2024

                                    l47 1F30                                      l90 1524  
                                    l91 1526                                      l92 153A  
                                    l93 153C                                      l85 1F5C  
                                    l94 1550                                      l95 1552  
                                    l96 1566                                      l88 150E  
                                    l97 1568                                      l89 1510  
                                    l98 157C                                      l99 157E  
                          ___awdiv@sign 0009                                      bsr 0FE0  
                   ___wmul@multiplicand 0006                       ??_Interrupts_init 0004  
                                   l100 1592                                     l101 1594  
                                   l102 15A8                                     l103 15AA  
                                   l104 15BE                                     l201 1FCA  
                                   l106 15C0                                     l300 1E6C  
                                   l222 1B58                                     l230 104E  
                                   l320 1F82                                     l240 1890  
                                   l160 2020                                     l250 14F8  
                                   l306 1F02                                     l244 1CAC  
                                   l317 19CE                                     l254 1BCE  
                                   l281 1CDA                                     l257 2006  
                                   l290 1E10                                     l195 2034  
                                   l283 1CF0                                     l276 2042  
                                   l292 1E32                                     l285 1D06  
                                   l198 1FA6                                     l287 1D14  
                                   l279 1CC4                                     l295 1ADE  
                                   l551 1684                                     l811 1C3A  
                                   l564 1734                                     l821 1D70  
                                   l818 1C42                                     l828 1D78  
                                   l998 1EA0                                     _abs 1EA2  
                                   _pad 19D0                            ___awmod@sign 0009  
                                   wreg 0FE8                       main@backward_zone 0086  
                                  l1021 1A3E                                    l1023 1A58  
                                  l2000 19F8                                    l2010 1EA2  
                                  l2002 1A0C                                    l1018 1A00  
                                  l1026 1230                                    l1043 17DA  
                                  ?_abs 000A                                    l2100 1D08  
                                  l2012 1EB0                                    l2004 1A1C  
                                  l2020 11D2                                    l2110 1D38  
                                  l2014 2036                                    l2102 1D0C  
                                  l2006 1A20                                    l2030 1208  
                                  l2022 11D6                                    l1062 11D0  
                                  l1039 1338                                    l1047 17E2  
                                  l2112 1D46                                    l2104 1D16  
                                  l2016 2038                                    l2200 1E12  
                                  l1072 1EBC                                    l2008 1A4C  
                                  l2040 1242                                    l2032 1218  
                                  l2024 11EA                                    l2120 1050  
                                  l2210 1BD8                                    l2114 1D5C  
                                  l2106 1D28                                    l2018 2040  
                                  l2202 1E18                                    l2042 1248  
                                  l2050 129C                                    l2034 1224  
                                  l2026 11F2                                    l2130 1096  
                                  l2122 1076                                    l1075 1ED4  
                                  l2220 1C0E                                    l2212 1BEA  
                                  l2116 1D64                                    l2108 1D30  
                                  l2300 1FA2                                    l2204 1E1E  
                                  l2052 12B6                                    l2060 1300  
                                  l2044 1276                                    l2036 122C  
                                  l2028 1202                                    l2132 1098  
                                  l2140 10E2                                    l2124 107E  
                                  l1068 1DBA                                    l2222 1C24  
                                  l2214 1BF2                                    l2118 1D6A  
                                  l2310 1FC0                                    l2302 1FA8  
                                  l2206 1E2A                                    l2062 1310  
                                  l2054 12C8                                    l2046 127A  
                                  l2038 1238                                    l2070 1736  
                                  l2150 1128                                    l2142 10F2  
                                  l2134 10A4                                    l2126 108A  
                                  l2230 1D7A                                    l1087 193A  
                                  l1095 1DF6                                    l2224 1C2C  
                                  l2216 1BFA                                    l2208 1BD0  
                                  l2320 0F2A                                    l2312 1FC2  
                                  l2304 1FAA                                    l2240 1E36  
                                  l2064 1316                                    l2056 12D8  
                                  l2048 1280                                    l2080 17A8  
                                  l2072 173E                                    l2152 1148  
                                  l2144 1106                                    l2128 108E  
                                  l2232 1D82                                    l2400 1E86  
                                  l2226 1C2E                                    l2218 1C08  
                                  l2330 0FAA                                    l2322 0F46  
                                  l2314 1FC6                                    l2306 1FBC  
                                  l2090 1CD4                                    l2250 1F0C  
                                  l2410 1FF6                                    l2242 1E46  
                                  l1098 2044                                    l2066 1322  
                                  l2058 12F2                                    l2074 1764  
                                  l2082 17B0                                    l2162 119E  
                                  l2154 1168                                    l2146 1114  
                                  l2138 10AC                                    l2234 1D92  
                                  l2402 1E96                                    l2420 1508  
                                  l2500 14C2                                    l2228 1C34  
                                  l2180 1B02                                    l2340 0FE8  
                                  l2332 0FBC                                    l2324 0F66  
                                  l2316 0E38                                    l2308 1FBE  
                                  l2092 1CDC                                    l2084 1CB0  
                                  l2260 1F20                                    l2252 1F16  
                                  l2412 1FFA                                    l2244 1E50  
                                  l2076 176C                                    l2156 1180  
                                  l2148 111E                                    l2236 1DB2  
                                  l2430 1576                                    l2422 151E  
                                  l2502 14DE                                    l2182 1B28  
                                  l2350 1026                                    l2334 0FC8  
                                  l2326 0F86                                    l2318 0E4C  
                                  l2190 2022                                    l2094 1CEA  
                                  l2086 1CBE                                    l2270 1F3A  
                                  l2262 1F22                                    l2254 1F18  
                                  l2414 1FFE                                    l2406 1FEE  
                                  l2510 1B7C                                    l2246 1E62  
                                  l2078 1788                                    l2158 118A  
                                  l2166 11AA                                    l2432 158C  
                                  l2424 1534                                    l2504 14EC  
                                  l2184 1B4E                                    l2176 1AE0  
                                  l2352 102E                                    l2336 0FD0  
                                  l2344 0FF4                                    l2328 0F96  
                                  l2192 2028                                    l2096 1CF2  
                                  l2088 1CC6                                    l2360 1A5A  
                                  l2280 1F54                                    l2272 1F3C  
                                  l2264 1F24                                    l2256 1F1C  
                                  l2248 1F04                                    l2416 2002  
                                  l2408 1FF2                                    l2512 1B9A  
                                  l2440 1942                                    l2520 1360  
                                  l2434 15A2                                    l2426 154A  
                                  l2418 14FA                                    l2186 1B52  
                                  l2178 1AE4                                    l2354 103A  
                                  l2346 1008                                    l2338 0FDC  
                                  l2194 2032                                    l2290 1F86  
                                  l2098 1D00                                    l2370 1A8E  
                                  l2362 1A72                                    l2282 1F56  
                                  l2274 1F42                                    l2266 1F2E  
                                  l2258 1F1E                                    l2514 1BB2  
                                  l2506 1B5A                                    l2450 1992  
                                  l2442 195E                                    l2530 13D2  
                                  l2522 1374                                    l2436 15B8  
                                  l2428 1560                                    l2356 1046  
                                  l2348 101A                                    l2460 1C56  
                                  l2292 1F98                                    l2196 1DFA  
                                  l2380 1ABC                                    l2372 1A98  
                                  l2364 1A78                                    l2284 1F58  
                                  l2276 1F4C                                    l2268 1F32  
                                  l2508 1B68                                    l1900 1DBC  
                                  l2612 10D4                                    l2452 199E  
                                  l2444 1966                                    l2532 13F6  
                                  l2524 1380                                    l2516 133A  
                                  l1910 1F7A                                    l2462 1C68  
                                  l2470 1822                                    l2294 1F9A  
                                  l2286 2008                                    l2198 1E0A  
                                  l2382 1ACA                                    l2374 1AA0  
                                  l2366 1A7E                                    l2278 1F4E  
                                  l2390 1EEA                                    l1902 1DC8  
                                  l2446 196C                                    l2438 193C  
                                  l2534 1412                                    l2526 1386  
                                  l2518 135C                                    l2480 1882  
                                  l2472 182C                                    l2464 17E4  
                                  l2296 1F9C                                    l2288 1F84  
                                  l2384 1AD4                                    l2376 1AAA  
                                  l2368 1A88                                    l2392 1EEC  
                                  l1920 15DC                                    l1904 1DD6  
                                  l2456 19B6                                    l2448 197E  
                                  l2528 13AE                                    l2490 1470  
                                  l2482 142E                                    l2458 1C44  
                                  l2474 1844                                    l2466 17FC  
                                  l2298 1F9E                                    l2378 1AB2  
                                  l2386 1ED6                                    l1930 1602  
                                  l1922 15E0                                    l1914 15C2  
                                  l1906 1DDA                                    l2394 1E6E  
                                  l2492 148C                                    l2484 1448  
                                  l1908 1F5E                                    l2476 185E  
                                  l2468 1816                                    l2388 1EDA  
                                  l1940 1638                                    l1932 1614  
                                  l1924 15EE                                    l1916 15C6  
                                  l2396 1E76                                    l2494 149A  
                                  l2486 1452                                    l2478 1876  
                                  l1942 164E                                    l1934 161C  
                                  l1950 1664                                    l1926 15F6  
                                  l1918 15D4                                    l2398 1E7E  
                                  l2496 14A6                                    l2488 145E  
                                  l1952 1674                                    l1944 1656  
                                  l1936 1624                                    l1928 15FA  
                                  l1960 168A                                    l2498 14B0  
                                  l1954 167C                                    l1946 1658  
                                  l1938 1632                                    l1970 16BA  
                                  l1962 1698                                    l1890 18B2  
                                  l1948 165E                                    l1980 1700  
                                  l1972 16CC                                    l1964 16A0  
                                  l1892 18BC                                    l1990 172C  
                                  l1982 1708                                    l1974 16D4  
                                  l1966 16A4                                    l1958 1686  
                                  l1894 18D8                                    l1886 1892  
                                  ?_pad 0011                                    l1984 170E  
                                  l1976 16DC                                    l1968 16B2  
                                  l1896 190A                                    l1888 18A2  
                                  l1978 16EA                                    l1986 1714  
                                  l1994 19D0                                    l1988 1724  
                                  l1996 19DE                                    l1998 19EA  
          lastSunday@dayOfWeekMonth31st 002D                                    STR_1 0E01  
                                  STR_2 0E13                                    STR_3 0E2D  
                                  STR_4 0E21                                    u1100 1614  
                                  u1101 1610                                    u1110 1632  
                                  u1030 18A2                                    u1111 162E  
                                  u1031 189E                                    u1120 164E  
                                  u1040 18B2                                    u1200 19DE  
                                  u1121 164A                                    u1041 18AE  
                                  u1201 19DA                                    u1130 1674  
                                  u1050 18D8                                    u1210 19F8  
                                  u1131 1670                                    u1051 18D4  
                                  u1211 19F4                                    u1140 1698  
                                  u1060 190A                                    u1220 1A3E  
                                  u1300 12C8                                    u1141 1694  
                                  u1061 1906                                    u1221 1A3A  
                                  u1301 12C4                                    u1150 16B2  
                                  u1070 1DF6                                    u1230 1A4C  
                                  u1310 12D8                                    u1151 16AE  
                                  u1071 1DF2                                    u1231 1A48  
                                  u1311 12D4                                    u2007 19C0  
                                  u1400 1D00                                    u1080 15D4  
                                  u1160 16CC                                    u1240 1EB0  
                                  u1320 12F2                                    u1401 1CFC  
                                  u2017 1A7A                                    u1081 15D0  
                                  u1161 16C8                                    u1241 1EAC  
                                  u1321 12EE                                    u1410 1D28  
                                  u1090 15EE                                    u1170 16EA  
                                  u1330 1300                                    u1250 11E6  
                                  u1411 1D24                                    u2027 1A8A  
                                  u1091 15EA                                    u1171 16E6  
                                  u1331 12FC                                    u1251 11E0  
                                  u1420 1D46                                    u1500 1B28  
                                  u1180 1700                                    u1340 1310  
                                  u1260 11E8                                    u1421 1D42  
                                  u1501 1B24                                    u2037 1A9A  
                                  u1181 16FC                                    u1341 130C  
                                  _LATA 0F79                                    u1430 1D5C  
                                  u1510 1B4E                                    u1190 1724  
                                  u1270 1202                                    u1350 1764  
                                  _LATB 0F7A                                    u1431 1D58  
                                  u1511 1B4A                                    u2047 1AAC  
                                  u1191 1720                                    u1271 11FE  
                                  u1351 1760                                    u1600 0FBC  
                                  u1520 1E0A                                    u1280 1218  
                                  u1360 17DA                                    u1440 1076  
                                  u1601 0FB8                                    u1521 1E06  
                                  u2057 1AC2                                    u1281 1214  
                                  u1361 17D6                                    u1441 1072  
                                  u1530 1BEA                                    u1610 1008  
                                  u1370 1CBE                                    u1290 12B6  
                                  u1450 10F2                                    u1531 1BE6  
                                  u1611 1004                                    u1371 1CBA  
                                  u2067 1E2C                                    u1291 12B2  
                                  u1451 10EE                                    _LATG 0F7F  
                                  u1700 158C                                    u1540 1C08  
                                  u1620 101A                                    u1380 1CD4  
                                  u1460 1114                                    u1701 1588  
                                  u1541 1C04                                    u1621 1016  
                                  u2077 1D0E                                    u1381 1CD0  
                                  u1461 1110                                    u1710 15A2  
                                  u1550 1C24                                    u1390 1CEA  
                                  u1630 1F02                                    u1470 1148  
                                  u1711 159E                                    u1551 1C20  
                                  u2087 203A                                    u1391 1CE6  
                                  u1631 1EFE                                    u1471 1144  
                                  u1720 15B8                                    u1640 1508  
                                  u1800 1876                                    u1480 1168  
                                  u1560 1DB2                                    u1721 15B4  
                                  u1641 1504                                    u1801 1872  
                                  u1481 1164                                    u1561 1DAE  
                                  u1650 151E                                    u1810 1448  
                                  u1490 1B02                                    u1570 1E46  
                                  u1730 197E                                    u1651 151A  
                                  u1811 1444                                    u1491 1AFE  
                                  u1571 1E42                                    u1731 197A  
                                  u1660 1534                                    u1820 1470  
                                  u1740 1C56                                    u1580 1E62  
                                  u1661 1530                                    u1821 146C  
                                  u1741 1C52                                    u1581 1E5E  
                                  u1670 154A                                    u1830 148C  
                                  u1590 0FAA                                    u1750 1C68  
                                  u1671 1546                                    u1831 1488  
                                  u1591 0FA6                                    u1751 1C64  
                                  u1680 1560                                    u1840 14C2  
                                  u1760 17FC                                    u1681 155C  
                                  u1841 14BE                                    u1761 17F8  
                                  u1690 1576                                    u1850 14DE  
                                  u1770 1816                                    u1691 1572  
                                  u1851 14DA                                    u1771 1812  
                                  u1780 1844                                    u1860 1B68  
                                  u1781 1840                                    u1861 1B64  
                                  u1790 185E                                    u1870 1B7C  
                                  u1791 185A                                    u1871 1B78  
                                  u1880 1B9A                                    u1881 1B96  
                                  u1890 1BB2                                    u1891 1BAE  
                                  abs@a 000A                                    _dbuf 008E  
                                  _main 133A                                    _dtoa 11D2  
                                  _hour 00AE                                    _prec 0056  
                                  pad@i 0016                                    pad@p 0013  
                                  fsr1h 0FE2                                    fsr2h 0FDA  
                                  indf2 0FDF                                    fsr1l 0FE1  
                                  fsr2l 0FD9                                    btemp 0059  
                          ?_LCD_setline 0001                                    prodh 0FF4  
                                  prodl 0FF3                                    start 00BC  
                      __end_of_DAC_init 2036                       _changeHourDayYear 142E  
                          ___param_bank 0000                      ?_changeHourDayYear 0004  
                                 ??_abs 000C                                   ??_pad 0015  
                      __end_of_LCD_init 1AE0                                   ?_main 0001  
                                 ?_dtoa 0018                         __end_of___awdiv 1686  
                       __end_of___awmod 1736                     ??_changeHourDayYear 000A  
                       ___awdiv@divisor 0006                         __end_of___lwdiv 1C44  
                                 i1l170 00AC                                   i1l165 0088  
                                 i1l167 0084                                   i1l168 009A  
                       __end_of___lwmod 1D7A                         ___awdiv@counter 0008  
                          vfpfcnvrt@fmt 0024                                   _TMR0H 0FD4  
                                 _TMR0L 0FD3                                   _TRISA 0F81  
                                 _TRISB 0F82                                   _TRISG 0F87  
                                 _flags 0058                     read_prec_or_width@c 000C  
                   read_prec_or_width@n 000D                                   _fputc 1892  
                                 _fputs 1DBC                                   pad@fp 0011  
                                 _width 0054                                   _putch 2044  
                                 dtoa@d 0019                                   dtoa@i 0021  
                                 dtoa@p 001D                                   dtoa@s 0020  
                                 dtoa@w 001E                           ?_LCD_sendbyte 0005  
                  __end_of_findDSTdates 1CAE                                   tablat 0FF5  
                 __end_of_Comp1_init_fe 1FCC                   __end_of_Comp1_init_re 1FA8  
                                 plusw2 0FDB                                   ttemp5 005A  
                                 ttemp6 005D                                   ttemp7 0061  
                                 status 0FD8                         __end_of_sunSync 1BD0  
          lastSunday@dayOfYearForDSTEnd 0035                                   wtemp8 005A  
                       __end_of_sprintf 1EA2               __end_of_changeHourDayYear 14FA  
                       __initialization 1FCC                            __end_of_main 142E  
                          __end_of_dtoa 133A                      lastSunday@leapYear 003D  
                     __end_of_LCD_E_TOG 2044                                  ??_main 0050  
                                ??_dtoa 001B            main@fwd_daylight_savings_day 0082  
                         __activetblptr 0003              __end_of_read_prec_or_width 17E4  
                          ?_time2String 0045                             lastSunday@h 0029  
                                ?_fputc 0004                                  ?_fputs 000C  
                        ??_LCD_sendbyte 0006                        ___awdiv@dividend 0004  
                                ?_putch 0001                   changeHourDayYear@leap 0007  
                 changeHourDayYear@hour 0004                                  i1l2570 0044  
                                i1l2562 0026                                  i1l2580 0096  
                                i1l2572 0056                                  i1l2564 0036  
                                i1l2582 00A8                                  i1l2574 006C  
                                i1l2566 003C                                  i1l2576 006E  
                                i1l2568 0040                                  i1l2578 0082  
                 changeHourDayYear@year 0006                           vfpfcnvrt@done 002C  
                     _LEDarray_disp_bin 14FA                                  _LowISR 0018  
                    ?_LEDarray_disp_bin 0004                           ??_Timer0_init 0004  
                          vfprintf@cfmt 0031                                  ___wmul 1F5E  
                             ??___awdiv 0008                               ??___awmod 0008  
                             ??___lwdiv 000E                               ??___lwmod 0015  
hourChangeDST@bkwd_daylight_savings_day 0008                    read_prec_or_width@ap 000B  
                   ??_LEDarray_disp_bin 0006                                  clear_0 1FD2  
                                clear_1 1FDE                        ___awdiv@quotient 000A  
                       ___awmod@divisor 0006                                  isa$std 0001  
                       ___awmod@counter 0008                                  pad@buf 0012  
                                dtoa@fp 0018                                  fputc@c 0004  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000C             lastSunday@dayOfWeekMonth1st 002B  
                          __mediumconst 0000                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                                putch@c 0001                               ?_DAC_init 0001  
                      __end_of_vfprintf 1DBC                               ??_sunSync 0008  
                             ??_sprintf 0038               __end_of_LEDarray_disp_bin 15C2  
                            __accesstop 0060                 __end_of__initialization 1FE4  
                             ?_LCD_init 0001                           ___rparam_used 0001  
                         _LEDarray_init 1F32                         _Interrupts_init 2008  
                      findDSTdates@hour 0041                        findDSTdates@year 0045  
                        __pcstackCOMRAM 0001                           __end_of_fputc 193C  
                         __end_of_fputs 1DF8                           __end_of_putch 2046  
                   __end_of_Timer0_init 1F32             lastSunday@daysBeforeOctober 0033  
                            ??_DAC_init 0004                                 ??_fputc 0007  
                               ??_fputs 000E                                 ??_putch 0004  
                            __pbssBANK0 008E                          _LCD_sendnibble 1CAE  
                            ??_LCD_init 0009                           _hourChangeDST 17E4  
                        ?_LEDarray_init 0001                          _LCD_sendstring 1ED6  
                               ?_LowISR 0001                                 ?___wmul 0004  
                  __end_of_LCD_sendbyte 1E34              hourChangeDST@backward_zone 000B  
                          _findDSTdates 1C44                              _isLeapYear 1AE0  
                      hourChangeDST@day 0004                  __end_of_LCD_sendnibble 1D16  
               __end_of_Interrupts_init 2022                          lastSunday@year 001B  
                __end_of_LCD_sendstring 1F04                          ?_hourChangeDST 0004  
                               __Hparam 0000                                 __Lparam 0000  
                           _Timer0_init 1F04                              _lastSunday 0E38  
                       _isLeapYear$1208 001A                                 ___awdiv 15C2  
                               ___awmod 1686                                 ___lwdiv 1BD0  
                               ___lwmod 1D16                               ?_vfprintf 002E  
                          __psmallconst 0E00                                 __pcinit 1FCC  
                               __ramtop 0E00                              _initialise 1FEE  
                               __ptext0 133A                                 __ptext1 193C  
                               __ptext2 1E6E                                 __ptext3 1D7A  
                               __ptext4 1050                                 __ptext5 1736  
                               __ptext6 11D2                                 __ptext7 19D0  
                               __ptext8 1DBC                                 __ptext9 1892  
                 read_prec_or_width@fmt 000A                        ___awmod@dividend 0004  
                             _LCD_E_TOG 2036                         LCD_setline@line 0009  
                               _sunSync 1B5A                                 main@day 008C  
                               main@buf 0060                                 _sprintf 1E6E  
                  end_of_initialization 1FE4                         ?_LCD_sendnibble 0001  
                               fputc@fp 0006                         ??_LEDarray_init 0004  
                               fputs@fp 000D                         ?_LCD_sendstring 0009  
                    _read_prec_or_width 1736   findDSTdates@bkwd_daylight_savings_day 0048  
                     __end_of_vfpfcnvrt 11D2                                 postdec2 0FDD  
                   ?_read_prec_or_width 000A                                 postinc0 0FEE  
                               postinc1 0FE6                                 postinc2 0FDE  
                      vfpfcnvrt@convarg 0028                              ??_vfprintf 0031  
        lastSunday@dayOfYearForDSTStart 0031                             ?_isLeapYear 0016  
                            ?_LCD_E_TOG 0001                               _TRISBbits 0F82  
                             _TRISCbits 0F83                               _TRISEbits 0F85  
                             _TRISFbits 0F86                               _TRISHbits 0F88  
                  ??_read_prec_or_width 000C                           sunSync@synced 0007  
                       ??_hourChangeDST 000C                             _CM1CON0bits 0ED0  
                           _CM1CON1bits 0ED1                        ?_Interrupts_init 0001  
                           _CM2CON0bits 0ECC                             _CM2CON1bits 0ECD  
                            main@synced 0088                             ?_lastSunday 001B  
                        __end_of_LowISR 00BC                             vfpfcnvrt@ap 0025  
                           vfpfcnvrt@cp 002D                             vfpfcnvrt@fp 0023  
                        __end_of___wmul 1F84                    LCD_sendnibble@number 0004  
                           ?_initialise 0001                     start_initialization 1FCC  
                           __end_of_abs 1ED6                             __end_of_pad 1A5A  
                          _LCD_sendbyte 1DF8                           _Comp1_init_fe 1FA8  
                         _Comp1_init_re 1F84                    changeHourDayYear@day 0005  
                         ??_LCD_setline 0009                                ??_LowISR 0001  
                           vfprintf@fmt 002F                    LCD_sendstring@string 0009  
                              ??___wmul 0008                             sunSync@hour 0004  
                           __pbssCOMRAM 0050                             ??_LCD_E_TOG 0004  
                         __pcstackBANK0 0060                         findDSTdates@day 0043  
                        ?_Comp1_init_fe 0001                          ?_Comp1_init_re 0001  
                      ___lwdiv@dividend 000A                               _dtoa$2014 001B  
                          ?_Timer0_init 0001                                ?___awdiv 0004  
                              ?___awmod 0004                     __end_of_LCD_setline 1E6E  
                              ?___lwdiv 000A                                ?___lwmod 0011  
                           __pintcodelo 0018                             __smallconst 0E00  
                         ??_time2String 004E                        ??_LCD_sendnibble 0004  
                              _DAC_init 2022                        ___lwdiv@quotient 000E  
                              ?_sunSync 0004                        ??_LCD_sendstring 000A  
                              ?_sprintf 0032                        LCD_sendbyte@Byte 0008  
                      LCD_sendbyte@type 0005                          ___wmul@product 0008  
                              _LATAbits 0F79                                _LATBbits 0F7A  
                              _LATCbits 0F7B                                _LATEbits 0F7D  
                              _LATFbits 0F7E                                _LATGbits 0F7F  
                              _LATHbits 0F80                                _LCD_init 1A5A  
               changeHourDayYear@synced 0009                                _IPR0bits 0E1F  
                              _IPR2bits 0E21                                _PIE0bits 0E29  
                              _PIE2bits 0E2B                       hourChangeDST@hour 000A  
                              i1u194_20 0036                                i1u194_21 0032  
                              i1u195_20 0056                                i1u195_21 0052  
                              i1u196_20 006C                                i1u196_21 0068  
                              i1u197_20 0082                                i1u197_21 007E  
                              i1u198_20 0096                                i1u198_21 0092  
                              i1u199_20 00A8                                i1u199_21 00A4  
                              _PIR0bits 0E33                                _PIR2bits 0E35  
                          time2String@h 0046   hourChangeDST@fwd_daylight_savings_day 0006  
                             _vfpfcnvrt 1050                       ___wmul@multiplier 0004  
                          ??_isLeapYear 0018                              _CM1NCHbits 0ED2  
                       lastSunday@month 001D                              _CM1PCHbits 0ED3  
                            _CM2NCHbits 0ECE                              _CM2PCHbits 0ECF  
             lastSunday@daysBeforeMarch 002F                         ??_Comp1_init_fe 0004  
                       ??_Comp1_init_re 0004                     __end_of_time2String 19D0  
                 __end_of_LEDarray_init 1F5E                             _LCD_setline 1E34  
                              __Hrparam 0000           lastSunday@lastSundayDateMonth 003F  
                    __end_of_isLeapYear 1B5A                            ??_lastSunday 001F  
                            vfprintf@ap 0030                                __Lrparam 0000  
                            vfprintf@fp 002E                              sunSync@day 0005  
                            ?_vfpfcnvrt 0023                            ??_initialise 000A  
                       _lastSunday$1221 003B                         _lastSunday$1218 0039  
                            _ANSELFbits 0EB4                         _lastSunday$2306 0037  
                            sprintf@fmt 0033                              _T0CON0bits 0FD5  
                            _T0CON1bits 0FD6                         ___lwdiv@divisor 000C  
                       ___lwdiv@counter 0010                                __ptext10 2044  
                              __ptext11 1EA2                                __ptext20 1A5A  
                              __ptext12 1686                                __ptext21 1DF8  
                              __ptext13 15C2                                __ptext30 0E38  
                              __ptext22 1CAE                                __ptext14 1E34  
                              __ptext31 1AE0                                __ptext23 2036  
                              __ptext15 1ED6                                __ptext32 1D16  
                              __ptext24 2008                                __ptext16 1B5A  
                              __ptext33 1F5E                                __ptext25 1F84  
                              __ptext17 1FEE                                __ptext34 1BD0  
                              __ptext26 1FA8                                __ptext18 1F04  
                              __ptext35 142E                                __ptext27 2022  
                              __ptext19 1F32                                __ptext36 14FA  
                              __ptext28 17E4                                __ptext29 1C44  
                LCD_sendbyte@highNibble 0006                      __end_of_lastSunday 1050  
               LEDarray_disp_bin@number 0004                   __end_of_hourChangeDST 1892  
  findDSTdates@fwd_daylight_savings_day 0047                      __end_of_initialise 2008  
         main@bkwd_daylight_savings_day 0084                                isa$xinst 0000  
                       time2String@leap 004C                                int$flags 0059  
                       time2String@year 004A                                _vfprintf 1D7A  
                         ?_findDSTdates 0041                                main@leap 0080  
                              main@year 008A                              _INTCONbits 0FF2  
                           _time2String 193C                                intlevel1 0000  
                             sprintf@ap 0038                            _DAC1CON0bits 0EC6  
                          _DAC1CON1bits 0EC7                        ___lwmod@dividend 0011  
                        time2String@day 0048                          time2String@buf 0045  
                        ??_findDSTdates 0049                             ??_vfpfcnvrt 0026  
                              sprintf@f 0039                                sprintf@s 0032  
                 LCD_sendbyte@lowNibble 0007                         ___lwmod@divisor 0013  
                       ___lwmod@counter 0015                          isLeapYear@year 0016  
               calc_max_PPM@loopCounter 0050  
