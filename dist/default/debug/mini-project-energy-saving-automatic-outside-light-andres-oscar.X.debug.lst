

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 08 20:31:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 21/07/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     _CM1CON1bits	set	3793
    88   000000                     _TRISBbits	set	3970
    89   000000                     _LATBbits	set	3962
    90   000000                     _LATAbits	set	3961
    91   000000                     _LATGbits	set	3967
    92   000000                     _IPR0bits	set	3615
    93   000000                     _PIE0bits	set	3625
    94   000000                     _T0CON0bits	set	4053
    95   000000                     _T0CON1bits	set	4054
    96   000000                     _INTCONbits	set	4082
    97   000000                     _PIE2bits	set	3627
    98   000000                     _PIR0bits	set	3635
    99   000000                     _PIR2bits	set	3637
   100   000000                     _ANSELFbits	set	3764
   101   000000                     _LATA	set	3961
   102   000000                     _TMR0L	set	4051
   103   000000                     _TMR0H	set	4052
   104   000000                     _IPR2bits	set	3617
   105   000000                     _LATEbits	set	3965
   106   000000                     _LATCbits	set	3963
   107   000000                     _LATFbits	set	3966
   108   000000                     _LATB	set	3962
   109   000000                     _TRISEbits	set	3973
   110   000000                     _TRISCbits	set	3971
   111   000000                     _TRISFbits	set	3974
   112   000000                     _TRISB	set	3970
   113   000000                     _TRISA	set	3969
   114   000000                     _LATHbits	set	3968
   115   000000                     _LATG	set	3967
   116   000000                     _TRISHbits	set	3976
   117   000000                     _TRISG	set	3975
   118   000000                     _DAC1CON0bits	set	3782
   119   000000                     _CM1CON0bits	set	3792
   120   000000                     _CM1NCHbits	set	3794
   121   000000                     _DAC1CON1bits	set	3783
   122   000000                     _CM1PCHbits	set	3795
   123                           
   124                           	psect	smallconst
   125   000E00                     __psmallconst:
   126                           	callstack 0
   127   000E00  00                 	db	0
   128   000E01                     
   129                           ; BSR set to: 14
   130   000E01  56                 	db	86	;'V'
   131   000E02  6F                 	db	111	;'o'
   132   000E03  6C                 	db	108	;'l'
   133   000E04  74                 	db	116	;'t'
   134   000E05  61                 	db	97	;'a'
   135   000E06  67                 	db	103	;'g'
   136   000E07  65                 	db	101	;'e'
   137   000E08  20                 	db	32
   138   000E09  3D                 	db	61	;'='
   139   000E0A  20                 	db	32
   140   000E0B  25                 	db	37
   141   000E0C  64                 	db	100	;'d'
   142   000E0D  2E                 	db	46
   143   000E0E  25                 	db	37
   144   000E0F  30                 	db	48	;'0'
   145   000E10  32                 	db	50	;'2'
   146   000E11  64                 	db	100	;'d'
   147   000E12  00                 	db	0
   148   000E13                     STR_2:
   149                           
   150                           ; BSR set to: 14
   151   000E13  68                 	db	104	;'h'
   152   000E14  3D                 	db	61	;'='
   153   000E15  30                 	db	48	;'0'
   154   000E16  25                 	db	37
   155   000E17  64                 	db	100	;'d'
   156   000E18  20                 	db	32
   157   000E19  25                 	db	37
   158   000E1A  64                 	db	100	;'d'
   159   000E1B  20                 	db	32
   160   000E1C  25                 	db	37
   161   000E1D  64                 	db	100	;'d'
   162   000E1E  00                 	db	0
   163   000E1F                     STR_3:
   164                           
   165                           ; BSR set to: 14
   166   000E1F  68                 	db	104	;'h'
   167   000E20  3D                 	db	61	;'='
   168   000E21  25                 	db	37
   169   000E22  64                 	db	100	;'d'
   170   000E23  20                 	db	32
   171   000E24  25                 	db	37
   172   000E25  64                 	db	100	;'d'
   173   000E26  20                 	db	32
   174   000E27  25                 	db	37
   175   000E28  64                 	db	100	;'d'
   176   000E29  00                 	db	0
   177   000E2A  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   001EEC                     __pcinit:
   183                           	callstack 0
   184   001EEC                     start_initialization:
   185                           	callstack 0
   186   001EEC                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Clear objects allocated to BANK0 (34 bytes)
   190   001EEC  EE00  F08A         	lfsr	0,__pbssBANK0
   191   001EF0  0E22               	movlw	34
   192   001EF2                     clear_0:
   193   001EF2  6AEE               	clrf	postinc0,c
   194   001EF4  06E8               	decf	wreg,f,c
   195   001EF6  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (9 bytes)
   198   001EF8  EE00  F051         	lfsr	0,__pbssCOMRAM
   199   001EFC  0E09               	movlw	9
   200   001EFE                     clear_1:
   201   001EFE  6AEE               	clrf	postinc0,c
   202   001F00  06E8               	decf	wreg,f,c
   203   001F02  E1FD               	bnz	clear_1
   204   001F04                     end_of_initialization:
   205                           	callstack 0
   206   001F04                     __end_of__initialization:
   207                           	callstack 0
   208   001F04  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   001F06  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   001F08  0100               	movlb	0
   211   001F0A  EFBE  F00A         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214   000051                     __pbssCOMRAM:
   215                           	callstack 0
   216   000051                     calc_max_PPM@loopCounter:
   217                           	callstack 0
   218   000051                     	ds	4
   219   000055                     _width:
   220                           	callstack 0
   221   000055                     	ds	2
   222   000057                     _prec:
   223                           	callstack 0
   224   000057                     	ds	2
   225   000059                     _flags:
   226                           	callstack 0
   227   000059                     	ds	1
   228                           
   229                           	psect	bssBANK0
   230   00008A                     __pbssBANK0:
   231                           	callstack 0
   232   00008A                     _dbuf:
   233                           	callstack 0
   234   00008A                     	ds	32
   235   0000AA                     _hour:
   236                           	callstack 0
   237   0000AA                     	ds	2
   238                           
   239                           	psect	cstackBANK0
   240   000060                     __pcstackBANK0:
   241                           	callstack 0
   242   000060                     main@buf:
   243                           	callstack 0
   244                           
   245                           ; 32 bytes @ 0x0
   246   000060                     	ds	32
   247   000080                     main@fwd_daylight_savings_day:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x20
   251   000080                     	ds	2
   252   000082                     main@bkwd_daylight_savings_day:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x22
   256   000082                     	ds	2
   257   000084                     main@backward_zone:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x24
   261   000084                     	ds	2
   262   000086                     main@year:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x26
   266   000086                     	ds	2
   267   000088                     main@day:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x28
   271   000088                     	ds	2
   272                           
   273                           	psect	cstackCOMRAM
   274   000001                     __pcstackCOMRAM:
   275                           	callstack 0
   276   000001                     ??_LowISR:
   277   000001                     
   278                           ; 1 bytes @ 0x0
   279   000001                     	ds	4
   280   000005                     ?___wmul:
   281                           	callstack 0
   282   000005                     ?___awdiv:
   283                           	callstack 0
   284   000005                     ?___awmod:
   285                           	callstack 0
   286   000005                     LCD_sendnibble@number:
   287                           	callstack 0
   288   000005                     LEDarray_disp_bin@number:
   289                           	callstack 0
   290   000005                     increaseHour@day:
   291                           	callstack 0
   292   000005                     ___wmul@multiplier:
   293                           	callstack 0
   294   000005                     ___awdiv@dividend:
   295                           	callstack 0
   296   000005                     ___awmod@dividend:
   297                           	callstack 0
   298   000005                     fputc@c:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x4
   302   000005                     	ds	1
   303   000006                     LCD_sendbyte@type:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x5
   307   000006                     	ds	1
   308   000007                     LCD_sendbyte@highNibble:
   309                           	callstack 0
   310   000007                     fputc@fp:
   311                           	callstack 0
   312   000007                     increaseHour@fwd_daylight_savings_day:
   313                           	callstack 0
   314   000007                     ___wmul@multiplicand:
   315                           	callstack 0
   316   000007                     ___awdiv@divisor:
   317                           	callstack 0
   318   000007                     ___awmod@divisor:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x6
   322   000007                     	ds	1
   323   000008                     ??_fputc:
   324   000008                     LCD_sendbyte@lowNibble:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x7
   328   000008                     	ds	1
   329   000009                     LCD_sendbyte@Byte:
   330                           	callstack 0
   331   000009                     ___awdiv@counter:
   332                           	callstack 0
   333   000009                     ___awmod@counter:
   334                           	callstack 0
   335   000009                     increaseHour@bkwd_daylight_savings_day:
   336                           	callstack 0
   337   000009                     ___wmul@product:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x8
   341   000009                     	ds	1
   342   00000A                     ??_LCD_init:
   343   00000A                     LCD_setline@line:
   344                           	callstack 0
   345   00000A                     LCD_sendstring@string:
   346                           	callstack 0
   347   00000A                     ___awdiv@sign:
   348                           	callstack 0
   349   00000A                     ___awmod@sign:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x9
   353   00000A                     	ds	1
   354   00000B                     ?_abs:
   355                           	callstack 0
   356   00000B                     ?___lwdiv:
   357                           	callstack 0
   358   00000B                     ?_read_prec_or_width:
   359                           	callstack 0
   360   00000B                     increaseHour@hour:
   361                           	callstack 0
   362   00000B                     read_prec_or_width@fmt:
   363                           	callstack 0
   364   00000B                     ___awdiv@quotient:
   365                           	callstack 0
   366   00000B                     ___lwdiv@dividend:
   367                           	callstack 0
   368   00000B                     abs@a:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0xA
   372   00000B                     	ds	1
   373   00000C                     increaseHour@backward_zone:
   374                           	callstack 0
   375   00000C                     read_prec_or_width@ap:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0xB
   379   00000C                     	ds	1
   380   00000D                     ??_abs:
   381   00000D                     read_prec_or_width@c:
   382                           	callstack 0
   383   00000D                     fputs@s:
   384                           	callstack 0
   385   00000D                     ___lwdiv@divisor:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xC
   389   00000D                     	ds	1
   390   00000E                     fputs@fp:
   391                           	callstack 0
   392   00000E                     read_prec_or_width@n:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0xD
   396   00000E                     	ds	1
   397   00000F                     fputs@c:
   398                           	callstack 0
   399   00000F                     ___lwdiv@quotient:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xE
   403   00000F                     	ds	1
   404   000010                     fputs@i:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0xF
   408   000010                     	ds	1
   409   000011                     ___lwdiv@counter:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x10
   413   000011                     	ds	1
   414   000012                     ?___lwmod:
   415                           	callstack 0
   416   000012                     pad@fp:
   417                           	callstack 0
   418   000012                     ___lwmod@dividend:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x11
   422   000012                     	ds	1
   423   000013                     pad@buf:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x12
   427   000013                     	ds	1
   428   000014                     ___lwmod@divisor:
   429                           	callstack 0
   430   000014                     pad@p:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x13
   434   000014                     	ds	2
   435   000016                     ??_pad:
   436   000016                     ___lwmod@counter:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x15
   440   000016                     	ds	1
   441   000017                     ?_isLeapYear:
   442                           	callstack 0
   443   000017                     isLeapYear@year:
   444                           	callstack 0
   445   000017                     pad@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x16
   449   000017                     	ds	2
   450   000019                     ??_isLeapYear:
   451   000019                     dtoa@fp:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x18
   455   000019                     	ds	1
   456   00001A                     dtoa@d:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x19
   460   00001A                     	ds	1
   461   00001B                     _isLeapYear$1049:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x1A
   465   00001B                     	ds	1
   466   00001C                     ?_lastSunday:
   467                           	callstack 0
   468   00001C                     changeHourDayYear@hour:
   469                           	callstack 0
   470   00001C                     lastSunday@year:
   471                           	callstack 0
   472   00001C                     _dtoa$1849:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1B
   476   00001C                     	ds	1
   477   00001D                     changeHourDayYear@day:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1C
   481   00001D                     	ds	1
   482   00001E                     changeHourDayYear@year:
   483                           	callstack 0
   484   00001E                     dtoa@p:
   485                           	callstack 0
   486   00001E                     lastSunday@month:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x1D
   490   00001E                     	ds	1
   491   00001F                     dtoa@w:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x1E
   495   00001F                     	ds	1
   496   000020                     ??_lastSunday:
   497                           
   498                           ; 1 bytes @ 0x1F
   499   000020                     	ds	1
   500   000021                     dtoa@s:
   501                           	callstack 0
   502   000021                     changeHourDayYear@leap:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x20
   506   000021                     	ds	1
   507   000022                     dtoa@i:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x21
   511   000022                     	ds	2
   512   000024                     vfpfcnvrt@fp:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x23
   516   000024                     	ds	1
   517   000025                     vfpfcnvrt@fmt:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x24
   521   000025                     	ds	1
   522   000026                     vfpfcnvrt@ap:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x25
   526   000026                     	ds	1
   527   000027                     ??_vfpfcnvrt:
   528                           
   529                           ; 1 bytes @ 0x26
   530   000027                     	ds	2
   531   000029                     vfpfcnvrt@convarg:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x28
   535   000029                     	ds	1
   536   00002A                     lastSunday@h:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x29
   540   00002A                     	ds	2
   541   00002C                     lastSunday@dayOfWeekMonth1st:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x2B
   545   00002C                     	ds	1
   546   00002D                     vfpfcnvrt@done:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x2C
   550   00002D                     	ds	1
   551   00002E                     vfpfcnvrt@cp:
   552                           	callstack 0
   553   00002E                     lastSunday@dayOfWeekMonth31st:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x2D
   557   00002E                     	ds	1
   558   00002F                     ?_vfprintf:
   559                           	callstack 0
   560   00002F                     vfprintf@fp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x2E
   564   00002F                     	ds	1
   565   000030                     vfprintf@fmt:
   566                           	callstack 0
   567   000030                     lastSunday@daysBeforeMarch:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x2F
   571   000030                     	ds	1
   572   000031                     vfprintf@ap:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x30
   576   000031                     	ds	1
   577   000032                     vfprintf@cfmt:
   578                           	callstack 0
   579   000032                     lastSunday@dayOfYearForDSTStart:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x31
   583   000032                     	ds	1
   584   000033                     ?_sprintf:
   585                           	callstack 0
   586   000033                     sprintf@s:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x32
   590   000033                     	ds	1
   591   000034                     sprintf@fmt:
   592                           	callstack 0
   593   000034                     lastSunday@daysBeforeOctober:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x33
   597   000034                     	ds	2
   598   000036                     lastSunday@dayOfYearForDSTEnd:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x35
   602   000036                     	ds	2
   603   000038                     _lastSunday$2143:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x37
   607   000038                     	ds	2
   608   00003A                     _lastSunday$1060:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x39
   612   00003A                     	ds	1
   613   00003B                     sprintf@ap:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x3A
   617   00003B                     	ds	1
   618   00003C                     _lastSunday$1063:
   619                           	callstack 0
   620   00003C                     sprintf@f:
   621                           	callstack 0
   622                           
   623                           ; 12 bytes @ 0x3B
   624   00003C                     	ds	2
   625   00003E                     lastSunday@leapYear:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x3D
   629   00003E                     	ds	2
   630   000040                     lastSunday@lastSundayDateMonth:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x3F
   634   000040                     	ds	2
   635   000042                     findDSTdates@hour:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x41
   639   000042                     	ds	2
   640   000044                     findDSTdates@day:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x43
   644   000044                     	ds	2
   645   000046                     findDSTdates@year:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x45
   649   000046                     	ds	2
   650   000048                     findDSTdates@fwd_daylight_savings_day:
   651                           	callstack 0
   652   000048                     time2String@buf:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x47
   656   000048                     	ds	1
   657   000049                     findDSTdates@bkwd_daylight_savings_day:
   658                           	callstack 0
   659   000049                     time2String@h:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x48
   663   000049                     	ds	1
   664   00004A                     
   665                           ; 1 bytes @ 0x49
   666   00004A                     	ds	1
   667   00004B                     time2String@day:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x4A
   671   00004B                     	ds	2
   672   00004D                     time2String@year:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x4C
   676   00004D                     	ds	2
   677   00004F                     ??_time2String:
   678                           
   679                           ; 1 bytes @ 0x4E
   680   00004F                     	ds	2
   681   000051                     
   682                           ; 1 bytes @ 0x50
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 20 in file "main.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  buf            32    0[BANK0 ] unsigned char [32]
   693 ;;  day             2   40[BANK0 ] unsigned int 
   694 ;;  year            2   38[BANK0 ] unsigned int 
   695 ;;  backward_zon    2   36[BANK0 ] unsigned int 
   696 ;;  bkwd_dayligh    2   34[BANK0 ] unsigned int 
   697 ;;  fwd_daylight    2   32[BANK0 ] unsigned int 
   698 ;;  daylight_sav    2    0        unsigned int 
   699 ;;  leap            2    0        unsigned int 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   712 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   713 ;;Total ram usage:       42 bytes
   714 ;; Hardware stack levels required when called: 10
   715 ;; This function calls:
   716 ;;		_LCD_setline
   717 ;;		_LEDarray_disp_bin
   718 ;;		_changeHourDayYear
   719 ;;		_findDSTdates
   720 ;;		_increaseHour
   721 ;;		_initialise
   722 ;;		_time2String
   723 ;; This function is called by:
   724 ;;		Startup code after reset
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text0
   729   00157C                     __ptext0:
   730                           	callstack 0
   731   00157C                     _main:
   732                           	callstack 21
   733   00157C                     
   734                           ;main.c: 23:     unsigned int day = 364;
   735   00157C  0E01               	movlw	1
   736   00157E  0100               	movlb	0	; () banked
   737   001580  6F89               	movwf	(main@day+1)& (0+255),b
   738   001582  0E6C               	movlw	108
   739   001584  6F88               	movwf	main@day& (0+255),b
   740                           
   741                           ;main.c: 24:     unsigned int year = 2024;
   742   001586  0E07               	movlw	7
   743   001588  6F87               	movwf	(main@year+1)& (0+255),b
   744   00158A  0EE8               	movlw	232
   745   00158C  6F86               	movwf	main@year& (0+255),b
   746                           
   747                           ;main.c: 25:     unsigned int leap;;main.c: 26:     unsigned int fwd_daylight_savings_da
      +                          y;;main.c: 27:     unsigned int bkwd_daylight_savings_day;;main.c: 28:     unsigned int 
      +                          backward_zone = 0;
   748   00158E  0E00               	movlw	0
   749   001590  6F85               	movwf	(main@backward_zone+1)& (0+255),b
   750   001592  0E00               	movlw	0
   751   001594  6F84               	movwf	main@backward_zone& (0+255),b
   752   001596                     
   753                           ; BSR set to: 0
   754                           ;main.c: 29:     char buf[32];;main.c: 31:     initialise();
   755   001596  EC87  F00F         	call	_initialise	;wreg free
   756   00159A                     l2446:
   757                           
   758                           ;main.c: 35:         LEDarray_disp_bin(hour);
   759   00159A  C0AA  F005         	movff	_hour,LEDarray_disp_bin@number
   760   00159E  C0AB  F006         	movff	_hour+1,LEDarray_disp_bin@number+1
   761   0015A2  EC97  F009         	call	_LEDarray_disp_bin	;wreg free
   762   0015A6                     
   763                           ;main.c: 37:         LCD_setline(1);
   764   0015A6  0E01               	movlw	1
   765   0015A8  ECAA  F00E         	call	_LCD_setline
   766   0015AC                     
   767                           ;main.c: 39:         time2String(buf,hour,day,year);
   768   0015AC  0E60               	movlw	low main@buf
   769   0015AE  6E48               	movwf	time2String@buf^0,c
   770   0015B0  C0AA  F049         	movff	_hour,time2String@h
   771   0015B4  C0AB  F04A         	movff	_hour+1,time2String@h+1
   772   0015B8  C088  F04B         	movff	main@day,time2String@day
   773   0015BC  C089  F04C         	movff	main@day+1,time2String@day+1
   774   0015C0  C086  F04D         	movff	main@year,time2String@year
   775   0015C4  C087  F04E         	movff	main@year+1,time2String@year+1
   776   0015C8  ECF9  F00C         	call	_time2String	;wreg free
   777   0015CC                     
   778                           ;main.c: 41:         findDSTdates(hour, day, year,&fwd_daylight_savings_day, &bkwd_dayli
      +                          ght_savings_day);
   779   0015CC  C0AA  F042         	movff	_hour,findDSTdates@hour
   780   0015D0  C0AB  F043         	movff	_hour+1,findDSTdates@hour+1
   781   0015D4  C088  F044         	movff	main@day,findDSTdates@day
   782   0015D8  C089  F045         	movff	main@day+1,findDSTdates@day+1
   783   0015DC  C086  F046         	movff	main@year,findDSTdates@year
   784   0015E0  C087  F047         	movff	main@year+1,findDSTdates@year+1
   785   0015E4  0E80               	movlw	low main@fwd_daylight_savings_day
   786   0015E6  6E48               	movwf	findDSTdates@fwd_daylight_savings_day^0,c
   787   0015E8  0E82               	movlw	low main@bkwd_daylight_savings_day
   788   0015EA  6E49               	movwf	findDSTdates@bkwd_daylight_savings_day^0,c
   789   0015EC  ECB2  F00D         	call	_findDSTdates	;wreg free
   790   0015F0                     
   791                           ;main.c: 43:         increaseHour(day, fwd_daylight_savings_day, bkwd_daylight_savings_d
      +                          ay, &hour, &backward_zone);
   792   0015F0  C088  F005         	movff	main@day,increaseHour@day
   793   0015F4  C089  F006         	movff	main@day+1,increaseHour@day+1
   794   0015F8  C080  F007         	movff	main@fwd_daylight_savings_day,increaseHour@fwd_daylight_savings_day
   795   0015FC  C081  F008         	movff	main@fwd_daylight_savings_day+1,increaseHour@fwd_daylight_savings_day+1
   796   001600  C082  F009         	movff	main@bkwd_daylight_savings_day,increaseHour@bkwd_daylight_savings_day
   797   001604  C083  F00A         	movff	main@bkwd_daylight_savings_day+1,increaseHour@bkwd_daylight_savings_day+1
   798   001608  0EAA               	movlw	low _hour
   799   00160A  6E0B               	movwf	increaseHour@hour^0,c
   800   00160C  0E84               	movlw	low main@backward_zone
   801   00160E  6E0C               	movwf	increaseHour@backward_zone^0,c
   802   001610  ECC5  F00B         	call	_increaseHour	;wreg free
   803   001614                     
   804                           ;main.c: 45:         changeHourDayYear(&hour, &day, &year);
   805   001614  0EAA               	movlw	low _hour
   806   001616  6E1C               	movwf	changeHourDayYear@hour^0,c
   807   001618  0E88               	movlw	low main@day
   808   00161A  6E1D               	movwf	changeHourDayYear@day^0,c
   809   00161C  0E86               	movlw	low main@year
   810   00161E  6E1E               	movwf	changeHourDayYear@year^0,c
   811   001620  EC5D  F00A         	call	_changeHourDayYear	;wreg free
   812   001624  EFCD  F00A         	goto	l2446
   813   001628  EF47  F000         	goto	start
   814   00162C                     __end_of_main:
   815                           	callstack 0
   816                           
   817 ;; *************** function _time2String *****************
   818 ;; Defined at:
   819 ;;		line 152 in file "LCD.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  buf             1   71[COMRAM] PTR unsigned char 
   822 ;;		 -> main@buf(32), 
   823 ;;  h               2   72[COMRAM] unsigned int 
   824 ;;  day             2   74[COMRAM] unsigned int 
   825 ;;  year            2   76[COMRAM] unsigned int 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   837 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   840 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;Total ram usage:        9 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 9
   844 ;; This function calls:
   845 ;;		_LCD_sendstring
   846 ;;		_sprintf
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text1
   853   0019F2                     __ptext1:
   854                           	callstack 0
   855   0019F2                     _time2String:
   856                           	callstack 21
   857   0019F2                     
   858                           ;LCD.c: 153:     if (h<=9){
   859   0019F2  504A               	movf	(time2String@h+1)^0,w,c
   860   0019F4  E107               	bnz	u1661
   861   0019F6  0E0A               	movlw	10
   862   0019F8  5C49               	subwf	time2String@h^0,w,c
   863   0019FA  B0D8               	btfsc	status,0,c
   864   0019FC  EF02  F00D         	goto	u1661
   865   001A00  EF04  F00D         	goto	u1660
   866   001A04                     u1661:
   867   001A04  EF18  F00D         	goto	l2390
   868   001A08                     u1660:
   869   001A08                     
   870                           ;LCD.c: 154:         sprintf(buf,"h=0%d %d %d",h,day,year);
   871   001A08  C048  F033         	movff	time2String@buf,sprintf@s
   872   001A0C  0E13               	movlw	low STR_2
   873   001A0E  6E34               	movwf	sprintf@fmt^0,c
   874   001A10  C049  F035         	movff	time2String@h,?_sprintf+2
   875   001A14  C04A  F036         	movff	time2String@h+1,?_sprintf+3
   876   001A18  C04B  F037         	movff	time2String@day,?_sprintf+4
   877   001A1C  C04C  F038         	movff	time2String@day+1,?_sprintf+5
   878   001A20  C04D  F039         	movff	time2String@year,?_sprintf+6
   879   001A24  C04E  F03A         	movff	time2String@year+1,?_sprintf+7
   880   001A28  ECC7  F00E         	call	_sprintf	;wreg free
   881                           
   882                           ;LCD.c: 155:     }
   883   001A2C  EF2A  F00D         	goto	l2392
   884   001A30                     l2390:
   885   001A30  C048  F033         	movff	time2String@buf,sprintf@s
   886   001A34  0E1F               	movlw	low STR_3
   887   001A36  6E34               	movwf	sprintf@fmt^0,c
   888   001A38  C049  F035         	movff	time2String@h,?_sprintf+2
   889   001A3C  C04A  F036         	movff	time2String@h+1,?_sprintf+3
   890   001A40  C04B  F037         	movff	time2String@day,?_sprintf+4
   891   001A44  C04C  F038         	movff	time2String@day+1,?_sprintf+5
   892   001A48  C04D  F039         	movff	time2String@year,?_sprintf+6
   893   001A4C  C04E  F03A         	movff	time2String@year+1,?_sprintf+7
   894   001A50  ECC7  F00E         	call	_sprintf	;wreg free
   895   001A54                     l2392:
   896                           
   897                           ;LCD.c: 157:     LCD_sendstring(buf);
   898   001A54  C048  F00A         	movff	time2String@buf,LCD_sendstring@string
   899   001A58  ECFB  F00E         	call	_LCD_sendstring	;wreg free
   900   001A5C                     
   901                           ;LCD.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
   902   001A5C  0E11               	movlw	17
   903   001A5E  6E50               	movwf	(??_time2String+1)^0,c
   904   001A60  0E3C               	movlw	60
   905   001A62  6E4F               	movwf	??_time2String^0,c
   906   001A64  0ECB               	movlw	203
   907   001A66                     u1867:
   908   001A66  2EE8               	decfsz	wreg,f,c
   909   001A68  D7FE               	bra	u1867
   910   001A6A  2E4F               	decfsz	??_time2String^0,f,c
   911   001A6C  D7FC               	bra	u1867
   912   001A6E  2E50               	decfsz	(??_time2String+1)^0,f,c
   913   001A70  D7FA               	bra	u1867
   914   001A72  0000               	nop	
   915   001A74  0012               	return		;funcret
   916   001A76                     __end_of_time2String:
   917                           	callstack 0
   918                           
   919 ;; *************** function _sprintf *****************
   920 ;; Defined at:
   921 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  s               1   50[COMRAM] PTR unsigned char 
   924 ;;		 -> main@buf(32), 
   925 ;;  fmt             1   51[COMRAM] PTR const unsigned char 
   926 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  f              12   59[COMRAM] struct _IO_FILE
   929 ;;  ret             2    0        int 
   930 ;;  ap              1   58[COMRAM] PTR void [1]
   931 ;;		 -> ?_sprintf(2), 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  2   50[COMRAM] int 
   934 ;; Registers used:
   935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   941 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   942 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;Total ram usage:       21 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 8
   948 ;; This function calls:
   949 ;;		_vfprintf
   950 ;; This function is called by:
   951 ;;		_time2String
   952 ;;		_ADC2String
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text2
   957   001D8E                     __ptext2:
   958                           	callstack 0
   959   001D8E                     _sprintf:
   960                           	callstack 21
   961   001D8E  0E35               	movlw	low (?_sprintf+2)
   962   001D90  6E3B               	movwf	sprintf@ap^0,c
   963   001D92  C033  F03C         	movff	sprintf@s,sprintf@f
   964   001D96  0E00               	movlw	0
   965   001D98  6E40               	movwf	(sprintf@f+4)^0,c
   966   001D9A  0E00               	movlw	0
   967   001D9C  6E3F               	movwf	(sprintf@f+3)^0,c
   968   001D9E  0E00               	movlw	0
   969   001DA0  6E47               	movwf	(sprintf@f+11)^0,c
   970   001DA2  0E00               	movlw	0
   971   001DA4  6E46               	movwf	(sprintf@f+10)^0,c
   972   001DA6  0E3C               	movlw	low sprintf@f
   973   001DA8  6E2F               	movwf	vfprintf@fp^0,c
   974   001DAA  C034  F030         	movff	sprintf@fmt,vfprintf@fmt
   975   001DAE  0E3B               	movlw	low sprintf@ap
   976   001DB0  6E31               	movwf	vfprintf@ap^0,c
   977   001DB2  EC4D  F00E         	call	_vfprintf	;wreg free
   978   001DB6  5033               	movf	sprintf@s^0,w,c
   979   001DB8  243F               	addwf	(sprintf@f+3)^0,w,c
   980   001DBA  6ED9               	movwf	fsr2l,c
   981   001DBC  6ADA               	clrf	fsr2h,c
   982   001DBE  6ADF               	clrf	indf2,c
   983   001DC0  0012               	return		;funcret
   984   001DC2                     __end_of_sprintf:
   985                           	callstack 0
   986                           
   987 ;; *************** function _vfprintf *****************
   988 ;; Defined at:
   989 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  fp              1   46[COMRAM] PTR struct _IO_FILE
   992 ;;		 -> sprintf@f(12), 
   993 ;;  fmt             1   47[COMRAM] PTR const unsigned char 
   994 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
   995 ;;  ap              1   48[COMRAM] PTR PTR void 
   996 ;;		 -> sprintf@ap(1), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  cfmt            1   49[COMRAM] PTR unsigned char 
   999 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2   46[COMRAM] int 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1009 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;Total ram usage:        4 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 7
  1016 ;; This function calls:
  1017 ;;		_vfpfcnvrt
  1018 ;; This function is called by:
  1019 ;;		_sprintf
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text3
  1024   001C9A                     __ptext3:
  1025                           	callstack 0
  1026   001C9A                     _vfprintf:
  1027                           	callstack 21
  1028   001C9A                     
  1029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1030   001C9A  C030  F032         	movff	vfprintf@fmt,vfprintf@cfmt
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1033   001C9E  EF59  F00E         	goto	l2182
  1034   001CA2                     l2180:
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1037   001CA2  C02F  F024         	movff	vfprintf@fp,vfpfcnvrt@fp
  1038   001CA6  0E32               	movlw	low vfprintf@cfmt
  1039   001CA8  6E25               	movwf	vfpfcnvrt@fmt^0,c
  1040   001CAA  C031  F026         	movff	vfprintf@ap,vfpfcnvrt@ap
  1041   001CAE  EC22  F008         	call	_vfpfcnvrt	;wreg free
  1042   001CB2                     l2182:
  1043                           
  1044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1045   001CB2  C032  FFF6         	movff	vfprintf@cfmt,tblptrl
  1046   001CB6                     	if	1	;There is more than 1 active tblptr byte
  1047   001CB6  0E0E               	movlw	high __smallconst
  1048   001CB8  6EF7               	movwf	tblptrh,c
  1049   001CBA                     	endif
  1050   001CBA                     	if	0	;tblptru may be non-zero
  1051   001CBA                     	endif
  1052   001CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1053   001CBA  0E00               	movlw	low (__smallconst shr (0+16))
  1054   001CBC  6EF8               	movwf	tblptru,c
  1055   001CBE                     	endif
  1056   001CBE  0008               	tblrd		*
  1057   001CC0  50F5               	movf	tablat,w,c
  1058   001CC2  0900               	iorlw	0
  1059   001CC4  A4D8               	btfss	status,2,c
  1060   001CC6  EF67  F00E         	goto	u1491
  1061   001CCA  EF69  F00E         	goto	u1490
  1062   001CCE                     u1491:
  1063   001CCE  EF51  F00E         	goto	l2180
  1064   001CD2                     u1490:
  1065   001CD2                     
  1066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1067   001CD2  0E00               	movlw	0
  1068   001CD4  6E30               	movwf	(?_vfprintf+1)^0,c
  1069   001CD6  0E00               	movlw	0
  1070   001CD8  6E2F               	movwf	?_vfprintf^0,c
  1071   001CDA  0012               	return		;funcret
  1072   001CDC                     __end_of_vfprintf:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _vfpfcnvrt *****************
  1076 ;; Defined at:
  1077 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  fp              1   35[COMRAM] PTR struct _IO_FILE
  1080 ;;		 -> sprintf@f(12), 
  1081 ;;  fmt             1   36[COMRAM] PTR PTR unsigned char 
  1082 ;;		 -> vfprintf@cfmt(1), 
  1083 ;;  ap              1   37[COMRAM] PTR PTR void 
  1084 ;;		 -> sprintf@ap(1), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  convarg         4   40[COMRAM] struct .
  1087 ;;  cp              1   45[COMRAM] PTR unsigned char 
  1088 ;;		 -> STR_3(11), STR_2(12), STR_1(18), 
  1089 ;;  done            1   44[COMRAM] _Bool 
  1090 ;;  c               1    0        unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1100 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;Total ram usage:       11 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; Hardware stack levels required when called: 6
  1107 ;; This function calls:
  1108 ;;		_dtoa
  1109 ;;		_fputc
  1110 ;;		_read_prec_or_width
  1111 ;; This function is called by:
  1112 ;;		_vfprintf
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text4
  1117   001044                     __ptext4:
  1118                           	callstack 0
  1119   001044                     _vfpfcnvrt:
  1120                           	callstack 21
  1121   001044                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1123   001044  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1124   001046  6ED9               	movwf	fsr2l,c
  1125   001048  6ADA               	clrf	fsr2h,c
  1126   00104A  CFDF FFF6          	movff	indf2,tblptrl
  1127   00104E                     	if	1	;There is more than 1 active tblptr byte
  1128   00104E  0E0E               	movlw	high __smallconst
  1129   001050  6EF7               	movwf	tblptrh,c
  1130   001052                     	endif
  1131   001052                     	if	0	;tblptru may be non-zero
  1132   001052                     	endif
  1133   001052                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1134   001052  0E00               	movlw	low (__smallconst shr (0+16))
  1135   001054  6EF8               	movwf	tblptru,c
  1136   001056                     	endif
  1137   001056  0008               	tblrd		*
  1138   001058  50F5               	movf	tablat,w,c
  1139   00105A  0A25               	xorlw	37
  1140   00105C  A4D8               	btfss	status,2,c
  1141   00105E  EF33  F008         	goto	u1371
  1142   001062  EF35  F008         	goto	u1370
  1143   001066                     u1371:
  1144   001066  EFCF  F008         	goto	l2114
  1145   00106A                     u1370:
  1146   00106A                     
  1147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1148   00106A  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1149   00106C  6ED9               	movwf	fsr2l,c
  1150   00106E  6ADA               	clrf	fsr2h,c
  1151   001070  2ADF               	incf	indf2,f,c
  1152   001072                     
  1153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1154   001072  0E00               	movlw	0
  1155   001074  6E56               	movwf	(_width+1)^0,c
  1156   001076  0E00               	movlw	0
  1157   001078  6E55               	movwf	_width^0,c
  1158   00107A  C055  F059         	movff	_width,_flags
  1159   00107E                     
  1160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1161   00107E  6857               	setf	_prec^0,c
  1162   001080  6858               	setf	(_prec+1)^0,c
  1163   001082                     
  1164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1165   001082  0E00               	movlw	0
  1166   001084  6E2D               	movwf	vfpfcnvrt@done^0,c
  1167                           
  1168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1169   001086  EF6B  F008         	goto	l2088
  1170   00108A                     l2078:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1173   00108A  8259               	bsf	_flags^0,1,c
  1174   00108C                     
  1175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1176   00108C  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1177   00108E  6ED9               	movwf	fsr2l,c
  1178   001090  6ADA               	clrf	fsr2h,c
  1179   001092  2ADF               	incf	indf2,f,c
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1182   001094  EF6B  F008         	goto	l2088
  1183   001098                     l2082:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1186   001098  0E01               	movlw	1
  1187   00109A  6E2D               	movwf	vfpfcnvrt@done^0,c
  1188                           
  1189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1190   00109C  EF6B  F008         	goto	l2088
  1191   0010A0                     l2086:
  1192   0010A0  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1193   0010A2  6ED9               	movwf	fsr2l,c
  1194   0010A4  6ADA               	clrf	fsr2h,c
  1195   0010A6  CFDF FFF6          	movff	indf2,tblptrl
  1196   0010AA                     	if	1	;There is more than 1 active tblptr byte
  1197   0010AA  0E0E               	movlw	high __smallconst
  1198   0010AC  6EF7               	movwf	tblptrh,c
  1199   0010AE                     	endif
  1200   0010AE                     	if	0	;tblptru may be non-zero
  1201   0010AE                     	endif
  1202   0010AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1203   0010AE  0E00               	movlw	low (__smallconst shr (0+16))
  1204   0010B0  6EF8               	movwf	tblptru,c
  1205   0010B2                     	endif
  1206   0010B2  0008               	tblrd		*
  1207   0010B4  50F5               	movf	tablat,w,c
  1208   0010B6  6E27               	movwf	??_vfpfcnvrt^0,c
  1209   0010B8  6A28               	clrf	(??_vfpfcnvrt+1)^0,c
  1210                           
  1211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1212                           ; Switch size 1, requested type "simple"
  1213                           ; Number of cases is 1, Range of values is 0 to 0
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte            4     3 (average)
  1217                           ;	Chosen strategy is simple_byte
  1218   0010BA  5028               	movf	(??_vfpfcnvrt+1)^0,w,c
  1219   0010BC  0A00               	xorlw	0	; case 0
  1220   0010BE  B4D8               	btfsc	status,2,c
  1221   0010C0  EF64  F008         	goto	l2528
  1222   0010C4  EF4C  F008         	goto	l2082
  1223   0010C8                     l2528:
  1224                           
  1225                           ; Switch size 1, requested type "simple"
  1226                           ; Number of cases is 1, Range of values is 48 to 48
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte            4     3 (average)
  1230                           ;	Chosen strategy is simple_byte
  1231   0010C8  5027               	movf	??_vfpfcnvrt^0,w,c
  1232   0010CA  0A30               	xorlw	48	; case 48
  1233   0010CC  B4D8               	btfsc	status,2,c
  1234   0010CE  EF45  F008         	goto	l2078
  1235   0010D2  EF4C  F008         	goto	l2082
  1236   0010D6                     l2088:
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1239   0010D6  502D               	movf	vfpfcnvrt@done^0,w,c
  1240   0010D8  B4D8               	btfsc	status,2,c
  1241   0010DA  EF71  F008         	goto	u1381
  1242   0010DE  EF73  F008         	goto	u1380
  1243   0010E2                     u1381:
  1244   0010E2  EF50  F008         	goto	l2086
  1245   0010E6                     u1380:
  1246   0010E6                     
  1247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1248   0010E6  C025  F00B         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1249   0010EA  C026  F00C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1250   0010EE  EC6E  F00B         	call	_read_prec_or_width	;wreg free
  1251   0010F2  C00B  F055         	movff	?_read_prec_or_width,_width
  1252   0010F6  C00C  F056         	movff	?_read_prec_or_width+1,_width+1
  1253   0010FA                     
  1254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1255   0010FA  BE56               	btfsc	(_width+1)^0,7,c
  1256   0010FC  EF84  F008         	goto	u1390
  1257   001100  EF82  F008         	goto	u1391
  1258   001104                     u1391:
  1259   001104  EF89  F008         	goto	l2096
  1260   001108                     u1390:
  1261   001108                     
  1262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1263   001108  8059               	bsf	_flags^0,0,c
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1266   00110A  6C55               	negf	_width^0,c
  1267   00110C  1E56               	comf	(_width+1)^0,f,c
  1268   00110E  B0D8               	btfsc	status,0,c
  1269   001110  2A56               	incf	(_width+1)^0,f,c
  1270   001112                     l2096:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1273   001112  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1274   001114  6ED9               	movwf	fsr2l,c
  1275   001116  6ADA               	clrf	fsr2h,c
  1276   001118  50DF               	movf	indf2,w,c
  1277   00111A  6E2E               	movwf	vfpfcnvrt@cp^0,c
  1278   00111C                     
  1279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1280   00111C  C02E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1281   001120                     	if	1	;There is more than 1 active tblptr byte
  1282   001120  0E0E               	movlw	high __smallconst
  1283   001122  6EF7               	movwf	tblptrh,c
  1284   001124                     	endif
  1285   001124                     	if	0	;tblptru may be non-zero
  1286   001124                     	endif
  1287   001124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1288   001124  0E00               	movlw	low (__smallconst shr (0+16))
  1289   001126  6EF8               	movwf	tblptru,c
  1290   001128                     	endif
  1291   001128  0008               	tblrd		*
  1292   00112A  50F5               	movf	tablat,w,c
  1293   00112C  0A64               	xorlw	100
  1294   00112E  B4D8               	btfsc	status,2,c
  1295   001130  EF9C  F008         	goto	u1401
  1296   001134  EF9E  F008         	goto	u1400
  1297   001138                     u1401:
  1298   001138  EFAE  F008         	goto	l2102
  1299   00113C                     u1400:
  1300   00113C  C02E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1301   001140                     	if	1	;There is more than 1 active tblptr byte
  1302   001140  0E0E               	movlw	high __smallconst
  1303   001142  6EF7               	movwf	tblptrh,c
  1304   001144                     	endif
  1305   001144                     	if	0	;tblptru may be non-zero
  1306   001144                     	endif
  1307   001144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1308   001144  0E00               	movlw	low (__smallconst shr (0+16))
  1309   001146  6EF8               	movwf	tblptru,c
  1310   001148                     	endif
  1311   001148  0008               	tblrd		*
  1312   00114A  50F5               	movf	tablat,w,c
  1313   00114C  0A69               	xorlw	105
  1314   00114E  A4D8               	btfss	status,2,c
  1315   001150  EFAC  F008         	goto	u1411
  1316   001154  EFAE  F008         	goto	u1410
  1317   001158                     u1411:
  1318   001158  EFC9  F008         	goto	l2110
  1319   00115C                     u1410:
  1320   00115C                     l2102:
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1323   00115C  5026               	movf	vfpfcnvrt@ap^0,w,c
  1324   00115E  6ED9               	movwf	fsr2l,c
  1325   001160  6ADA               	clrf	fsr2h,c
  1326   001162  0E02               	movlw	2
  1327   001164  26DF               	addwf	indf2,f,c
  1328   001166  5CDF               	subwf	indf2,w,c
  1329   001168  6ED9               	movwf	fsr2l,c
  1330   00116A  6ADA               	clrf	fsr2h,c
  1331   00116C  CFDE F029          	movff	postinc2,vfpfcnvrt@convarg
  1332   001170  CFDE F02A          	movff	postinc2,vfpfcnvrt@convarg+1
  1333   001174                     
  1334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1335   001174  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1336   001176  6ED9               	movwf	fsr2l,c
  1337   001178  6ADA               	clrf	fsr2h,c
  1338   00117A  282E               	incf	vfpfcnvrt@cp^0,w,c
  1339   00117C  6EDF               	movwf	indf2,c
  1340   00117E                     
  1341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1342   00117E  C024  F019         	movff	vfpfcnvrt@fp,dtoa@fp
  1343   001182  C029  F01A         	movff	vfpfcnvrt@convarg,dtoa@d
  1344   001186  C02A  F01B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1345   00118A  ECE3  F008         	call	_dtoa	;wreg free
  1346   00118E  EFE2  F008         	goto	l1042
  1347   001192                     l2110:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1350   001192  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1351   001194  6ED9               	movwf	fsr2l,c
  1352   001196  6ADA               	clrf	fsr2h,c
  1353   001198  2ADF               	incf	indf2,f,c
  1354   00119A  EFE2  F008         	goto	l1042
  1355   00119E                     l2114:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1358   00119E  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1359   0011A0  6ED9               	movwf	fsr2l,c
  1360   0011A2  6ADA               	clrf	fsr2h,c
  1361   0011A4  CFDF FFF6          	movff	indf2,tblptrl
  1362   0011A8                     	if	1	;There is more than 1 active tblptr byte
  1363   0011A8  0E0E               	movlw	high __smallconst
  1364   0011AA  6EF7               	movwf	tblptrh,c
  1365   0011AC                     	endif
  1366   0011AC                     	if	0	;tblptru may be non-zero
  1367   0011AC                     	endif
  1368   0011AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1369   0011AC  0E00               	movlw	low (__smallconst shr (0+16))
  1370   0011AE  6EF8               	movwf	tblptru,c
  1371   0011B0                     	endif
  1372   0011B0  0008               	tblrd		*
  1373   0011B2  50F5               	movf	tablat,w,c
  1374   0011B4  6E05               	movwf	fputc@c^0,c
  1375   0011B6  6A06               	clrf	(fputc@c+1)^0,c
  1376   0011B8  C024  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1377   0011BC  EC1C  F00C         	call	_fputc	;wreg free
  1378   0011C0  EFC9  F008         	goto	l2110
  1379   0011C4                     l1042:
  1380   0011C4  0012               	return		;funcret
  1381   0011C6                     __end_of_vfpfcnvrt:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _read_prec_or_width *****************
  1385 ;; Defined at:
  1386 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  fmt             1   10[COMRAM] PTR PTR const unsigned c
  1389 ;;		 -> vfprintf@cfmt(1), 
  1390 ;;  ap              1   11[COMRAM] PTR PTR void [1]
  1391 ;;		 -> sprintf@ap(1), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  c               1   12[COMRAM] unsigned char 
  1394 ;;  n               2   13[COMRAM] int 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2   10[COMRAM] int 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;Total ram usage:        5 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 2
  1411 ;; This function calls:
  1412 ;;		___wmul
  1413 ;; This function is called by:
  1414 ;;		_vfpfcnvrt
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text5
  1419   0016DC                     __ptext5:
  1420                           	callstack 0
  1421   0016DC                     _read_prec_or_width:
  1422                           	callstack 24
  1423   0016DC                     
  1424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1425   0016DC  0E00               	movlw	0
  1426   0016DE  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1427   0016E0  0E00               	movlw	0
  1428   0016E2  6E0E               	movwf	read_prec_or_width@n^0,c
  1429   0016E4                     
  1430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1431   0016E4  500B               	movf	read_prec_or_width@fmt^0,w,c
  1432   0016E6  6ED9               	movwf	fsr2l,c
  1433   0016E8  6ADA               	clrf	fsr2h,c
  1434   0016EA  CFDF FFF6          	movff	indf2,tblptrl
  1435   0016EE                     	if	1	;There is more than 1 active tblptr byte
  1436   0016EE  0E0E               	movlw	high __smallconst
  1437   0016F0  6EF7               	movwf	tblptrh,c
  1438   0016F2                     	endif
  1439   0016F2                     	if	0	;tblptru may be non-zero
  1440   0016F2                     	endif
  1441   0016F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1442   0016F2  0E00               	movlw	low (__smallconst shr (0+16))
  1443   0016F4  6EF8               	movwf	tblptru,c
  1444   0016F6                     	endif
  1445   0016F6  0008               	tblrd		*
  1446   0016F8  50F5               	movf	tablat,w,c
  1447   0016FA  0A2A               	xorlw	42
  1448   0016FC  A4D8               	btfss	status,2,c
  1449   0016FE  EF83  F00B         	goto	u1281
  1450   001702  EF85  F00B         	goto	u1280
  1451   001706                     u1281:
  1452   001706  EFAB  F00B         	goto	l2030
  1453   00170A                     u1280:
  1454   00170A                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1456   00170A  500B               	movf	read_prec_or_width@fmt^0,w,c
  1457   00170C  6ED9               	movwf	fsr2l,c
  1458   00170E  6ADA               	clrf	fsr2h,c
  1459   001710  2ADF               	incf	indf2,f,c
  1460   001712                     
  1461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1462   001712  500C               	movf	read_prec_or_width@ap^0,w,c
  1463   001714  6ED9               	movwf	fsr2l,c
  1464   001716  6ADA               	clrf	fsr2h,c
  1465   001718  0E02               	movlw	2
  1466   00171A  26DF               	addwf	indf2,f,c
  1467   00171C  5CDF               	subwf	indf2,w,c
  1468   00171E  6ED9               	movwf	fsr2l,c
  1469   001720  6ADA               	clrf	fsr2h,c
  1470   001722  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1471   001726  CFDE F00F          	movff	postinc2,read_prec_or_width@n+1
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1474   00172A  EFC0  F00B         	goto	l1023
  1475   00172E                     l2026:
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1478   00172E  C00E  F005         	movff	read_prec_or_width@n,___wmul@multiplier
  1479   001732  C00F  F006         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1480   001736  0E00               	movlw	0
  1481   001738  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  1482   00173A  0E0A               	movlw	10
  1483   00173C  6E07               	movwf	___wmul@multiplicand^0,c
  1484   00173E  EC3F  F00F         	call	___wmul	;wreg free
  1485   001742  500D               	movf	read_prec_or_width@c^0,w,c
  1486   001744  2405               	addwf	?___wmul^0,w,c
  1487   001746  6E0E               	movwf	read_prec_or_width@n^0,c
  1488   001748  0E00               	movlw	0
  1489   00174A  2006               	addwfc	(?___wmul+1)^0,w,c
  1490   00174C  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1491   00174E                     
  1492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1493   00174E  500B               	movf	read_prec_or_width@fmt^0,w,c
  1494   001750  6ED9               	movwf	fsr2l,c
  1495   001752  6ADA               	clrf	fsr2h,c
  1496   001754  2ADF               	incf	indf2,f,c
  1497   001756                     l2030:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1500   001756  500B               	movf	read_prec_or_width@fmt^0,w,c
  1501   001758  6ED9               	movwf	fsr2l,c
  1502   00175A  6ADA               	clrf	fsr2h,c
  1503   00175C  CFDF FFF6          	movff	indf2,tblptrl
  1504   001760                     	if	1	;There is more than 1 active tblptr byte
  1505   001760  0E0E               	movlw	high __smallconst
  1506   001762  6EF7               	movwf	tblptrh,c
  1507   001764                     	endif
  1508   001764                     	if	0	;tblptru may be non-zero
  1509   001764                     	endif
  1510   001764                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1511   001764  0E00               	movlw	low (__smallconst shr (0+16))
  1512   001766  6EF8               	movwf	tblptru,c
  1513   001768                     	endif
  1514   001768  0008               	tblrd		*
  1515   00176A  50F5               	movf	tablat,w,c
  1516   00176C  0FD0               	addlw	208
  1517   00176E  6E0D               	movwf	read_prec_or_width@c^0,c
  1518   001770  0E09               	movlw	9
  1519   001772  640D               	cpfsgt	read_prec_or_width@c^0,c
  1520   001774  EFBE  F00B         	goto	u1291
  1521   001778  EFC0  F00B         	goto	u1290
  1522   00177C                     u1291:
  1523   00177C  EF97  F00B         	goto	l2026
  1524   001780                     u1290:
  1525   001780                     l1023:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1528   001780  C00E  F00B         	movff	read_prec_or_width@n,?_read_prec_or_width
  1529   001784  C00F  F00C         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1530   001788  0012               	return		;funcret
  1531   00178A                     __end_of_read_prec_or_width:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _dtoa *****************
  1535 ;; Defined at:
  1536 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  1539 ;;		 -> sprintf@f(12), 
  1540 ;;  d               2   25[COMRAM] int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  i               2   33[COMRAM] int 
  1543 ;;  w               2   30[COMRAM] int 
  1544 ;;  s               1   32[COMRAM] unsigned char 
  1545 ;;  p               1   29[COMRAM] _Bool 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:       11 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 5
  1562 ;; This function calls:
  1563 ;;		___awdiv
  1564 ;;		___awmod
  1565 ;;		_abs
  1566 ;;		_pad
  1567 ;; This function is called by:
  1568 ;;		_vfpfcnvrt
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text6
  1573   0011C6                     __ptext6:
  1574                           	callstack 0
  1575   0011C6                     _dtoa:
  1576                           	callstack 21
  1577   0011C6                     
  1578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1579   0011C6  0E01               	movlw	1
  1580   0011C8  6E1E               	movwf	dtoa@p^0,c
  1581   0011CA                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1583   0011CA  BE1B               	btfsc	(dtoa@d+1)^0,7,c
  1584   0011CC  EFEA  F008         	goto	u1181
  1585   0011D0  EFED  F008         	goto	u1180
  1586   0011D4                     u1181:
  1587   0011D4  0E01               	movlw	1
  1588   0011D6  EFEE  F008         	goto	u1190
  1589   0011DA                     u1180:
  1590   0011DA  0E00               	movlw	0
  1591   0011DC                     u1190:
  1592   0011DC  6E21               	movwf	dtoa@s^0,c
  1593   0011DE                     
  1594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1595   0011DE  C055  F01F         	movff	_width,dtoa@w
  1596   0011E2  C056  F020         	movff	_width+1,dtoa@w+1
  1597   0011E6                     
  1598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  1599   0011E6  5021               	movf	dtoa@s^0,w,c
  1600   0011E8  B4D8               	btfsc	status,2,c
  1601   0011EA  EFF9  F008         	goto	u1201
  1602   0011EE  EFFB  F008         	goto	u1200
  1603   0011F2                     u1201:
  1604   0011F2  EF12  F009         	goto	l1006
  1605   0011F6                     u1200:
  1606   0011F6                     
  1607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  1608   0011F6  061F               	decf	dtoa@w^0,f,c
  1609   0011F8  A0D8               	btfss	status,0,c
  1610   0011FA  0620               	decf	(dtoa@w+1)^0,f,c
  1611   0011FC                     
  1612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1613   0011FC  5021               	movf	dtoa@s^0,w,c
  1614   0011FE  A4D8               	btfss	status,2,c
  1615   001200  EF04  F009         	goto	u1211
  1616   001204  EF06  F009         	goto	u1210
  1617   001208                     u1211:
  1618   001208  EF0C  F009         	goto	l1982
  1619   00120C                     u1210:
  1620   00120C  0E00               	movlw	0
  1621   00120E  6E1D               	movwf	(_dtoa$1849+1)^0,c
  1622   001210  0E2B               	movlw	43
  1623   001212  6E1C               	movwf	_dtoa$1849^0,c
  1624   001214  EF10  F009         	goto	l1984
  1625   001218                     l1982:
  1626   001218  0E00               	movlw	0
  1627   00121A  6E1D               	movwf	(_dtoa$1849+1)^0,c
  1628   00121C  0E2D               	movlw	45
  1629   00121E  6E1C               	movwf	_dtoa$1849^0,c
  1630   001220                     l1984:
  1631   001220  C01C  F021         	movff	_dtoa$1849,dtoa@s
  1632   001224                     l1006:
  1633                           
  1634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1635   001224  0E00               	movlw	0
  1636   001226  6E23               	movwf	(dtoa@i+1)^0,c
  1637   001228  0E1F               	movlw	31
  1638   00122A  6E22               	movwf	dtoa@i^0,c
  1639   00122C                     
  1640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1641   00122C  0E00               	movlw	0
  1642   00122E  0100               	movlb	0	; () banked
  1643   001230  6FA9               	movwf	(_dbuf+31)& (0+255),b
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1646   001232  EF48  F009         	goto	l1998
  1647   001236                     l1988:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  1650   001236  0622               	decf	dtoa@i^0,f,c
  1651   001238  A0D8               	btfss	status,0,c
  1652   00123A  0623               	decf	(dtoa@i+1)^0,f,c
  1653   00123C                     
  1654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1655   00123C  5022               	movf	dtoa@i^0,w,c
  1656   00123E  0F8A               	addlw	low _dbuf
  1657   001240  6ED9               	movwf	fsr2l,c
  1658   001242  6ADA               	clrf	fsr2h,c
  1659   001244  C01A  F005         	movff	dtoa@d,___awmod@dividend
  1660   001248  C01B  F006         	movff	dtoa@d+1,___awmod@dividend+1
  1661   00124C  0E00               	movlw	0
  1662   00124E  6E08               	movwf	(___awmod@divisor+1)^0,c
  1663   001250  0E0A               	movlw	10
  1664   001252  6E07               	movwf	___awmod@divisor^0,c
  1665   001254  EC16  F00B         	call	___awmod	;wreg free
  1666   001258  C005  F00B         	movff	?___awmod,abs@a
  1667   00125C  C006  F00C         	movff	?___awmod+1,abs@a+1
  1668   001260  ECE1  F00E         	call	_abs	;wreg free
  1669   001264  500B               	movf	?_abs^0,w,c
  1670   001266  0F30               	addlw	48
  1671   001268  6EDF               	movwf	indf2,c
  1672   00126A                     
  1673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1674   00126A  0E00               	movlw	0
  1675   00126C  6E1E               	movwf	dtoa@p^0,c
  1676   00126E                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  1678   00126E  061F               	decf	dtoa@w^0,f,c
  1679   001270  A0D8               	btfss	status,0,c
  1680   001272  0620               	decf	(dtoa@w+1)^0,f,c
  1681   001274                     
  1682                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1683   001274  C01A  F005         	movff	dtoa@d,___awdiv@dividend
  1684   001278  C01B  F006         	movff	dtoa@d+1,___awdiv@dividend+1
  1685   00127C  0E00               	movlw	0
  1686   00127E  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1687   001280  0E0A               	movlw	10
  1688   001282  6E07               	movwf	___awdiv@divisor^0,c
  1689   001284  ECFB  F009         	call	___awdiv	;wreg free
  1690   001288  C005  F01A         	movff	?___awdiv,dtoa@d
  1691   00128C  C006  F01B         	movff	?___awdiv+1,dtoa@d+1
  1692   001290                     l1998:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1695   001290  BE23               	btfsc	(dtoa@i+1)^0,7,c
  1696   001292  EF53  F009         	goto	u1221
  1697   001296  5023               	movf	(dtoa@i+1)^0,w,c
  1698   001298  E108               	bnz	u1220
  1699   00129A  0422               	decf	dtoa@i^0,w,c
  1700   00129C  A0D8               	btfss	status,0,c
  1701   00129E  EF53  F009         	goto	u1221
  1702   0012A2  EF55  F009         	goto	u1220
  1703   0012A6                     u1221:
  1704   0012A6  EF7A  F009         	goto	l2008
  1705   0012AA                     u1220:
  1706   0012AA  501A               	movf	dtoa@d^0,w,c
  1707   0012AC  101B               	iorwf	(dtoa@d+1)^0,w,c
  1708   0012AE  A4D8               	btfss	status,2,c
  1709   0012B0  EF5C  F009         	goto	u1231
  1710   0012B4  EF5E  F009         	goto	u1230
  1711   0012B8                     u1231:
  1712   0012B8  EF1B  F009         	goto	l1988
  1713   0012BC                     u1230:
  1714   0012BC  501E               	movf	dtoa@p^0,w,c
  1715   0012BE  A4D8               	btfss	status,2,c
  1716   0012C0  EF64  F009         	goto	u1241
  1717   0012C4  EF66  F009         	goto	u1240
  1718   0012C8                     u1241:
  1719   0012C8  EF1B  F009         	goto	l1988
  1720   0012CC                     u1240:
  1721   0012CC  BE20               	btfsc	(dtoa@w+1)^0,7,c
  1722   0012CE  EF71  F009         	goto	u1251
  1723   0012D2  5020               	movf	(dtoa@w+1)^0,w,c
  1724   0012D4  E108               	bnz	u1250
  1725   0012D6  041F               	decf	dtoa@w^0,w,c
  1726   0012D8  A0D8               	btfss	status,0,c
  1727   0012DA  EF71  F009         	goto	u1251
  1728   0012DE  EF73  F009         	goto	u1250
  1729   0012E2                     u1251:
  1730   0012E2  EF7A  F009         	goto	l2008
  1731   0012E6                     u1250:
  1732   0012E6  B259               	btfsc	_flags^0,1,c
  1733   0012E8  EF78  F009         	goto	u1261
  1734   0012EC  EF7A  F009         	goto	u1260
  1735   0012F0                     u1261:
  1736   0012F0  EF1B  F009         	goto	l1988
  1737   0012F4                     u1260:
  1738   0012F4                     l2008:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1741   0012F4  5021               	movf	dtoa@s^0,w,c
  1742   0012F6  B4D8               	btfsc	status,2,c
  1743   0012F8  EF80  F009         	goto	u1271
  1744   0012FC  EF82  F009         	goto	u1270
  1745   001300                     u1271:
  1746   001300  EF8B  F009         	goto	l2014
  1747   001304                     u1270:
  1748   001304                     
  1749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  1750   001304  0622               	decf	dtoa@i^0,f,c
  1751   001306  A0D8               	btfss	status,0,c
  1752   001308  0623               	decf	(dtoa@i+1)^0,f,c
  1753   00130A                     
  1754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1755   00130A  5022               	movf	dtoa@i^0,w,c
  1756   00130C  0F8A               	addlw	low _dbuf
  1757   00130E  6ED9               	movwf	fsr2l,c
  1758   001310  6ADA               	clrf	fsr2h,c
  1759   001312  C021  FFDF         	movff	dtoa@s,indf2
  1760   001316                     l2014:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1763   001316  C019  F012         	movff	dtoa@fp,pad@fp
  1764   00131A  5022               	movf	dtoa@i^0,w,c
  1765   00131C  0F8A               	addlw	low _dbuf
  1766   00131E  6E13               	movwf	pad@buf^0,c
  1767   001320  C01F  F014         	movff	dtoa@w,pad@p
  1768   001324  C020  F015         	movff	dtoa@w+1,pad@p+1
  1769   001328  EC71  F00C         	call	_pad	;wreg free
  1770   00132C  0012               	return		;funcret
  1771   00132E                     __end_of_dtoa:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _pad *****************
  1775 ;; Defined at:
  1776 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  fp              1   17[COMRAM] PTR struct _IO_FILE
  1779 ;;		 -> sprintf@f(12), 
  1780 ;;  buf             1   18[COMRAM] PTR unsigned char 
  1781 ;;		 -> dbuf(32), 
  1782 ;;  p               2   19[COMRAM] int 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  i               2   22[COMRAM] int 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;Total ram usage:        7 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 4
  1801 ;; This function calls:
  1802 ;;		_fputc
  1803 ;;		_fputs
  1804 ;; This function is called by:
  1805 ;;		_dtoa
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text7
  1810   0018E2                     __ptext7:
  1811                           	callstack 0
  1812   0018E2                     _pad:
  1813                           	callstack 21
  1814   0018E2                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1816   0018E2  A059               	btfss	_flags^0,0,c
  1817   0018E4  EF76  F00C         	goto	u1131
  1818   0018E8  EF78  F00C         	goto	u1130
  1819   0018EC                     u1131:
  1820   0018EC  EF7E  F00C         	goto	l1946
  1821   0018F0                     u1130:
  1822   0018F0                     
  1823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1824   0018F0  C013  F00D         	movff	pad@buf,fputs@s
  1825   0018F4  C012  F00E         	movff	pad@fp,fputs@fp
  1826   0018F8  EC6E  F00E         	call	_fputs	;wreg free
  1827   0018FC                     l1946:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1830   0018FC  BE15               	btfsc	(pad@p+1)^0,7,c
  1831   0018FE  EF85  F00C         	goto	u1140
  1832   001902  EF83  F00C         	goto	u1141
  1833   001906                     u1141:
  1834   001906  EF89  F00C         	goto	l998
  1835   00190A                     u1140:
  1836   00190A                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1838   00190A  0E00               	movlw	0
  1839   00190C  6E15               	movwf	(pad@p+1)^0,c
  1840   00190E  0E00               	movlw	0
  1841   001910  6E14               	movwf	pad@p^0,c
  1842   001912                     l998:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1845   001912  0E00               	movlw	0
  1846   001914  6E18               	movwf	(pad@i+1)^0,c
  1847   001916  0E00               	movlw	0
  1848   001918  6E17               	movwf	pad@i^0,c
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1851   00191A  EF99  F00C         	goto	l1954
  1852   00191E                     l1950:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1855   00191E  0E00               	movlw	0
  1856   001920  6E06               	movwf	(fputc@c+1)^0,c
  1857   001922  0E20               	movlw	32
  1858   001924  6E05               	movwf	fputc@c^0,c
  1859   001926  C012  F007         	movff	pad@fp,fputc@fp
  1860   00192A  EC1C  F00C         	call	_fputc	;wreg free
  1861   00192E                     
  1862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1863   00192E  4A17               	infsnz	pad@i^0,f,c
  1864   001930  2A18               	incf	(pad@i+1)^0,f,c
  1865   001932                     l1954:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1868   001932  5014               	movf	pad@p^0,w,c
  1869   001934  5C17               	subwf	pad@i^0,w,c
  1870   001936  5018               	movf	(pad@i+1)^0,w,c
  1871   001938  0A80               	xorlw	128
  1872   00193A  6E16               	movwf	??_pad^0,c
  1873   00193C  5015               	movf	(pad@p+1)^0,w,c
  1874   00193E  0A80               	xorlw	128
  1875   001940  5816               	subwfb	??_pad^0,w,c
  1876   001942  A0D8               	btfss	status,0,c
  1877   001944  EFA6  F00C         	goto	u1151
  1878   001948  EFA8  F00C         	goto	u1150
  1879   00194C                     u1151:
  1880   00194C  EF8F  F00C         	goto	l1950
  1881   001950                     u1150:
  1882   001950                     
  1883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1884   001950  B059               	btfsc	_flags^0,0,c
  1885   001952  EFAD  F00C         	goto	u1161
  1886   001956  EFAF  F00C         	goto	u1160
  1887   00195A                     u1161:
  1888   00195A  EFB5  F00C         	goto	l1003
  1889   00195E                     u1160:
  1890   00195E                     
  1891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1892   00195E  C013  F00D         	movff	pad@buf,fputs@s
  1893   001962  C012  F00E         	movff	pad@fp,fputs@fp
  1894   001966  EC6E  F00E         	call	_fputs	;wreg free
  1895   00196A                     l1003:
  1896   00196A  0012               	return		;funcret
  1897   00196C                     __end_of_pad:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _fputs *****************
  1901 ;; Defined at:
  1902 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  s               1   12[COMRAM] PTR const unsigned char 
  1905 ;;		 -> dbuf(32), 
  1906 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1907 ;;		 -> sprintf@f(12), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  i               2   15[COMRAM] int 
  1910 ;;  c               1   14[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   12[COMRAM] int 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;Total ram usage:        5 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 3
  1927 ;; This function calls:
  1928 ;;		_fputc
  1929 ;; This function is called by:
  1930 ;;		_pad
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text8
  1935   001CDC                     __ptext8:
  1936                           	callstack 0
  1937   001CDC                     _fputs:
  1938                           	callstack 21
  1939   001CDC  0E00               	movlw	0
  1940   001CDE  6E11               	movwf	(fputs@i+1)^0,c
  1941   001CE0  0E00               	movlw	0
  1942   001CE2  6E10               	movwf	fputs@i^0,c
  1943   001CE4  EF7D  F00E         	goto	l1854
  1944   001CE8                     l1850:
  1945   001CE8  C00F  F005         	movff	fputs@c,fputc@c
  1946   001CEC  6A06               	clrf	(fputc@c+1)^0,c
  1947   001CEE  C00E  F007         	movff	fputs@fp,fputc@fp
  1948   001CF2  EC1C  F00C         	call	_fputc	;wreg free
  1949   001CF6  4A10               	infsnz	fputs@i^0,f,c
  1950   001CF8  2A11               	incf	(fputs@i+1)^0,f,c
  1951   001CFA                     l1854:
  1952   001CFA  500D               	movf	fputs@s^0,w,c
  1953   001CFC  2410               	addwf	fputs@i^0,w,c
  1954   001CFE  6ED9               	movwf	fsr2l,c
  1955   001D00  6ADA               	clrf	fsr2h,c
  1956   001D02  50DF               	movf	indf2,w,c
  1957   001D04  6E0F               	movwf	fputs@c^0,c
  1958   001D06  500F               	movf	fputs@c^0,w,c
  1959   001D08  A4D8               	btfss	status,2,c
  1960   001D0A  EF89  F00E         	goto	u1001
  1961   001D0E  EF8B  F00E         	goto	u1000
  1962   001D12                     u1001:
  1963   001D12  EF74  F00E         	goto	l1850
  1964   001D16                     u1000:
  1965   001D16  0012               	return		;funcret
  1966   001D18                     __end_of_fputs:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _fputc *****************
  1970 ;; Defined at:
  1971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  c               2    4[COMRAM] int 
  1974 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1975 ;;		 -> sprintf@f(12), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2    4[COMRAM] int 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1987 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;Total ram usage:        8 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 2
  1994 ;; This function calls:
  1995 ;;		_putch
  1996 ;; This function is called by:
  1997 ;;		_pad
  1998 ;;		_vfpfcnvrt
  1999 ;;		_fputs
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004   001838                     __ptext9:
  2005                           	callstack 0
  2006   001838                     _fputc:
  2007                           	callstack 24
  2008   001838  5007               	movf	fputc@fp^0,w,c
  2009   00183A  B4D8               	btfsc	status,2,c
  2010   00183C  EF22  F00C         	goto	u961
  2011   001840  EF24  F00C         	goto	u960
  2012   001844                     u961:
  2013   001844  EF2C  F00C         	goto	l1838
  2014   001848                     u960:
  2015   001848  5007               	movf	fputc@fp^0,w,c
  2016   00184A  A4D8               	btfss	status,2,c
  2017   00184C  EF2A  F00C         	goto	u971
  2018   001850  EF2C  F00C         	goto	u970
  2019   001854                     u971:
  2020   001854  EF31  F00C         	goto	l1840
  2021   001858                     u970:
  2022   001858                     l1838:
  2023   001858  5005               	movf	fputc@c^0,w,c
  2024   00185A  ECAE  F00F         	call	_putch
  2025   00185E  EF70  F00C         	goto	l1067
  2026   001862                     l1840:
  2027   001862  5007               	movf	fputc@fp^0,w,c
  2028   001864  6ED9               	movwf	fsr2l,c
  2029   001866  6ADA               	clrf	fsr2h,c
  2030   001868  0E0A               	movlw	10
  2031   00186A  26D9               	addwf	fsr2l,f,c
  2032   00186C  50DE               	movf	postinc2,w,c
  2033   00186E  10DE               	iorwf	postinc2,w,c
  2034   001870  B4D8               	btfsc	status,2,c
  2035   001872  EF3D  F00C         	goto	u981
  2036   001876  EF3F  F00C         	goto	u980
  2037   00187A                     u981:
  2038   00187A  EF58  F00C         	goto	l1844
  2039   00187E                     u980:
  2040   00187E  5007               	movf	fputc@fp^0,w,c
  2041   001880  6ED9               	movwf	fsr2l,c
  2042   001882  6ADA               	clrf	fsr2h,c
  2043   001884  0E0A               	movlw	10
  2044   001886  26D9               	addwf	fsr2l,f,c
  2045   001888  5007               	movf	fputc@fp^0,w,c
  2046   00188A  6EE1               	movwf	fsr1l,c
  2047   00188C  6AE2               	clrf	fsr1h,c
  2048   00188E  0E03               	movlw	3
  2049   001890  26E1               	addwf	fsr1l,f,c
  2050   001892  50DE               	movf	postinc2,w,c
  2051   001894  5CE6               	subwf	postinc1,w,c
  2052   001896  50E6               	movf	postinc1,w,c
  2053   001898  0A80               	xorlw	128
  2054   00189A  6E0C               	movwf	(??_fputc+4)^0,c
  2055   00189C  50DE               	movf	postinc2,w,c
  2056   00189E  0A80               	xorlw	128
  2057   0018A0  580C               	subwfb	(??_fputc+4)^0,w,c
  2058   0018A2  B0D8               	btfsc	status,0,c
  2059   0018A4  EF56  F00C         	goto	u991
  2060   0018A8  EF58  F00C         	goto	u990
  2061   0018AC                     u991:
  2062   0018AC  EF70  F00C         	goto	l1067
  2063   0018B0                     u990:
  2064   0018B0                     l1844:
  2065   0018B0  5007               	movf	fputc@fp^0,w,c
  2066   0018B2  6ED9               	movwf	fsr2l,c
  2067   0018B4  6ADA               	clrf	fsr2h,c
  2068   0018B6  0E03               	movlw	3
  2069   0018B8  26D9               	addwf	fsr2l,f,c
  2070   0018BA  50DF               	movf	indf2,w,c
  2071   0018BC  6E08               	movwf	??_fputc^0,c
  2072   0018BE  5007               	movf	fputc@fp^0,w,c
  2073   0018C0  6ED9               	movwf	fsr2l,c
  2074   0018C2  6ADA               	clrf	fsr2h,c
  2075   0018C4  50DF               	movf	indf2,w,c
  2076   0018C6  2408               	addwf	??_fputc^0,w,c
  2077   0018C8  6ED9               	movwf	fsr2l,c
  2078   0018CA  6ADA               	clrf	fsr2h,c
  2079   0018CC  C005  FFDF         	movff	fputc@c,indf2
  2080   0018D0  5007               	movf	fputc@fp^0,w,c
  2081   0018D2  6ED9               	movwf	fsr2l,c
  2082   0018D4  6ADA               	clrf	fsr2h,c
  2083   0018D6  0E03               	movlw	3
  2084   0018D8  26D9               	addwf	fsr2l,f,c
  2085   0018DA  2ADE               	incf	postinc2,f,c
  2086   0018DC  0E00               	movlw	0
  2087   0018DE  22DD               	addwfc	postdec2,f,c
  2088   0018E0                     l1067:
  2089   0018E0  0012               	return		;funcret
  2090   0018E2                     __end_of_fputc:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function _putch *****************
  2094 ;; Defined at:
  2095 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  c               1    wreg     unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  c               1    0[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_fputc
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text10
  2124   001F5C                     __ptext10:
  2125                           	callstack 0
  2126   001F5C                     _putch:
  2127                           	callstack 24
  2128   001F5C  0012               	return		;funcret
  2129   001F5E                     __end_of_putch:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _abs *****************
  2133 ;; Defined at:
  2134 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  a               2   10[COMRAM] int 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2   10[COMRAM] int 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:        4 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_dtoa
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text11
  2163   001DC2                     __ptext11:
  2164                           	callstack 0
  2165   001DC2                     _abs:
  2166                           	callstack 24
  2167   001DC2  BE0C               	btfsc	(abs@a+1)^0,7,c
  2168   001DC4  EFE6  F00E         	goto	u1171
  2169   001DC8  EFE8  F00E         	goto	u1170
  2170   001DCC                     u1171:
  2171   001DCC  EFEE  F00E         	goto	l1052
  2172   001DD0                     u1170:
  2173   001DD0  C00B  F00B         	movff	abs@a,?_abs
  2174   001DD4  C00C  F00C         	movff	abs@a+1,?_abs+1
  2175   001DD8  EFFA  F00E         	goto	l1055
  2176   001DDC                     l1052:
  2177   001DDC  C00B  F00D         	movff	abs@a,??_abs
  2178   001DE0  C00C  F00E         	movff	abs@a+1,??_abs+1
  2179   001DE4  1E0D               	comf	??_abs^0,f,c
  2180   001DE6  1E0E               	comf	(??_abs+1)^0,f,c
  2181   001DE8  4A0D               	infsnz	??_abs^0,f,c
  2182   001DEA  2A0E               	incf	(??_abs+1)^0,f,c
  2183   001DEC  C00D  F00B         	movff	??_abs,?_abs
  2184   001DF0  C00E  F00C         	movff	??_abs+1,?_abs+1
  2185   001DF4                     l1055:
  2186   001DF4  0012               	return		;funcret
  2187   001DF6                     __end_of_abs:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function ___awmod *****************
  2191 ;; Defined at:
  2192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  dividend        2    4[COMRAM] int 
  2195 ;;  divisor         2    6[COMRAM] int 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  sign            1    9[COMRAM] unsigned char 
  2198 ;;  counter         1    8[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  2    4[COMRAM] int 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;Total ram usage:        6 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 1
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_dtoa
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text12
  2223   00162C                     __ptext12:
  2224                           	callstack 0
  2225   00162C                     ___awmod:
  2226                           	callstack 24
  2227   00162C  0E00               	movlw	0
  2228   00162E  6E0A               	movwf	___awmod@sign^0,c
  2229   001630  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  2230   001632  EF1F  F00B         	goto	u1070
  2231   001636  EF1D  F00B         	goto	u1071
  2232   00163A                     u1071:
  2233   00163A  EF25  F00B         	goto	l1914
  2234   00163E                     u1070:
  2235   00163E  6C05               	negf	___awmod@dividend^0,c
  2236   001640  1E06               	comf	(___awmod@dividend+1)^0,f,c
  2237   001642  B0D8               	btfsc	status,0,c
  2238   001644  2A06               	incf	(___awmod@dividend+1)^0,f,c
  2239   001646  0E01               	movlw	1
  2240   001648  6E0A               	movwf	___awmod@sign^0,c
  2241   00164A                     l1914:
  2242   00164A  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  2243   00164C  EF2C  F00B         	goto	u1080
  2244   001650  EF2A  F00B         	goto	u1081
  2245   001654                     u1081:
  2246   001654  EF30  F00B         	goto	l1918
  2247   001658                     u1080:
  2248   001658  6C07               	negf	___awmod@divisor^0,c
  2249   00165A  1E08               	comf	(___awmod@divisor+1)^0,f,c
  2250   00165C  B0D8               	btfsc	status,0,c
  2251   00165E  2A08               	incf	(___awmod@divisor+1)^0,f,c
  2252   001660                     l1918:
  2253   001660  5007               	movf	___awmod@divisor^0,w,c
  2254   001662  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  2255   001664  B4D8               	btfsc	status,2,c
  2256   001666  EF37  F00B         	goto	u1091
  2257   00166A  EF39  F00B         	goto	u1090
  2258   00166E                     u1091:
  2259   00166E  EF5D  F00B         	goto	l1934
  2260   001672                     u1090:
  2261   001672  0E01               	movlw	1
  2262   001674  6E09               	movwf	___awmod@counter^0,c
  2263   001676  EF41  F00B         	goto	l1924
  2264   00167A                     l1922:
  2265   00167A  90D8               	bcf	status,0,c
  2266   00167C  3607               	rlcf	___awmod@divisor^0,f,c
  2267   00167E  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  2268   001680  2A09               	incf	___awmod@counter^0,f,c
  2269   001682                     l1924:
  2270   001682  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  2271   001684  EF46  F00B         	goto	u1101
  2272   001688  EF48  F00B         	goto	u1100
  2273   00168C                     u1101:
  2274   00168C  EF3D  F00B         	goto	l1922
  2275   001690                     u1100:
  2276   001690                     l1926:
  2277   001690  5007               	movf	___awmod@divisor^0,w,c
  2278   001692  5C05               	subwf	___awmod@dividend^0,w,c
  2279   001694  5008               	movf	(___awmod@divisor+1)^0,w,c
  2280   001696  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  2281   001698  A0D8               	btfss	status,0,c
  2282   00169A  EF51  F00B         	goto	u1111
  2283   00169E  EF53  F00B         	goto	u1110
  2284   0016A2                     u1111:
  2285   0016A2  EF57  F00B         	goto	l1930
  2286   0016A6                     u1110:
  2287   0016A6  5007               	movf	___awmod@divisor^0,w,c
  2288   0016A8  5E05               	subwf	___awmod@dividend^0,f,c
  2289   0016AA  5008               	movf	(___awmod@divisor+1)^0,w,c
  2290   0016AC  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  2291   0016AE                     l1930:
  2292   0016AE  90D8               	bcf	status,0,c
  2293   0016B0  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  2294   0016B2  3207               	rrcf	___awmod@divisor^0,f,c
  2295   0016B4  2E09               	decfsz	___awmod@counter^0,f,c
  2296   0016B6  EF48  F00B         	goto	l1926
  2297   0016BA                     l1934:
  2298   0016BA  500A               	movf	___awmod@sign^0,w,c
  2299   0016BC  B4D8               	btfsc	status,2,c
  2300   0016BE  EF63  F00B         	goto	u1121
  2301   0016C2  EF65  F00B         	goto	u1120
  2302   0016C6                     u1121:
  2303   0016C6  EF69  F00B         	goto	l1938
  2304   0016CA                     u1120:
  2305   0016CA  6C05               	negf	___awmod@dividend^0,c
  2306   0016CC  1E06               	comf	(___awmod@dividend+1)^0,f,c
  2307   0016CE  B0D8               	btfsc	status,0,c
  2308   0016D0  2A06               	incf	(___awmod@dividend+1)^0,f,c
  2309   0016D2                     l1938:
  2310   0016D2  C005  F005         	movff	___awmod@dividend,?___awmod
  2311   0016D6  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  2312   0016DA  0012               	return		;funcret
  2313   0016DC                     __end_of___awmod:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function ___awdiv *****************
  2317 ;; Defined at:
  2318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  dividend        2    4[COMRAM] int 
  2321 ;;  divisor         2    6[COMRAM] int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  quotient        2   10[COMRAM] int 
  2324 ;;  sign            1    9[COMRAM] unsigned char 
  2325 ;;  counter         1    8[COMRAM] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2    4[COMRAM] int 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;Total ram usage:        8 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_dtoa
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text13
  2350   0013F6                     __ptext13:
  2351                           	callstack 0
  2352   0013F6                     ___awdiv:
  2353                           	callstack 24
  2354   0013F6  0E00               	movlw	0
  2355   0013F8  6E0A               	movwf	___awdiv@sign^0,c
  2356   0013FA  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  2357   0013FC  EF04  F00A         	goto	u1010
  2358   001400  EF02  F00A         	goto	u1011
  2359   001404                     u1011:
  2360   001404  EF0A  F00A         	goto	l1870
  2361   001408                     u1010:
  2362   001408  6C07               	negf	___awdiv@divisor^0,c
  2363   00140A  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  2364   00140C  B0D8               	btfsc	status,0,c
  2365   00140E  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  2366   001410  0E01               	movlw	1
  2367   001412  6E0A               	movwf	___awdiv@sign^0,c
  2368   001414                     l1870:
  2369   001414  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  2370   001416  EF11  F00A         	goto	u1020
  2371   00141A  EF0F  F00A         	goto	u1021
  2372   00141E                     u1021:
  2373   00141E  EF17  F00A         	goto	l1876
  2374   001422                     u1020:
  2375   001422  6C05               	negf	___awdiv@dividend^0,c
  2376   001424  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  2377   001426  B0D8               	btfsc	status,0,c
  2378   001428  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  2379   00142A  0E01               	movlw	1
  2380   00142C  1A0A               	xorwf	___awdiv@sign^0,f,c
  2381   00142E                     l1876:
  2382   00142E  0E00               	movlw	0
  2383   001430  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  2384   001432  0E00               	movlw	0
  2385   001434  6E0B               	movwf	___awdiv@quotient^0,c
  2386   001436  5007               	movf	___awdiv@divisor^0,w,c
  2387   001438  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  2388   00143A  B4D8               	btfsc	status,2,c
  2389   00143C  EF22  F00A         	goto	u1031
  2390   001440  EF24  F00A         	goto	u1030
  2391   001444                     u1031:
  2392   001444  EF4C  F00A         	goto	l1898
  2393   001448                     u1030:
  2394   001448  0E01               	movlw	1
  2395   00144A  6E09               	movwf	___awdiv@counter^0,c
  2396   00144C  EF2C  F00A         	goto	l1884
  2397   001450                     l1882:
  2398   001450  90D8               	bcf	status,0,c
  2399   001452  3607               	rlcf	___awdiv@divisor^0,f,c
  2400   001454  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  2401   001456  2A09               	incf	___awdiv@counter^0,f,c
  2402   001458                     l1884:
  2403   001458  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  2404   00145A  EF31  F00A         	goto	u1041
  2405   00145E  EF33  F00A         	goto	u1040
  2406   001462                     u1041:
  2407   001462  EF28  F00A         	goto	l1882
  2408   001466                     u1040:
  2409   001466                     l1886:
  2410   001466  90D8               	bcf	status,0,c
  2411   001468  360B               	rlcf	___awdiv@quotient^0,f,c
  2412   00146A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  2413   00146C  5007               	movf	___awdiv@divisor^0,w,c
  2414   00146E  5C05               	subwf	___awdiv@dividend^0,w,c
  2415   001470  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2416   001472  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  2417   001474  A0D8               	btfss	status,0,c
  2418   001476  EF3F  F00A         	goto	u1051
  2419   00147A  EF41  F00A         	goto	u1050
  2420   00147E                     u1051:
  2421   00147E  EF46  F00A         	goto	l1894
  2422   001482                     u1050:
  2423   001482  5007               	movf	___awdiv@divisor^0,w,c
  2424   001484  5E05               	subwf	___awdiv@dividend^0,f,c
  2425   001486  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2426   001488  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  2427   00148A  800B               	bsf	___awdiv@quotient^0,0,c
  2428   00148C                     l1894:
  2429   00148C  90D8               	bcf	status,0,c
  2430   00148E  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  2431   001490  3207               	rrcf	___awdiv@divisor^0,f,c
  2432   001492  2E09               	decfsz	___awdiv@counter^0,f,c
  2433   001494  EF33  F00A         	goto	l1886
  2434   001498                     l1898:
  2435   001498  500A               	movf	___awdiv@sign^0,w,c
  2436   00149A  B4D8               	btfsc	status,2,c
  2437   00149C  EF52  F00A         	goto	u1061
  2438   0014A0  EF54  F00A         	goto	u1060
  2439   0014A4                     u1061:
  2440   0014A4  EF58  F00A         	goto	l1902
  2441   0014A8                     u1060:
  2442   0014A8  6C0B               	negf	___awdiv@quotient^0,c
  2443   0014AA  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2444   0014AC  B0D8               	btfsc	status,0,c
  2445   0014AE  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2446   0014B0                     l1902:
  2447   0014B0  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2448   0014B4  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2449   0014B8  0012               	return		;funcret
  2450   0014BA                     __end_of___awdiv:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _LCD_sendstring *****************
  2454 ;; Defined at:
  2455 ;;		line 117 in file "LCD.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  string          1    9[COMRAM] PTR unsigned char 
  2458 ;;		 -> main@buf(32), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2470 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 4
  2477 ;; This function calls:
  2478 ;;		_LCD_sendbyte
  2479 ;; This function is called by:
  2480 ;;		_time2String
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text14
  2485   001DF6                     __ptext14:
  2486                           	callstack 0
  2487   001DF6                     _LCD_sendstring:
  2488                           	callstack 25
  2489   001DF6                     
  2490                           ;LCD.c: 117: void LCD_sendstring(char *string);LCD.c: 118: {;LCD.c: 120:     while(*stri
      +                          ng != 0){
  2491   001DF6  EF06  F00F         	goto	l2332
  2492   001DFA                     l2328:
  2493                           
  2494                           ;LCD.c: 121:   LCD_sendbyte(*string++,1);
  2495   001DFA  0E01               	movlw	1
  2496   001DFC  6E06               	movwf	LCD_sendbyte@type^0,c
  2497   001DFE  500A               	movf	LCD_sendstring@string^0,w,c
  2498   001E00  6ED9               	movwf	fsr2l,c
  2499   001E02  6ADA               	clrf	fsr2h,c
  2500   001E04  50DF               	movf	indf2,w,c
  2501   001E06  EC8C  F00E         	call	_LCD_sendbyte
  2502   001E0A  2A0A               	incf	LCD_sendstring@string^0,f,c
  2503   001E0C                     l2332:
  2504                           
  2505                           ;LCD.c: 120:     while(*string != 0){
  2506   001E0C  500A               	movf	LCD_sendstring@string^0,w,c
  2507   001E0E  6ED9               	movwf	fsr2l,c
  2508   001E10  6ADA               	clrf	fsr2h,c
  2509   001E12  50DF               	movf	indf2,w,c
  2510   001E14  A4D8               	btfss	status,2,c
  2511   001E16  EF0F  F00F         	goto	u1541
  2512   001E1A  EF11  F00F         	goto	u1540
  2513   001E1E                     u1541:
  2514   001E1E  EFFD  F00E         	goto	l2328
  2515   001E22                     u1540:
  2516   001E22  0012               	return		;funcret
  2517   001E24                     __end_of_LCD_sendstring:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _initialise *****************
  2521 ;; Defined at:
  2522 ;;		line 92 in file "functions.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 5
  2543 ;; This function calls:
  2544 ;;		_Comp1_init_fe
  2545 ;;		_Comp1_init_re
  2546 ;;		_Interrupts_init
  2547 ;;		_LCD_init
  2548 ;;		_LEDarray_init
  2549 ;;		_Timer0_init
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text15
  2556   001F0E                     __ptext15:
  2557                           	callstack 0
  2558   001F0E                     _initialise:
  2559                           	callstack 25
  2560   001F0E                     
  2561                           ;functions.c: 94:     Interrupts_init();
  2562   001F0E  EC9E  F00F         	call	_Interrupts_init	;wreg free
  2563   001F12                     
  2564                           ;functions.c: 95:     Comp1_init_re();
  2565   001F12  EC52  F00F         	call	_Comp1_init_re	;wreg free
  2566   001F16                     
  2567                           ;functions.c: 96:     Comp1_init_fe();
  2568   001F16  EC64  F00F         	call	_Comp1_init_fe	;wreg free
  2569   001F1A                     
  2570                           ;functions.c: 97:     Timer0_init();
  2571   001F1A  EC12  F00F         	call	_Timer0_init	;wreg free
  2572   001F1E                     
  2573                           ;functions.c: 98:     LEDarray_init();
  2574   001F1E  EC29  F00F         	call	_LEDarray_init	;wreg free
  2575   001F22                     
  2576                           ;functions.c: 99:     LCD_init();
  2577   001F22  ECB6  F00C         	call	_LCD_init	;wreg free
  2578   001F26  0012               	return		;funcret
  2579   001F28                     __end_of_initialise:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _Timer0_init *****************
  2583 ;; Defined at:
  2584 ;;		line 9 in file "timers.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_initialise
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text16
  2613   001E24                     __ptext16:
  2614                           	callstack 0
  2615   001E24                     _Timer0_init:
  2616                           	callstack 28
  2617   001E24                     
  2618                           ;timers.c: 11:     T0CON1bits.T0CS=0b010;
  2619   001E24  50D6               	movf	214,w,c	;volatile
  2620   001E26  0B1F               	andlw	-225
  2621   001E28  0940               	iorlw	64
  2622   001E2A  6ED6               	movwf	214,c	;volatile
  2623   001E2C                     
  2624                           ;timers.c: 12:     T0CON1bits.T0ASYNC=1;
  2625   001E2C  88D6               	bsf	214,4,c	;volatile
  2626                           
  2627                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1000;
  2628   001E2E  50D6               	movf	214,w,c	;volatile
  2629   001E30  0BF0               	andlw	-16
  2630   001E32  0908               	iorlw	8
  2631   001E34  6ED6               	movwf	214,c	;volatile
  2632   001E36                     
  2633                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  2634   001E36  88D5               	bsf	213,4,c	;volatile
  2635   001E38                     
  2636                           ;timers.c: 16:     PIE0bits.TMR0IE = 1;
  2637   001E38  010E               	movlb	14	; () banked
  2638   001E3A  8B29               	bsf	41,5,b	;volatile
  2639   001E3C                     
  2640                           ; BSR set to: 14
  2641                           ;timers.c: 17:     PIR0bits.TMR0IF = 0;
  2642   001E3C  9B33               	bcf	51,5,b	;volatile
  2643   001E3E                     
  2644                           ; BSR set to: 14
  2645                           ;timers.c: 18:     IPR0bits.TMR0IP = 0;
  2646   001E3E  9B1F               	bcf	31,5,b	;volatile
  2647   001E40                     
  2648                           ; BSR set to: 14
  2649                           ;timers.c: 19:     INTCONbits.IPEN = 1;
  2650   001E40  8AF2               	bsf	242,5,c	;volatile
  2651   001E42                     
  2652                           ; BSR set to: 14
  2653                           ;timers.c: 20:     INTCONbits.PEIE = 1;
  2654   001E42  8CF2               	bsf	242,6,c	;volatile
  2655   001E44                     
  2656                           ; BSR set to: 14
  2657                           ;timers.c: 21:     INTCONbits.GIE = 1;
  2658   001E44  8EF2               	bsf	242,7,c	;volatile
  2659                           
  2660                           ;timers.c: 24:     TMR0H=00001011;
  2661   001E46  0E09               	movlw	9
  2662   001E48  6ED4               	movwf	212,c	;volatile
  2663                           
  2664                           ;timers.c: 25:     TMR0L=110011011;
  2665   001E4A  0E83               	movlw	131
  2666   001E4C  6ED3               	movwf	211,c	;volatile
  2667   001E4E                     
  2668                           ; BSR set to: 14
  2669                           ;timers.c: 26:     T0CON0bits.T0EN=1;
  2670   001E4E  8ED5               	bsf	213,7,c	;volatile
  2671   001E50                     
  2672                           ; BSR set to: 14
  2673   001E50  0012               	return		;funcret
  2674   001E52                     __end_of_Timer0_init:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _LEDarray_init *****************
  2678 ;; Defined at:
  2679 ;;		line 8 in file "LEDarray.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_initialise
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text17
  2708   001E52                     __ptext17:
  2709                           	callstack 0
  2710   001E52                     _LEDarray_init:
  2711                           	callstack 28
  2712   001E52                     
  2713                           ;LEDarray.c: 10:     LATA = 0;
  2714   001E52  0E00               	movlw	0
  2715   001E54  6E79               	movwf	121,c	;volatile
  2716                           
  2717                           ;LEDarray.c: 11:     LATB = 0;
  2718   001E56  0E00               	movlw	0
  2719   001E58  6E7A               	movwf	122,c	;volatile
  2720   001E5A                     
  2721                           ;LEDarray.c: 12:     LATFbits.LATF0 = 0;
  2722   001E5A  907E               	bcf	126,0,c	;volatile
  2723   001E5C                     
  2724                           ;LEDarray.c: 13:     LATFbits.LATF6 = 0;
  2725   001E5C  9C7E               	bcf	126,6,c	;volatile
  2726                           
  2727                           ;LEDarray.c: 14:     LATG = 0;
  2728   001E5E  0E00               	movlw	0
  2729   001E60  6E7F               	movwf	127,c	;volatile
  2730   001E62                     
  2731                           ;LEDarray.c: 15:  LATHbits.LATH3 = 1;
  2732   001E62  8680               	bsf	128,3,c	;volatile
  2733                           
  2734                           ;LEDarray.c: 18:     TRISA = 0;
  2735   001E64  0E00               	movlw	0
  2736   001E66  6E81               	movwf	129,c	;volatile
  2737                           
  2738                           ;LEDarray.c: 19:  TRISB = 0;
  2739   001E68  0E00               	movlw	0
  2740   001E6A  6E82               	movwf	130,c	;volatile
  2741   001E6C                     
  2742                           ;LEDarray.c: 20:     TRISFbits.TRISF0 = 0;
  2743   001E6C  9086               	bcf	134,0,c	;volatile
  2744   001E6E                     
  2745                           ;LEDarray.c: 21:     TRISFbits.TRISF6 = 0;
  2746   001E6E  9C86               	bcf	134,6,c	;volatile
  2747                           
  2748                           ;LEDarray.c: 22:     TRISG = 0;
  2749   001E70  0E00               	movlw	0
  2750   001E72  6E87               	movwf	135,c	;volatile
  2751   001E74                     
  2752                           ;LEDarray.c: 23:     TRISHbits.TRISH3 = 0;
  2753   001E74  9688               	bcf	136,3,c	;volatile
  2754   001E76                     
  2755                           ;LEDarray.c: 25:     TRISFbits.TRISF2=1;
  2756   001E76  8486               	bsf	134,2,c	;volatile
  2757   001E78                     
  2758                           ;LEDarray.c: 26:     ANSELFbits.ANSELF2=0;
  2759   001E78  010E               	movlb	14	; () banked
  2760   001E7A  95B4               	bcf	180,2,b	;volatile
  2761   001E7C                     
  2762                           ; BSR set to: 14
  2763   001E7C  0012               	return		;funcret
  2764   001E7E                     __end_of_LEDarray_init:
  2765                           	callstack 0
  2766                           
  2767 ;; *************** function _LCD_init *****************
  2768 ;; Defined at:
  2769 ;;		line 63 in file "LCD.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;Total ram usage:        1 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 4
  2790 ;; This function calls:
  2791 ;;		_LCD_sendbyte
  2792 ;;		_LCD_sendnibble
  2793 ;; This function is called by:
  2794 ;;		_initialise
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text18
  2799   00196C                     __ptext18:
  2800                           	callstack 0
  2801   00196C                     _LCD_init:
  2802                           	callstack 25
  2803   00196C                     
  2804                           ;LCD.c: 67:     TRISCbits.TRISC6=0;
  2805   00196C  9C83               	bcf	131,6,c	;volatile
  2806                           
  2807                           ;LCD.c: 68:     TRISCbits.TRISC2=0;
  2808   00196E  9483               	bcf	131,2,c	;volatile
  2809                           
  2810                           ;LCD.c: 69:     TRISBbits.TRISB3=0;
  2811   001970  9682               	bcf	130,3,c	;volatile
  2812                           
  2813                           ;LCD.c: 70:     TRISBbits.TRISB2=0;
  2814   001972  9482               	bcf	130,2,c	;volatile
  2815                           
  2816                           ;LCD.c: 71:     TRISEbits.TRISE3=0;
  2817   001974  9685               	bcf	133,3,c	;volatile
  2818                           
  2819                           ;LCD.c: 72:     TRISEbits.TRISE1=0;
  2820   001976  9285               	bcf	133,1,c	;volatile
  2821                           
  2822                           ;LCD.c: 75:     LATCbits.LATC6=0;
  2823   001978  9C7B               	bcf	123,6,c	;volatile
  2824                           
  2825                           ;LCD.c: 76:     LATCbits.LATC2=0;
  2826   00197A  947B               	bcf	123,2,c	;volatile
  2827                           
  2828                           ;LCD.c: 77:     LATBbits.LATB4 = 0;
  2829   00197C  987A               	bcf	122,4,c	;volatile
  2830                           
  2831                           ;LCD.c: 78:     LATBbits.LATB5 = 0;
  2832   00197E  9A7A               	bcf	122,5,c	;volatile
  2833                           
  2834                           ;LCD.c: 79:     LATBbits.LATB6 = 0;
  2835   001980  9C7A               	bcf	122,6,c	;volatile
  2836                           
  2837                           ;LCD.c: 80:     LATBbits.LATB7 = 0;
  2838   001982  9E7A               	bcf	122,7,c	;volatile
  2839   001984                     
  2840                           ;LCD.c: 85:     LCD_sendnibble(0b0011);
  2841   001984  0E03               	movlw	3
  2842   001986  ECE7  F00D         	call	_LCD_sendnibble
  2843   00198A                     
  2844                           ;LCD.c: 86:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  2845   00198A  0ED0               	movlw	208
  2846   00198C                     u1877:
  2847   00198C  2EE8               	decfsz	wreg,f,c
  2848   00198E  D7FE               	bra	u1877
  2849   001990                     
  2850                           ;LCD.c: 88:     LCD_sendbyte(0b00101000,0);
  2851   001990  0E00               	movlw	0
  2852   001992  6E06               	movwf	LCD_sendbyte@type^0,c
  2853   001994  0E28               	movlw	40
  2854   001996  EC8C  F00E         	call	_LCD_sendbyte
  2855   00199A                     
  2856                           ;LCD.c: 89:     _delay((unsigned long)((39)*(64000000/4000000.0)));
  2857   00199A  0ED0               	movlw	208
  2858   00199C                     u1887:
  2859   00199C  2EE8               	decfsz	wreg,f,c
  2860   00199E  D7FE               	bra	u1887
  2861   0019A0                     
  2862                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  2863   0019A0  0E00               	movlw	0
  2864   0019A2  6E06               	movwf	LCD_sendbyte@type^0,c
  2865   0019A4  0E28               	movlw	40
  2866   0019A6  EC8C  F00E         	call	_LCD_sendbyte
  2867   0019AA                     
  2868                           ;LCD.c: 91:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  2869   0019AA  0EC5               	movlw	197
  2870   0019AC                     u1897:
  2871   0019AC  2EE8               	decfsz	wreg,f,c
  2872   0019AE  D7FE               	bra	u1897
  2873   0019B0  0000               	nop	
  2874   0019B2                     
  2875                           ;LCD.c: 92:     LCD_sendbyte(0b00001100,0);
  2876   0019B2  0E00               	movlw	0
  2877   0019B4  6E06               	movwf	LCD_sendbyte@type^0,c
  2878   0019B6  0E0C               	movlw	12
  2879   0019B8  EC8C  F00E         	call	_LCD_sendbyte
  2880   0019BC                     
  2881                           ;LCD.c: 93:     _delay((unsigned long)((37)*(64000000/4000000.0)));
  2882   0019BC  0EC5               	movlw	197
  2883   0019BE                     u1907:
  2884   0019BE  2EE8               	decfsz	wreg,f,c
  2885   0019C0  D7FE               	bra	u1907
  2886   0019C2  0000               	nop	
  2887   0019C4                     
  2888                           ;LCD.c: 94:     LCD_sendbyte(0b00000001,0);
  2889   0019C4  0E00               	movlw	0
  2890   0019C6  6E06               	movwf	LCD_sendbyte@type^0,c
  2891   0019C8  0E01               	movlw	1
  2892   0019CA  EC8C  F00E         	call	_LCD_sendbyte
  2893   0019CE                     
  2894                           ;LCD.c: 95:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  2895   0019CE  0E20               	movlw	32
  2896   0019D0  6E0A               	movwf	??_LCD_init^0,c
  2897   0019D2  0ECA               	movlw	202
  2898   0019D4                     u1917:
  2899   0019D4  2EE8               	decfsz	wreg,f,c
  2900   0019D6  D7FE               	bra	u1917
  2901   0019D8  2E0A               	decfsz	??_LCD_init^0,f,c
  2902   0019DA  D7FC               	bra	u1917
  2903   0019DC                     
  2904                           ;LCD.c: 96:     LCD_sendbyte(0b00000110,0);
  2905   0019DC  0E00               	movlw	0
  2906   0019DE  6E06               	movwf	LCD_sendbyte@type^0,c
  2907   0019E0  0E06               	movlw	6
  2908   0019E2  EC8C  F00E         	call	_LCD_sendbyte
  2909   0019E6                     
  2910                           ;LCD.c: 100:     LCD_sendbyte(0b1111,0);
  2911   0019E6  0E00               	movlw	0
  2912   0019E8  6E06               	movwf	LCD_sendbyte@type^0,c
  2913   0019EA  0E0F               	movlw	15
  2914   0019EC  EC8C  F00E         	call	_LCD_sendbyte
  2915   0019F0  0012               	return		;funcret
  2916   0019F2                     __end_of_LCD_init:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _Interrupts_init *****************
  2920 ;; Defined at:
  2921 ;;		line 11 in file "interrupts.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		None
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_initialise
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text19
  2950   001F3C                     __ptext19:
  2951                           	callstack 0
  2952   001F3C                     _Interrupts_init:
  2953                           	callstack 28
  2954   001F3C                     
  2955                           ;interrupts.c: 15:     PIE2bits.C1IE=1;
  2956   001F3C  010E               	movlb	14	; () banked
  2957   001F3E  812B               	bsf	43,0,b	;volatile
  2958                           
  2959                           ;interrupts.c: 16:     PIE0bits.TMR0IE=1;
  2960   001F40  8B29               	bsf	41,5,b	;volatile
  2961                           
  2962                           ;interrupts.c: 17:     IPR2bits.C1IP = 1;
  2963   001F42  8121               	bsf	33,0,b	;volatile
  2964                           
  2965                           ;interrupts.c: 18:     IPR0bits.TMR0IP = 0;
  2966   001F44  9B1F               	bcf	31,5,b	;volatile
  2967                           
  2968                           ;interrupts.c: 19:     INTCONbits.IPEN=1;
  2969   001F46  8AF2               	bsf	242,5,c	;volatile
  2970                           
  2971                           ;interrupts.c: 20:     INTCONbits.PEIE=1;
  2972   001F48  8CF2               	bsf	242,6,c	;volatile
  2973                           
  2974                           ;interrupts.c: 21:     INTCONbits.GIE=1;
  2975   001F4A  8EF2               	bsf	242,7,c	;volatile
  2976   001F4C                     
  2977                           ; BSR set to: 14
  2978   001F4C  0012               	return		;funcret
  2979   001F4E                     __end_of_Interrupts_init:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _Comp1_init_re *****************
  2983 ;; Defined at:
  2984 ;;		line 23 in file "comparator.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 2
  3005 ;; This function calls:
  3006 ;;		_DAC_init
  3007 ;; This function is called by:
  3008 ;;		_initialise
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text20
  3013   001EA4                     __ptext20:
  3014                           	callstack 0
  3015   001EA4                     _Comp1_init_re:
  3016                           	callstack 27
  3017   001EA4                     
  3018                           ;comparator.c: 25:     TRISFbits.TRISF7=1;
  3019   001EA4  8E86               	bsf	134,7,c	;volatile
  3020   001EA6                     
  3021                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  3022   001EA6  010E               	movlb	14	; () banked
  3023   001EA8  51D2               	movf	210,w,b	;volatile
  3024   001EAA  0BF8               	andlw	-8
  3025   001EAC  0903               	iorlw	3
  3026   001EAE  6FD2               	movwf	210,b	;volatile
  3027                           
  3028                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  3029   001EB0  51D3               	movf	211,w,b	;volatile
  3030   001EB2  0BF8               	andlw	-8
  3031   001EB4  0905               	iorlw	5
  3032   001EB6  6FD3               	movwf	211,b	;volatile
  3033   001EB8                     
  3034                           ; BSR set to: 14
  3035                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  3036   001EB8  83D0               	bsf	208,1,b	;volatile
  3037   001EBA                     
  3038                           ; BSR set to: 14
  3039                           ;comparator.c: 29:     CM1CON0bits.POL=1;
  3040   001EBA  89D0               	bsf	208,4,b	;volatile
  3041   001EBC                     
  3042                           ; BSR set to: 14
  3043                           ;comparator.c: 30:     CM1CON1bits.INTP=1;
  3044   001EBC  83D1               	bsf	209,1,b	;volatile
  3045   001EBE                     
  3046                           ; BSR set to: 14
  3047                           ;comparator.c: 31:     DAC_init();
  3048   001EBE  EC94  F00F         	call	_DAC_init	;wreg free
  3049   001EC2                     
  3050                           ;comparator.c: 32:     CM1CON0bits.EN=1;
  3051   001EC2  010E               	movlb	14	; () banked
  3052   001EC4  8FD0               	bsf	208,7,b	;volatile
  3053   001EC6                     
  3054                           ; BSR set to: 14
  3055   001EC6  0012               	return		;funcret
  3056   001EC8                     __end_of_Comp1_init_re:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _Comp1_init_fe *****************
  3060 ;; Defined at:
  3061 ;;		line 36 in file "comparator.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 2
  3082 ;; This function calls:
  3083 ;;		_DAC_init
  3084 ;; This function is called by:
  3085 ;;		_initialise
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text21
  3090   001EC8                     __ptext21:
  3091                           	callstack 0
  3092   001EC8                     _Comp1_init_fe:
  3093                           	callstack 27
  3094   001EC8                     
  3095                           ;comparator.c: 38:     TRISFbits.TRISF7=1;
  3096   001EC8  8E86               	bsf	134,7,c	;volatile
  3097   001ECA                     
  3098                           ;comparator.c: 39:     CM1NCHbits.NCH=0b011;
  3099   001ECA  010E               	movlb	14	; () banked
  3100   001ECC  51D2               	movf	210,w,b	;volatile
  3101   001ECE  0BF8               	andlw	-8
  3102   001ED0  0903               	iorlw	3
  3103   001ED2  6FD2               	movwf	210,b	;volatile
  3104                           
  3105                           ;comparator.c: 40:     CM1PCHbits.PCH=0b101;
  3106   001ED4  51D3               	movf	211,w,b	;volatile
  3107   001ED6  0BF8               	andlw	-8
  3108   001ED8  0905               	iorlw	5
  3109   001EDA  6FD3               	movwf	211,b	;volatile
  3110   001EDC                     
  3111                           ; BSR set to: 14
  3112                           ;comparator.c: 41:     CM1CON0bits.HYS=1;
  3113   001EDC  83D0               	bsf	208,1,b	;volatile
  3114   001EDE                     
  3115                           ; BSR set to: 14
  3116                           ;comparator.c: 42:     CM1CON0bits.POL=1;
  3117   001EDE  89D0               	bsf	208,4,b	;volatile
  3118   001EE0                     
  3119                           ; BSR set to: 14
  3120                           ;comparator.c: 43:     CM1CON1bits.INTN=1;
  3121   001EE0  81D1               	bsf	209,0,b	;volatile
  3122   001EE2                     
  3123                           ; BSR set to: 14
  3124                           ;comparator.c: 44:     DAC_init();
  3125   001EE2  EC94  F00F         	call	_DAC_init	;wreg free
  3126   001EE6                     
  3127                           ;comparator.c: 45:     CM1CON0bits.EN=1;
  3128   001EE6  010E               	movlb	14	; () banked
  3129   001EE8  8FD0               	bsf	208,7,b	;volatile
  3130   001EEA                     
  3131                           ; BSR set to: 14
  3132   001EEA  0012               	return		;funcret
  3133   001EEC                     __end_of_Comp1_init_fe:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _DAC_init *****************
  3137 ;; Defined at:
  3138 ;;		line 6 in file "comparator.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_Comp1_init_re
  3163 ;;		_Comp1_init_fe
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text22
  3168   001F28                     __ptext22:
  3169                           	callstack 0
  3170   001F28                     _DAC_init:
  3171                           	callstack 27
  3172   001F28                     
  3173                           ;comparator.c: 8:     DAC1CON0bits.PSS=0b00;
  3174   001F28  0EF3               	movlw	-13
  3175   001F2A  010E               	movlb	14	; () banked
  3176   001F2C  17C6               	andwf	198,f,b	;volatile
  3177   001F2E                     
  3178                           ; BSR set to: 14
  3179                           ;comparator.c: 9:     DAC1CON0bits.NSS=0b0;
  3180   001F2E  91C6               	bcf	198,0,b	;volatile
  3181                           
  3182                           ;comparator.c: 13:     DAC1CON1bits.DAC1R=20;
  3183   001F30  51C7               	movf	199,w,b	;volatile
  3184   001F32  0BE0               	andlw	-32
  3185   001F34  0914               	iorlw	20
  3186   001F36  6FC7               	movwf	199,b	;volatile
  3187   001F38                     
  3188                           ; BSR set to: 14
  3189                           ;comparator.c: 14:     DAC1CON0bits.DAC1EN=1;
  3190   001F38  8FC6               	bsf	198,7,b	;volatile
  3191   001F3A                     
  3192                           ; BSR set to: 14
  3193   001F3A  0012               	return		;funcret
  3194   001F3C                     __end_of_DAC_init:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _increaseHour *****************
  3198 ;; Defined at:
  3199 ;;		line 51 in file "functions.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  day             2    4[COMRAM] unsigned int 
  3202 ;;  fwd_daylight    2    6[COMRAM] unsigned int 
  3203 ;;  bkwd_dayligh    2    8[COMRAM] unsigned int 
  3204 ;;  hour            1   10[COMRAM] PTR unsigned int 
  3205 ;;		 -> hour(2), 
  3206 ;;  backward_zon    1   11[COMRAM] PTR unsigned int 
  3207 ;;		 -> main@backward_zone(2), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;Total ram usage:       10 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text23
  3234   00178A                     __ptext23:
  3235                           	callstack 0
  3236   00178A                     _increaseHour:
  3237                           	callstack 29
  3238   00178A                     
  3239                           ;functions.c: 53:     if (day == fwd_daylight_savings_day && *hour == 2) {
  3240   00178A  5007               	movf	increaseHour@fwd_daylight_savings_day^0,w,c
  3241   00178C  1805               	xorwf	increaseHour@day^0,w,c
  3242   00178E  E107               	bnz	u1691
  3243   001790  5008               	movf	(increaseHour@fwd_daylight_savings_day+1)^0,w,c
  3244   001792  1806               	xorwf	(increaseHour@day+1)^0,w,c
  3245   001794  A4D8               	btfss	status,2,c
  3246   001796  EFCF  F00B         	goto	u1691
  3247   00179A  EFD1  F00B         	goto	u1690
  3248   00179E                     u1691:
  3249   00179E  EFE9  F00B         	goto	l2410
  3250   0017A2                     u1690:
  3251   0017A2  500B               	movf	increaseHour@hour^0,w,c
  3252   0017A4  6ED9               	movwf	fsr2l,c
  3253   0017A6  6ADA               	clrf	fsr2h,c
  3254   0017A8  0E02               	movlw	2
  3255   0017AA  18DE               	xorwf	postinc2,w,c
  3256   0017AC  10DE               	iorwf	postinc2,w,c
  3257   0017AE  A4D8               	btfss	status,2,c
  3258   0017B0  EFDC  F00B         	goto	u1701
  3259   0017B4  EFDE  F00B         	goto	u1700
  3260   0017B8                     u1701:
  3261   0017B8  EFE9  F00B         	goto	l2410
  3262   0017BC                     u1700:
  3263   0017BC                     
  3264                           ;functions.c: 54:         (*hour)++;
  3265   0017BC  500B               	movf	increaseHour@hour^0,w,c
  3266   0017BE  6ED9               	movwf	fsr2l,c
  3267   0017C0  6ADA               	clrf	fsr2h,c
  3268   0017C2  2ADE               	incf	postinc2,f,c
  3269   0017C4  0E00               	movlw	0
  3270   0017C6  22DD               	addwfc	postdec2,f,c
  3271   0017C8                     
  3272                           ;functions.c: 55:         *backward_zone = 0;
  3273   0017C8  500C               	movf	increaseHour@backward_zone^0,w,c
  3274   0017CA  6ED9               	movwf	fsr2l,c
  3275   0017CC  6ADA               	clrf	fsr2h,c
  3276   0017CE  6ADE               	clrf	postinc2,c
  3277   0017D0  6ADD               	clrf	postdec2,c
  3278   0017D2                     l2410:
  3279                           
  3280                           ;functions.c: 58:     if (day == bkwd_daylight_savings_day && *hour == 2 && *backward_zo
      +                          ne == 0) {
  3281   0017D2  5009               	movf	increaseHour@bkwd_daylight_savings_day^0,w,c
  3282   0017D4  1805               	xorwf	increaseHour@day^0,w,c
  3283   0017D6  E107               	bnz	u1711
  3284   0017D8  500A               	movf	(increaseHour@bkwd_daylight_savings_day+1)^0,w,c
  3285   0017DA  1806               	xorwf	(increaseHour@day+1)^0,w,c
  3286   0017DC  A4D8               	btfss	status,2,c
  3287   0017DE  EFF3  F00B         	goto	u1711
  3288   0017E2  EFF5  F00B         	goto	u1710
  3289   0017E6                     u1711:
  3290   0017E6  EF1B  F00C         	goto	l223
  3291   0017EA                     u1710:
  3292   0017EA  500B               	movf	increaseHour@hour^0,w,c
  3293   0017EC  6ED9               	movwf	fsr2l,c
  3294   0017EE  6ADA               	clrf	fsr2h,c
  3295   0017F0  0E02               	movlw	2
  3296   0017F2  18DE               	xorwf	postinc2,w,c
  3297   0017F4  10DE               	iorwf	postinc2,w,c
  3298   0017F6  A4D8               	btfss	status,2,c
  3299   0017F8  EF00  F00C         	goto	u1721
  3300   0017FC  EF02  F00C         	goto	u1720
  3301   001800                     u1721:
  3302   001800  EF1B  F00C         	goto	l223
  3303   001804                     u1720:
  3304   001804  500C               	movf	increaseHour@backward_zone^0,w,c
  3305   001806  6ED9               	movwf	fsr2l,c
  3306   001808  6ADA               	clrf	fsr2h,c
  3307   00180A  50DE               	movf	postinc2,w,c
  3308   00180C  10DE               	iorwf	postinc2,w,c
  3309   00180E  A4D8               	btfss	status,2,c
  3310   001810  EF0C  F00C         	goto	u1731
  3311   001814  EF0E  F00C         	goto	u1730
  3312   001818                     u1731:
  3313   001818  EF1B  F00C         	goto	l223
  3314   00181C                     u1730:
  3315   00181C                     
  3316                           ;functions.c: 59:         (*hour)--;
  3317   00181C  500B               	movf	increaseHour@hour^0,w,c
  3318   00181E  6ED9               	movwf	fsr2l,c
  3319   001820  6ADA               	clrf	fsr2h,c
  3320   001822  06DE               	decf	postinc2,f,c
  3321   001824  0E00               	movlw	0
  3322   001826  5ADD               	subwfb	postdec2,f,c
  3323   001828                     
  3324                           ;functions.c: 60:         *backward_zone = 1;
  3325   001828  500C               	movf	increaseHour@backward_zone^0,w,c
  3326   00182A  6ED9               	movwf	fsr2l,c
  3327   00182C  6ADA               	clrf	fsr2h,c
  3328   00182E  0E01               	movlw	1
  3329   001830  6EDE               	movwf	postinc2,c
  3330   001832  0E00               	movlw	0
  3331   001834  6EDD               	movwf	postdec2,c
  3332   001836                     l223:
  3333   001836  0012               	return		;funcret
  3334   001838                     __end_of_increaseHour:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function _findDSTdates *****************
  3338 ;; Defined at:
  3339 ;;		line 64 in file "functions.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  hour            2   65[COMRAM] unsigned int 
  3342 ;;  day             2   67[COMRAM] unsigned int 
  3343 ;;  year            2   69[COMRAM] unsigned int 
  3344 ;;  fwd_daylight    1   71[COMRAM] PTR unsigned int 
  3345 ;;		 -> main@fwd_daylight_savings_day(2), 
  3346 ;;  bkwd_dayligh    1   72[COMRAM] PTR unsigned int 
  3347 ;;		 -> main@bkwd_daylight_savings_day(2), 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:        8 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 4
  3366 ;; This function calls:
  3367 ;;		_lastSunday
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text24
  3374   001B64                     __ptext24:
  3375                           	callstack 0
  3376   001B64                     _findDSTdates:
  3377                           	callstack 26
  3378   001B64                     
  3379                           ;functions.c: 66:     if (day==1 && hour == 0){
  3380   001B64  0444               	decf	findDSTdates@day^0,w,c
  3381   001B66  1045               	iorwf	(findDSTdates@day+1)^0,w,c
  3382   001B68  A4D8               	btfss	status,2,c
  3383   001B6A  EFB9  F00D         	goto	u1671
  3384   001B6E  EFBB  F00D         	goto	u1670
  3385   001B72                     u1671:
  3386   001B72  EFE6  F00D         	goto	l227
  3387   001B76                     u1670:
  3388   001B76  5042               	movf	findDSTdates@hour^0,w,c
  3389   001B78  1043               	iorwf	(findDSTdates@hour+1)^0,w,c
  3390   001B7A  A4D8               	btfss	status,2,c
  3391   001B7C  EFC2  F00D         	goto	u1681
  3392   001B80  EFC4  F00D         	goto	u1680
  3393   001B84                     u1681:
  3394   001B84  EFE6  F00D         	goto	l227
  3395   001B88                     u1680:
  3396   001B88                     
  3397                           ;functions.c: 67:         *fwd_daylight_savings_day = lastSunday(year, 3);
  3398   001B88  C046  F01C         	movff	findDSTdates@year,lastSunday@year
  3399   001B8C  C047  F01D         	movff	findDSTdates@year+1,lastSunday@year+1
  3400   001B90  0E00               	movlw	0
  3401   001B92  6E1F               	movwf	(lastSunday@month+1)^0,c
  3402   001B94  0E03               	movlw	3
  3403   001B96  6E1E               	movwf	lastSunday@month^0,c
  3404   001B98  EC16  F007         	call	_lastSunday	;wreg free
  3405   001B9C  5048               	movf	findDSTdates@fwd_daylight_savings_day^0,w,c
  3406   001B9E  6ED9               	movwf	fsr2l,c
  3407   001BA0  6ADA               	clrf	fsr2h,c
  3408   001BA2  C01C  FFDE         	movff	?_lastSunday,postinc2
  3409   001BA6  C01D  FFDD         	movff	?_lastSunday+1,postdec2
  3410                           
  3411                           ;functions.c: 68:         *bkwd_daylight_savings_day = lastSunday(year, 10);
  3412   001BAA  C046  F01C         	movff	findDSTdates@year,lastSunday@year
  3413   001BAE  C047  F01D         	movff	findDSTdates@year+1,lastSunday@year+1
  3414   001BB2  0E00               	movlw	0
  3415   001BB4  6E1F               	movwf	(lastSunday@month+1)^0,c
  3416   001BB6  0E0A               	movlw	10
  3417   001BB8  6E1E               	movwf	lastSunday@month^0,c
  3418   001BBA  EC16  F007         	call	_lastSunday	;wreg free
  3419   001BBE  5049               	movf	findDSTdates@bkwd_daylight_savings_day^0,w,c
  3420   001BC0  6ED9               	movwf	fsr2l,c
  3421   001BC2  6ADA               	clrf	fsr2h,c
  3422   001BC4  C01C  FFDE         	movff	?_lastSunday,postinc2
  3423   001BC8  C01D  FFDD         	movff	?_lastSunday+1,postdec2
  3424   001BCC                     l227:
  3425   001BCC  0012               	return		;funcret
  3426   001BCE                     __end_of_findDSTdates:
  3427                           	callstack 0
  3428                           
  3429 ;; *************** function _lastSunday *****************
  3430 ;; Defined at:
  3431 ;;		line 18 in file "functions.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  year            2   27[COMRAM] unsigned int 
  3434 ;;  month           2   29[COMRAM] unsigned int 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  dayOfYearFor    2   53[COMRAM] unsigned int 
  3437 ;;  daysBeforeOc    2   51[COMRAM] unsigned int 
  3438 ;;  dayOfYearFor    2   49[COMRAM] unsigned int 
  3439 ;;  daysBeforeMa    2   47[COMRAM] unsigned int 
  3440 ;;  lastSundayDa    2   63[COMRAM] unsigned int 
  3441 ;;  leapYear        2   61[COMRAM] unsigned int 
  3442 ;;  dayOfWeekMon    2   45[COMRAM] unsigned int 
  3443 ;;  dayOfWeekMon    2   43[COMRAM] unsigned int 
  3444 ;;  h               2   41[COMRAM] unsigned int 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2   27[COMRAM] unsigned int 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;Total ram usage:       38 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 3
  3461 ;; This function calls:
  3462 ;;		___lwdiv
  3463 ;;		___lwmod
  3464 ;;		___wmul
  3465 ;;		_isLeapYear
  3466 ;; This function is called by:
  3467 ;;		_findDSTdates
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text25
  3472   000E2C                     __ptext25:
  3473                           	callstack 0
  3474   000E2C                     _lastSunday:
  3475                           	callstack 26
  3476   000E2C                     
  3477                           ;functions.c: 19:     unsigned int leapYear = isLeapYear(year);
  3478   000E2C  C01C  F017         	movff	lastSunday@year,isLeapYear@year
  3479   000E30  C01D  F018         	movff	lastSunday@year+1,isLeapYear@year+1
  3480   000E34  EC3B  F00D         	call	_isLeapYear	;wreg free
  3481   000E38  C017  F03E         	movff	?_isLeapYear,lastSunday@leapYear
  3482   000E3C  C018  F03F         	movff	?_isLeapYear+1,lastSunday@leapYear+1
  3483   000E40                     
  3484                           ;functions.c: 23:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3485   000E40  0E00               	movlw	0
  3486   000E42  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  3487   000E44  0E05               	movlw	5
  3488   000E46  6E0D               	movwf	___lwdiv@divisor^0,c
  3489   000E48  0E01               	movlw	1
  3490   000E4A  241E               	addwf	lastSunday@month^0,w,c
  3491   000E4C  6E05               	movwf	___wmul@multiplier^0,c
  3492   000E4E  0E00               	movlw	0
  3493   000E50  201F               	addwfc	(lastSunday@month+1)^0,w,c
  3494   000E52  6E06               	movwf	(___wmul@multiplier+1)^0,c
  3495   000E54  0E00               	movlw	0
  3496   000E56  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3497   000E58  0E0D               	movlw	13
  3498   000E5A  6E07               	movwf	___wmul@multiplicand^0,c
  3499   000E5C  EC3F  F00F         	call	___wmul	;wreg free
  3500   000E60  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  3501   000E64  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  3502   000E68  EC78  F00D         	call	___lwdiv	;wreg free
  3503   000E6C  C00B  F020         	movff	?___lwdiv,??_lastSunday
  3504   000E70  C00C  F021         	movff	?___lwdiv+1,??_lastSunday+1
  3505   000E74  0E00               	movlw	0
  3506   000E76  6E15               	movwf	(___lwmod@divisor+1)^0,c
  3507   000E78  0E64               	movlw	100
  3508   000E7A  6E14               	movwf	___lwmod@divisor^0,c
  3509   000E7C  C01C  F012         	movff	lastSunday@year,___lwmod@dividend
  3510   000E80  C01D  F013         	movff	lastSunday@year+1,___lwmod@dividend+1
  3511   000E84  EC1B  F00E         	call	___lwmod	;wreg free
  3512   000E88  5012               	movf	?___lwmod^0,w,c
  3513   000E8A  2420               	addwf	??_lastSunday^0,w,c
  3514   000E8C  6E22               	movwf	(??_lastSunday+2)^0,c
  3515   000E8E  5013               	movf	(?___lwmod+1)^0,w,c
  3516   000E90  2021               	addwfc	(??_lastSunday+1)^0,w,c
  3517   000E92  6E23               	movwf	(??_lastSunday+3)^0,c
  3518   000E94  0E00               	movlw	0
  3519   000E96  6E15               	movwf	(___lwmod@divisor+1)^0,c
  3520   000E98  0E64               	movlw	100
  3521   000E9A  6E14               	movwf	___lwmod@divisor^0,c
  3522   000E9C  C01C  F012         	movff	lastSunday@year,___lwmod@dividend
  3523   000EA0  C01D  F013         	movff	lastSunday@year+1,___lwmod@dividend+1
  3524   000EA4  EC1B  F00E         	call	___lwmod	;wreg free
  3525   000EA8  90D8               	bcf	status,0,c
  3526   000EAA  3213               	rrcf	(?___lwmod+1)^0,f,c
  3527   000EAC  3212               	rrcf	?___lwmod^0,f,c
  3528   000EAE  90D8               	bcf	status,0,c
  3529   000EB0  3213               	rrcf	(?___lwmod+1)^0,f,c
  3530   000EB2  3212               	rrcf	?___lwmod^0,f,c
  3531   000EB4  5012               	movf	?___lwmod^0,w,c
  3532   000EB6  2422               	addwf	(??_lastSunday+2)^0,w,c
  3533   000EB8  6E24               	movwf	(??_lastSunday+4)^0,c
  3534   000EBA  5013               	movf	(?___lwmod+1)^0,w,c
  3535   000EBC  2023               	addwfc	(??_lastSunday+3)^0,w,c
  3536   000EBE  6E25               	movwf	(??_lastSunday+5)^0,c
  3537   000EC0  0E00               	movlw	0
  3538   000EC2  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  3539   000EC4  0E64               	movlw	100
  3540   000EC6  6E0D               	movwf	___lwdiv@divisor^0,c
  3541   000EC8  C01C  F00B         	movff	lastSunday@year,___lwdiv@dividend
  3542   000ECC  C01D  F00C         	movff	lastSunday@year+1,___lwdiv@dividend+1
  3543   000ED0  EC78  F00D         	call	___lwdiv	;wreg free
  3544   000ED4  90D8               	bcf	status,0,c
  3545   000ED6  320C               	rrcf	(?___lwdiv+1)^0,f,c
  3546   000ED8  320B               	rrcf	?___lwdiv^0,f,c
  3547   000EDA  90D8               	bcf	status,0,c
  3548   000EDC  320C               	rrcf	(?___lwdiv+1)^0,f,c
  3549   000EDE  320B               	rrcf	?___lwdiv^0,f,c
  3550   000EE0  500B               	movf	?___lwdiv^0,w,c
  3551   000EE2  2424               	addwf	(??_lastSunday+4)^0,w,c
  3552   000EE4  6E26               	movwf	(??_lastSunday+6)^0,c
  3553   000EE6  500C               	movf	(?___lwdiv+1)^0,w,c
  3554   000EE8  2025               	addwfc	(??_lastSunday+5)^0,w,c
  3555   000EEA  6E27               	movwf	(??_lastSunday+7)^0,c
  3556   000EEC  0E00               	movlw	0
  3557   000EEE  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  3558   000EF0  0E64               	movlw	100
  3559   000EF2  6E0D               	movwf	___lwdiv@divisor^0,c
  3560   000EF4  C01C  F00B         	movff	lastSunday@year,___lwdiv@dividend
  3561   000EF8  C01D  F00C         	movff	lastSunday@year+1,___lwdiv@dividend+1
  3562   000EFC  EC78  F00D         	call	___lwdiv	;wreg free
  3563   000F00  90D8               	bcf	status,0,c
  3564   000F02  360B               	rlcf	?___lwdiv^0,f,c
  3565   000F04  360C               	rlcf	(?___lwdiv+1)^0,f,c
  3566   000F06  500B               	movf	?___lwdiv^0,w,c
  3567   000F08  5C26               	subwf	(??_lastSunday+6)^0,w,c
  3568   000F0A  6E28               	movwf	(??_lastSunday+8)^0,c
  3569   000F0C  500C               	movf	(?___lwdiv+1)^0,w,c
  3570   000F0E  5827               	subwfb	(??_lastSunday+7)^0,w,c
  3571   000F10  6E29               	movwf	(??_lastSunday+9)^0,c
  3572   000F12  0E01               	movlw	1
  3573   000F14  2428               	addwf	(??_lastSunday+8)^0,w,c
  3574   000F16  6E38               	movwf	_lastSunday$2143^0,c
  3575   000F18  0E00               	movlw	0
  3576   000F1A  2029               	addwfc	(??_lastSunday+9)^0,w,c
  3577   000F1C  6E39               	movwf	(_lastSunday$2143+1)^0,c
  3578   000F1E                     
  3579                           ;functions.c: 23:     unsigned int h = (1 + ((13 * (month + 1)) / 5) + (year % 100) + ((
      +                          year % 100) / 4) + ((year / 100) / 4) - 2 * (year / 100)) % 7;
  3580   000F1E  C038  F012         	movff	_lastSunday$2143,___lwmod@dividend
  3581   000F22  C039  F013         	movff	_lastSunday$2143+1,___lwmod@dividend+1
  3582   000F26  0E00               	movlw	0
  3583   000F28  6E15               	movwf	(___lwmod@divisor+1)^0,c
  3584   000F2A  0E07               	movlw	7
  3585   000F2C  6E14               	movwf	___lwmod@divisor^0,c
  3586   000F2E  EC1B  F00E         	call	___lwmod	;wreg free
  3587   000F32  C012  F02A         	movff	?___lwmod,lastSunday@h
  3588   000F36  C013  F02B         	movff	?___lwmod+1,lastSunday@h+1
  3589   000F3A                     
  3590                           ;functions.c: 24:     unsigned int dayOfWeekMonth1st = (h + 6) % 7;
  3591   000F3A  0E06               	movlw	6
  3592   000F3C  242A               	addwf	lastSunday@h^0,w,c
  3593   000F3E  6E12               	movwf	___lwmod@dividend^0,c
  3594   000F40  0E00               	movlw	0
  3595   000F42  202B               	addwfc	(lastSunday@h+1)^0,w,c
  3596   000F44  6E13               	movwf	(___lwmod@dividend+1)^0,c
  3597   000F46  0E00               	movlw	0
  3598   000F48  6E15               	movwf	(___lwmod@divisor+1)^0,c
  3599   000F4A  0E07               	movlw	7
  3600   000F4C  6E14               	movwf	___lwmod@divisor^0,c
  3601   000F4E  EC1B  F00E         	call	___lwmod	;wreg free
  3602   000F52  C012  F02C         	movff	?___lwmod,lastSunday@dayOfWeekMonth1st
  3603   000F56  C013  F02D         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth1st+1
  3604   000F5A                     
  3605                           ;functions.c: 27:     unsigned int dayOfWeekMonth31st = (dayOfWeekMonth1st + 30) % 7;
  3606   000F5A  0E1E               	movlw	30
  3607   000F5C  242C               	addwf	lastSunday@dayOfWeekMonth1st^0,w,c
  3608   000F5E  6E12               	movwf	___lwmod@dividend^0,c
  3609   000F60  0E00               	movlw	0
  3610   000F62  202D               	addwfc	(lastSunday@dayOfWeekMonth1st+1)^0,w,c
  3611   000F64  6E13               	movwf	(___lwmod@dividend+1)^0,c
  3612   000F66  0E00               	movlw	0
  3613   000F68  6E15               	movwf	(___lwmod@divisor+1)^0,c
  3614   000F6A  0E07               	movlw	7
  3615   000F6C  6E14               	movwf	___lwmod@divisor^0,c
  3616   000F6E  EC1B  F00E         	call	___lwmod	;wreg free
  3617   000F72  C012  F02E         	movff	?___lwmod,lastSunday@dayOfWeekMonth31st
  3618   000F76  C013  F02F         	movff	?___lwmod+1,lastSunday@dayOfWeekMonth31st+1
  3619   000F7A                     
  3620                           ;functions.c: 30:     unsigned int lastSundayDateMonth = 31 - dayOfWeekMonth31st;
  3621   000F7A  502E               	movf	lastSunday@dayOfWeekMonth31st^0,w,c
  3622   000F7C  081F               	sublw	31
  3623   000F7E  6E40               	movwf	lastSunday@lastSundayDateMonth^0,c
  3624   000F80  502F               	movf	(lastSunday@dayOfWeekMonth31st+1)^0,w,c
  3625   000F82  A0D8               	btfss	status,0,c
  3626   000F84  2AE8               	incf	wreg,f,c
  3627   000F86  0800               	sublw	0
  3628   000F88  6E41               	movwf	(lastSunday@lastSundayDateMonth+1)^0,c
  3629   000F8A                     
  3630                           ;functions.c: 33:     if (month == 3){
  3631   000F8A  0E03               	movlw	3
  3632   000F8C  181E               	xorwf	lastSunday@month^0,w,c
  3633   000F8E  101F               	iorwf	(lastSunday@month+1)^0,w,c
  3634   000F90  A4D8               	btfss	status,2,c
  3635   000F92  EFCD  F007         	goto	u1501
  3636   000F96  EFCF  F007         	goto	u1500
  3637   000F9A                     u1501:
  3638   000F9A  EFF4  F007         	goto	l2284
  3639   000F9E                     u1500:
  3640   000F9E                     
  3641                           ;functions.c: 34:     unsigned int daysBeforeMarch = 31 + (leapYear ? 29 : 28);
  3642   000F9E  503E               	movf	lastSunday@leapYear^0,w,c
  3643   000FA0  103F               	iorwf	(lastSunday@leapYear+1)^0,w,c
  3644   000FA2  A4D8               	btfss	status,2,c
  3645   000FA4  EFD6  F007         	goto	u1511
  3646   000FA8  EFD8  F007         	goto	u1510
  3647   000FAC                     u1511:
  3648   000FAC  EFDE  F007         	goto	l2274
  3649   000FB0                     u1510:
  3650   000FB0  0E00               	movlw	0
  3651   000FB2  6E3B               	movwf	(_lastSunday$1060+1)^0,c
  3652   000FB4  0E1C               	movlw	28
  3653   000FB6  6E3A               	movwf	_lastSunday$1060^0,c
  3654   000FB8  EFE2  F007         	goto	l2276
  3655   000FBC                     l2274:
  3656   000FBC  0E00               	movlw	0
  3657   000FBE  6E3B               	movwf	(_lastSunday$1060+1)^0,c
  3658   000FC0  0E1D               	movlw	29
  3659   000FC2  6E3A               	movwf	_lastSunday$1060^0,c
  3660   000FC4                     l2276:
  3661   000FC4  0E1F               	movlw	31
  3662   000FC6  243A               	addwf	_lastSunday$1060^0,w,c
  3663   000FC8  6E30               	movwf	lastSunday@daysBeforeMarch^0,c
  3664   000FCA  0E00               	movlw	0
  3665   000FCC  203B               	addwfc	(_lastSunday$1060+1)^0,w,c
  3666   000FCE  6E31               	movwf	(lastSunday@daysBeforeMarch+1)^0,c
  3667   000FD0                     
  3668                           ;functions.c: 35:     unsigned int dayOfYearForDSTStart = daysBeforeMarch + lastSundayDa
      +                          teMonth;
  3669   000FD0  5040               	movf	lastSunday@lastSundayDateMonth^0,w,c
  3670   000FD2  2430               	addwf	lastSunday@daysBeforeMarch^0,w,c
  3671   000FD4  6E32               	movwf	lastSunday@dayOfYearForDSTStart^0,c
  3672   000FD6  5041               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  3673   000FD8  2031               	addwfc	(lastSunday@daysBeforeMarch+1)^0,w,c
  3674   000FDA  6E33               	movwf	(lastSunday@dayOfYearForDSTStart+1)^0,c
  3675   000FDC                     
  3676                           ;functions.c: 36:     return dayOfYearForDSTStart;
  3677   000FDC  C032  F01C         	movff	lastSunday@dayOfYearForDSTStart,?_lastSunday
  3678   000FE0  C033  F01D         	movff	lastSunday@dayOfYearForDSTStart+1,?_lastSunday+1
  3679   000FE4  EF21  F008         	goto	l213
  3680   000FE8                     l2284:
  3681                           
  3682                           ;functions.c: 41:     if (month == 10){
  3683   000FE8  0E0A               	movlw	10
  3684   000FEA  181E               	xorwf	lastSunday@month^0,w,c
  3685   000FEC  101F               	iorwf	(lastSunday@month+1)^0,w,c
  3686   000FEE  A4D8               	btfss	status,2,c
  3687   000FF0  EFFC  F007         	goto	u1521
  3688   000FF4  EFFE  F007         	goto	u1520
  3689   000FF8                     u1521:
  3690   000FF8  EF21  F008         	goto	l213
  3691   000FFC                     u1520:
  3692   000FFC                     
  3693                           ;functions.c: 42:     unsigned int daysBeforeOctober = 31 + (leapYear ? 29 : 28) + 31 + 
      +                          30 + 31 + 30 + 31 + 31 + 30;
  3694   000FFC  503E               	movf	lastSunday@leapYear^0,w,c
  3695   000FFE  103F               	iorwf	(lastSunday@leapYear+1)^0,w,c
  3696   001000  A4D8               	btfss	status,2,c
  3697   001002  EF05  F008         	goto	u1531
  3698   001006  EF07  F008         	goto	u1530
  3699   00100A                     u1531:
  3700   00100A  EF0D  F008         	goto	l2290
  3701   00100E                     u1530:
  3702   00100E  0E00               	movlw	0
  3703   001010  6E3D               	movwf	(_lastSunday$1063+1)^0,c
  3704   001012  0E1C               	movlw	28
  3705   001014  6E3C               	movwf	_lastSunday$1063^0,c
  3706   001016  EF11  F008         	goto	l2292
  3707   00101A                     l2290:
  3708   00101A  0E00               	movlw	0
  3709   00101C  6E3D               	movwf	(_lastSunday$1063+1)^0,c
  3710   00101E  0E1D               	movlw	29
  3711   001020  6E3C               	movwf	_lastSunday$1063^0,c
  3712   001022                     l2292:
  3713   001022  0EF5               	movlw	245
  3714   001024  243C               	addwf	_lastSunday$1063^0,w,c
  3715   001026  6E34               	movwf	lastSunday@daysBeforeOctober^0,c
  3716   001028  0E00               	movlw	0
  3717   00102A  203D               	addwfc	(_lastSunday$1063+1)^0,w,c
  3718   00102C  6E35               	movwf	(lastSunday@daysBeforeOctober+1)^0,c
  3719   00102E                     
  3720                           ;functions.c: 44:     unsigned int dayOfYearForDSTEnd = daysBeforeOctober + lastSundayDa
      +                          teMonth;
  3721   00102E  5040               	movf	lastSunday@lastSundayDateMonth^0,w,c
  3722   001030  2434               	addwf	lastSunday@daysBeforeOctober^0,w,c
  3723   001032  6E36               	movwf	lastSunday@dayOfYearForDSTEnd^0,c
  3724   001034  5041               	movf	(lastSunday@lastSundayDateMonth+1)^0,w,c
  3725   001036  2035               	addwfc	(lastSunday@daysBeforeOctober+1)^0,w,c
  3726   001038  6E37               	movwf	(lastSunday@dayOfYearForDSTEnd+1)^0,c
  3727   00103A                     
  3728                           ;functions.c: 46:     return dayOfYearForDSTEnd;
  3729   00103A  C036  F01C         	movff	lastSunday@dayOfYearForDSTEnd,?_lastSunday
  3730   00103E  C037  F01D         	movff	lastSunday@dayOfYearForDSTEnd+1,?_lastSunday+1
  3731   001042                     l213:
  3732   001042  0012               	return		;funcret
  3733   001044                     __end_of_lastSunday:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function ___wmul *****************
  3737 ;; Defined at:
  3738 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  multiplier      2    4[COMRAM] unsigned int 
  3741 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  product         2    8[COMRAM] unsigned int 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2    4[COMRAM] unsigned int 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0, prodl, prodh
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;Total ram usage:        6 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; Hardware stack levels required when called: 1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_lastSunday
  3764 ;;		_read_prec_or_width
  3765 ;;		_LED_Light_Meter
  3766 ;;		_ADC2String
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text26
  3771   001E7E                     __ptext26:
  3772                           	callstack 0
  3773   001E7E                     ___wmul:
  3774                           	callstack 24
  3775   001E7E  5005               	movf	___wmul@multiplier^0,w,c
  3776   001E80  0207               	mulwf	___wmul@multiplicand^0,c
  3777   001E82  CFF3 F009          	movff	prodl,___wmul@product
  3778   001E86  CFF4 F00A          	movff	prodh,___wmul@product+1
  3779   001E8A  5005               	movf	___wmul@multiplier^0,w,c
  3780   001E8C  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3781   001E8E  50F3               	movf	243,w,c
  3782   001E90  260A               	addwf	(___wmul@product+1)^0,f,c
  3783   001E92  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3784   001E94  0207               	mulwf	___wmul@multiplicand^0,c
  3785   001E96  50F3               	movf	243,w,c
  3786   001E98  260A               	addwf	(___wmul@product+1)^0,f,c
  3787   001E9A  C009  F005         	movff	___wmul@product,?___wmul
  3788   001E9E  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3789   001EA2  0012               	return		;funcret
  3790   001EA4                     __end_of___wmul:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function ___lwdiv *****************
  3794 ;; Defined at:
  3795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  dividend        2   10[COMRAM] unsigned int 
  3798 ;;  divisor         2   12[COMRAM] unsigned int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  quotient        2   14[COMRAM] unsigned int 
  3801 ;;  counter         1   16[COMRAM] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2   10[COMRAM] unsigned int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;Total ram usage:        7 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; Hardware stack levels required when called: 1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_lastSunday
  3822 ;;		_LED_Light_Meter
  3823 ;;		_ADC2String
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text27
  3828   001AF0                     __ptext27:
  3829                           	callstack 0
  3830   001AF0                     ___lwdiv:
  3831                           	callstack 27
  3832   001AF0  0E00               	movlw	0
  3833   001AF2  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  3834   001AF4  0E00               	movlw	0
  3835   001AF6  6E0F               	movwf	___lwdiv@quotient^0,c
  3836   001AF8  500D               	movf	___lwdiv@divisor^0,w,c
  3837   001AFA  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3838   001AFC  B4D8               	btfsc	status,2,c
  3839   001AFE  EF83  F00D         	goto	u1461
  3840   001B02  EF85  F00D         	goto	u1460
  3841   001B06                     u1461:
  3842   001B06  EFAD  F00D         	goto	l791
  3843   001B0A                     u1460:
  3844   001B0A  0E01               	movlw	1
  3845   001B0C  6E11               	movwf	___lwdiv@counter^0,c
  3846   001B0E  EF8D  F00D         	goto	l2164
  3847   001B12                     l2162:
  3848   001B12  90D8               	bcf	status,0,c
  3849   001B14  360D               	rlcf	___lwdiv@divisor^0,f,c
  3850   001B16  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3851   001B18  2A11               	incf	___lwdiv@counter^0,f,c
  3852   001B1A                     l2164:
  3853   001B1A  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  3854   001B1C  EF92  F00D         	goto	u1471
  3855   001B20  EF94  F00D         	goto	u1470
  3856   001B24                     u1471:
  3857   001B24  EF89  F00D         	goto	l2162
  3858   001B28                     u1470:
  3859   001B28                     l2166:
  3860   001B28  90D8               	bcf	status,0,c
  3861   001B2A  360F               	rlcf	___lwdiv@quotient^0,f,c
  3862   001B2C  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3863   001B2E  500D               	movf	___lwdiv@divisor^0,w,c
  3864   001B30  5C0B               	subwf	___lwdiv@dividend^0,w,c
  3865   001B32  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3866   001B34  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3867   001B36  A0D8               	btfss	status,0,c
  3868   001B38  EFA0  F00D         	goto	u1481
  3869   001B3C  EFA2  F00D         	goto	u1480
  3870   001B40                     u1481:
  3871   001B40  EFA7  F00D         	goto	l2174
  3872   001B44                     u1480:
  3873   001B44  500D               	movf	___lwdiv@divisor^0,w,c
  3874   001B46  5E0B               	subwf	___lwdiv@dividend^0,f,c
  3875   001B48  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3876   001B4A  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3877   001B4C  800F               	bsf	___lwdiv@quotient^0,0,c
  3878   001B4E                     l2174:
  3879   001B4E  90D8               	bcf	status,0,c
  3880   001B50  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3881   001B52  320D               	rrcf	___lwdiv@divisor^0,f,c
  3882   001B54  2E11               	decfsz	___lwdiv@counter^0,f,c
  3883   001B56  EF94  F00D         	goto	l2166
  3884   001B5A                     l791:
  3885   001B5A  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  3886   001B5E  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3887   001B62  0012               	return		;funcret
  3888   001B64                     __end_of___lwdiv:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _changeHourDayYear *****************
  3892 ;; Defined at:
  3893 ;;		line 73 in file "functions.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  hour            1   27[COMRAM] PTR unsigned int 
  3896 ;;		 -> hour(2), 
  3897 ;;  day             1   28[COMRAM] PTR unsigned int 
  3898 ;;		 -> main@day(2), 
  3899 ;;  year            1   29[COMRAM] PTR unsigned int 
  3900 ;;		 -> main@year(2), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  leap            2   32[COMRAM] unsigned int 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3912 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;Total ram usage:        7 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 3
  3919 ;; This function calls:
  3920 ;;		_isLeapYear
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text28
  3927   0014BA                     __ptext28:
  3928                           	callstack 0
  3929   0014BA                     _changeHourDayYear:
  3930                           	callstack 27
  3931   0014BA                     
  3932                           ;functions.c: 74:         if (*hour == 24) {
  3933   0014BA  501C               	movf	changeHourDayYear@hour^0,w,c
  3934   0014BC  6ED9               	movwf	fsr2l,c
  3935   0014BE  6ADA               	clrf	fsr2h,c
  3936   0014C0  0E18               	movlw	24
  3937   0014C2  18DE               	xorwf	postinc2,w,c
  3938   0014C4  10DE               	iorwf	postinc2,w,c
  3939   0014C6  A4D8               	btfss	status,2,c
  3940   0014C8  EF68  F00A         	goto	u1741
  3941   0014CC  EF6A  F00A         	goto	u1740
  3942   0014D0                     u1741:
  3943   0014D0  EF75  F00A         	goto	l2426
  3944   0014D4                     u1740:
  3945   0014D4                     
  3946                           ;functions.c: 75:            *hour = 0;
  3947   0014D4  501C               	movf	changeHourDayYear@hour^0,w,c
  3948   0014D6  6ED9               	movwf	fsr2l,c
  3949   0014D8  6ADA               	clrf	fsr2h,c
  3950   0014DA  6ADE               	clrf	postinc2,c
  3951   0014DC  6ADD               	clrf	postdec2,c
  3952   0014DE                     
  3953                           ;functions.c: 76:            (*day)++;
  3954   0014DE  501D               	movf	changeHourDayYear@day^0,w,c
  3955   0014E0  6ED9               	movwf	fsr2l,c
  3956   0014E2  6ADA               	clrf	fsr2h,c
  3957   0014E4  2ADE               	incf	postinc2,f,c
  3958   0014E6  0E00               	movlw	0
  3959   0014E8  22DD               	addwfc	postdec2,f,c
  3960   0014EA                     l2426:
  3961                           
  3962                           ;functions.c: 78:         if (*day == 365){
  3963   0014EA  501D               	movf	changeHourDayYear@day^0,w,c
  3964   0014EC  6ED9               	movwf	fsr2l,c
  3965   0014EE  6ADA               	clrf	fsr2h,c
  3966   0014F0  0E6D               	movlw	109
  3967   0014F2  18DE               	xorwf	postinc2,w,c
  3968   0014F4  E106               	bnz	u1751
  3969   0014F6  04DE               	decf	postinc2,w,c
  3970   0014F8  A4D8               	btfss	status,2,c
  3971   0014FA  EF81  F00A         	goto	u1751
  3972   0014FE  EF83  F00A         	goto	u1750
  3973   001502                     u1751:
  3974   001502  EFA2  F00A         	goto	l2436
  3975   001506                     u1750:
  3976   001506                     
  3977                           ;functions.c: 79:             unsigned int leap = isLeapYear(year);
  3978   001506  C01E  F017         	movff	changeHourDayYear@year,isLeapYear@year
  3979   00150A  6A18               	clrf	(isLeapYear@year+1)^0,c
  3980   00150C  EC3B  F00D         	call	_isLeapYear	;wreg free
  3981   001510  C017  F021         	movff	?_isLeapYear,changeHourDayYear@leap
  3982   001514  C018  F022         	movff	?_isLeapYear+1,changeHourDayYear@leap+1
  3983   001518                     
  3984                           ;functions.c: 80:             if (leap == 0){
  3985   001518  5021               	movf	changeHourDayYear@leap^0,w,c
  3986   00151A  1022               	iorwf	(changeHourDayYear@leap+1)^0,w,c
  3987   00151C  A4D8               	btfss	status,2,c
  3988   00151E  EF93  F00A         	goto	u1761
  3989   001522  EF95  F00A         	goto	u1760
  3990   001526                     u1761:
  3991   001526  EFA2  F00A         	goto	l2436
  3992   00152A                     u1760:
  3993   00152A                     
  3994                           ;functions.c: 81:                 *day=1;
  3995   00152A  501D               	movf	changeHourDayYear@day^0,w,c
  3996   00152C  6ED9               	movwf	fsr2l,c
  3997   00152E  6ADA               	clrf	fsr2h,c
  3998   001530  0E01               	movlw	1
  3999   001532  6EDE               	movwf	postinc2,c
  4000   001534  0E00               	movlw	0
  4001   001536  6EDD               	movwf	postdec2,c
  4002   001538                     
  4003                           ;functions.c: 82:                 (*year)++;
  4004   001538  501E               	movf	changeHourDayYear@year^0,w,c
  4005   00153A  6ED9               	movwf	fsr2l,c
  4006   00153C  6ADA               	clrf	fsr2h,c
  4007   00153E  2ADE               	incf	postinc2,f,c
  4008   001540  0E00               	movlw	0
  4009   001542  22DD               	addwfc	postdec2,f,c
  4010   001544                     l2436:
  4011                           
  4012                           ;functions.c: 86:         if (*day == 366){
  4013   001544  501D               	movf	changeHourDayYear@day^0,w,c
  4014   001546  6ED9               	movwf	fsr2l,c
  4015   001548  6ADA               	clrf	fsr2h,c
  4016   00154A  0E6E               	movlw	110
  4017   00154C  18DE               	xorwf	postinc2,w,c
  4018   00154E  E106               	bnz	u1771
  4019   001550  04DE               	decf	postinc2,w,c
  4020   001552  A4D8               	btfss	status,2,c
  4021   001554  EFAE  F00A         	goto	u1771
  4022   001558  EFB0  F00A         	goto	u1770
  4023   00155C                     u1771:
  4024   00155C  EFBD  F00A         	goto	l234
  4025   001560                     u1770:
  4026   001560                     
  4027                           ;functions.c: 87:             *day = 1;
  4028   001560  501D               	movf	changeHourDayYear@day^0,w,c
  4029   001562  6ED9               	movwf	fsr2l,c
  4030   001564  6ADA               	clrf	fsr2h,c
  4031   001566  0E01               	movlw	1
  4032   001568  6EDE               	movwf	postinc2,c
  4033   00156A  0E00               	movlw	0
  4034   00156C  6EDD               	movwf	postdec2,c
  4035   00156E                     
  4036                           ;functions.c: 88:             (*year)++;
  4037   00156E  501E               	movf	changeHourDayYear@year^0,w,c
  4038   001570  6ED9               	movwf	fsr2l,c
  4039   001572  6ADA               	clrf	fsr2h,c
  4040   001574  2ADE               	incf	postinc2,f,c
  4041   001576  0E00               	movlw	0
  4042   001578  22DD               	addwfc	postdec2,f,c
  4043   00157A                     l234:
  4044   00157A  0012               	return		;funcret
  4045   00157C                     __end_of_changeHourDayYear:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _isLeapYear *****************
  4049 ;; Defined at:
  4050 ;;		line 14 in file "functions.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  year            2   22[COMRAM] unsigned int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  2   22[COMRAM] unsigned int 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;Total ram usage:        5 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 2
  4071 ;; This function calls:
  4072 ;;		___lwmod
  4073 ;; This function is called by:
  4074 ;;		_lastSunday
  4075 ;;		_changeHourDayYear
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text29
  4080   001A76                     __ptext29:
  4081                           	callstack 0
  4082   001A76                     _isLeapYear:
  4083                           	callstack 26
  4084   001A76                     
  4085                           ;functions.c: 15:     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
  4086   001A76  0E01               	movlw	1
  4087   001A78  6E1B               	movwf	_isLeapYear$1049^0,c
  4088   001A7A  0E03               	movlw	3
  4089   001A7C  1417               	andwf	isLeapYear@year^0,w,c
  4090   001A7E  6E19               	movwf	??_isLeapYear^0,c
  4091   001A80  0E00               	movlw	0
  4092   001A82  1418               	andwf	(isLeapYear@year+1)^0,w,c
  4093   001A84  6E1A               	movwf	(??_isLeapYear+1)^0,c
  4094   001A86  5019               	movf	??_isLeapYear^0,w,c
  4095   001A88  101A               	iorwf	(??_isLeapYear+1)^0,w,c
  4096   001A8A  A4D8               	btfss	status,2,c
  4097   001A8C  EF4A  F00D         	goto	u1421
  4098   001A90  EF4C  F00D         	goto	u1420
  4099   001A94                     u1421:
  4100   001A94  EF5F  F00D         	goto	l2136
  4101   001A98                     u1420:
  4102   001A98  C017  F012         	movff	isLeapYear@year,___lwmod@dividend
  4103   001A9C  C018  F013         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4104   001AA0  0E00               	movlw	0
  4105   001AA2  6E15               	movwf	(___lwmod@divisor+1)^0,c
  4106   001AA4  0E64               	movlw	100
  4107   001AA6  6E14               	movwf	___lwmod@divisor^0,c
  4108   001AA8  EC1B  F00E         	call	___lwmod	;wreg free
  4109   001AAC  5012               	movf	?___lwmod^0,w,c
  4110   001AAE  1013               	iorwf	(?___lwmod+1)^0,w,c
  4111   001AB0  A4D8               	btfss	status,2,c
  4112   001AB2  EF5D  F00D         	goto	u1431
  4113   001AB6  EF5F  F00D         	goto	u1430
  4114   001ABA                     u1431:
  4115   001ABA  EF74  F00D         	goto	l2140
  4116   001ABE                     u1430:
  4117   001ABE                     l2136:
  4118   001ABE  C017  F012         	movff	isLeapYear@year,___lwmod@dividend
  4119   001AC2  C018  F013         	movff	isLeapYear@year+1,___lwmod@dividend+1
  4120   001AC6  0E01               	movlw	1
  4121   001AC8  6E15               	movwf	(___lwmod@divisor+1)^0,c
  4122   001ACA  0E90               	movlw	144
  4123   001ACC  6E14               	movwf	___lwmod@divisor^0,c
  4124   001ACE  EC1B  F00E         	call	___lwmod	;wreg free
  4125   001AD2  5012               	movf	?___lwmod^0,w,c
  4126   001AD4  1013               	iorwf	(?___lwmod+1)^0,w,c
  4127   001AD6  B4D8               	btfsc	status,2,c
  4128   001AD8  EF70  F00D         	goto	u1441
  4129   001ADC  EF72  F00D         	goto	u1440
  4130   001AE0                     u1441:
  4131   001AE0  EF74  F00D         	goto	l2140
  4132   001AE4                     u1440:
  4133   001AE4  0E00               	movlw	0
  4134   001AE6  6E1B               	movwf	_isLeapYear$1049^0,c
  4135   001AE8                     l2140:
  4136   001AE8  C01B  F017         	movff	_isLeapYear$1049,?_isLeapYear
  4137   001AEC  6A18               	clrf	(?_isLeapYear+1)^0,c
  4138   001AEE  0012               	return		;funcret
  4139   001AF0                     __end_of_isLeapYear:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function ___lwmod *****************
  4143 ;; Defined at:
  4144 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  dividend        2   17[COMRAM] unsigned int 
  4147 ;;  divisor         2   19[COMRAM] unsigned int 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  counter         1   21[COMRAM] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  2   17[COMRAM] unsigned int 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;Total ram usage:        5 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 1
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_isLeapYear
  4170 ;;		_lastSunday
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text30
  4175   001C36                     __ptext30:
  4176                           	callstack 0
  4177   001C36                     ___lwmod:
  4178                           	callstack 26
  4179   001C36  5014               	movf	___lwmod@divisor^0,w,c
  4180   001C38  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
  4181   001C3A  B4D8               	btfsc	status,2,c
  4182   001C3C  EF22  F00E         	goto	u1341
  4183   001C40  EF24  F00E         	goto	u1340
  4184   001C44                     u1341:
  4185   001C44  EF48  F00E         	goto	l801
  4186   001C48                     u1340:
  4187   001C48  0E01               	movlw	1
  4188   001C4A  6E16               	movwf	___lwmod@counter^0,c
  4189   001C4C  EF2C  F00E         	goto	l2058
  4190   001C50                     l2056:
  4191   001C50  90D8               	bcf	status,0,c
  4192   001C52  3614               	rlcf	___lwmod@divisor^0,f,c
  4193   001C54  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
  4194   001C56  2A16               	incf	___lwmod@counter^0,f,c
  4195   001C58                     l2058:
  4196   001C58  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
  4197   001C5A  EF31  F00E         	goto	u1351
  4198   001C5E  EF33  F00E         	goto	u1350
  4199   001C62                     u1351:
  4200   001C62  EF28  F00E         	goto	l2056
  4201   001C66                     u1350:
  4202   001C66                     l2060:
  4203   001C66  5014               	movf	___lwmod@divisor^0,w,c
  4204   001C68  5C12               	subwf	___lwmod@dividend^0,w,c
  4205   001C6A  5015               	movf	(___lwmod@divisor+1)^0,w,c
  4206   001C6C  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
  4207   001C6E  A0D8               	btfss	status,0,c
  4208   001C70  EF3C  F00E         	goto	u1361
  4209   001C74  EF3E  F00E         	goto	u1360
  4210   001C78                     u1361:
  4211   001C78  EF42  F00E         	goto	l2064
  4212   001C7C                     u1360:
  4213   001C7C  5014               	movf	___lwmod@divisor^0,w,c
  4214   001C7E  5E12               	subwf	___lwmod@dividend^0,f,c
  4215   001C80  5015               	movf	(___lwmod@divisor+1)^0,w,c
  4216   001C82  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
  4217   001C84                     l2064:
  4218   001C84  90D8               	bcf	status,0,c
  4219   001C86  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
  4220   001C88  3214               	rrcf	___lwmod@divisor^0,f,c
  4221   001C8A  2E16               	decfsz	___lwmod@counter^0,f,c
  4222   001C8C  EF33  F00E         	goto	l2060
  4223   001C90                     l801:
  4224   001C90  C012  F012         	movff	___lwmod@dividend,?___lwmod
  4225   001C94  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
  4226   001C98  0012               	return		;funcret
  4227   001C9A                     __end_of___lwmod:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _LEDarray_disp_bin *****************
  4231 ;; Defined at:
  4232 ;;		line 33 in file "LEDarray.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  number          2    4[COMRAM] unsigned int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		None
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;Total ram usage:        2 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;;		_LEDarray_disp_PPM
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text31
  4262   00132E                     __ptext31:
  4263                           	callstack 0
  4264   00132E                     _LEDarray_disp_bin:
  4265                           	callstack 29
  4266   00132E                     
  4267                           ;LEDarray.c: 33: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 34: {;LEDarray.
      +                          c: 36:  if (number & 1) {LATGbits.LATG0 = 1;} else {LATGbits.LATG0 = 0;}
  4268   00132E  A005               	btfss	LEDarray_disp_bin@number^0,0,c
  4269   001330  EF9C  F009         	goto	u1551
  4270   001334  EF9E  F009         	goto	u1550
  4271   001338                     u1551:
  4272   001338  EFA1  F009         	goto	l84
  4273   00133C                     u1550:
  4274   00133C  807F               	bsf	127,0,c	;volatile
  4275   00133E  EFA2  F009         	goto	l85
  4276   001342                     l84:
  4277   001342  907F               	bcf	127,0,c	;volatile
  4278   001344                     l85:
  4279                           
  4280                           ;LEDarray.c: 37:     if (number & (1 << 1)) {LATGbits.LATG1 = 1;} else {LATGbits.LATG1 =
      +                           0;}
  4281   001344  A205               	btfss	LEDarray_disp_bin@number^0,1,c
  4282   001346  EFA7  F009         	goto	u1561
  4283   00134A  EFA9  F009         	goto	u1560
  4284   00134E                     u1561:
  4285   00134E  EFAC  F009         	goto	l86
  4286   001352                     u1560:
  4287   001352  827F               	bsf	127,1,c	;volatile
  4288   001354  EFAD  F009         	goto	l87
  4289   001358                     l86:
  4290   001358  927F               	bcf	127,1,c	;volatile
  4291   00135A                     l87:
  4292                           
  4293                           ;LEDarray.c: 38:     if (number & (1 << 2)) {LATAbits.LATA2 = 1;} else {LATAbits.LATA2 =
      +                           0;}
  4294   00135A  A405               	btfss	LEDarray_disp_bin@number^0,2,c
  4295   00135C  EFB2  F009         	goto	u1571
  4296   001360  EFB4  F009         	goto	u1570
  4297   001364                     u1571:
  4298   001364  EFB7  F009         	goto	l88
  4299   001368                     u1570:
  4300   001368  8479               	bsf	121,2,c	;volatile
  4301   00136A  EFB8  F009         	goto	l89
  4302   00136E                     l88:
  4303   00136E  9479               	bcf	121,2,c	;volatile
  4304   001370                     l89:
  4305                           
  4306                           ;LEDarray.c: 39:     if (number & (1 << 3)) {LATFbits.LATF6 = 1;} else {LATFbits.LATF6 =
      +                           0;}
  4307   001370  A605               	btfss	LEDarray_disp_bin@number^0,3,c
  4308   001372  EFBD  F009         	goto	u1581
  4309   001376  EFBF  F009         	goto	u1580
  4310   00137A                     u1581:
  4311   00137A  EFC2  F009         	goto	l90
  4312   00137E                     u1580:
  4313   00137E  8C7E               	bsf	126,6,c	;volatile
  4314   001380  EFC3  F009         	goto	l91
  4315   001384                     l90:
  4316   001384  9C7E               	bcf	126,6,c	;volatile
  4317   001386                     l91:
  4318                           
  4319                           ;LEDarray.c: 40:     if (number & (1 << 4)) {LATAbits.LATA4 = 1;} else {LATAbits.LATA4 =
      +                           0;}
  4320   001386  A805               	btfss	LEDarray_disp_bin@number^0,4,c
  4321   001388  EFC8  F009         	goto	u1591
  4322   00138C  EFCA  F009         	goto	u1590
  4323   001390                     u1591:
  4324   001390  EFCD  F009         	goto	l92
  4325   001394                     u1590:
  4326   001394  8879               	bsf	121,4,c	;volatile
  4327   001396  EFCE  F009         	goto	l93
  4328   00139A                     l92:
  4329   00139A  9879               	bcf	121,4,c	;volatile
  4330   00139C                     l93:
  4331                           
  4332                           ;LEDarray.c: 41:     if (number & (1 << 5)) {LATAbits.LATA5 = 1;} else {LATAbits.LATA5 =
      +                           0;}
  4333   00139C  AA05               	btfss	LEDarray_disp_bin@number^0,5,c
  4334   00139E  EFD3  F009         	goto	u1601
  4335   0013A2  EFD5  F009         	goto	u1600
  4336   0013A6                     u1601:
  4337   0013A6  EFD8  F009         	goto	l94
  4338   0013AA                     u1600:
  4339   0013AA  8A79               	bsf	121,5,c	;volatile
  4340   0013AC  EFD9  F009         	goto	l95
  4341   0013B0                     l94:
  4342   0013B0  9A79               	bcf	121,5,c	;volatile
  4343   0013B2                     l95:
  4344                           
  4345                           ;LEDarray.c: 42:     if (number & (1 << 6)) {LATFbits.LATF0 = 1;} else {LATFbits.LATF0 =
      +                           0;}
  4346   0013B2  AC05               	btfss	LEDarray_disp_bin@number^0,6,c
  4347   0013B4  EFDE  F009         	goto	u1611
  4348   0013B8  EFE0  F009         	goto	u1610
  4349   0013BC                     u1611:
  4350   0013BC  EFE3  F009         	goto	l96
  4351   0013C0                     u1610:
  4352   0013C0  807E               	bsf	126,0,c	;volatile
  4353   0013C2  EFE4  F009         	goto	l97
  4354   0013C6                     l96:
  4355   0013C6  907E               	bcf	126,0,c	;volatile
  4356   0013C8                     l97:
  4357                           
  4358                           ;LEDarray.c: 43:     if (number & (1 << 7)) {LATBbits.LATB0 = 1;} else {LATBbits.LATB0 =
      +                           0;}
  4359   0013C8  AE05               	btfss	LEDarray_disp_bin@number^0,7,c
  4360   0013CA  EFE9  F009         	goto	u1621
  4361   0013CE  EFEB  F009         	goto	u1620
  4362   0013D2                     u1621:
  4363   0013D2  EFEE  F009         	goto	l98
  4364   0013D6                     u1620:
  4365   0013D6  807A               	bsf	122,0,c	;volatile
  4366   0013D8  EFEF  F009         	goto	l99
  4367   0013DC                     l98:
  4368   0013DC  907A               	bcf	122,0,c	;volatile
  4369   0013DE                     l99:
  4370                           
  4371                           ;LEDarray.c: 44:     if (number & (1 << 8)) {LATBbits.LATB1 = 1;} else {LATBbits.LATB1 =
      +                           0;}
  4372   0013DE  A006               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4373   0013E0  EFF4  F009         	goto	u1631
  4374   0013E4  EFF6  F009         	goto	u1630
  4375   0013E8                     u1631:
  4376   0013E8  EFF9  F009         	goto	l100
  4377   0013EC                     u1630:
  4378   0013EC  827A               	bsf	122,1,c	;volatile
  4379   0013EE  EFFA  F009         	goto	l102
  4380   0013F2                     l100:
  4381   0013F2  927A               	bcf	122,1,c	;volatile
  4382   0013F4                     l102:
  4383   0013F4  0012               	return		;funcret
  4384   0013F6                     __end_of_LEDarray_disp_bin:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function _LCD_setline *****************
  4388 ;; Defined at:
  4389 ;;		line 106 in file "LCD.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  line            1    wreg     unsigned char 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  line            1    9[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;Total ram usage:        1 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 4
  4410 ;; This function calls:
  4411 ;;		_LCD_sendbyte
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text32
  4418   001D54                     __ptext32:
  4419                           	callstack 0
  4420   001D54                     _LCD_setline:
  4421                           	callstack 26
  4422                           
  4423                           ;incstack = 0
  4424                           ;LCD_setline@line stored from wreg
  4425   001D54  6E0A               	movwf	LCD_setline@line^0,c
  4426   001D56                     
  4427                           ;LCD.c: 106: void LCD_setline (char line);LCD.c: 107: {;LCD.c: 109:     if (line == 1) {
      +                          LCD_sendbyte(0x80,0);}
  4428   001D56  040A               	decf	LCD_setline@line^0,w,c
  4429   001D58  A4D8               	btfss	status,2,c
  4430   001D5A  EFB1  F00E         	goto	u1641
  4431   001D5E  EFB3  F00E         	goto	u1640
  4432   001D62                     u1641:
  4433   001D62  EFB8  F00E         	goto	l2382
  4434   001D66                     u1640:
  4435   001D66  0E00               	movlw	0
  4436   001D68  6E06               	movwf	LCD_sendbyte@type^0,c
  4437   001D6A  0E80               	movlw	128
  4438   001D6C  EC8C  F00E         	call	_LCD_sendbyte
  4439   001D70                     l2382:
  4440                           
  4441                           ;LCD.c: 111:     if (line == 2) {LCD_sendbyte(0xC0,0);}
  4442   001D70  0E02               	movlw	2
  4443   001D72  180A               	xorwf	LCD_setline@line^0,w,c
  4444   001D74  A4D8               	btfss	status,2,c
  4445   001D76  EFBF  F00E         	goto	u1651
  4446   001D7A  EFC1  F00E         	goto	u1650
  4447   001D7E                     u1651:
  4448   001D7E  EFC6  F00E         	goto	l280
  4449   001D82                     u1650:
  4450   001D82  0E00               	movlw	0
  4451   001D84  6E06               	movwf	LCD_sendbyte@type^0,c
  4452   001D86  0EC0               	movlw	192
  4453   001D88  EC8C  F00E         	call	_LCD_sendbyte
  4454   001D8C                     l280:
  4455   001D8C  0012               	return		;funcret
  4456   001D8E                     __end_of_LCD_setline:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function _LCD_sendbyte *****************
  4460 ;; Defined at:
  4461 ;;		line 43 in file "LCD.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  Byte            1    wreg     unsigned char 
  4464 ;;  type            1    5[COMRAM] unsigned char 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  Byte            1    8[COMRAM] unsigned char 
  4467 ;;  lowNibble       1    7[COMRAM] unsigned char 
  4468 ;;  highNibble      1    6[COMRAM] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4478 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;Total ram usage:        4 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 3
  4485 ;; This function calls:
  4486 ;;		_LCD_sendnibble
  4487 ;; This function is called by:
  4488 ;;		_LCD_init
  4489 ;;		_LCD_setline
  4490 ;;		_LCD_sendstring
  4491 ;;		_LCD_scroll
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text33
  4496   001D18                     __ptext33:
  4497                           	callstack 0
  4498   001D18                     _LCD_sendbyte:
  4499                           	callstack 25
  4500                           
  4501                           ;incstack = 0
  4502                           ;LCD_sendbyte@Byte stored from wreg
  4503   001D18  6E09               	movwf	LCD_sendbyte@Byte^0,c
  4504   001D1A                     
  4505                           ;LCD.c: 43: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 44: {;LCD.c: 46:    
      +                           if (type==1) {LATCbits.LATC6=1;} else {LATCbits.LATC6=0;}
  4506   001D1A  0406               	decf	LCD_sendbyte@type^0,w,c
  4507   001D1C  A4D8               	btfss	status,2,c
  4508   001D1E  EF93  F00E         	goto	u1451
  4509   001D22  EF95  F00E         	goto	u1450
  4510   001D26                     u1451:
  4511   001D26  EF98  F00E         	goto	l270
  4512   001D2A                     u1450:
  4513   001D2A  8C7B               	bsf	123,6,c	;volatile
  4514   001D2C  EF99  F00E         	goto	l2148
  4515   001D30                     l270:
  4516   001D30  9C7B               	bcf	123,6,c	;volatile
  4517   001D32                     l2148:
  4518                           
  4519                           ;LCD.c: 50:     unsigned char highNibble = (Byte >> 4) ;
  4520   001D32  3809               	swapf	LCD_sendbyte@Byte^0,w,c
  4521   001D34  0B0F               	andlw	15
  4522   001D36  6E07               	movwf	LCD_sendbyte@highNibble^0,c
  4523   001D38                     
  4524                           ;LCD.c: 51:     LCD_sendnibble(highNibble);
  4525   001D38  5007               	movf	LCD_sendbyte@highNibble^0,w,c
  4526   001D3A  ECE7  F00D         	call	_LCD_sendnibble
  4527   001D3E                     
  4528                           ;LCD.c: 54:     unsigned char lowNibble = Byte & 0b1111;
  4529   001D3E  5009               	movf	LCD_sendbyte@Byte^0,w,c
  4530   001D40  0B0F               	andlw	15
  4531   001D42  6E08               	movwf	LCD_sendbyte@lowNibble^0,c
  4532                           
  4533                           ;LCD.c: 55:     LCD_sendnibble(lowNibble);
  4534   001D44  5008               	movf	LCD_sendbyte@lowNibble^0,w,c
  4535   001D46  ECE7  F00D         	call	_LCD_sendnibble
  4536   001D4A                     
  4537                           ;LCD.c: 57:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4538   001D4A  0EA0               	movlw	160
  4539   001D4C                     u1927:
  4540   001D4C  D000               	nop2	
  4541   001D4E  2EE8               	decfsz	wreg,f,c
  4542   001D50  D7FD               	bra	u1927
  4543   001D52  0012               	return		;funcret
  4544   001D54                     __end_of_LCD_sendbyte:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _LCD_sendnibble *****************
  4548 ;; Defined at:
  4549 ;;		line 21 in file "LCD.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  number          1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  number          1    4[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;Total ram usage:        1 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 2
  4570 ;; This function calls:
  4571 ;;		_LCD_E_TOG
  4572 ;; This function is called by:
  4573 ;;		_LCD_sendbyte
  4574 ;;		_LCD_init
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text34
  4579   001BCE                     __ptext34:
  4580                           	callstack 0
  4581   001BCE                     _LCD_sendnibble:
  4582                           	callstack 25
  4583                           
  4584                           ;incstack = 0
  4585                           ;LCD_sendnibble@number stored from wreg
  4586   001BCE  6E05               	movwf	LCD_sendnibble@number^0,c
  4587   001BD0                     
  4588                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     if(num
      +                          ber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  4589   001BD0  A005               	btfss	LCD_sendnibble@number^0,0,c
  4590   001BD2  EFED  F00D         	goto	u1301
  4591   001BD6  EFEF  F00D         	goto	u1300
  4592   001BDA                     u1301:
  4593   001BDA  EFF2  F00D         	goto	l259
  4594   001BDE                     u1300:
  4595   001BDE  867A               	bsf	122,3,c	;volatile
  4596   001BE0  EFF3  F00D         	goto	l2036
  4597   001BE4                     l259:
  4598   001BE4  967A               	bcf	122,3,c	;volatile
  4599   001BE6                     l2036:
  4600                           
  4601                           ;LCD.c: 28:     if(number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  4602   001BE6  A205               	btfss	LCD_sendnibble@number^0,1,c
  4603   001BE8  EFF8  F00D         	goto	u1311
  4604   001BEC  EFFA  F00D         	goto	u1310
  4605   001BF0                     u1311:
  4606   001BF0  EFFD  F00D         	goto	l261
  4607   001BF4                     u1310:
  4608   001BF4  847A               	bsf	122,2,c	;volatile
  4609   001BF6  EFFE  F00D         	goto	l2040
  4610   001BFA                     l261:
  4611   001BFA  947A               	bcf	122,2,c	;volatile
  4612   001BFC                     l2040:
  4613                           
  4614                           ;LCD.c: 30:     if(number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  4615   001BFC  A405               	btfss	LCD_sendnibble@number^0,2,c
  4616   001BFE  EF03  F00E         	goto	u1321
  4617   001C02  EF05  F00E         	goto	u1320
  4618   001C06                     u1321:
  4619   001C06  EF08  F00E         	goto	l263
  4620   001C0A                     u1320:
  4621   001C0A  867D               	bsf	125,3,c	;volatile
  4622   001C0C  EF09  F00E         	goto	l2044
  4623   001C10                     l263:
  4624   001C10  967D               	bcf	125,3,c	;volatile
  4625   001C12                     l2044:
  4626                           
  4627                           ;LCD.c: 32:     if(number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  4628   001C12  A605               	btfss	LCD_sendnibble@number^0,3,c
  4629   001C14  EF0E  F00E         	goto	u1331
  4630   001C18  EF10  F00E         	goto	u1330
  4631   001C1C                     u1331:
  4632   001C1C  EF13  F00E         	goto	l265
  4633   001C20                     u1330:
  4634   001C20  827D               	bsf	125,1,c	;volatile
  4635   001C22  EF14  F00E         	goto	l2048
  4636   001C26                     l265:
  4637   001C26  927D               	bcf	125,1,c	;volatile
  4638   001C28                     l2048:
  4639                           
  4640                           ;LCD.c: 34:     LCD_E_TOG();
  4641   001C28  ECA7  F00F         	call	_LCD_E_TOG	;wreg free
  4642   001C2C                     
  4643                           ;LCD.c: 35:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4644   001C2C  0E1A               	movlw	26
  4645   001C2E                     u1937:
  4646   001C2E  2EE8               	decfsz	wreg,f,c
  4647   001C30  D7FE               	bra	u1937
  4648   001C32  D000               	nop2	
  4649   001C34  0012               	return		;funcret
  4650   001C36                     __end_of_LCD_sendnibble:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _LCD_E_TOG *****************
  4654 ;; Defined at:
  4655 ;;		line 9 in file "LCD.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;Total ram usage:        0 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_LCD_sendnibble
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text35
  4684   001F4E                     __ptext35:
  4685                           	callstack 0
  4686   001F4E                     _LCD_E_TOG:
  4687                           	callstack 25
  4688   001F4E                     
  4689                           ;LCD.c: 12:     LATCbits.LATC2=1;
  4690   001F4E  847B               	bsf	123,2,c	;volatile
  4691   001F50                     
  4692                           ;LCD.c: 13:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4693   001F50  0E0A               	movlw	10
  4694   001F52                     u1947:
  4695   001F52  2EE8               	decfsz	wreg,f,c
  4696   001F54  D7FE               	bra	u1947
  4697   001F56  D000               	nop2	
  4698   001F58                     
  4699                           ;LCD.c: 15:     LATCbits.LATC2=0;
  4700   001F58  947B               	bcf	123,2,c	;volatile
  4701   001F5A  0012               	return		;funcret
  4702   001F5C                     __end_of_LCD_E_TOG:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _LowISR *****************
  4706 ;; Defined at:
  4707 ;;		line 36 in file "interrupts.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;Total ram usage:        4 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		Interrupt level 1
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	intcodelo
  4735   000018                     __pintcodelo:
  4736                           	callstack 0
  4737   000018                     _LowISR:
  4738                           	callstack 21
  4739                           
  4740                           ;incstack = 0
  4741   000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4742   00001A  CFD8 F002          	movff	status,??_LowISR+1
  4743   00001E  CFE8 F003          	movff	wreg,??_LowISR+2
  4744   000022  CFE0 F004          	movff	bsr,??_LowISR+3
  4745   000026                     
  4746                           ;interrupts.c: 39:     if (PIR0bits.TMR0IF == 1) {
  4747   000026  010E               	movlb	14	; () banked
  4748   000028  AB33               	btfss	51,5,b	;volatile
  4749   00002A  EF19  F000         	goto	i1u182_21
  4750   00002E  EF1B  F000         	goto	i1u182_20
  4751   000032                     i1u182_21:
  4752   000032  EF24  F000         	goto	i1l2494
  4753   000036                     i1u182_20:
  4754   000036                     
  4755                           ; BSR set to: 14
  4756                           ;interrupts.c: 42:         hour++;
  4757   000036  0100               	movlb	0	; () banked
  4758   000038  4BAA               	infsnz	_hour& (0+255),f,b
  4759   00003A  2BAB               	incf	(_hour+1)& (0+255),f,b
  4760   00003C                     
  4761                           ; BSR set to: 0
  4762                           ;interrupts.c: 43:         TMR0H=00001011;
  4763   00003C  0E09               	movlw	9
  4764   00003E  6ED4               	movwf	212,c	;volatile
  4765   000040                     
  4766                           ; BSR set to: 0
  4767                           ;interrupts.c: 44:         TMR0L=110011011;
  4768   000040  0E83               	movlw	131
  4769   000042  6ED3               	movwf	211,c	;volatile
  4770   000044                     
  4771                           ; BSR set to: 0
  4772                           ;interrupts.c: 45:         PIR0bits.TMR0IF = 0;
  4773   000044  010E               	movlb	14	; () banked
  4774   000046  9B33               	bcf	51,5,b	;volatile
  4775   000048                     i1l2494:
  4776                           
  4777                           ; BSR set to: 14
  4778                           ;interrupts.c: 50:     if (PIR2bits.C1IF == 1) {
  4779   000048  A135               	btfss	53,0,b	;volatile
  4780   00004A  EF29  F000         	goto	i1u183_21
  4781   00004E  EF2B  F000         	goto	i1u183_20
  4782   000052                     i1u183_21:
  4783   000052  EF3F  F000         	goto	i1l163
  4784   000056                     i1u183_20:
  4785   000056                     
  4786                           ; BSR set to: 14
  4787                           ;interrupts.c: 51:         LATHbits.LATH3 = !LATHbits.LATH3;
  4788   000056  A680               	btfss	128,3,c	;volatile
  4789   000058  EF30  F000         	goto	i1u184_21
  4790   00005C  EF34  F000         	goto	i1u184_20
  4791   000060                     i1u184_21:
  4792   000060  6A01               	clrf	??_LowISR^0,c
  4793   000062  2A01               	incf	??_LowISR^0,f,c
  4794   000064  EF35  F000         	goto	i1u185_28
  4795   000068                     i1u184_20:
  4796   000068  6A01               	clrf	??_LowISR^0,c
  4797   00006A                     i1u185_28:
  4798   00006A  4601               	rlncf	??_LowISR^0,f,c
  4799   00006C  4601               	rlncf	??_LowISR^0,f,c
  4800   00006E  4601               	rlncf	??_LowISR^0,f,c
  4801   000070  5080               	movf	128,w,c	;volatile
  4802   000072  1801               	xorwf	??_LowISR^0,w,c
  4803   000074  0BF7               	andlw	-9
  4804   000076  1801               	xorwf	??_LowISR^0,w,c
  4805   000078  6E80               	movwf	128,c	;volatile
  4806   00007A                     
  4807                           ;interrupts.c: 52:         PIR2bits.C1IF = 0;
  4808   00007A  010E               	movlb	14	; () banked
  4809   00007C  9135               	bcf	53,0,b	;volatile
  4810   00007E                     i1l163:
  4811                           
  4812                           ; BSR set to: 14
  4813   00007E  C004  FFE0         	movff	??_LowISR+3,bsr
  4814   000082  C003  FFE8         	movff	??_LowISR+2,wreg
  4815   000086  C002  FFD8         	movff	??_LowISR+1,status
  4816   00008A  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4817   00008C  0010               	retfie	
  4818   00008E                     __end_of_LowISR:
  4819                           	callstack 0
  4820                           
  4821                           	psect	rparam
  4822   000000                     
  4823                           	psect	temp
  4824   00005A                     btemp:
  4825                           	callstack 0
  4826   00005A                     	ds	1
  4827   000000                     int$flags	set	btemp
  4828   000000                     wtemp8	set	btemp+1
  4829   000000                     ttemp5	set	btemp+1
  4830   000000                     ttemp6	set	btemp+4
  4831   000000                     ttemp7	set	btemp+8
  4832                           
  4833                           	psect	config
  4834                           
  4835                           ;Config register CONFIG1L @ 0x300000
  4836                           ;	External Oscillator mode Selection bits
  4837                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4838                           ;	Power-up default value for COSC bits
  4839                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4840   300000                     	org	3145728
  4841   300000  AA                 	db	170
  4842                           
  4843                           ;Config register CONFIG1H @ 0x300001
  4844                           ;	unspecified, using default values
  4845                           ;	Clock Out Enable bit
  4846                           ;	CLKOUTEN = 0x1, unprogrammed default
  4847                           ;	Clock Switch Enable bit
  4848                           ;	CSWEN = 0x1, unprogrammed default
  4849                           ;	Fail-Safe Clock Monitor Enable bit
  4850                           ;	FCMEN = 0x1, unprogrammed default
  4851   300001                     	org	3145729
  4852   300001  FF                 	db	255
  4853                           
  4854                           ;Config register CONFIG3L @ 0x300004
  4855                           ;	WDT Period Select bits
  4856                           ;	WDTCPS = 0x1F, unprogrammed default
  4857                           ;	WDT operating mode
  4858                           ;	WDTE = OFF, WDT Disabled
  4859   300004                     	org	3145732
  4860   300004  9F                 	db	159
  4861                           
  4862                           ;Config register CONFIG3H @ 0x300005
  4863                           ;	unspecified, using default values
  4864                           ;	WDT Window Select bits
  4865                           ;	WDTCWS = 0x7, unprogrammed default
  4866                           ;	WDT input clock selector
  4867                           ;	WDTCCS = 0x7, unprogrammed default
  4868   300005                     	org	3145733
  4869   300005  FF                 	db	255
  4870                           tosu	equ	0xFFF
  4871                           tosh	equ	0xFFE
  4872                           tosl	equ	0xFFD
  4873                           stkptr	equ	0xFFC
  4874                           pclatu	equ	0xFFB
  4875                           pclath	equ	0xFFA
  4876                           pcl	equ	0xFF9
  4877                           tblptru	equ	0xFF8
  4878                           tblptrh	equ	0xFF7
  4879                           tblptrl	equ	0xFF6
  4880                           tablat	equ	0xFF5
  4881                           prodh	equ	0xFF4
  4882                           prodl	equ	0xFF3
  4883                           indf0	equ	0xFEF
  4884                           postinc0	equ	0xFEE
  4885                           postdec0	equ	0xFED
  4886                           preinc0	equ	0xFEC
  4887                           plusw0	equ	0xFEB
  4888                           fsr0h	equ	0xFEA
  4889                           fsr0l	equ	0xFE9
  4890                           wreg	equ	0xFE8
  4891                           indf1	equ	0xFE7
  4892                           postinc1	equ	0xFE6
  4893                           postdec1	equ	0xFE5
  4894                           preinc1	equ	0xFE4
  4895                           plusw1	equ	0xFE3
  4896                           fsr1h	equ	0xFE2
  4897                           fsr1l	equ	0xFE1
  4898                           bsr	equ	0xFE0
  4899                           indf2	equ	0xFDF
  4900                           postinc2	equ	0xFDE
  4901                           postdec2	equ	0xFDD
  4902                           preinc2	equ	0xFDC
  4903                           plusw2	equ	0xFDB
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      89
    BANK0           160     42      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    changeHourDayYear@day	PTR unsigned int  size(1) Largest target is 2
		 -> main@day(BANK0[2]), 

    changeHourDayYear@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    changeHourDayYear@year	PTR unsigned int  size(1) Largest target is 2
		 -> main@year(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    findDSTdates@bkwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@bkwd_daylight_savings_day(BANK0[2]), 

    findDSTdates@fwd_daylight_savings_day	PTR unsigned int  size(1) Largest target is 2
		 -> main@fwd_daylight_savings_day(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    increaseHour@backward_zone	PTR unsigned int  size(1) Largest target is 2
		 -> main@backward_zone(BANK0[2]), 

    increaseHour@hour	PTR unsigned int  size(1) Largest target is 2
		 -> hour(BANK0[2]), 

    LCD_sendstring@string	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1770$buffer	PTR unsigned char  size(2) Largest target is 0

    S1770$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    time2String@buf	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), STR_2(CODE[12]), STR_3(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_time2String
    _time2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_sendstring->_LCD_sendbyte
    _initialise->_LCD_init
    _LCD_init->_LCD_sendbyte
    _findDSTdates->_lastSunday
    _lastSunday->_isLeapYear
    ___lwdiv->___wmul
    _changeHourDayYear->_isLeapYear
    _isLeapYear->___lwmod
    ___lwmod->___lwdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   20251
                                              0 BANK0     42    42      0
                        _LCD_setline
                  _LEDarray_disp_bin
                  _changeHourDayYear
                       _findDSTdates
                       _increaseHour
                         _initialise
                        _time2String
 ---------------------------------------------------------------------------------
 (1) _time2String                                          9     2      7    8979
                                             71 COMRAM     9     2      7
                     _LCD_sendstring
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    7374
                                             50 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6717
                                             46 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6358
                                             35 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1251
                                             10 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             24 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             17 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                             12 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_sendstring                                       1     0      1    1081
                                              9 COMRAM     1     0      1
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0    1048
                      _Comp1_init_fe
                      _Comp1_init_re
                    _Interrupts_init
                           _LCD_init
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    1048
                                              9 COMRAM     1     1      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_re                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _Comp1_init_fe                                        0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (3) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _increaseHour                                        10     2      8     622
                                              4 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _findDSTdates                                         8     0      8    5995
                                             65 COMRAM     8     0      8
                         _lastSunday
 ---------------------------------------------------------------------------------
 (2) _lastSunday                                          38    34      4    5483
                                             27 COMRAM    38    34      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     919
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1074
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _changeHourDayYear                                    7     4      3    1936
                                             27 COMRAM     7     4      3
                         _isLeapYear
 ---------------------------------------------------------------------------------
 (3) _isLeapYear                                           5     3      2    1465
                                             22 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1223
                                             17 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     350
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1004
                                              9 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendbyte                                         4     3      1     960
                                              5 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendnibble                                       1     1      0      88
                                              4 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (5) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LowISR                                              4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _changeHourDayYear
     _isLeapYear
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
   _findDSTdates
     _lastSunday
       ___lwdiv
       ___lwmod
       ___wmul
       _isLeapYear
   _increaseHour
   _initialise
     _Comp1_init_fe
       _DAC_init
     _Comp1_init_re
       _DAC_init
     _Interrupts_init
     _LCD_init
       _LCD_sendbyte
       _LCD_sendnibble
     _LEDarray_init
     _Timer0_init
   _time2String
     _LCD_sendstring
       _LCD_sendbyte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul

 _LowISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhhlhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      4C       5       47.5%
BITBIGSFRlhhllh     7E      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      59       1       94.7%
BITBIGSFRlhhhhh     4A      0       0      34        0.0%
BITBIGSFRlll        30      0       0      46        0.0%
BITBIGSFRhl         1B      0       0      33        0.0%
BITBIGSFRlhhlhl     11      0       0      39        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRlhhlhh      8      0       0      38        0.0%
BITBIGSFRllhh        7      0       0      44        0.0%
BITBIGSFRlhlh        7      0       0      42        0.0%
BITBIGSFRlhhhhl      1      0       0      35        0.0%
BITBIGSFRlhhhl       1      0       0      36        0.0%
BITBIGSFRllhl        1      0       0      45        0.0%
BITBIGSFRlhhlll      1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      47        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 08 20:31:44 2024

                                   l43 1E50                                     l81 1E7C  
                                   l90 1384                                     l91 1386  
                                   l92 139A                                     l84 1342  
                                   l93 139C                                     l85 1344  
                                   l94 13B0                                     l86 1358  
                                   l95 13B2                                     l87 135A  
                                   l96 13C6                                     l88 136E  
                                   l97 13C8                                     l89 1370  
                                   l98 13DC                                     l99 13DE  
                         ___awdiv@sign 000A                                     bsr 0FE0  
                  ___wmul@multiplicand 0007                      ??_Interrupts_init 0005  
                                  l100 13F2                                    l102 13F4  
                                  l300 1EA2                                    l205 1AEE  
                                  l213 1042                                    l223 1836  
                                  l234 157A                                    l227 1BCC  
                                  l180 1F3A                                    l156 1F4C  
                                  l261 1BFA                                    l237 1F26  
                                  l270 1D30                                    l263 1C10  
                                  l183 1EC6                                    l256 1F5A  
                                  l272 1D52                                    l280 1D8C  
                                  l265 1C26                                    l186 1EEA  
                                  l267 1C34                                    l259 1BE4  
                                  l275 19F0                                    l531 14B8  
                                  l286 1E22                                    l544 16DA  
                                  l801 1C90                                    l297 1A74  
                                  l808 1C98                                    l791 1B5A  
                                  l798 1B62                                    l978 1DC0  
                                  l998 1912                                    u960 1848  
                                  u961 1844                                    u970 1858  
                                  u971 1854                                    u980 187E  
                                  u981 187A                                    u990 18B0  
                                  u991 18AC                                    _abs 1DC2  
                                  _pad 18E2                           ___awmod@sign 000A  
                                  wreg 0FE8                      main@backward_zone 0084  
                                 l1001 1950                                   l1003 196A  
                                 l1006 1224                                   l1023 1780  
                                 l2000 12AA                                   l2010 1304  
                                 l2002 12BC                                   l1042 11C4  
                                 l1019 132C                                   l1027 1788  
                                 ?_abs 000B                                   l1052 1DDC  
                                 l2012 130A                                   l2004 12CC  
                                 l2020 16E4                                   l2100 113C  
                                 l2014 1316                                   l2006 12E6  
                                 l2022 170A                                   l2030 1756  
                                 l2110 1192                                   l2102 115C  
                                 l1055 1DF4                                   l2040 1BFC  
                                 l2032 1BD0                                   l2200 1E40  
                                 l2008 12F4                                   l2024 1712  
                                 l2104 1174                                   l1048 1CDA  
                                 l2050 1C2C                                   l2042 1C0A  
                                 l2034 1BDE                                   l2130 1A76  
                                 l2210 1E5A                                   l2202 1E42  
                                 l2026 172E                                   l2018 16DC  
                                 l2106 117E                                   l2114 119E  
                                 l1067 18E0                                   l1075 1D16  
                                 l2044 1C12                                   l2036 1BE6  
                                 l2060 1C66                                   l2052 1C36  
                                 l2140 1AE8                                   l2132 1A7A  
                                 l2124 1F28                                   l2300 196C  
                                 l2220 1E74                                   l2212 1E5C  
                                 l2204 1E44                                   l2028 174E  
                                 l2046 1C20                                   l2038 1BF4  
                                 l2150 1D38                                   l2062 1C7C  
                                 l2054 1C48                                   l2134 1A98  
                                 l2126 1F2E                                   l2230 1EA6  
                                 l2310 19A0                                   l2302 1984  
                                 l2222 1E76                                   l2214 1E62  
                                 l2206 1E4E                                   l1078 1F5C  
                                 l2070 106A                                   l2048 1C28  
                                 l2152 1D3E                                   l2144 1D1A  
                                 l2064 1C84                                   l2056 1C50  
                                 l2136 1ABE                                   l2160 1B0A  
                                 l2400 1B88                                   l2128 1F38  
                                 l2240 1EC2                                   l2232 1EB8  
                                 l2320 19CE                                   l2312 19AA  
                                 l2304 198A                                   l2224 1E78  
                                 l2216 1E6C                                   l2208 1E52  
                                 l2080 108C                                   l2072 1072  
                                 l2154 1D4A                                   l2146 1D2A  
                                 l2066 1C8A                                   l2058 1C58  
                                 l2138 1AE4                                   l2170 1B44  
                                 l2162 1B12                                   l2410 17D2  
                                 l2402 178A                                   l2250 1EE0  
                                 l2242 1EC8                                   l2234 1EBA  
                                 l2226 1F3C                                   l2322 19DC  
                                 l2314 19B2                                   l2306 1990  
                                 l2218 1E6E                                   l2330 1E0A  
                                 l2090 10E6                                   l2082 1098  
                                 l2074 107E                                   l2148 1D32  
                                 l2420 14BA                                   l2172 1B4C  
                                 l2164 1B1A                                   l2156 1AF0  
                                 l2260 0F1E                                   l2412 17EA  
                                 l2404 17A2                                   l2252 1EE2  
                                 l2244 1ECA                                   l2236 1EBC  
                                 l2228 1EA4                                   l2324 19E6  
                                 l2316 19BC                                   l2308 199A  
                                 l2332 1E0C                                   l2092 10FA  
                                 l2076 1082                                   l2068 1044  
                                 l2180 1CA2                                   l2340 1DA6  
                                 l2430 1518                                   l2422 14D4  
                                 l2174 1B4E                                   l2166 1B28  
                                 l2158 1AF8                                   l2270 0F9E  
                                 l2262 0F3A                                   l2414 1804  
                                 l2406 17BC                                   l2254 1EE6  
                                 l2246 1EDC                                   l2238 1EBE  
                                 l2318 19C4                                   l2190 1E2C  
                                 l2350 1F16                                   l2326 1DF6  
                                 l2094 1108                                   l2086 10A0  
                                 l2078 108A                                   l2182 1CB2  
                                 l2342 1DB6                                   l2334 1D8E  
                                 l2360 133C                                   l2440 156E  
                                 l2432 152A                                   l2424 14DE  
                                 l2176 1B54                                   l2168 1B2E  
                                 l2280 0FDC                                   l2272 0FB0  
                                 l2264 0F5A                                   l2256 0E2C  
                                 l2416 181C                                   l2408 17C8  
                                 l2248 1EDE                                   l2192 1E36  
                                 l2352 1F1A                                   l2328 1DFA  
                                 l2096 1112                                   l2088 10D6  
                                 l2184 1CD2                                   l2336 1D96  
                                 l2370 13AA                                   l2362 1352  
                                 l2434 1538                                   l2426 14EA  
                                 l2290 101A                                   l2274 0FBC  
                                 l2266 0F7A                                   l2258 0E40  
                                 l2418 1828                                   l2194 1E38  
                                 l2354 1F1E                                   l2346 1F0E  
                                 l2098 111C                                   l2178 1C9A  
                                 l2338 1D9E                                   l2450 15AC  
                                 l2442 157C                                   l2380 1D66  
                                 l2372 13C0                                   l2364 1368  
                                 l2428 1506                                   l2436 1544  
                                 l2292 1022                                   l2276 0FC4  
                                 l2284 0FE8                                   l2268 0F8A  
                                 l2196 1E3C                                   l2188 1E24  
                                 l2356 1F22                                   l2348 1F12  
                                 l1900 14A8                                   l2452 15CC  
                                 l2444 1596                                   l2382 1D70  
                                 l2374 13D6                                   l2366 137E  
                                 l2358 132E                                   l2438 1560  
                                 l2294 102E                                   l2286 0FFC  
                                 l2278 0FD0                                   l2198 1E3E  
                                 l1902 14B0                                   l1910 163E  
                                 l2390 1A30                                   l2454 15F0  
                                 l2446 159A                                   l2384 1D82  
                                 l2376 13EC                                   l2368 1394  
                                 l2296 103A                                   l2288 100E  
                                 l1920 1672                                   l1912 1646  
                                 l1840 1862                                   l2528 10C8  
                                 l2392 1A54                                   l2456 1614  
                                 l2448 15A6                                   l2378 1D56  
                                 l1930 16AE                                   l1922 167A  
                                 l1914 164A                                   l1906 162C  
                                 l1842 187E                                   l1834 1838  
                                 l1850 1CE8                                   l2394 1A5C  
                                 l2386 19F2                                   l2396 1B64  
                                 l1932 16B4                                   l1924 1682  
                                 l1916 1658                                   l1908 1630  
                                 l1844 18B0                                   l1836 1848  
                                 l1852 1CF6                                   l2388 1A08  
                                 l2398 1B76                                   l1870 1414  
                                 l1862 13F6                                   l1926 1690  
                                 l1934 16BA                                   l1918 1660  
                                 l1838 1858                                   l1854 1CFA  
                                 l1950 191E                                   l1942 18E2  
                                 l1856 1E7E                                   l1880 1448  
                                 l1872 1422                                   l1864 13FA  
                                 l1936 16CA                                   l1928 16A6  
                                 l1960 1DD0                                   l1848 1CDC  
                                 l1952 192E                                   l1944 18F0  
                                 l1962 1F4E                                   l1858 1E9A  
                                 l1890 1482                                   l1882 1450  
                                 l1874 142A                                   l1866 1408  
                                 l1938 16D2                                   l1954 1932  
                                 l1946 18FC                                   l1970 11CA  
                                 l1964 1F50                                   l1892 148A  
                                 l1884 1458                                   l1876 142E  
                                 l1868 1410                                   l1956 195E  
                                 l1948 190A                                   l1980 120C  
                                 l1972 11DE                                   l1966 1F58  
                                 l1894 148C                                   l1886 1466  
                                 l1878 1436                                   l1958 1DC2  
                                 l1990 123C                                   l1982 1218  
                                 l1974 11E6                                   ?_pad 0012  
                                 l1896 1492                                   l1888 146C  
                                 l1992 126A                                   l1984 1220  
                                 l1976 11F6                                   l1968 11C6  
                                 l1898 1498                                   l1994 126E  
                                 l1986 122C                                   l1978 11FC  
                                 l1996 1274                                   l1988 1236  
                                 l1998 1290           lastSunday@dayOfWeekMonth31st 002E  
                                 STR_1 0E01                                   STR_2 0E13  
                                 STR_3 0E1F                                   u1000 1D16  
                                 u1001 1D12                                   u1010 1408  
                                 u1011 1404                                   u1020 1422  
                                 u1100 1690                                   u1021 141E  
                                 u1101 168C                                   u1030 1448  
                                 u1110 16A6                                   u1031 1444  
                                 u1111 16A2                                   u1040 1466  
                                 u1120 16CA                                   u1200 11F6  
                                 u1041 1462                                   u1121 16C6  
                                 u1201 11F2                                   u1050 1482  
                                 u1130 18F0                                   u1210 120C  
                                 u1051 147E                                   u1131 18EC  
                                 u1211 1208                                   u1300 1BDE  
                                 u1060 14A8                                   u1140 190A  
                                 u1220 12AA                                   u1301 1BDA  
                                 u1061 14A4                                   u1141 1906  
                                 u1221 12A6                                   u1310 1BF4  
                                 u1070 163E                                   u1150 1950  
                                 u1230 12BC                                   u1311 1BF0  
                                 u1071 163A                                   u1151 194C  
                                 u1231 12B8                                   u1320 1C0A  
                                 u1080 1658                                   u1160 195E  
                                 u1240 12CC                                   u1400 113C  
                                 u1321 1C06                                   u1081 1654  
                                 u1161 195A                                   u1241 12C8  
                                 u1401 1138                                   u1330 1C20  
                                 u1090 1672                                   u1170 1DD0  
                                 u1250 12E6                                   u1410 115C  
                                 u1331 1C1C                                   u1091 166E  
                                 u1171 1DCC                                   u1251 12E2  
                                 u1411 1158                                   u1340 1C48  
                                 u1420 1A98                                   u1500 0F9E  
                                 u1260 12F4                                   u1180 11DA  
                                 u1341 1C44                                   u1421 1A94  
                                 u1501 0F9A                                   u1261 12F0  
                                 u1181 11D4                                   _LATA 0F79  
                                 u1350 1C66                                   u1430 1ABE  
                                 u1510 0FB0                                   u1270 1304  
                                 u1190 11DC                                   _LATB 0F7A  
                                 u1351 1C62                                   u1431 1ABA  
                                 u1511 0FAC                                   u1271 1300  
                                 u1600 13AA                                   u1360 1C7C  
                                 u1440 1AE4                                   u1520 0FFC  
                                 u1280 170A                                   u1601 13A6  
                                 u1361 1C78                                   u1441 1AE0  
                                 u1521 0FF8                                   u1281 1706  
                                 u1450 1D2A                                   u1610 13C0  
                                 u1530 100E                                   u1290 1780  
                                 u1370 106A                                   u1451 1D26  
                                 u1611 13BC                                   u1531 100A  
                                 u1291 177C                                   u1371 1066  
                                 _LATG 0F7F                                   u1620 13D6  
                                 u1460 1B0A                                   u1700 17BC  
                                 u1540 1E22                                   u1380 10E6  
                                 u1621 13D2                                   u1461 1B06  
                                 u1701 17B8                                   u1541 1E1E  
                                 u1381 10E2                                   u1630 13EC  
                                 u1550 133C                                   u1470 1B28  
                                 u1710 17EA                                   u1390 1108  
                                 u1631 13E8                                   u1551 1338  
                                 u1471 1B24                                   u1711 17E6  
                                 u1391 1104                                   u1640 1D66  
                                 u1560 1352                                   u1480 1B44  
                                 u1720 1804                                   u1641 1D62  
                                 u1561 134E                                   u1481 1B40  
                                 u1721 1800                                   u1650 1D82  
                                 u1570 1368                                   u1730 181C  
                                 u1490 1CD2                                   u1651 1D7E  
                                 u1571 1364                                   u1731 1818  
                                 u1491 1CCE                                   u1580 137E  
                                 u1740 14D4                                   u1660 1A08  
                                 u1581 137A                                   u1741 14D0  
                                 u1661 1A04                                   u1590 1394  
                                 u1750 1506                                   u1670 1B76  
                                 u1591 1390                                   u1751 1502  
                                 u1671 1B72                                   u1760 152A  
                                 u1680 1B88                                   u1761 1526  
                                 u1681 1B84                                   u1770 1560  
                                 u1690 17A2                                   u1771 155C  
                                 u1691 179E                                   u1907 19BE  
                                 u1917 19D4                                   u1927 1D4C  
                                 u1937 1C2E                                   u1947 1F52  
                                 u1867 1A66                                   u1877 198C  
                                 u1887 199C                                   u1897 19AC  
                                 abs@a 000B                                   _dbuf 008A  
                                 _main 157C                                   _dtoa 11C6  
                                 _hour 00AA                                   _prec 0057  
                                 pad@i 0017                                   pad@p 0014  
                                 fsr1h 0FE2                                   fsr2h 0FDA  
                                 indf2 0FDF                                   fsr1l 0FE1  
                                 fsr2l 0FD9                                   btemp 005A  
                         ?_LCD_setline 0001                                   prodh 0FF4  
                                 prodl 0FF3                                   start 008E  
                     __end_of_DAC_init 1F3C                      _changeHourDayYear 14BA  
                         ___param_bank 0000                     ?_changeHourDayYear 001C  
                                ??_abs 000D                                  ??_pad 0016  
                     __end_of_LCD_init 19F2                                  ?_main 0001  
                                ?_dtoa 0019                        __end_of___awdiv 14BA  
                      __end_of___awmod 16DC                    ??_changeHourDayYear 001F  
                      ___awdiv@divisor 0007                        __end_of___lwdiv 1B64  
                                i1l163 007E                        __end_of___lwmod 1C9A  
                      ___awdiv@counter 0009                           vfpfcnvrt@fmt 0025  
                                _TMR0H 0FD4                                  _TMR0L 0FD3  
                                _TRISA 0F81                                  _TRISB 0F82  
                                _TRISG 0F87                                  _flags 0059  
                  read_prec_or_width@c 000D                    read_prec_or_width@n 000E  
                                _fputc 1838                                  _fputs 1CDC  
                                pad@fp 0012                                  _width 0055  
                                _putch 1F5C                                  dtoa@d 001A  
                                dtoa@i 0022                                  dtoa@p 001E  
                                dtoa@s 0021                                  dtoa@w 001F  
                        ?_LCD_sendbyte 0006                   __end_of_findDSTdates 1BCE  
                                tablat 0FF5                  __end_of_Comp1_init_fe 1EEC  
                __end_of_Comp1_init_re 1EC8                                  ttemp5 005B  
                                ttemp6 005E                                  ttemp7 0062  
                                status 0FD8           lastSunday@dayOfYearForDSTEnd 0036  
                                wtemp8 005B                        __end_of_sprintf 1DC2  
            __end_of_changeHourDayYear 157C                          ?_increaseHour 0005  
                      __initialization 1EEC                           __end_of_main 162C  
                         __end_of_dtoa 132E                     lastSunday@leapYear 003E  
                    __end_of_LCD_E_TOG 1F5C                                 ??_main 0051  
                               ??_dtoa 001C           main@fwd_daylight_savings_day 0080  
                        __activetblptr 0003             __end_of_read_prec_or_width 178A  
                         ?_time2String 0048                            lastSunday@h 002A  
                               ?_fputc 0005                                 ?_fputs 000D  
                       ??_LCD_sendbyte 0007                       ___awdiv@dividend 0005  
                               ?_putch 0001                  changeHourDayYear@leap 0021  
                changeHourDayYear@hour 001C                                 i1l2490 0040  
                               i1l2492 0044                                 i1l2484 0026  
                               i1l2486 0036                                 i1l2494 0048  
                               i1l2496 0056                                 i1l2488 003C  
                               i1l2498 007A                  changeHourDayYear@year 001E  
                        vfpfcnvrt@done 002D                      _LEDarray_disp_bin 132E  
                       ??_increaseHour 000D                                 _LowISR 0018  
                   ?_LEDarray_disp_bin 0005                          ??_Timer0_init 0005  
                         vfprintf@cfmt 0032                                 ___wmul 1E7E  
                            ??___awdiv 0009                              ??___awmod 0009  
                            ??___lwdiv 000F                              ??___lwmod 0016  
                 read_prec_or_width@ap 000C                    ??_LEDarray_disp_bin 0007  
                               clear_0 1EF2                                 clear_1 1EFE  
                     ___awdiv@quotient 000B                        ___awmod@divisor 0007  
                               isa$std 0001                        ___awmod@counter 0009  
                               pad@buf 0013                                 dtoa@fp 0019  
                               fputc@c 0005                                 fputs@c 000F  
                               fputs@i 0010                                 fputs@s 000D  
          lastSunday@dayOfWeekMonth1st 002C                           __mediumconst 0000  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                                 putch@c 0001  
                            ?_DAC_init 0001                       __end_of_vfprintf 1CDC  
                            ??_sprintf 003B              __end_of_LEDarray_disp_bin 13F6  
                           __accesstop 0060                __end_of__initialization 1F04  
                            ?_LCD_init 0001                          ___rparam_used 0001  
                        _LEDarray_init 1E52                        _Interrupts_init 1F3C  
                     findDSTdates@hour 0042                       findDSTdates@year 0046  
                       __pcstackCOMRAM 0001   increaseHour@fwd_daylight_savings_day 0007  
                        __end_of_fputc 18E2                          __end_of_fputs 1D18  
                        __end_of_putch 1F5E                       increaseHour@hour 000B  
                  __end_of_Timer0_init 1E52            lastSunday@daysBeforeOctober 0034  
            increaseHour@backward_zone 000C                             ??_DAC_init 0005  
                              ??_fputc 0008                                ??_fputs 000F  
                              ??_putch 0005                             __pbssBANK0 008A  
                       _LCD_sendnibble 1BCE                             ??_LCD_init 000A  
                       ?_LEDarray_init 0001                         _LCD_sendstring 1DF6  
                              ?_LowISR 0001                                ?___wmul 0005  
                 __end_of_LCD_sendbyte 1D54                           _findDSTdates 1B64  
                           _isLeapYear 1A76                   __end_of_increaseHour 1838  
               __end_of_LCD_sendnibble 1C36                __end_of_Interrupts_init 1F4E  
                       lastSunday@year 001C                 __end_of_LCD_sendstring 1E24  
                              __Hparam 0000                                __Lparam 0000  
                          _Timer0_init 1E24                             _lastSunday 0E2C  
                      _isLeapYear$1049 001B                                ___awdiv 13F6  
                              ___awmod 162C                                ___lwdiv 1AF0  
                              ___lwmod 1C36                              ?_vfprintf 002F  
                         __psmallconst 0E00                                __pcinit 1EEC  
                              __ramtop 0E00                             _initialise 1F0E  
                              __ptext0 157C                                __ptext1 19F2  
                              __ptext2 1D8E                                __ptext3 1C9A  
                              __ptext4 1044                                __ptext5 16DC  
                              __ptext6 11C6                                __ptext7 18E2  
                              __ptext8 1CDC                                __ptext9 1838  
                read_prec_or_width@fmt 000B                       ___awmod@dividend 0005  
                            _LCD_E_TOG 1F4E                        LCD_setline@line 000A  
                              main@day 0088                                main@buf 0060  
                              _sprintf 1D8E                   end_of_initialization 1F04  
                      ?_LCD_sendnibble 0001                                fputc@fp 0007  
                      ??_LEDarray_init 0005                                fputs@fp 000E  
                      ?_LCD_sendstring 000A                     _read_prec_or_width 16DC  
findDSTdates@bkwd_daylight_savings_day 0049                      __end_of_vfpfcnvrt 11C6  
                              postdec2 0FDD                    ?_read_prec_or_width 000B  
                              postinc0 0FEE                                postinc1 0FE6  
                              postinc2 0FDE                       vfpfcnvrt@convarg 0029  
                           ??_vfprintf 0032         lastSunday@dayOfYearForDSTStart 0032  
                          ?_isLeapYear 0017                             ?_LCD_E_TOG 0001  
                            _TRISBbits 0F82                              _TRISCbits 0F83  
                            _TRISEbits 0F85                              _TRISFbits 0F86  
                            _TRISHbits 0F88                   ??_read_prec_or_width 000D  
                          _CM1CON0bits 0ED0                            _CM1CON1bits 0ED1  
                     ?_Interrupts_init 0001                            ?_lastSunday 001C  
                       __end_of_LowISR 008E                            vfpfcnvrt@ap 0026  
                          vfpfcnvrt@cp 002E                            vfpfcnvrt@fp 0024  
                       __end_of___wmul 1EA4                   LCD_sendnibble@number 0005  
                          ?_initialise 0001                    start_initialization 1EEC  
                          __end_of_abs 1DF6                            __end_of_pad 196C  
                         _LCD_sendbyte 1D18                          _Comp1_init_fe 1EC8  
                        _Comp1_init_re 1EA4                   changeHourDayYear@day 001D  
                        ??_LCD_setline 000A                               ??_LowISR 0001  
                         _increaseHour 178A                            vfprintf@fmt 0030  
                 LCD_sendstring@string 000A                               ??___wmul 0009  
                          __pbssCOMRAM 0051                            ??_LCD_E_TOG 0005  
                        __pcstackBANK0 0060                        findDSTdates@day 0044  
                      increaseHour@day 0005                         ?_Comp1_init_fe 0001  
                       ?_Comp1_init_re 0001                       ___lwdiv@dividend 000B  
                            _dtoa$1849 001C                           ?_Timer0_init 0001  
                             ?___awdiv 0005                               ?___awmod 0005  
                  __end_of_LCD_setline 1D8E                               ?___lwdiv 000B  
                             ?___lwmod 0012                            __pintcodelo 0018  
                          __smallconst 0E00                          ??_time2String 004F  
                     ??_LCD_sendnibble 0005  increaseHour@bkwd_daylight_savings_day 0009  
                             _DAC_init 1F28                       ___lwdiv@quotient 000F  
                     ??_LCD_sendstring 000B                               ?_sprintf 0033  
                     LCD_sendbyte@Byte 0009                       LCD_sendbyte@type 0006  
                       ___wmul@product 0009                               _LATAbits 0F79  
                             _LATBbits 0F7A                               _LATCbits 0F7B  
                             _LATEbits 0F7D                               _LATFbits 0F7E  
                             _LATGbits 0F7F                               _LATHbits 0F80  
                             _LCD_init 196C                               _IPR0bits 0E1F  
                             _IPR2bits 0E21                               _PIE0bits 0E29  
                             _PIE2bits 0E2B                               i1u182_20 0036  
                             i1u182_21 0032                               i1u183_20 0056  
                             i1u183_21 0052                               i1u184_20 0068  
                             i1u184_21 0060                               i1u185_28 006A  
                             _PIR0bits 0E33                               _PIR2bits 0E35  
                         time2String@h 0049                              _vfpfcnvrt 1044  
                    ___wmul@multiplier 0005                           ??_isLeapYear 0019  
                           _CM1NCHbits 0ED2                        lastSunday@month 001E  
                           _CM1PCHbits 0ED3              lastSunday@daysBeforeMarch 0030  
                      ??_Comp1_init_fe 0005                        ??_Comp1_init_re 0005  
                  __end_of_time2String 1A76                  __end_of_LEDarray_init 1E7E  
                          _LCD_setline 1D54                               __Hrparam 0000  
        lastSunday@lastSundayDateMonth 0040                     __end_of_isLeapYear 1AF0  
                         ??_lastSunday 0020                             vfprintf@ap 0031  
                             __Lrparam 0000                             vfprintf@fp 002F  
                           ?_vfpfcnvrt 0024                           ??_initialise 000B  
                      _lastSunday$1060 003A                        _lastSunday$1063 003C  
                      _lastSunday$2143 0038                             _ANSELFbits 0EB4  
                           sprintf@fmt 0034                             _T0CON0bits 0FD5  
                           _T0CON1bits 0FD6                        ___lwdiv@divisor 000D  
                      ___lwdiv@counter 0011                               __ptext10 1F5C  
                             __ptext11 1DC2                               __ptext20 1EA4  
                             __ptext12 162C                               __ptext21 1EC8  
                             __ptext13 13F6                               __ptext30 1C36  
                             __ptext22 1F28                               __ptext14 1DF6  
                             __ptext31 132E                               __ptext23 178A  
                             __ptext15 1F0E                               __ptext32 1D54  
                             __ptext24 1B64                               __ptext16 1E24  
                             __ptext33 1D18                               __ptext25 0E2C  
                             __ptext17 1E52                               __ptext34 1BCE  
                             __ptext26 1E7E                               __ptext18 196C  
                             __ptext35 1F4E                               __ptext27 1AF0  
                             __ptext19 1F3C                               __ptext28 14BA  
                             __ptext29 1A76                 LCD_sendbyte@highNibble 0007  
                   __end_of_lastSunday 1044                LEDarray_disp_bin@number 0005  
 findDSTdates@fwd_daylight_savings_day 0048                     __end_of_initialise 1F28  
        main@bkwd_daylight_savings_day 0082                               isa$xinst 0000  
                             int$flags 005A                        time2String@year 004D  
                             _vfprintf 1C9A                          ?_findDSTdates 0042  
                             main@year 0086                             _INTCONbits 0FF2  
                          _time2String 19F2                               intlevel1 0000  
                            sprintf@ap 003B                           _DAC1CON0bits 0EC6  
                         _DAC1CON1bits 0EC7                       ___lwmod@dividend 0012  
                       time2String@day 004B                         time2String@buf 0048  
                       ??_findDSTdates 004A                            ??_vfpfcnvrt 0027  
                             sprintf@f 003C                               sprintf@s 0033  
                LCD_sendbyte@lowNibble 0008                        ___lwmod@divisor 0014  
                      ___lwmod@counter 0016                         isLeapYear@year 0017  
              calc_max_PPM@loopCounter 0051  
